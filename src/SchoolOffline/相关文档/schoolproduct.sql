/*
Navicat MySQL Data Transfer

Source Server         : local
Source Server Version : 50096
Source Host           : localhost:3306
Source Database       : schoolproduct

Target Server Type    : MYSQL
Target Server Version : 50096
File Encoding         : 65001

Date: 2016-07-26 18:33:21
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for course
-- ----------------------------
DROP TABLE IF EXISTS `course`;
CREATE TABLE `course` (
  `Id` bigint(20) NOT NULL auto_increment,
  `TypeName` varchar(30) default NULL,
  `MuluName` varchar(50) default NULL,
  `Title` varchar(200) default NULL,
  `Content` longtext,
  `SortNum` int(11) default NULL,
  `OuterId` bigint(20) default NULL,
  PRIMARY KEY  (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of course
-- ----------------------------
INSERT INTO `course` VALUES ('1', 'HTML', 'HTML教程', 'HTML教程', '<h1>HTML 教程- <span class=\"color_h1\">(HTML5 标准)</span></h1><p>文本标记语言，它是书写网页代码的一种规范，一种标准。它通过标记符号来标记要显示的网页中的各个部分。浏览器根据这个标准显示其中的内容（如：文字如何处理，画面如何安排，图片如何显示等），可以说HTML是网页编程的基础。互联网的普及需要有一个共同的标准来推动，HTML可以说是互联网普及的核心标准。不论服务器端是Java还是php，最终展现给浏览器的都是统一的HTML。</p><p>HTML5是超文本标记语言（HTML）的第五次重大修改，即最新版本；它比原来的标准又增加了一些新的标签，实现更多功能，更标准化，更适用于移动互联网。本套课程将从HTML的基础入手，并介绍HTML5的新特效，再通过一些简单的实例，让您能够动手书写HTML实现网页的设计。</p><p>通过学习本教程，你将学会如何通过使用HTML来创建自己的网页。</p><h2 class=\"tutheader\">HTML 实例</h2><p><a href=\"http://www.piliyuan.com\" target=\"_self\" title=\"霹雳猿\">霹雳猿</a>（www.piliyuan.com）教程包含很多在线实例，学员可以直接通过我们的在线测试编辑器来运行实例。</p><h2 class=\"example\">实例</h2><p>首先我们来演示一个第一个实例，您可以直接点击下方的“在线测试”。<br/></p><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;&nbsp;&nbsp;\n&lt;html&gt;&nbsp;&nbsp;\n&lt;head&gt;&nbsp;&nbsp;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&nbsp;&nbsp;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;&nbsp;&nbsp;\n&lt;/head&gt;&nbsp;&nbsp;\n&lt;body&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;这里是标题的内容&lt;/h1&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;这里是段落的内容&lt;/p&gt;&nbsp;&nbsp;\n&lt;/body&gt;&nbsp;&nbsp;\n&lt;/html&gt;</pre><p><br/><a href=\"/DIY/1.html\" target=\"_blank\" title=\"在线测试\">在线测试</a><br/></p><p>直接点击上面的“在线测试”,可前往测试页面使用在线测试工具测试代码。<br/></p><p><br/></p><p><a href=\"http://www.runoob.com/html/html-intro.html\">开始学习HTML!</a></p>', '1', null);
INSERT INTO `course` VALUES ('2', 'HTML', 'HTML教程', 'HTML 简介', '<h1>HTML <span class=\"color_h1\">简介</span></h1><p>&nbsp; 用HTML编写的超文本文档称为HTML文档，它能独立于各种操作系统平台（如UNIX，WINDOWS等）。通过HTML，将所需要表达的信息按某种规则写成HTML文件，通过专用的浏览器来识别，并将这些HTML一种能够被广泛理解的语言，“翻译“成可以识别的信息，即所有的计算机都能够理解的一种用于出版的“母语”。就是我们现在所见到的网页。 \n &nbsp; 自1990年以来HTML就一直被用作ＷＷＷ（是World Wide Web的缩写，也可简写WEB、中文叫做万维网)的信息表示语言，用于描述Homepage的格式设计和它与WWW上其它Homepage 的连结信息。使用HTML语言描述的文件需要通过WWW浏览器显示出效果。\n &nbsp;</p><p>&nbsp;HTML( 超文件标记语言 ) 是一种建立网页文件的语言，透过标记式的指令(Tag)，将影像、声音、图片、文字、动画、影视等内容显示出来。因为它可以从一个文件跳转到另一个文件，与世界各地主机的文件连接。 超文本传输协议规定了浏览器在运行HTML文档时所遵循的规则和进行的操作.HTTP协议的制定使浏览器在运行超文本时有了统一的规则和标准.</p><hr/><h2 style=\"white-space: normal;\">什么是HTML?</h2><p style=\"white-space: normal;\">HTML 是用来描述网页的一种语言。</p><ul class=\" list-paddingleft-2\" style=\"width: 744.797px; white-space: normal;\"><li><p>HTML 指的是超文本标记语言:&nbsp;<strong>H</strong>yper<strong>T</strong>ext&nbsp;<strong>M</strong>arkup&nbsp;<strong>L</strong>anguage</p></li><li><p>HTML 不是一种编程语言，而是一种<strong>标记</strong>语言</p></li><li><p>标记语言是一套<strong>标记标签</strong>&nbsp;(markup tag)</p></li><li><p>HTML 使用标记标签来<strong>描述</strong>网页</p></li><li><p>HTML 文档包含了HTML<strong>&nbsp;标签</strong>及<strong>文本</strong>内容</p></li><li><p>HTML文档也叫做<strong>&nbsp;web 页面</strong></p></li></ul><h2>超文本标记</h2><p>1) 超文本标记用带尖括号“＜”和“＞”表示。\n &nbsp;&nbsp;</p><p>2)超文本标记一般是成对出现，用带斜杠的元素表示结束。如：＜html＞和＜/html＞。但有些标记只有起始标记而没有结束标记，如：＜BR＞，它在网页中表示引入一个换行动作，还有些标记可以省略，如：段落的结束标记＜/P＞就可以省略。\n &nbsp;&nbsp;</p><p>3)超文本标记忽略大小写，如：＜HTML＞和＜html＞是等效的，但其中实体内容的名称是要区分大小写，如&quot;&amp;NAME&quot;和&quot;&amp;name&quot;是表示不同的实体。\n &nbsp;&nbsp;</p><p>4)一个标记元素可写在多行，参数位置不受限制。</p><h2 class=\"example\">HTML 实例</h2><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;&nbsp;&nbsp;\n&lt;html&gt;&nbsp;&nbsp;\n&lt;head&gt;&nbsp;&nbsp;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&nbsp;&nbsp;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;&nbsp;&nbsp;\n&lt;/head&gt;&nbsp;&nbsp;\n&lt;body&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;这里是标题的内容&lt;/h1&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;这里是段落的内容&lt;/p&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&gt;这是一个链接,点击试试！&lt;/a&gt;\n&lt;/body&gt;&nbsp;&nbsp;\n&lt;/html&gt;</pre><p><br/> <a href=\"/DIY/1.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><h2>实例解析</h2><ul class=\" list-paddingleft-2\"><li><p>DOCTYPE 声明了文档类型</p></li><li><p>位于标签 &lt;html&gt; 与 &lt;/html&gt; 描述了文档类型</p></li><li><p>位于标签 &lt;body&gt; 与 &lt;/body&gt; 为可视化网页内容</p></li><li><p>位于标签 &lt;h1&gt; 与 &lt;/h1&gt; 作为一个标题使用</p></li><li><p>位于标签 &lt;p&gt; 与 &lt;/p&gt; 作为一个段落显示</p></li></ul><table class=\"lamp\"><tbody><tr class=\"firstRow\"><th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\"/></th><td>&lt;!DOCTYPE html&gt; 在HTML5中也是描述了文档类型。</td></tr></tbody></table><p><br/></p><hr/><h2>HTML 标签</h2><p>HTML标签是HTML语言中最基本的单位，HTML标签是HTML（标准通用标记语言下的一个应用）最重要的组成部分。HTML标签的大小写无关的，例如“主体”跟表示的意思是一样的，推荐使用小写。</p><p>HTML 标记标签通常被称为 HTML 标签 (HTML tag)。</p><ul class=\" list-paddingleft-2\"><li><p>HTML 标签是由<em>尖括号</em>包围的关键词，比如 &lt;html&gt;</p></li><li><p>HTML 标签通常是<em>成对出现</em>的，比如 &lt;b&gt; 和 &lt;/b&gt;</p></li><li><p>标签对中的第一个标签是<em>开始标签</em>，第二个标签是<em>结束标签</em></p></li><li><p>开始和结束标签也被称为<em>开放标签</em>和<em>闭合标签</em></p></li></ul><p><span style=\"color:#98bf21\">&lt;标签&gt;</span>内容 <span style=\"color:#98bf21\">&lt;/标签&gt;</span></p><p><br/></p><hr/><h2>HTML 元素</h2><p>HTML（标准通用标记语言下的一个应用） 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。</p><p>严格来讲, 一个 HTML 元素包含了开始标签与结束标签，如下实例:</p><p>HTML 元素:</p><p><span style=\"color:#98bf21\">&lt;p&gt;</span>霹雳猿教程&nbsp;<span style=\"color:#98bf21\">&lt;/p&gt;</span></p><p><br/></p><hr/><h2>Web 浏览器</h2><p>浏览器是个显示网页伺服器或档案系统内的HTML文件（标准通用标记语言下的一个应用），并让用户与此些文件互动的一种软件。</p><p>个人电脑上常见的网页浏览器包括微软的Internet Explorer、Mozilla的Firefox、Opera和Safari。</p><p>浏览器是最经常使用到的客户端程序。如下图：</p><p><img src=\"http://www.runoob.com/wp-content/uploads/2013/06/html-first.png\"/></p><hr/><h2>HTML 网页结果</h2><p>下面是一个可视化的HTML页面结构：</p><p>&lt;html&gt;</p><p>&lt;head&gt;</p><p>&lt;title&gt;页面标题&lt;/title&gt;</p><p>&lt;/head&gt;</p><p>&lt;body&gt;</p><p>&lt;h1&gt;这是一个标题&lt;/h1&gt;</p><p>&lt;p&gt;这是一个段落。&lt;/p&gt;</p><p>&lt;p&gt;这是另外一个段落。&lt;/p&gt;</p><p>&lt;/body&gt;</p><p>&lt;/html&gt;</p><p><br/></p><table class=\"lamp\"><tbody><tr class=\"firstRow\"><th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"/></th><td>只有 &lt;body&gt; 区域 (白色部分) 才会在浏览器中显示。</td></tr></tbody></table><p><br/></p><hr/><h2>HTML版本</h2><p>从初期的网络诞生后，已经出现了许多HTML版本:</p><table class=\"reference notranslate\"><tbody><tr class=\"firstRow\"><th>版本</th><th>发布时间</th></tr><tr><td>HTML</td><td>1991</td></tr><tr><td>HTML+</td><td>1993</td></tr><tr><td>HTML 2.0</td><td>1995</td></tr><tr><td>HTML 3.2</td><td>1997</td></tr><tr><td>HTML 4.01</td><td>1999</td></tr><tr><td>XHTML 1.0</td><td>2000</td></tr><tr><td>HTML5</td><td>2012</td></tr><tr><td>XHTML5</td><td>2013</td></tr></tbody></table><p><br/></p><hr/><h2>&lt;!DOCTYPE&gt; 声明</h2><p>&lt;!DOCTYPE&gt;声明有助于浏览器中正确显示网页。</p><p>&lt;!DOCTYPE html&gt; 由于不是HTML标签，它只是一条浏览器指令，告诉浏览器编写页面所用的标记的版本，所以不需要成对出现。&lt;!DOCTYPE html&gt; 在任何版本中都对大小写不敏感，不过习惯上写做“&lt;!DOCTYPE html&gt;”，当然为了符合W3C标准，写做“&lt;!doctype html&gt;”也是可以的。<br/></p><hr/><h2>通用声明</h2><h3>HTML5</h3><p>&lt;!DOCTYPE html&gt;</p><h3>HTML 4.01</h3><p>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &nbsp;<br/> &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</p><h3>XHTML 1.0</h3><p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &nbsp;<br/> &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</p><p>查看完整网页声明类型 <a href=\"http://www.runoob.com/tags/tag-doctype.html\">DOCTYPE 参考手册</a>。</p><hr/><h2>中文编码</h2><p>目前在大部分浏览器中，直接输出中文会出现中文乱码的情况，这时候我们就需要在头部将字符声明为 UTF-8。</p><h2 class=\"example\">HTML 实例</h2><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;&nbsp;&nbsp;\n&lt;html&gt;&nbsp;&nbsp;\n&lt;head&gt;&nbsp;&nbsp;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&nbsp;&nbsp;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;&nbsp;&nbsp;\n&lt;/head&gt;&nbsp;&nbsp;\n&lt;body&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;这里是标题的内容&lt;/h1&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;这里是段落的内容&lt;/p&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&gt;这是一个链接,点击试试！&lt;/a&gt;\n&lt;/body&gt;&nbsp;&nbsp;\n&lt;/html&gt;</pre><p style=\"white-space: normal;\"><br/><a href=\"http://localhost:42742/DIY/1.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p><br/></p>', '2', null);
INSERT INTO `course` VALUES ('3', 'HTML', 'HTML教程', 'HTML 图像', '<h1>HTML <span class=\"color_h1\">图像</span></h1><p><br/></p><h2 class=\"example\">实例</h2><h2>旅游图片</h2><p><img src=\"http://www.runoob.com/images/pulpit.jpg\" alt=\"Pulpit Rock\"/></p><p><br/> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_pulpitimage\" class=\"tryitbtn\">尝试一下 &amp;raquo;</a></p><p><br/></p><hr/><h2>HTML 图像- 图像标签（ &lt;img&gt;）和源属性（Src）</h2><p>在 HTML 中，图像由&lt;img&gt; 标签定义。图像会使网页更加生动,图可以描述更复杂的问题。</p><p>img元素没有尾标签，它与&lt;br /&gt;一样，不与特定的文本相关。</p><p>要在页面上显示图像，你需要使用源属性（src）。src 指 &quot;source&quot;。源属性的值是图像的 URL 地址。</p><p><strong>定义图像的语法是：</strong></p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;&nbsp;&nbsp;url&quot;&nbsp;alt=&quot;&nbsp;&nbsp;some_text&quot;&gt;</pre><p>src属性规定了显示图像的URL，浏览器会对该URL发起Http Get请求。如果名为 &quot;boat.gif&quot; 的图像位于 www.piliyuan.com 的 images 目录中，那么其 URL 为 http://www.piliyuan.com/images/boat.gif。</p><hr/><h2>HTML 图像- Alt属性</h2><p>alt 代表图像的替代文字。</p><p>替换文本属性的值是用户定义的。</p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;boat.gif&quot;&nbsp;alt=&quot;Big&nbsp;Boat&quot;&gt;</pre><p>alt属性用于给出图像的替用描述，假如由于某些原因该图像未能显示出来，浏览器就通过显示这个描述来替代图像。对于有视力障碍的人士来说，或者当网页打开很慢的时候，这一特性显得尤为重要。</p><hr/><h2>HTML 图像- 设置图像的高度与宽度</h2><p>width和height属性分别用于设置图像的宽度和高度，以像素为单位。像素（pixel）是用于测量屏幕分辨率的计量单位。（目前大多数屏幕分辨率是1024×768或更高）。像素跟公分不同，像素是一种相对计量单位，一个像素的实际大小跟屏幕分辨率有关。在高分辨率显示模式下，差不多25个像素等于1公分；而在低分辨率显示模式下，同样的25个像素大约等于1.5公分。</p><p>如果你没有为图像设置宽度和高度，它将按原始尺寸显示。但是如果设置了的话，你就可以控制它的显示尺寸：</p><p>属性值默认单位为像素:</p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;pulpit.jpg&quot;&nbsp;alt=&quot;Pulpit&nbsp;rock&quot;&nbsp;width=&quot;304&quot;&nbsp;height=&quot;228&quot;&gt;</pre><hr/><h2>HTML图像-Title属性</h2><p>鼠标滑过时显示的文字提示，用户体验上很重要。当然不必要所有的img标签都加此属性，比方说logo这样比较重要或者说用户会体验到的图片内容建议一定要加此属性。</p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;图片路径&quot;&nbsp;alt=&quot;logo&quot;&nbsp;title=&quot;首页&quot;&nbsp;/&gt;</pre><p><span style=\"font-family: tahoma, arial, 宋体; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);\"></span><br/></p>', '3', null);
INSERT INTO `course` VALUES ('4', 'HTML', 'HTML教程', 'HTML 基础', '<h1>HTML 基础</h1><hr/><p class=\"intro\">本章主要通过实例简单介绍下HTML中常用到的标签，这些标签在后续的章节中也将详细讲到。</p><hr/><h2>HTML 标题</h2><p>W3C指出h1-h6标签可定义标题。h1定义最大的标题。h6定义最小的标题。</p><p>h1，h2，h3，h4，h5，h6，作为标题标签，并且依据重要性递减。我认为遵循这样的原则是很有必要的，它能让页面的层级关系更清楚，让搜索引擎更好地抓取和分析出页面的主题内容等等。</p><p>h1、h2、h3、h4、h5及h6元素的作用是显示标题（这里的h是“标题（heading）”的意思）。其中h1是一级标题，字体最大；h2是二级标题，字体比一级标题略小；而h6是六级标题，它是最后一级标题，字体也最小。</p><p>为了更好的理解，请看下面的代码：</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;h1&gt;这是一个一级标题&lt;/h1&gt;&nbsp;&nbsp;\n&lt;h2&gt;这是一个子标题&lt;/h2&gt;&nbsp;&nbsp;\n&lt;h3&gt;这是一个三级标题&lt;/h3&gt;</pre><p><br/>\n <a href=\"/Home/DIY/2.html\" target=\"_blank\" title=\"在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 段落</h2><p>简单地对文字分段常用&lt;p&gt;&lt;/p&gt;标签，即段落的开始用&lt;p&gt;，段落的结束用&lt;/p&gt;标签。某些网页分段时省略了&lt;/p&gt;，即作为单标签使用，因为下一段开始的&lt;p&gt;标签就意味上一段的结束。&nbsp;</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;这是一个段落。&lt;/p&gt;&nbsp;&nbsp;\n&lt;p&gt;这是另外一个段落。&lt;/p&gt;</pre><p><br/>\n <a href=\"/Home/DIY/3.html\" target=\"_blank\" title=\"在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 链接</h2><p>超级链接的标签是&lt;a&gt;&lt;/a&gt;，给文字添加超级链接类似于其他修饰标签。添加了链接后的文字有其特殊的样式，以和其他文字区分，默认链接样式为蓝色文字，有下划线。超级链接是跳转到另一个页面的，&lt;a&gt;&lt;/a&gt;标签有一个href属性负责指定新页面的地址。href指定的地址一般使用相对地址。</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&gt;这是一个链接&lt;/a&gt;</pre><p><br/>\n <a href=\"/Home/DIY/4.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a></p><p>(您将在本教程稍后的章节中学习更多有关属性的知识).</p><hr/><h2>HTML 图像</h2><p>HTML 图像是通过标签 &lt;img&gt; 来定义的.img 是 Image（图像）的缩写。src 属性用来指定图像的路径。</p><h2 class=\"example\">实例</h2><p>&lt;img src=&quot;w3cschool.png&quot; width=&quot;104&quot; height=&quot;142&quot;&gt;</p><p><br/>\n <a href=\"/Home/DIY/5.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><strong>注意：</strong> 图像的名称和尺寸是以属性的形式提供的。</p><p><br/></p>', '4', null);
INSERT INTO `course` VALUES ('5', 'HTML', 'HTML教程', 'HTML 属性', '<h1>HTML <span class=\"color_h1\">属性</span></h1><hr/><p class=\"intro\">属性是 HTML 元素提供的附加信息。<span style=\"color: rgb(64, 50, 38); font-family: verdana, &quot;ms song&quot;, 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);\">属性要在开始标签中指定，用来表示该标签的性质和特性。通常都是以“属性名=”值””的形式来表示，用空格隔开后，还可以指定多个属性。指定多个属性时不用区分顺序。</span></p><hr/><h2>HTML 属性</h2><ul class=\" list-paddingleft-2\"><li><p>HTML 元素可以设置<strong>属性</strong></p></li><li><p>属性可以在元素中添加<strong>附加信息</strong></p></li><li><p>属性一般描述于<strong>开始标签</strong></p></li><li><p>属性总是以名称/值对的形式出现，<strong>比如：name=&quot;value&quot;</strong>。</p></li><li><p><span style=\"color: rgb(64, 50, 38); font-family: sans-serif, &quot;trebuchet ms&quot;, &quot;lucida grande&quot;, &quot;lucida sans unicode&quot;, arial, helvetica, sans-serif; font-size: 14.4px; line-height: 24px; background-color: rgb(255, 255, 255);\">属性应写在元素的首标签上。具体写法是：属性名称（attribute name）后紧跟一个等号（“=”），后面写上用双引号括起来的属性值（attribute value）。对于style属性的值，可以用分号（“;”）来分隔多个样式指令。这个后面会介绍。</span><br/></p></li></ul><hr/><h2>属性实例</h2><p>以下实例利用body的bgcolor属性设置页面的背景色</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;body&nbsp;bgcolor=&quot;red&quot;&gt;~&lt;/body&gt;</pre><p><br/>\n <a href=\"/Home/DIY/6.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 属性常用引用属性值</h2><p>属性值应该始终被包括在引号内。</p><p>双引号是最常用的，不过使用单引号也没有问题。</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/><strong>提示:</strong> 在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：name=&#39;John &quot;ShotGun&quot; Nelson&#39;</p><hr/><h2>HTML 提示：使用小写属性</h2><p>属性和属性值对大小写不敏感。</p><p>不过，万维网联盟在其 HTML 4 推荐标准中推荐小写的属性/属性值。</p><p>而新版本的 (X)HTML 要求使用小写属性。</p><p><br/></p>', '5', null);
INSERT INTO `course` VALUES ('6', 'HTML', 'HTML教程', 'HTML 标题', '<h1>HTML <span class=\"color_h1\">标题</span></h1><hr/><p class=\"intro\">在 HTML 文档中，标题很重要。</p><hr/><h2>HTML 标题</h2><p>标题（Heading）是通过 &lt;h1&gt; - &lt;h6&gt; 标签进行定义的.</p><p>&lt;h1&gt; 定义最大的标题， &lt;h6&gt; 定义最小的标题，一般一个页面只有一个&lt;h1&gt;标签。</p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 28px; text-indent: 28px;\">h标签是成对出现的,以&lt;h&gt;开始,以&lt;/h&gt;结束。</span></p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;这是一个一级标题&lt;/h1&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;这是一个子标题&lt;/h2&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;这是一个三级标题&lt;/h3&gt;</pre><p><br/>\n <a href=\"/DIY/2.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><strong>注释:</strong> 浏览器会自动地在标题的前后添加空行。</p><hr/><h2>标题很重要</h2><p>一般来说H1标签主要用于修饰网页的主标题和文章标题的，&lt;h2&gt;主要用于修饰大段落的标题，&lt;h3&gt;要用于修饰段落的小节标 题，&lt;h4&gt;-&lt;h6&gt;标签基本很少用到。　　</p><p><br/></p><p>H1一级标题</p><p>代表重中之重，它的地位在页面中跟关键字的地位一样重要。一般运用于网站标题或者头条新闻上，一些大型网站也运用在Logo上，虽然H1代码可以写多个，但实际语义上有唯一性，H1在一个页面里面最好只出现1次或者没有。</p><p><br/></p><p>H2二级标题</p><p>主要出现在页面的主体内容的文章标题和栏目标题上，三列结构一般在中间，二列结构一般在重要的一边。可与H3搭配使用。</p><p><br/></p><p>H3三级标题</p><p>一般主打页面的边侧栏。H4是它的辅助，出现频率不高。</p><p><br/></p><p>页面层级关系不能太深，所以H4,H5,H6一般出现较少。　　</p><hr/><h2>HTML 水平线</h2><p>在html文档里面大家经常遇到想要用水平线来隔分开行与行之间或段与段之间的内容，</p><p>那么如何才能达到这个效果呢？</p><p><br/> hr 元素可用于分隔内容。<br/></p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;这是一个段落。&lt;/p&gt;&nbsp;&nbsp;\n&lt;hr&gt;&nbsp;&nbsp;\n&lt;p&gt;这是一个段落。&lt;/p&gt;&nbsp;&nbsp;\n&lt;hr&gt;&nbsp;&nbsp;\n&lt;p&gt;这是一个段落。&lt;/p&gt;</pre><p><br/>\n <a href=\"/Home/DIY/7.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 注释</h2><p>我们经常要在一些代码旁做一些HTML注释,这样做的好处很多,比如:方便查找,方便比对,方便项目组里的其它程序员了解你的代码,而且可以方便以后你对自己代码的理解与修改等等.</p><p>注释写法如下:</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;!--&nbsp;这是一个注释&nbsp;--&gt;</pre><p><br/>\n <a href=\"/Home/DIY/8.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><strong>注释:</strong> HTML 注释会被浏览器忽略，而HTML 注释直接在网站源代码内部编写，也不会显示在前端。如上图，，绿色部分都是注释，不会被显示出来，通过上面绿色文字，我们可以知道这段代码是什么意思，以及代码开始结束。</p><h2>如何查看源代码</h2><p>好多初学程序员或者网页设计员或者是站长等经常回模仿别人的网页，看别人网页是怎么写的，这里呢就需要查看别人网页的源代码。不同浏览器的查看方式略有不同，一般在页面上点击鼠标右键，列出的菜单中会有查看源码的选项。</p><p><br/>\n </p>', '6', null);
INSERT INTO `course` VALUES ('7', 'HTML', 'HTML教程', 'HTML 段落', '<h1>HTML <span class=\"color_h1\">段落</span></h1><hr/><p class=\"intro\">网页的外观是否美观，很大程度上取决于其排版。在页面中出现大段的文字，通常采用分段进行规划，对换行也有极其严格的划分。本节从段落的细节设置入手，使读者学习后能利用标签自如地处理大段的文字。&nbsp;</p><hr/><h2>HTML 段落</h2><p>浏览器解析HTML文档会忽略空白符，所以要想保证正常的分段换行的话，必须指出哪些文字是属于同一段落的，这就用到了标签&lt;p&gt;。&lt;p&gt;标签式段落标记,浏览器会自动地在段落的前后添加空行。</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;This&nbsp;is&nbsp;a&nbsp;paragraph&nbsp;&lt;/p&gt;&nbsp;&nbsp;\n&lt;p&gt;This&nbsp;is&nbsp;another&nbsp;paragraph&lt;/p&gt;</pre><p><br/> <a href=\"/DIY/3.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p><strong>注意：</strong>浏览器会自动地在段落的前后添加空行。（&lt;/p&gt; 是块级元素）</p><hr/><h2>不要省略结尾标签</h2><p>虽然 &lt;/p&gt; 可以省略，但是为了让人清楚地看出 &lt;p&gt; 在哪里结束，还是不要省略比较好。如果省略 &lt;/p&gt; 的话，在使用样式表的时候有些浏览器会出bug，使网页看上去很奇怪。</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;这个段落没有结尾标签\n&lt;p&gt;这个段落也没有结尾标签</pre><p><br/> <a href=\"/Home/DIY/9.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p><strong>注释:</strong> 在未来的 HTML 版本中，不允许省略结束标签。</p><hr/><h2>换行</h2><p>br 是换行（Break）的缩写。文本会在这个标签的地方换行。在HTML代码里直接换行的话，按浏览器的不同可能显示为一个空格，或者被忽视。在浏览器里正确地换行要使用 &lt;br&gt; 。如果您希望在不产生一个新段落的情况下进行换行（新行），请使用 &lt;br /&gt; 标签：</p><h2 class=\"example\">实例</h2><p>&lt;p&gt;This is&lt;br&gt;a para&lt;br&gt;graph with line breaks&lt;/p&gt;</p><p><br/> <a href=\"/Home/DIY/10.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p>&lt;br /&gt; 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。</p><hr/><h2>HTML 输出- 使用提醒</h2><p>我们无法确定 HTML 被显示的确切效果。屏幕的大小，以及对窗口的调整都可能导致不同的结果。</p><p>对于 HTML，您无法通过在 HTML 代码中添加额外的空格或换行来改变输出的效果。</p><p>当显示页面时，浏览器会移除源代码中多余的空格和空行。所有连续的空格或空行都会被算作一个空格。需要注意的是，HTML 代码中的所有连续的空行（换行）也被显示为一个空格。</p><p><a href=\"http://www.runoob.com/try/try.php?filename=tryhtml_poem\" target=\"_blank\">尝试一下</a></p><p>（这个例子演示了一些 HTML 格式化方面的问题）</p><hr/><h2>HTML设置段落文字的对齐方式</h2><p>段落中文字的默认对齐方式是左对齐。不过，有时候需要设置为不同的对齐方式，比如：居中对齐、右对齐等。使用</p><p>标签的align属性可以设置段落文字的各种对齐方式。</p><h2>实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;段落默认对齐方式：左对齐方式。&lt;/p&gt;\n&lt;p&nbsp;align=&quot;left&quot;&gt;段落左对齐方式。使用左对齐方式时都使用默认对齐方式。&lt;/p&gt;\n&lt;p&nbsp;align=&quot;center&quot;&gt;段落居中对齐方式。&lt;/p&gt;\n&lt;p&nbsp;align=&quot;right&quot;&gt;段落右对齐方式。&lt;/p&gt;</pre><p><a href=\"/Home/DIY/11.html\" target=\"_blank\" title=\"在线测试\">在线测试</a><br/></p>', '7', null);
INSERT INTO `course` VALUES ('8', 'CSS', 'CSS教程', 'CSS 教程|各章节实例|CSS 实例|CSS 实例|CSS 参考手册|', '<h1>CSS <span class=\"color_h1\"> 教程</span> </h1><p>通过使用 CSS 我们可以大大提升网页开发的工作效率！</p><p>在我们的 CSS 教程中，您会学到如何使用 CSS 同时控制多重网页的样式和布局。</p><h2 class=\"tutheader\">各章节实例</h2><p>本 CSS 教程包含了数百个CSS在线实例</p><p>通过本站的在线编辑器，你可以在线编辑CSS,并且可以在线查看修改后的效果。</p><h2 class=\"example_head\">CSS 实例</h2><p>body &nbsp;<br/> { &nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;background-color:#d0e4fe; &nbsp;<br/> } &nbsp;<br/> h1 &nbsp;<br/> { &nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;color:orange; &nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;text-align:center; &nbsp;<br/> } &nbsp;<br/> p &nbsp;<br/> { &nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;font-family:&quot;Times New Roman&quot;; &nbsp;<br/> &nbsp;&nbsp;&nbsp;&nbsp;font-size:20px; &nbsp;<br/> }</p><p><br/>\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_default\" class=\"tryitbtn\">尝试一下 &amp;raquo;</a> </p><p><strong>点击 &quot;尝试一下&quot; 按钮查看css是如何工作的。</strong></p><h2 class=\"tutheader\">CSS 实例</h2><p>css 在线150个实例，通过本站编辑器，你可以学习在线查看修改后css的运行效果。</p><p><a href=\"http://www.runoob.com/css/css-examples.html\" target=\"_blank\">尝试一下!</a></p><h2 class=\"tutheader\">CSS 参考手册</h2><p>在W3CSchool中你可以找到更完整的CSS属性、选择器的语法，浏览器支持等资料.</p><p><a href=\"http://www.runoob.com/cssref/css-reference.html\" target=\"_blank\">CSS 属性</a> </p><p><a href=\"http://www.runoob.com/cssref/css-selectors.html\" target=\"_blank\">CSS 选择器参考手册</a></p><p><a href=\"http://www.runoob.com/cssref/css-ref-aural.html\" target=\"_blank\">CSS 声音参考手册</a></p><p><a href=\"http://www.runoob.com/cssref/css-units.html\" target=\"_blank\">CSS 单位</a></p><p><a href=\"http://www.runoob.com/cssref/css-colors.html\" target=\"_blank\">CSS 颜色参考手册</a></p>', '1', null);
INSERT INTO `course` VALUES ('9', 'CSS', 'CSS教程', 'CSS 简介|你需要具备的知识|什么是 CSS?|CSS 实例|样式解决了一个很大的问题|CSS 样式表极大地提高了工作效率|', '<h1>CSS <span class=\"color_h1\">简介</span> </h1><hr/><h2>你需要具备的知识</h2><p>在继续学习之前，你需要对下面的知识有基本的了解：</p><ul class=\" list-paddingleft-2\"><li><p>HTML / XHTML</p></li></ul><p>如果你希望首先学习这些项目，请在 <a href=\"http://www.w3cschool.cc/\" target=\"_blank\">首页</a> 访问相关教程。.</p><hr/><h2>什么是 CSS?</h2><ul class=\" list-paddingleft-2\"><li><p>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</p></li><li><p>样式定义<strong>如何显示</strong> HTML 元素</p></li><li><p>样式通常存储在<strong>样式表</strong>中</p></li><li><p>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></p></li><li><p><strong>外部样式表</strong>可以极大提高工作效率</p></li><li><p>外部样式表通常存储在 <strong>CSS 文件</strong>中</p></li><li><p>多个样式定义可<strong>层叠</strong>为一</p></li></ul><hr/><h2>CSS 实例</h2><p>一个HTML文档可以显示不同的样式: <a href=\"http://www.runoob.com/try/demo_source/demo_default.htm\" target=\"_blank\">查看CSS是如何工作的</a></p><hr/><h2>样式解决了一个很大的问题</h2><p>HTML 标签原本被设计为用于定义文档内容，如下实例：</p><p>&lt;h1&gt;这是一个标题&lt;/h1&gt;</p><p>&lt;p&gt;这是一个段落.&lt;/p&gt;</p><p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p><p>为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。</p><p>当代浏览器都支持 CSS .</p><hr/><h2>CSS 样式表极大地提高了工作效率</h2><p>样式表定义如何显示 HTML 元素</p><p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p>', '2', null);
INSERT INTO `course` VALUES ('10', 'Javascript', 'Javascript教程', 'JavaScript 教程|JavaScript 在线实例|实例|我的第一个 JavaScript 程序|为什么学习 JavaScript?|谁适合阅读本教程?|阅读本教程前，您需要了解的知识：|JavaScript 实例|JavaScript 测验|JavaScript 参考手册|', '<h1>JavaScript <span class=\"color_h1\">教程</span> </h1><p>JavaScript 是 Web 的编程语言。</p><p>所有现代的 HTML 页面都使用 JavaScript。</p><p>JavaScript 非常容易学。</p><p>本教程将教你学习从初级到高级JavaScript知识。</p><h2 class=\"tutheader\">JavaScript 在线实例</h2><p>本教程包含了大量的 JavaScript 实例， 您可以点击 &quot;尝试一下&quot; 来在线查看实例。</p><h2 class=\"example_head\">实例</h2><div></div><h2>我的第一个 JavaScript 程序</h2><p>这是一个段落</p><p><br/>\n &nbsp;<br/> \n </p><p><br/>\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_events\">尝试一下 &amp;raquo;</a> </p><p>在每个页面您可以点击 &quot;尝试一下&quot; 在线查看实例！！！</p><p>尝试每个实例，并且在线修改代码，查看不同的运行效果！！！</p><table class=\"lamp\"><tbody><tr class=\"firstRow\"><th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"/></th><td>如果能根据本站的实例一步一个脚印学习，你将会在很短的时间内学会 JavaScript。</td></tr></tbody></table><p><br/> </p><h2 class=\"tutheader\">为什么学习 JavaScript?</h2><p>JavaScript web 开发人员必须学习的 3 门语言中的一门：</p><ol class=\" list-paddingleft-2\"><li><p><strong>HTML</strong> 定义了网页的内容</p></li><li><p><strong>CSS</strong> 描述了网页的布局</p></li><li><p><strong>JavaScript</strong> 网页的行为</p></li></ol><p>本教程是关于 JavaScript 及介绍 JavaScript 如何与 HTML 和 CSS 一起工作。</p><p><br/></p><h2 class=\"tutheader\">谁适合阅读本教程?</h2><p>1. 如果您想学习 JavaScript，您可以学习本教程：</p><p>了解 JavaScript 是如何与 HTML 和 CSS 一起工作的。</p><p>2. 如果在此之前您已经使用过 JavaScript，您也可以阅读本教程：</p><p>JavaScript 一直在升级，所以我们需要时刻了解 JavaScript 的新技术。</p><p><br/></p><h2 class=\"tutheader\">阅读本教程前，您需要了解的知识：</h2><p>阅读本教程，您需要有以下基础：</p><ul class=\" list-paddingleft-2\"><li><p>HTML 和 CSS 基础</p></li></ul><p>如果您想学习这些基础知识，您可以在我们的首页找到相应的教程<a href=\"http://www.runoob.com/\">菜鸟教程</a>。</p><p><br/></p><h2 class=\"tutheader\">JavaScript 实例</h2><p>学习 100 多个 JavaScript 实例！</p><p>在实例页面中，您可以点击 &quot;尝试一下&quot; 来查看 JavaScript 在线实例。</p><ul class=\" list-paddingleft-2\"><li><p><a href=\"js-examples.html\">JavaScript 实例</a></p></li><li><p><a href=\"js-ex-objects.html\">JavaScript 对象实例</a></p></li><li><p><a href=\"js-ex-browser.html\">JavaScript 浏览器支持实例</a></p></li><li><p><a href=\"js-ex-dom.html\">JavaScript HTML DOM 实例</a></p></li></ul><p><br/></p><h2 class=\"tutheader\">JavaScript 测验</h2><p>在菜鸟教程中测试您的 JavaScript 技能！</p><p><br/></p><h2 class=\"tutheader\">JavaScript 参考手册</h2><p>在菜鸟教程中，我们为您提供完整的 JavaScript 对象、浏览器对象、HTML DOM 对象参考手册。</p><p>以下手册包含了每个对象、属性、方法的实例。</p><ul class=\" list-paddingleft-2\"><li><p><a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\">JavaScript 内置对象</a></p></li><li><p><a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\">Browser 对象</a></p></li><li><p><a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\">HTML DOM 对象</a></p></li></ul>', '1', null);
INSERT INTO `course` VALUES ('11', 'Javascript', 'Javascript教程', 'JavaScript 语法', '<h1>JavaScript <span class=\"color_h1\">语法</span> </h1><hr/><p class=\"intro\">JavaScript 是一个程序语言。语法规则定义了语言结构。</p><hr/><h2>JavaScript 语法</h2><p>JavaScript 是一个脚本语言。</p><p>它是一个轻量级，但功能强大的编程语言。</p><hr/><h2>JavaScript 字面量</h2><p>在编程语言中，一个字面量是一个常量，如 3.14。</p><p><strong>数字（Number）字面量</strong> 可以是整数或者是小数，或者是科学计数(e)。</p><p>3.14 &nbsp;<br/>\n &nbsp;<br/> 1001 &nbsp;<br/>\n &nbsp;<br/> 123e5</p><p><br/>\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_numbers\">尝试一下 &amp;raquo;</a> </p><p><strong>字符串（String）字面量</strong> 可以使用单引号或双引号:</p><p>&quot;John Doe&quot; &nbsp;<br/>\n &nbsp;<br/> &#39;John Doe&#39;</p><p><br/>\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_strings\">尝试一下 &amp;raquo;</a> </p><p><strong>表达式字面量</strong> 用于计算：</p><p>5 + 6 &nbsp;<br/>\n &nbsp;<br/> 5 * 10</p><p><br/>\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_expressions\">尝试一下 &amp;raquo;</a> </p><p><strong>数组（Array）字面量</strong> 定义一个数组：</p><p>[40, 100, 1, 5, 25, 10]</p><p><strong>对象（Object）字面量</strong> 定义一个对象：</p><p>{firstName:&quot;John&quot;, lastName:&quot;Doe&quot;, age:50, eyeColor:&quot;blue&quot;}</p><p><strong>函数（Function）字面量</strong> 定义一个函数：</p><p>function myFunction(a, b) { return a * b;}</p><p><br/></p><hr/><h2>JavaScript 变量</h2><p>在编程语言中，变量用于存储数据值。</p><p>JavaScript 使用关键字 <strong>var</strong> 来定义变量， 使用等号来为变量赋值：</p><p>var x, length &nbsp;<br/>\n &nbsp;<br/>x = 5 &nbsp;<br/>\n &nbsp;<br/> length = 6</p><p><br/>\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_variables\">尝试一下 &amp;raquo;</a> </p><p>变量可以通过变量名访问。在指令式语言中，变量通常是可变的。字面量是一个恒定的值。</p><p><br/></p><table class=\"lamp\"><tbody><tr class=\"firstRow\"><th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"/></th><td>变量是一个<strong>名称</strong>。字面量是一个<strong>值</strong>。</td></tr></tbody></table><hr/><h2>JavaScript 操作符</h2><p>JavaScript使用 <strong>算术运算符</strong> 来计算值:</p><p>(5 + 6) * 10 &nbsp;<br/> \n </p><p><br/>\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_operators\">尝试一下 &amp;raquo;</a> </p><p>JavaScript使用<strong>赋值运算符</strong>给变量赋值：</p><p>x = 5 &nbsp;<br/> y = 6 &nbsp;<br/> z = (x + y) * 10</p><p><br/>\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_assign\">尝试一下 &amp;raquo;</a> </p><p>JavaScript语言有多种类型的运算符：</p><table class=\"reference\"><tbody><tr class=\"firstRow\"><th>类型</th><th>实例</th><th>描述</th></tr><tr><td>赋值，算术和位运算符</td><td>=&nbsp; +&nbsp; -&nbsp; *&nbsp; /</td><td>在 JS 运算符中描述</td></tr><tr><td>条件，比较及逻辑运算符</td><td>==&nbsp; != &lt;&nbsp; &gt;&nbsp;</td><td>在 JS 比较运算符中描述</td></tr></tbody></table><p><br/></p><hr/><h2>JavaScript 语句</h2><p>在 HTML 中，JavaScript 语句向浏览器发出的命令。</p><p>语句是用分号分隔：</p><p>x = 5 + 6; &nbsp;<br/> y = x * 10;</p><p><br/></p><hr/><h2>JavaScript 关键词</h2><p>JavaScript 语句通常于<strong>关键词</strong>为开头。 <strong>var</strong> 关键词告诉浏览器创建一个新的变量：</p><p>var x = 5 + 6; &nbsp;<br/>var y = x * 10;</p><p><br/></p><hr/><hr/><h2>JavaScript 关键字</h2><p>和其他任何编程语言一样，JavaScript 保留了一些关键字为自己所用。</p><p>JavaScript 同样保留了一些关键字，这些关键字在当前的语言版本中并没有使用，但在以后 JavaScript 扩展中会用到。</p><p>JavaScript 关键字必须以字母、下划线（_）或美元符（$）开始。</p><p>后续的字符可以是字母、数字、下划线或美元符（数字是不允许作为首字符出现的，以便 JavaScript 可以轻易区分开关键字和数字）。</p><p>以下是 JavaScript 中最重要的保留字（按字母顺序）：</p><table class=\"reference\"><tbody><tr class=\"firstRow\"><td>abstract</td><td>else</td><td>instanceof</td><td>super</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>boolean</td><td>enum</td><td>int</td><td>switch</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>break</td><td>export</td><td>interface</td><td>synchronized</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>byte</td><td>extends</td><td>let</td><td>this</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>case</td><td>false</td><td>long</td><td>throw</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>catch</td><td>final</td><td>native</td><td>throws</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>char</td><td>finally</td><td>new</td><td>transient</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>class</td><td>float</td><td>null</td><td>true</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>const</td><td>for</td><td>package</td><td>try</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>continue</td><td>function</td><td>private</td><td>typeof</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>debugger</td><td>goto</td><td>protected</td><td>var</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>default</td><td>if</td><td>public</td><td>void</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>delete</td><td>implements</td><td>return</td><td>volatile</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>do</td><td>import</td><td>short</td><td>while</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr><tr><td>double</td><td>in</td><td>static</td><td>with</td></tr><tr><td><br/></td><td><br/></td><td><br/></td><td><br/></td></tr></tbody></table><hr/><h2>JavaScript 注释</h2><p>不是所有的 JavaScript 语句都是&quot;命令&quot;。双斜杠 <strong>//</strong> 后的内容将会被浏览器忽略：</p><p>// 我不会执行</p><hr/><h2>JavaScript 数据类型</h2><p>JavaScript 有多种数据类型：数字，字符串，数组，对象等等：</p><p>var length = 16;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;// Number 通过数字字面量赋值 \n &nbsp;<br/> var points = x * 10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Number 通过表达式字面量赋值 &nbsp;<br/> var lastName = &quot;Johnson&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // String 通过字符串字面量赋值 &nbsp;<br/> var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Array&nbsp; 通过数组字面量赋值 &nbsp;<br/> var person = {firstName:&quot;John&quot;, lastName:&quot;Doe&quot;};&nbsp;&nbsp;// Object 通过对象字面量赋值</p><p><br/></p><hr/><h2>数据类型的概念</h2><p>编程语言中，数据类型是一个非常重要的内容。</p><p>为了可以操作变量，了解数据类型的概念非常重要。</p><p>如果没有使用数据类型，以下实例将无法执行：</p><p>16 + &quot;Volvo&quot;</p><p>16 加上 &quot;Volvo&quot; 是如何计算呢? 以上会产生一个错误还是输出以下结果呢？</p><p>&quot;16Volvo&quot;</p><p>你可以在浏览器尝试执行以上代码查看效果。</p><p>在接下来的章节中你将学到更多关于数据类型的知识。</p><hr/><h2>JavaScript 函数</h2><p>JavaScript 语句可以写在函数内，函数可以重复引用：</p><p><strong>引用一个函数</strong> = 调用函数(执行函数内的语句)。</p><p>function myFunction(a, b) { &nbsp;<br/> &nbsp;&nbsp;&nbsp; return a * b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 返回 a 乘于 b 的结果 &nbsp;<br/> }</p><p><br/></p><hr/><h2>JavaScript 对大小写敏感。</h2><p>JavaScript 对大小写是敏感的。</p><p>当编写 JavaScript 语句时，请留意是否关闭大小写切换键。</p><p>函数 <strong>getElementById</strong> 与 <strong>getElementbyID</strong> 是不同的。</p><p>同样，变量 <strong>myVariable</strong> 与 <strong>MyVariable</strong> 也是不同的。</p><hr/><h2>JavaScript 字符集</h2><p>JavaScript 使用 Unicode 字符集。</p><p>Unicode 覆盖了所有的字符，包含标点等字符。</p><p>如需进一步了解，请学习我们的 <a href=\"http://www.runoob.com/charsets/ref-html-utf8.html\">完整 Unicode 参考手册</a>。</p><hr/><h2>您知道吗?</h2><table class=\"lamp\"><tbody><tr class=\"firstRow\"><th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"/><br/> </th><td>JavaScript 中，常见的是驼峰法的命名规则，如 lastName (而不是lastname)。</td></tr></tbody></table>', '2', null);
INSERT INTO `course` VALUES ('12', 'CSS', 'CSS教程', 'CSS 创建|如何插入样式表|外部样式表|内部样式表|内联样式|多重样式|多重样式将层叠为一个|', '<h1>CSS <span class=\"color_h1\">创建</span> </h1><hr/><p class=\"intro\">当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。</p><hr/><h2>如何插入样式表</h2><p>插入样式表的方法有三种:</p><ul class=\" list-paddingleft-2\"><li><p>外部样式表</p></li><li><p>内部样式表</p></li><li><p>内联样式</p></li></ul><hr/><h2>外部样式表</h2><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 &lt;link&gt; 标签链接到样式表。 &lt;link&gt; 标签在（文档的）头部：</p><p>&lt;head&gt; &nbsp;<br/> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt; &nbsp;<br/> &lt;/head&gt;</p><p>浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p><p>外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。下面是一个样式表文件的例子：</p><p>hr {color:sienna;} &nbsp;<br/> p {margin-left:20px;} &nbsp;<br/> body {background-image:url(&quot;/images/back40.gif&quot;);}</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/> 不要在属性值与单位之间留有空格。假如你使用 &quot;margin-left: 20 px&quot; 而不是 &quot;margin-left: 20px&quot; ，它仅在 IE 6 中有效，但是在 Mozilla/Firefox 或 Netscape 中却无法正常工作。</p><hr/><h2>内部样式表</h2><p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 &lt;style&gt; 标签在文档头部定义内部样式表，就像这样:</p><p>&lt;head&gt; &nbsp;<br/> &lt;style&gt; &nbsp;<br/> hr {color:sienna;} &nbsp;<br/> p {margin-left:20px;} &nbsp;<br/> body {background-image:url(&quot;images/back40.gif&quot;);} &nbsp;<br/> &lt;/style&gt; &nbsp;<br/> &lt;/head&gt;</p><p><br/></p><hr/><h2>内联样式</h2><p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。</p><p>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：</p><p>&lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;This is a paragraph.&lt;/p&gt;</p><p><br/></p><hr/><h2>多重样式</h2><p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。&nbsp;</p><p>例如，外部样式表拥有针对 h3 选择器的三个属性：</p><p>h3 &nbsp;<br/> { &nbsp;<br/> color:red; &nbsp;<br/> text-align:left; &nbsp;<br/> font-size:8pt; &nbsp;<br/> }</p><p>而内部样式表拥有针对 h3 选择器的两个属性：</p><p>h3 &nbsp;<br/> { &nbsp;<br/> text-align:right; &nbsp;<br/> font-size:20pt; &nbsp;<br/> }</p><p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么 h3 得到的样式是：</p><p>color:red; &nbsp;<br/> text-align:right; &nbsp;<br/> font-size:20pt;</p><p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。</p><hr/><h2>多重样式将层叠为一个</h2><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p><h3>层叠次序</h3><p>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</p><p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p><ol class=\" list-paddingleft-2\"><li><p>浏览器缺省设置</p></li><li><p>外部样式表</p></li><li><p>内部样式表（位于 &lt;head&gt; 标签内部）</p></li><li><p>内联样式（在 HTML 元素内部）</p></li></ol><p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明： 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/><strong>提示:</strong>如果你使用了外部文件的样式在 &lt;head&gt;中也定义了该样式，则内部样式表会取代外部文件的样式。</p>', '3', null);
INSERT INTO `course` VALUES ('13', 'CSS', 'CSS教程', 'CSS 创建|如何插入样式表|外部样式表|内部样式表|内联样式|多重样式|多重样式将层叠为一个|', '<h1>CSS <span class=\"color_h1\">创建</span> </h1><hr/><p class=\"intro\">当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。</p><hr/><h2>如何插入样式表</h2><p>插入样式表的方法有三种:</p><ul class=\" list-paddingleft-2\"><li><p>外部样式表</p></li><li><p>内部样式表</p></li><li><p>内联样式</p></li></ul><hr/><h2>外部样式表</h2><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 &lt;link&gt; 标签链接到样式表。 &lt;link&gt; 标签在（文档的）头部：</p><p>&lt;head&gt; &nbsp;<br/> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt; &nbsp;<br/> &lt;/head&gt;</p><p>浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p><p>外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。下面是一个样式表文件的例子：</p><p>hr {color:sienna;} &nbsp;<br/> p {margin-left:20px;} &nbsp;<br/> body {background-image:url(&quot;/images/back40.gif&quot;);}</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/> 不要在属性值与单位之间留有空格。假如你使用 &quot;margin-left: 20 px&quot; 而不是 &quot;margin-left: 20px&quot; ，它仅在 IE 6 中有效，但是在 Mozilla/Firefox 或 Netscape 中却无法正常工作。</p><hr/><h2>内部样式表</h2><p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 &lt;style&gt; 标签在文档头部定义内部样式表，就像这样:</p><p>&lt;head&gt; &nbsp;<br/> &lt;style&gt; &nbsp;<br/> hr {color:sienna;} &nbsp;<br/> p {margin-left:20px;} &nbsp;<br/> body {background-image:url(&quot;images/back40.gif&quot;);} &nbsp;<br/> &lt;/style&gt; &nbsp;<br/> &lt;/head&gt;</p><p><br/></p><hr/><h2>内联样式</h2><p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。</p><p>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：</p><p>&lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;This is a paragraph.&lt;/p&gt;</p><p><br/></p><hr/><h2>多重样式</h2><p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。&nbsp;</p><p>例如，外部样式表拥有针对 h3 选择器的三个属性：</p><p>h3 &nbsp;<br/> { &nbsp;<br/> color:red; &nbsp;<br/> text-align:left; &nbsp;<br/> font-size:8pt; &nbsp;<br/> }</p><p>而内部样式表拥有针对 h3 选择器的两个属性：</p><p>h3 &nbsp;<br/> { &nbsp;<br/> text-align:right; &nbsp;<br/> font-size:20pt; &nbsp;<br/> }</p><p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么 h3 得到的样式是：</p><p>color:red; &nbsp;<br/> text-align:right; &nbsp;<br/> font-size:20pt;</p><p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。</p><hr/><h2>多重样式将层叠为一个</h2><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p><h3>层叠次序</h3><p>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</p><p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p><ol class=\" list-paddingleft-2\"><li><p>浏览器缺省设置</p></li><li><p>外部样式表</p></li><li><p>内部样式表（位于 &lt;head&gt; 标签内部）</p></li><li><p>内联样式（在 HTML 元素内部）</p></li></ol><p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明： 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/><strong>提示:</strong>如果你使用了外部文件的样式在 &lt;head&gt;中也定义了该样式，则内部样式表会取代外部文件的样式。</p>', '4', null);
INSERT INTO `course` VALUES ('14', 'CSS', 'CSS教程', 'CSS 创建', '<h1>CSS <span class=\"color_h1\">创建</span> </h1><hr/><p class=\"intro\">当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。</p><hr/><h2>如何插入样式表</h2><p>插入样式表的方法有三种:</p><ul class=\" list-paddingleft-2\"><li><p>外部样式表</p></li><li><p>内部样式表</p></li><li><p>内联样式</p></li></ul><hr/><h2>外部样式表</h2><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 &lt;link&gt; 标签链接到样式表。 &lt;link&gt; 标签在（文档的）头部：</p><p>&lt;head&gt; &nbsp;<br/> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt; &nbsp;<br/> &lt;/head&gt;</p><p>浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p><p>外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。下面是一个样式表文件的例子：</p><p>hr {color:sienna;} &nbsp;<br/> p {margin-left:20px;} &nbsp;<br/> body {background-image:url(&quot;/images/back40.gif&quot;);}</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/> 不要在属性值与单位之间留有空格。假如你使用 &quot;margin-left: 20 px&quot; 而不是 &quot;margin-left: 20px&quot; ，它仅在 IE 6 中有效，但是在 Mozilla/Firefox 或 Netscape 中却无法正常工作。</p><hr/><h2>内部样式表</h2><p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 &lt;style&gt; 标签在文档头部定义内部样式表，就像这样:</p><p>&lt;head&gt; &nbsp;<br/> &lt;style&gt; &nbsp;<br/> hr {color:sienna;} &nbsp;<br/> p {margin-left:20px;} &nbsp;<br/> body {background-image:url(&quot;images/back40.gif&quot;);} &nbsp;<br/> &lt;/style&gt; &nbsp;<br/> &lt;/head&gt;</p><p><br/></p><hr/><h2>内联样式</h2><p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。</p><p>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：</p><p>&lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;This is a paragraph.&lt;/p&gt;</p><p><br/></p><hr/><h2>多重样式</h2><p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。&nbsp;</p><p>例如，外部样式表拥有针对 h3 选择器的三个属性：</p><p>h3 &nbsp;<br/> { &nbsp;<br/> color:red; &nbsp;<br/> text-align:left; &nbsp;<br/> font-size:8pt; &nbsp;<br/> }</p><p>而内部样式表拥有针对 h3 选择器的两个属性：</p><p>h3 &nbsp;<br/> { &nbsp;<br/> text-align:right; &nbsp;<br/> font-size:20pt; &nbsp;<br/> }</p><p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么 h3 得到的样式是：</p><p>color:red; &nbsp;<br/> text-align:right; &nbsp;<br/> font-size:20pt;</p><p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。</p><hr/><h2>多重样式将层叠为一个</h2><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p><h3>层叠次序</h3><p>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</p><p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p><ol class=\" list-paddingleft-2\"><li><p>浏览器缺省设置</p></li><li><p>外部样式表</p></li><li><p>内部样式表（位于 &lt;head&gt; 标签内部）</p></li><li><p>内联样式（在 HTML 元素内部）</p></li></ol><p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明： 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/><strong>提示:</strong>如果你使用了外部文件的样式在 &lt;head&gt;中也定义了该样式，则内部样式表会取代外部文件的样式。</p>', '5', '78');

-- ----------------------------
-- Table structure for menu
-- ----------------------------
DROP TABLE IF EXISTS `menu`;
CREATE TABLE `menu` (
  `Id` bigint(20) NOT NULL auto_increment,
  `TypeName` varchar(30) default NULL,
  `Content` text,
  PRIMARY KEY  (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of menu
-- ----------------------------
INSERT INTO `menu` VALUES ('1', 'HTML', '<h2 class=\"left\"><span class=\"left_h2\">HTML教程</span></h2><a target=\"_top\" title=\"HTML教程\" href=\"1.html\">HTML教程</a><a target=\"_top\" title=\"HTML 简介\" href=\"2.html\">HTML 简介</a><a target=\"_top\" title=\"HTML 图像\" href=\"3.html\">HTML 图像</a><a target=\"_top\" title=\"HTML 基础\" href=\"4.html\">HTML 基础</a><a target=\"_top\" title=\"HTML 属性\" href=\"5.html\">HTML 属性</a><a target=\"_top\" title=\"HTML 标题\" href=\"6.html\">HTML 标题</a><a target=\"_top\" title=\"HTML 段落\" href=\"7.html\">HTML 段落</a>');
INSERT INTO `menu` VALUES ('2', 'DIY', '');
INSERT INTO `menu` VALUES ('3', 'tuijian', '<dl><dt>Javascript最新课程</dt><dd>·<a href = \"/11/11.html\"> JavaScript 语法 </a ></dd > <dd>·<a href = \"/10/10.html\"> JavaScript 教程|JavaScript 在线实例|实例|我的第一个 JavaScript 程序|为什么学习 JavaScript?|谁适合阅读本教程?|阅读本教程前，您需要了解的知识：|JavaScript 实例|JavaScript 测验|JavaScript 参考手册| </a ></dd > </dl><dl><dt>CSS最新课程</dt><dd>·<a href = \"/9/9.html\"> CSS 简介|你需要具备的知识|什么是 CSS?|CSS 实例|样式解决了一个很大的问题|CSS 样式表极大地提高了工作效率| </a ></dd > <dd>·<a href = \"/8/8.html\"> CSS 教程|各章节实例|CSS 实例|CSS 实例|CSS 参考手册| </a ></dd > </dl><dl><dt>HTML最新课程</dt><dd>·<a href = \"/7/7.html\"> HTML 段落 </a ></dd > <dd>·<a href = \"/6/6.html\"> HTML 标题 </a ></dd > <dd>·<a href = \"/5/5.html\"> HTML 属性 </a ></dd > <dd>·<a href = \"/4/4.html\"> HTML 基础 </a ></dd > <dd>·<a href = \"/3/3.html\"> HTML 图像 </a ></dd > </dl>');
INSERT INTO `menu` VALUES ('4', 'CSS', '<h2 class=\"left\"><span class=\"left_h2\">CSS教程</span></h2><a target=\"_top\" title=\"CSS 教程|各章节实例|CSS 实例|CSS 实例|CSS 参考手册|\" href=\"8.html\">CSS 教程|各章节实例|CSS 实例|CSS 实例|CSS 参考手册|</a><a target=\"_top\" title=\"CSS 简介|你需要具备的知识|什么是 CSS?|CSS 实例|样式解决了一个很大的问题|CSS 样式表极大地提高了工作效率|\" href=\"9.html\">CSS 简介|你需要具备的知识|什么是 CSS?|CSS 实例|样式解决了一个很大的问题|CSS 样式表极大地提高了工作效率|</a>');
INSERT INTO `menu` VALUES ('5', 'Javascript', '<h2 class=\"left\"><span class=\"left_h2\">Javascript教程</span></h2><a target=\"_top\" title=\"JavaScript 教程|JavaScript 在线实例|实例|我的第一个 JavaScript 程序|为什么学习 JavaScript?|谁适合阅读本教程?|阅读本教程前，您需要了解的知识：|JavaScript 实例|JavaScript 测验|JavaScript 参考手册|\" href=\"10.html\">JavaScript 教程|JavaScript 在线实例|实例|我的第一个 JavaScript 程序|为什么学习 JavaScript?|谁适合阅读本教程?|阅读本教程前，您需要了解的知识：|JavaScript 实例|JavaScript 测验|JavaScript 参考手册|</a><a target=\"_top\" title=\"JavaScript 语法\" href=\"11.html\">JavaScript 语法</a>');

-- ----------------------------
-- Table structure for mulu
-- ----------------------------
DROP TABLE IF EXISTS `mulu`;
CREATE TABLE `mulu` (
  `Id` bigint(20) NOT NULL auto_increment,
  `TypeName` varchar(30) default NULL,
  `MuluName` varchar(50) default NULL,
  `SortNum` int(11) default NULL,
  PRIMARY KEY  (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of mulu
-- ----------------------------
INSERT INTO `mulu` VALUES ('1', 'HTML', 'HTML教程', '1');
INSERT INTO `mulu` VALUES ('2', 'HTML', 'HTML5', '2');
INSERT INTO `mulu` VALUES ('3', 'CSS', 'CSS教程', '1');
INSERT INTO `mulu` VALUES ('4', 'CSS3', 'CSS3教程', '2');
INSERT INTO `mulu` VALUES ('5', 'Javascript', 'Javascript教程', '1');

-- ----------------------------
-- Table structure for schoolcontent
-- ----------------------------
DROP TABLE IF EXISTS `schoolcontent`;
CREATE TABLE `schoolcontent` (
  `Id` bigint(20) NOT NULL auto_increment,
  `MuluId` bigint(20) default NULL,
  `OutContent` longtext,
  `Content` longtext,
  `Titles` varchar(500) default NULL,
  PRIMARY KEY  (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=365 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of schoolcontent
-- ----------------------------
INSERT INTO `schoolcontent` VALUES ('1', '1', '<h1>HTML 教程- <span class=\"color_h1\">(HTML5 标准)</span></h1> \n<div class=\"tutintro\"> \n <p>您可以使用 HTML 来建立自己的 WEB 站点。</p> \n <p>在本教程中，您将学习如何使用 HTML 来创建站点。</p> \n <p>HTML 很容易学习！相信您能很快学会它！</p> \n</div> \n<h2 class=\"tutheader\">HTML 实例</h2> \n<p>本教程包含了数百个 HTML 实例。</p> \n<p>使用本站的编辑器，您可以轻松实现在线修改 HTML，并查看实例运行结果。</p> \n<blockquote>\n <p><strong>注意：</strong>对于中文网页需要使用 <strong>&lt;meta charset=&quot;utf-8&quot;&gt;</strong> 声明编码，否则会出现乱码。</p>\n</blockquote> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt; \n  <br /> &lt;html&gt; \n  <br /> &lt;head&gt; \n  <br /> &lt;meta charset=&quot;utf-8&quot;&gt; \n  <br /> &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; \n  <br /> &lt;/head&gt; \n  <br /> &lt;body&gt; \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;我的第一个标题&lt;/h1&gt; \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;我的第一个段落。&lt;/p&gt; \n  <br /> &lt;/body&gt; \n  <br /> &lt;/html&gt; \n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_intro\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n <p>点击 &quot;尝试一下&quot; 按钮查看在线实例</p> \n</div> \n<p><a href=\"http://www.runoob.com/html/html-intro.html\">开始学习HTML!</a></p> \n<h2 class=\"tutheader\">HTML 实例</h2> \n<p>在 HTML 手册中包含了数百个在线实例，您可以在线编辑并查看运行结果。</p> \n<p><a href=\"http://www.runoob.com/html/html-examples.html\" target=\"_blank\">查看 HTML 实例！</a></p> \n<h2 class=\"tutheader\">HTML 参考手册</h2> \n<p>在菜鸟教程中，我们提供了完整的 HTML 参考手册，其中包括标签、属性、颜色、实体等等。</p> \n<p> <a href=\"http://www.runoob.com/tags/html-reference.html\">HTML 标签参考手册</a> </p>', '<h1>HTML 教程- <span class=\"color_h1\">(HTML5 标准)</span></h1><p>文本标记语言，它是书写网页代码的一种规范，一种标准。它通过标记符号来标记要显示的网页中的各个部分。浏览器根据这个标准显示其中的内容（如：文字如何处理，画面如何安排，图片如何显示等），可以说HTML是网页编程的基础。互联网的普及需要有一个共同的标准来推动，HTML可以说是互联网普及的核心标准。不论服务器端是Java还是php，最终展现给浏览器的都是统一的HTML。</p><p>HTML5是超文本标记语言（HTML）的第五次重大修改，即最新版本；它比原来的标准又增加了一些新的标签，实现更多功能，更标准化，更适用于移动互联网。本套课程将从HTML的基础入手，并介绍HTML5的新特效，再通过一些简单的实例，让您能够动手书写HTML实现网页的设计。</p><p><span style=\"color:#143884;font-family:Simsun\"><span style=\"line-height: 20px; font-family: arial, helvetica, sans-serif; font-size: 16px; color: rgb(0, 0, 0); background-color: rgb(251, 252, 254);\">通过学习本教程，你将学会如何通过使用HTML来创建自己的网页。</span></span></p><h2 class=\"tutheader\">HTML 实例</h2><p><a href=\"http://www.piliyuan.com\" target=\"_self\" title=\"霹雳猿\">霹雳猿</a>（www.piliyuan.com）教程包含很多在线实例，学员可以直接通过我们的在线测试编辑器来运行实例。</p><h2 class=\"example\">实例</h2><p>首先我们来演示一个第一个实例，您可以直接点击下方的“在线测试”。<br/></p><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;&nbsp;&nbsp;\n&lt;html&gt;&nbsp;&nbsp;\n&lt;head&gt;&nbsp;&nbsp;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&nbsp;&nbsp;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;&nbsp;&nbsp;\n&lt;/head&gt;&nbsp;&nbsp;\n&lt;body&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;这里是标题的内容&lt;/h1&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;这里是段落的内容&lt;/p&gt;&nbsp;&nbsp;\n&lt;/body&gt;&nbsp;&nbsp;\n&lt;/html&gt;</pre><p><br/><a href=\"/DIY/1.html\" target=\"_blank\" title=\"在线测试\">在线测试</a><br/></p><p>直接点击上面的“在线测试”,可前往测试页面使用在线测试工具测试代码。<br/></p><p><br/></p><p><a href=\"http://www.runoob.com/html/html-intro.html\">开始学习HTML!</a></p>', 'HTML教程');
INSERT INTO `schoolcontent` VALUES ('2', '2', '<h1>HTML <span class=\"color_h1\">简介</span></h1> \n<div class=\"example\"> \n <h2 class=\"example\">HTML 实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt; \n  <br /> &lt;html&gt; \n  <br /> &lt;head&gt; \n  <br /> &lt;meta charset=&quot;utf-8&quot;&gt; \n  <br /> &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; \n  <br /> &lt;/head&gt; \n  <br /> &lt;body&gt; \n  <br /> \n  <br /> &lt;h1&gt;我的第一个标题&lt;/h1&gt; \n  <br /> \n  <br /> &lt;p&gt;我的第一个段落。&lt;/p&gt; \n  <br /> \n  <br /> &lt;/body&gt; \n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_intro\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<h2>实例解析</h2> \n<ul> \n <li>DOCTYPE 声明了文档类型</li> \n <li>位于标签 &lt;html&gt; 与 &lt;/html&gt; 描述了文档类型</li> \n <li>位于标签 &lt;body&gt; 与 &lt;/body&gt; 为可视化网页内容 </li> \n <li>位于标签 &lt;h1&gt; 与 &lt;/h1&gt; 作为一个标题使用</li> \n <li>位于标签 &lt;p&gt; 与 &lt;/p&gt; 作为一个段落显示</li> \n</ul> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> &lt;!DOCTYPE html&gt; 在HTML5中也是描述了文档类型。</td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<hr />\n<h2>什么是HTML?</h2> \n<p>HTML 是用来描述网页的一种语言。</p>\n<ul> \n <li>HTML 指的是超文本标记语言: <b>H</b>yper<b>T</b>ext <b>M</b>arkup <b>L</b>anguage</li> \n <li>HTML 不是一种编程语言，而是一种<b>标记</b>语言</li> \n <li>标记语言是一套<b>标记标签</b> (markup tag)</li> \n <li>HTML 使用标记标签来<b>描述</b>网页</li> \n <li>HTML 文档包含了HTML<b> 标签</b>及<b>文本</b>内容</li> \n <li>HTML文档也叫做<b> web 页面</b></li> \n</ul> \n<hr />\n<h2>HTML 标签</h2>\n<p>HTML 标记标签通常被称为 HTML 标签 (HTML tag)。</p> \n<ul> \n <li>HTML 标签是由<em>尖括号</em>包围的关键词，比如 &lt;html&gt;</li> \n <li>HTML 标签通常是<em>成对出现</em>的，比如 &lt;b&gt; 和 &lt;/b&gt;</li> \n <li>标签对中的第一个标签是<em>开始标签</em>，第二个标签是<em>结束标签</em></li> \n <li>开始和结束标签也被称为<em>开放标签</em>和<em>闭合标签</em></li> \n</ul> \n<div style=\"width:610px;border:1px solid lightgray;font-size:20px;padding:10px\"> \n <span style=\"color:#98bf21\">&lt;标签&gt;</span>内容\n <span style=\"color:#98bf21\">&lt;/标签&gt;</span>\n</div> \n<br /> \n<hr />\n<h2>HTML 元素</h2> \n<p>&quot;HTML 标签&quot; 和 &quot;HTML 元素&quot; 通常都是描述同样的意思.</p> \n<p>但是严格来讲, 一个 HTML 元素包含了开始标签与结束标签，如下实例: </p> \n<p>HTML 元素:</p> \n<div style=\"width:610px;border:1px solid lightgray;font-size:20px;padding:10px;\"> \n <span style=\"color:#98bf21\">&lt;p&gt;</span>这是一个段落。\n <span style=\"color:#98bf21\">&lt;/p&gt;</span>\n</div> \n<br /> \n<hr />\n<h2>Web 浏览器</h2> \n<p>Web浏览器（如谷歌浏览器，Internet Explorer，Firefox，Safari）是用于读取HTML文件，并将其作为网页显示。</p> \n<p>浏览器并不是直接显示的HTML标签，但可以使用标签来决定如何展现HTML页面的内容给用户：</p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/06/html-first.png\" /> </p> \n<hr />\n<h2>HTML 网页结果</h2> \n<p>下面是一个可视化的HTML页面结构：</p> \n<div style=\"width:99%;border:1px solid grey;padding:3px;margin:0;background-color:#ddd\">\n &lt;html&gt; \n <div style=\"width:90%;border:1px solid grey;padding:3px;margin:20px\">\n  &lt;head&gt; \n  <div style=\"width:90%;border:1px solid grey;padding:5px;margin:20px\">\n   &lt;title&gt;页面标题&lt;/title&gt; \n  </div> &lt;/head&gt; \n </div> \n <div style=\"width:90%;border:1px solid grey;padding:3px;margin:20px;background-color:#fff\">\n  &lt;body&gt; \n  <div style=\"width:90%;border:1px solid grey;padding:5px;margin:20px\">\n   &lt;h1&gt;这是一个标题&lt;/h1&gt;\n  </div> \n  <div style=\"width:90%;border:1px solid grey;padding:5px;margin:20px\">\n   &lt;p&gt;这是一个段落。&lt;/p&gt;\n  </div> \n  <div style=\"width:90%;border:1px solid grey;padding:5px;margin:20px\">\n   &lt;p&gt;这是另外一个段落。&lt;/p&gt;\n  </div> &lt;/body&gt; \n </div> &lt;/html&gt; \n</div>\n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>只有 &lt;body&gt; 区域 (白色部分) 才会在浏览器中显示。</td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<hr />\n<h2>HTML版本</h2> \n<p>从初期的网络诞生后，已经出现了许多HTML版本:</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th>版本</th> \n   <th>发布时间</th> \n  </tr> \n  <tr> \n   <td>HTML</td> \n   <td>1991</td> \n  </tr> \n  <tr> \n   <td>HTML+</td> \n   <td>1993</td> \n  </tr> \n  <tr> \n   <td>HTML 2.0</td> \n   <td>1995</td> \n  </tr> \n  <tr> \n   <td>HTML 3.2</td> \n   <td>1997</td> \n  </tr> \n  <tr> \n   <td>HTML 4.01</td> \n   <td>1999</td> \n  </tr> \n  <tr> \n   <td>XHTML 1.0</td> \n   <td>2000</td> \n  </tr> \n  <tr> \n   <td>HTML5</td> \n   <td>2012</td> \n  </tr> \n  <tr> \n   <td>XHTML5</td> \n   <td>2013</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr />\n<h2> &lt;!DOCTYPE&gt; 声明</h2> \n<p>&lt;!DOCTYPE&gt;声明有助于浏览器中正确显示网页。</p> \n<p>网络上有很多不同的文件，如果能够正确声明HTML的版本，浏览器就能正确显示网页内容。</p> \n<p>doctype 声明是不区分大小写的，以下方式均可： </p> \n<div class=\"code notranslate\"> \n <div>\n   &lt;!DOCTYPE html&gt; \n  <br />\n  <br /> &lt;!DOCTYPE HTML&gt; \n  <br />\n  <br /> &lt;!doctype html&gt; \n  <br />\n  <br /> &lt;!Doctype Html&gt; \n </div>\n</div> \n<hr />\n<h2>通用声明</h2> \n<h3>HTML5</h3> \n<div class=\"code notranslate\"> \n <div>\n   &lt;!DOCTYPE html&gt; \n </div>\n</div> \n<h3>HTML 4.01</h3> \n<div class=\"code notranslate\"> \n <div>\n   &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;\n  <br /> &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt; \n </div>\n</div> \n<h3>XHTML 1.0</h3> \n<div class=\"code notranslate\"> \n <div>\n   &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n  <br /> &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt; \n </div>\n</div> \n<p>查看完整网页声明类型 <a href=\"http://www.runoob.com/tags/tag-doctype.html\">DOCTYPE 参考手册</a>。</p> \n<hr /> \n<h2>中文编码</h2> \n<p>目前在大部分浏览器中，直接输出中文会出现中文乱码的情况，这时候我们就需要在头部将字符声明为 UTF-8。</p> \n<div class=\"example\"> \n <h2 class=\"example\">HTML 实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;meta charset=&quot;UTF-8&quot;&gt;\n  <br /> &lt;title&gt;页面标题&lt;/title&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> \n  <br /> &lt;h1&gt;我的第一个标题&lt;/h1&gt;\n  <br /> \n  <br /> &lt;p&gt;我的第一个段落。&lt;/p&gt;\n  <br /> \n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_intro_utf8\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', '<h1>HTML <span class=\"color_h1\">简介</span></h1><p>&nbsp; 用HTML编写的超文本文档称为HTML文档，它能独立于各种操作系统平台（如UNIX，WINDOWS等）。通过HTML，将所需要表达的信息按某种规则写成HTML文件，通过专用的浏览器来识别，并将这些HTML一种能够被广泛理解的语言，“翻译“成可以识别的信息，即所有的计算机都能够理解的一种用于出版的“母语”。就是我们现在所见到的网页。 \n &nbsp; 自1990年以来HTML就一直被用作ＷＷＷ（是World Wide Web的缩写，也可简写WEB、中文叫做万维网)的信息表示语言，用于描述Homepage的格式设计和它与WWW上其它Homepage 的连结信息。使用HTML语言描述的文件需要通过WWW浏览器显示出效果。\n &nbsp;</p><p>&nbsp;HTML( 超文件标记语言 ) 是一种建立网页文件的语言，透过标记式的指令(Tag)，将影像、声音、图片、文字、动画、影视等内容显示出来。因为它可以从一个文件跳转到另一个文件，与世界各地主机的文件连接。 超文本传输协议规定了浏览器在运行HTML文档时所遵循的规则和进行的操作.HTTP协议的制定使浏览器在运行超文本时有了统一的规则和标准.</p><hr/><h2 style=\"white-space: normal;\">什么是HTML?</h2><p style=\"white-space: normal;\">HTML 是用来描述网页的一种语言。</p><ul class=\" list-paddingleft-2\" style=\"width: 744.797px; white-space: normal;\"><li><p>HTML 指的是超文本标记语言:&nbsp;<strong>H</strong>yper<strong>T</strong>ext&nbsp;<strong>M</strong>arkup&nbsp;<strong>L</strong>anguage</p></li><li><p>HTML 不是一种编程语言，而是一种<strong>标记</strong>语言</p></li><li><p>标记语言是一套<strong>标记标签</strong>&nbsp;(markup tag)</p></li><li><p>HTML 使用标记标签来<strong>描述</strong>网页</p></li><li><p>HTML 文档包含了HTML<strong>&nbsp;标签</strong>及<strong>文本</strong>内容</p></li><li><p>HTML文档也叫做<strong>&nbsp;web 页面</strong></p></li></ul><h2>超文本标记</h2><p>1) 超文本标记用带尖括号“＜”和“＞”表示。\n &nbsp;&nbsp;</p><p>2)超文本标记一般是成对出现，用带斜杠的元素表示结束。如：＜html＞和＜/html＞。但有些标记只有起始标记而没有结束标记，如：＜BR＞，它在网页中表示引入一个换行动作，还有些标记可以省略，如：段落的结束标记＜/P＞就可以省略。\n &nbsp;&nbsp;</p><p>3)超文本标记忽略大小写，如：＜HTML＞和＜html＞是等效的，但其中实体内容的名称是要区分大小写，如&quot;&amp;NAME&quot;和&quot;&amp;name&quot;是表示不同的实体。\n &nbsp;&nbsp;</p><p>4)一个标记元素可写在多行，参数位置不受限制。</p><h2 class=\"example\">HTML 实例</h2><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;&nbsp;&nbsp;\n&lt;html&gt;&nbsp;&nbsp;\n&lt;head&gt;&nbsp;&nbsp;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&nbsp;&nbsp;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;&nbsp;&nbsp;\n&lt;/head&gt;&nbsp;&nbsp;\n&lt;body&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;这里是标题的内容&lt;/h1&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;这里是段落的内容&lt;/p&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&gt;这是一个链接,点击试试！&lt;/a&gt;\n&lt;/body&gt;&nbsp;&nbsp;\n&lt;/html&gt;</pre><p><br/> <a href=\"/DIY/1.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><h2>实例解析</h2><ul class=\" list-paddingleft-2\"><li><p>DOCTYPE 声明了文档类型</p></li><li><p>位于标签 &lt;html&gt; 与 &lt;/html&gt; 描述了文档类型</p></li><li><p>位于标签 &lt;body&gt; 与 &lt;/body&gt; 为可视化网页内容</p></li><li><p>位于标签 &lt;h1&gt; 与 &lt;/h1&gt; 作为一个标题使用</p></li><li><p>位于标签 &lt;p&gt; 与 &lt;/p&gt; 作为一个段落显示</p></li></ul><table class=\"lamp\"><tbody><tr class=\"firstRow\"><th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\"/></th><td>&lt;!DOCTYPE html&gt; 在HTML5中也是描述了文档类型。</td></tr></tbody></table><p><br/></p><hr/><h2>HTML 标签</h2><p>HTML标签是HTML语言中最基本的单位，HTML标签是HTML（标准通用标记语言下的一个应用）最重要的组成部分。HTML标签的大小写无关的，例如“主体”跟表示的意思是一样的，推荐使用小写。</p><p>HTML 标记标签通常被称为 HTML 标签 (HTML tag)。</p><ul class=\" list-paddingleft-2\"><li><p>HTML 标签是由<em>尖括号</em>包围的关键词，比如 &lt;html&gt;</p></li><li><p>HTML 标签通常是<em>成对出现</em>的，比如 &lt;b&gt; 和 &lt;/b&gt;</p></li><li><p>标签对中的第一个标签是<em>开始标签</em>，第二个标签是<em>结束标签</em></p></li><li><p>开始和结束标签也被称为<em>开放标签</em>和<em>闭合标签</em></p></li></ul><p><span style=\"color:#98bf21\">&lt;标签&gt;</span>内容 <span style=\"color:#98bf21\">&lt;/标签&gt;</span></p><p><br/></p><hr/><h2>HTML 元素</h2><p>HTML（标准通用标记语言下的一个应用） 元素指的是从开始标签（start tag）到结束标签（end tag）的所有代码。</p><p>严格来讲, 一个 HTML 元素包含了开始标签与结束标签，如下实例:</p><p>HTML 元素:</p><p><span style=\"color:#98bf21\">&lt;p&gt;</span>霹雳猿教程&nbsp;<span style=\"color:#98bf21\">&lt;/p&gt;</span></p><p><br/></p><hr/><h2>Web 浏览器</h2><p>浏览器是个显示网页伺服器或档案系统内的HTML文件（标准通用标记语言下的一个应用），并让用户与此些文件互动的一种软件。</p><p>个人电脑上常见的网页浏览器包括微软的Internet Explorer、Mozilla的Firefox、Opera和Safari。</p><p>浏览器是最经常使用到的客户端程序。如下图：</p><p><img src=\"http://www.runoob.com/wp-content/uploads/2013/06/html-first.png\"/></p><hr/><h2>HTML 网页结果</h2><p>下面是一个可视化的HTML页面结构：</p><p>&lt;html&gt;</p><p>&lt;head&gt;</p><p>&lt;title&gt;页面标题&lt;/title&gt;</p><p>&lt;/head&gt;</p><p>&lt;body&gt;</p><p>&lt;h1&gt;这是一个标题&lt;/h1&gt;</p><p>&lt;p&gt;这是一个段落。&lt;/p&gt;</p><p>&lt;p&gt;这是另外一个段落。&lt;/p&gt;</p><p>&lt;/body&gt;</p><p>&lt;/html&gt;</p><p><br/></p><table class=\"lamp\"><tbody><tr class=\"firstRow\"><th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\"/></th><td>只有 &lt;body&gt; 区域 (白色部分) 才会在浏览器中显示。</td></tr></tbody></table><p><br/></p><hr/><h2>HTML版本</h2><p>从初期的网络诞生后，已经出现了许多HTML版本:</p><table class=\"reference notranslate\"><tbody><tr class=\"firstRow\"><th>版本</th><th>发布时间</th></tr><tr><td>HTML</td><td>1991</td></tr><tr><td>HTML+</td><td>1993</td></tr><tr><td>HTML 2.0</td><td>1995</td></tr><tr><td>HTML 3.2</td><td>1997</td></tr><tr><td>HTML 4.01</td><td>1999</td></tr><tr><td>XHTML 1.0</td><td>2000</td></tr><tr><td>HTML5</td><td>2012</td></tr><tr><td>XHTML5</td><td>2013</td></tr></tbody></table><p><br/></p><hr/><h2>&lt;!DOCTYPE&gt; 声明</h2><p>&lt;!DOCTYPE&gt;声明有助于浏览器中正确显示网页。</p><p>&lt;!DOCTYPE html&gt; 由于不是HTML标签，它只是一条浏览器指令，告诉浏览器编写页面所用的标记的版本，所以不需要成对出现。&lt;!DOCTYPE html&gt; 在任何版本中都对大小写不敏感，不过习惯上写做“&lt;!DOCTYPE html&gt;”，当然为了符合W3C标准，写做“&lt;!doctype html&gt;”也是可以的。<br/></p><hr/><h2>通用声明</h2><h3>HTML5</h3><p>&lt;!DOCTYPE html&gt;</p><h3>HTML 4.01</h3><p>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &nbsp;<br/> &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</p><h3>XHTML 1.0</h3><p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &nbsp;<br/> &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</p><p>查看完整网页声明类型 <a href=\"http://www.runoob.com/tags/tag-doctype.html\">DOCTYPE 参考手册</a>。</p><hr/><h2>中文编码</h2><p>目前在大部分浏览器中，直接输出中文会出现中文乱码的情况，这时候我们就需要在头部将字符声明为 UTF-8。</p><h2 class=\"example\">HTML 实例</h2><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;&nbsp;&nbsp;\n&lt;html&gt;&nbsp;&nbsp;\n&lt;head&gt;&nbsp;&nbsp;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;&nbsp;&nbsp;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;&nbsp;&nbsp;\n&lt;/head&gt;&nbsp;&nbsp;\n&lt;body&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;这里是标题的内容&lt;/h1&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;p&gt;这里是段落的内容&lt;/p&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&gt;这是一个链接,点击试试！&lt;/a&gt;\n&lt;/body&gt;&nbsp;&nbsp;\n&lt;/html&gt;</pre><p style=\"white-space: normal;\"><br/><a href=\"http://localhost:42742/DIY/1.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p><br/></p>', 'HTML 简介|HTML 实例|实例解析|什么是HTML?|HTML 标签|HTML 元素|Web 浏览器|HTML 网页结果|HTML版本|<!DOCTYPE> 声明|通用声明|中文编码|HTML 实例|');
INSERT INTO `schoolcontent` VALUES ('3', '3', '<h1>HTML <span class=\"color_h1\">编辑器</span></h1> \n<style>\r\nimg {\r\n    width: 70%;\r\n}\r\n</style> \n<hr />\n<h2>HTML 编辑器推荐</h2> \n<p>可以使用专业的 HTML 编辑器来编辑 HTML，菜鸟教程为大家推荐几款常用的编辑器：</p> \n<ul> \n <li>Notepad++：<a href=\"https://notepad-plus-plus.org/\" target=\"_blank\">https://notepad-plus-plus.org/</a></li> \n <li>Sublime Text：<a href=\"http://www.sublimetext.com/\" target=\"_blank\">http://www.sublimetext.com/</a></li> \n <li>HBuilder：<a href=\"http://www.dcloud.io/\" target=\"_blank\">http://www.dcloud.io/</a></li> \n</ul> \n<p>你可以从以上软件的官网中下载对应的软件，按步骤安装即可。</p> \n<p>接下来我们将为大家演示如何使用Notepad++工具来创建 HTML 文件，其他两个工具操作步骤类似。 </p> \n<hr />\n<h2>Notepad++</h2> \n<p>Notepad++是 Windows操作系统下的一套文本编辑器(软件版权许可证: GPL)，有完整的中文化接口及支持多国语言编写的功能(UTF8技术)。</p> \n<h3>步骤 1: 新建 HTML 文件</h3> \n<p>在 Notepad++ 安装完成后，选择&quot; 文件(F)-&gt;新建(N) &quot;，在新建的文件中输入以下代码：</p> \n<pre>\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=&quot;utf-8&quot;&gt;\r\n&lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n\r\n&lt;h1&gt;我的第一个标题&lt;/h1&gt;\r\n\r\n&lt;p&gt;我的第一个段落。&lt;/p&gt;\r\n\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre>\n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/06/html.jpg\" /></p> \n<h3>步骤 2: 另存为 HTML 文件</h3> \n<p>然后选择&quot; 文件(F)-&gt;另存为(A) &quot;，文件名为 runoob.html:</p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/06/html2.jpg\" /></p> \n<p>当您保存 HTML 文件时，既可以使用 .htm 也可以使用 .html 扩展名。两者没有区别，完全根据您的喜好。</p> \n<p>在一个容易记忆的文件夹中保存这个文件，比如 <strong>runoob</strong></p> \n<h3>步骤 3: 在浏览器中运行这个 HTML 文件</h3> \n<p>启动您的浏览器，然后选择&quot;文件&quot;菜单的&quot;打开文件&quot;命令，或者直接在文件夹中双击您的 HTML 文件, </p> \n<p>运行显示结果类似如下:</p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/06/html3.jpg\" /></p> \n<blockquote> \n <p> Notepad++ 和 Sublime Text 还可以配合 Emmet 插件来提高编码速度。 </p>\n <p>Emmet 官网：<a href=\"http://emmet.io/\" target=\"_blank\">http://emmet.io/</a></p> \n</blockquote>', null, 'HTML 编辑器|HTML 编辑器推荐|Notepad++|');
INSERT INTO `schoolcontent` VALUES ('4', '4', '<h1>HTML 基础- <span class=\"color_h1\">4个实例</span></h1> \n<hr />\n<p class=\"intro\">不要担心本章中您还没有学过的例子，</p> \n<p class=\"intro\">您将在下面的章节中学到它们。</p> \n<hr />\n<h2>HTML 标题</h2> \n<p>HTML 标题（Heading）是通过&lt;h1&gt; - &lt;h6&gt; 标签来定义的.</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;h1&gt;这是一个标题&lt;/h1&gt;\n  <br /> &lt;h2&gt;这是一个标题&lt;/h2&gt;\n  <br /> &lt;h3&gt;这是一个标题&lt;/h3&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_headers\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>HTML 段落</h2> \n<p>HTML 段落是通过标签 &lt;p&gt; 来定义的.</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;p&gt;这是一个段落。&lt;/p&gt;\n  <br /> &lt;p&gt;这是另外一个段落。&lt;/p&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>HTML 链接</h2> \n<p>HTML 链接是通过标签 &lt;a&gt; 来定义的.</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;a href=&quot;http://www.runoob.com&quot;&gt;这是一个链接&lt;/a&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_basic_link\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>提示:</b>在 href 属性中指定链接的地址。</p> \n<p>(您将在本教程稍后的章节中学习更多有关属性的知识).</p> \n<hr />\n<h2>HTML 图像</h2> \n<p>HTML 图像是通过标签 &lt;img&gt; 来定义的.</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;img src=&quot;w3cschool.png&quot; width=&quot;104&quot; height=&quot;142&quot;&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_basic_img\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意：</b> 图像的名称和尺寸是以属性的形式提供的。</p> \n<br />', '<h1>HTML 基础</h1><hr/><p class=\"intro\">本章主要通过实例简单介绍下HTML中常用到的标签，这些标签在后续的章节中也将详细讲到。</p><hr/><h2>HTML 标题</h2><p>W3C指出h1-h6标签可定义标题。h1定义最大的标题。h6定义最小的标题。</p><p>h1，h2，h3，h4，h5，h6，作为标题标签，并且依据重要性递减。我认为遵循这样的原则是很有必要的，它能让页面的层级关系更清楚，让搜索引擎更好地抓取和分析出页面的主题内容等等。</p><p>h1、h2、h3、h4、h5及h6元素的作用是显示标题（这里的h是“标题（heading）”的意思）。其中h1是一级标题，字体最大；h2是二级标题，字体比一级标题略小；而h6是六级标题，它是最后一级标题，字体也最小。</p><p>为了更好的理解，请看下面的代码：</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;h1&gt;这是一个一级标题&lt;/h1&gt;&nbsp;&nbsp;\n&lt;h2&gt;这是一个子标题&lt;/h2&gt;&nbsp;&nbsp;\n&lt;h3&gt;这是一个三级标题&lt;/h3&gt;</pre><p><br/>\n <a href=\"/Home/DIY/2.html\" target=\"_blank\" title=\"在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 段落</h2><p>简单地对文字分段常用&lt;p&gt;&lt;/p&gt;标签，即段落的开始用&lt;p&gt;，段落的结束用&lt;/p&gt;标签。某些网页分段时省略了&lt;/p&gt;，即作为单标签使用，因为下一段开始的&lt;p&gt;标签就意味上一段的结束。&nbsp;</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;这是一个段落。&lt;/p&gt;&nbsp;&nbsp;\n&lt;p&gt;这是另外一个段落。&lt;/p&gt;</pre><p><br/>\n <a href=\"/Home/DIY/3.html\" target=\"_blank\" title=\"在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 链接</h2><p>超级链接的标签是&lt;a&gt;&lt;/a&gt;，给文字添加超级链接类似于其他修饰标签。添加了链接后的文字有其特殊的样式，以和其他文字区分，默认链接样式为蓝色文字，有下划线。超级链接是跳转到另一个页面的，&lt;a&gt;&lt;/a&gt;标签有一个href属性负责指定新页面的地址。href指定的地址一般使用相对地址。</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&gt;这是一个链接&lt;/a&gt;</pre><p><br/>\n <a href=\"/Home/DIY/4.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a></p><p>(您将在本教程稍后的章节中学习更多有关属性的知识).</p><hr/><h2>HTML 图像</h2><p>HTML 图像是通过标签 &lt;img&gt; 来定义的.img 是 Image（图像）的缩写。src 属性用来指定图像的路径。</p><h2 class=\"example\">实例</h2><p>&lt;img src=&quot;w3cschool.png&quot; width=&quot;104&quot; height=&quot;142&quot;&gt;</p><p><br/>\n <a href=\"/Home/DIY/5.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><strong>注意：</strong> 图像的名称和尺寸是以属性的形式提供的。</p><p><br/></p>', 'HTML 基础');
INSERT INTO `schoolcontent` VALUES ('5', '5', '<h1>HTML <span class=\"color_h1\">元素</span></h1> \n<hr />\n<p class=\"intro\">HTML 文档由 HTML 元素定义。</p> \n<hr />\n<h2>HTML 元素</h2> \n<phtml 元素指的是从开始标签（start=\"\" tag）到结束标签（end=\"\" tag）的所有代码。<=\"\"> \n <table class=\"reference\" style=\"font-size:110%\"> \n  <tbody>\n   <tr> \n    <th width=\"34%\">开始标签 *</th> \n    <th width=\"34%\">元素内容</th> \n    <th width=\"34%\">结束标签 *</th> \n   </tr> \n   <tr> \n    <td>&lt;p&gt;</td> \n    <td>这是一个段落</td> \n    <td>&lt;/p&gt;</td> \n   </tr> \n   <tr> \n    <td>&lt;a href=&quot;default.htm&quot;&gt;</td> \n    <td>这是一个链接</td> \n    <td>&lt;/a&gt;</td> \n   </tr> \n   <tr> \n    <td>&lt;br&gt;</td> \n    <td>&nbsp;</td> \n    <td>&nbsp;</td> \n   </tr> \n  </tbody>\n </table> \n <p><b>*</b>开始标签常被称为<b>起始标签（opening tag）</b>，结束标签常称为<b>闭合标签（closing tag）</b>。</p> \n <hr />\n <h2>HTML 元素语法</h2> \n <ul> \n  <li>HTML 元素以<b>开始标签</b>起始</li> \n  <li>HTML 元素以<b>结束标签</b>终止</li> \n  <li><b>元素的内容</b>是开始标签与结束标签之间的内容</li> \n  <li>某些 HTML 元素具有<b>空内容（empty content）</b></li> \n  <li>空元素<b>在开始标签中进行关闭</b>（以开始标签的结束而结束）</li> \n  <li>大多数 HTML 元素可拥有<b>属性</b></li> \n </ul> \n <p><b>注释:</b> 您将在本教程的下一章中学习更多有关属性的内容。</p> \n <hr />\n <h2>嵌套的 HTML 元素</h2> \n <p大多数 html=\"\" 元素可以嵌套（可以包含其他=\"\" 元素）。<=\"\"> \n  <p>HTML 文档由嵌套的 HTML 元素构成。</p> \n  <hr />\n  <h2>HTML 文档实例</h2> \n  <div class=\"code\">\n   <div>\n     &lt;!DOCTYPE html&gt;\n    <br /> &lt;html&gt;\n    <br />\n    <br /> &lt;body&gt;\n    <br /> &lt;p&gt;这是第一个段落。&lt;/p&gt;\n    <br /> &lt;/body&gt;\n    <br />\n    <br /> &lt;/html&gt; \n   </div>\n  </div> \n  <p>以上实例包含了三个 HTML 元素。</p> \n  <hr />\n  <h2>HTML 实例解析</h2> \n  <p><b>&lt;p&gt; 元素:</b></p> \n  <div class=\"code notranslate\">\n   <div>\n     &lt;p&gt;这是第一个段落。&lt;/p&gt;\n   </div>\n  </div> \n  <p>这个 &lt;p&gt; 元素定义了 HTML 文档中的一个段落。<br /> 这个元素拥有一个开始标签 &lt;p&gt; 以及一个结束标签 &lt;/p&gt;.<br /> 元素内容是: This is my first paragraph.</p> \n  <p><b>&lt;body&gt; 元素:</b></p> \n  <div class=\"code notranslate\">\n   <div>\n     &lt;body&gt;\n    <br /> &lt;p&gt;这是第一个段落。&lt;/p&gt;\n    <br /> &lt;/body&gt; \n   </div>\n  </div> \n  <p>The &lt;body&gt; 元素定义了 HTML 文档的主体。<br /> 这个元素拥有一个开始标签 &lt;body&gt; 以及一个结束标签 &lt;/body&gt;。<br /> 元素内容是另一个 HTML 元素（p 元素）。</p> \n  <p><b>&lt;html&gt; 元素：</b></p> \n  <div class=\"code notranslate\">\n   <div>\n     &lt;html&gt;\n    <br />\n    <br /> &lt;body&gt;\n    <br /> &lt;p&gt;这是第一个段落。&lt;/p&gt;\n    <br /> &lt;/body&gt;\n    <br />\n    <br /> &lt;/html&gt; \n   </div>\n  </div> \n  <p>The &lt;html&gt; 元素定义了整个 HTML 文档。<br /> 这个元素拥有一个开始标签 &lt;html&gt; ，以及一个结束标签 &lt;/html&gt;.<br /> 元素内容是另一个 HTML 元素（body 元素）。</p> \n  <hr />\n  <h2>不要忘记结束标签</h2> \n  <p>即使您忘记了使用结束标签，大多数浏览器也会正确地显示 HTML：</p> \n  <div class=\"code notranslate\">\n   <div>\n     &lt;p&gt;这是一个段落\n    <br /> &lt;p&gt;这是一个段落 \n   </div>\n  </div> \n  <p>以上实例在浏览器中也能正常显示，因为关闭标签是可选的。</p> \n  <p>但不要依赖这种做法。忘记使用结束标签会产生不可预料的结果或错误。</p> \n  <hr />\n  <h2>HTML 空元素</h2> \n  <p>没有内容的 HTML 元素被称为空元素。空元素是在开始标签中关闭的。</p> \n  <p>&lt;br&gt; 就是没有关闭标签的空元素（&lt;br&gt; 标签定义换行）。</p> \n  <p>在 XHTML、XML 以及未来版本的 HTML 中，所有元素都必须被关闭。</p> \n  <p>在开始标签中添加斜杠，比如 &lt;br /&gt;，是关闭空元素的正确方法，HTML、XHTML 和 XML 都接受这种方式。</p> \n  <p>即使 &lt;br&gt; 在所有浏览器中都是有效的，但使用 &lt;br /&gt; 其实是更长远的保障。</p> \n  <hr />\n  <h2>HTML 提示：使用小写标签</h2> \n  <p>HTML 标签对大小写不敏感：&lt;P&gt; 等同于 &lt;p&gt;。许多网站都使用大写的 HTML 标签。</p> \n  <p>W3CSchool 使用的是小写标签，因为万维网联盟（W3C）在 HTML 4 中<b>推荐</b>使用小写，而在未来 (X)HTML 版本中<b>强制</b>使用小写。</p> \n </p大多数>\n</phtml>', null, 'HTML 元素|HTML 元素|HTML 元素语法|嵌套的 HTML 元素|HTML 文档实例|HTML 实例解析|不要忘记结束标签|HTML 空元素|HTML 提示：使用小写标签|');
INSERT INTO `schoolcontent` VALUES ('6', '6', '<h1>HTML <span class=\"color_h1\">属性</span></h1> \n<hr />\n<p class=\"intro\">属性是 HTML 元素提供的附加信息。</p> \n<hr />\n<h2>HTML 属性</h2> \n<ul> \n <li>HTML 元素可以设置<b>属性</b></li> \n <li>属性可以在元素中添加<b>附加信息</b></li> \n <li>属性一般描述于<b>开始标签</b></li> \n <li>属性总是以名称/值对的形式出现，<b>比如：name=&quot;value&quot;</b>。</li> \n</ul> \n<hr />\n<h2>属性实例</h2> \n<p>HTML 链接由 &lt;a&gt; 标签定义。链接的地址在 <b>href 属性</b>中指定： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;a href=&quot;http://www.runoob.com&quot;&gt;这是一个链接&lt;/a&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_basic_link\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>HTML 属性常用引用属性值</h2> \n<p>属性值应该始终被包括在引号内。</p> \n<p>双引号是最常用的，不过使用单引号也没有问题。</p> \n<p><img border=\"0\" src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /><b>提示:</b> 在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：name=\'John &quot;ShotGun&quot; Nelson\'</p> \n<hr />\n<h2>HTML 提示：使用小写属性</h2> \n<p>属性和属性值对大小写不敏感。</p> \n<p>不过，万维网联盟在其 HTML 4 推荐标准中推荐小写的属性/属性值。</p> \n<p>而新版本的 (X)HTML 要求使用小写属性。</p> \n<hr />\n<h2>HTML 属性参考手册</h2> \n<p>查看完整的HTML属性列表: <a href=\"http://www.runoob.com/tags/html-reference.html\" target=\"_blank\">HTML 标签参考手册</a>。</p> \n<p>下面列出了适用于大多数 HTML 元素的属性：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"15%\">属性</th> \n   <th align=\"left\" width=\"85%\">描述</th> \n  </tr> \n  <tr> \n   <td>class</td> \n   <td>为html元素定义一个或多个类名（classname）(类名从样式文件引入)</td> \n  </tr> \n  <tr> \n   <td>id</td> \n   <td>定义元素的唯一id</td> \n  </tr> \n  <tr> \n   <td>style</td> \n   <td>规定元素的行内样式（inline style）</td> \n  </tr> \n  <tr> \n   <td>title</td> \n   <td>描述了元素的额外信息 (作为工具条使用)</td> \n  </tr> \n </tbody>\n</table> \n<p>更多标准属性说明： <a href=\"http://www.runoob.com/tags/ref-standardattributes.html\">HTML 标准属性参考手册</a>.</p> \n<br />', '<h1>HTML <span class=\"color_h1\">属性</span></h1><hr/><p class=\"intro\">属性是 HTML 元素提供的附加信息。<span style=\"color: rgb(64, 50, 38); font-family: verdana, &quot;ms song&quot;, 宋体, Arial, 微软雅黑, Helvetica, sans-serif; font-size: 14px; line-height: 24px; background-color: rgb(255, 255, 255);\">属性要在开始标签中指定，用来表示该标签的性质和特性。通常都是以“属性名=”值””的形式来表示，用空格隔开后，还可以指定多个属性。指定多个属性时不用区分顺序。</span></p><hr/><h2>HTML 属性</h2><ul class=\" list-paddingleft-2\"><li><p>HTML 元素可以设置<strong>属性</strong></p></li><li><p>属性可以在元素中添加<strong>附加信息</strong></p></li><li><p>属性一般描述于<strong>开始标签</strong></p></li><li><p>属性总是以名称/值对的形式出现，<strong>比如：name=&quot;value&quot;</strong>。</p></li><li><p><span style=\"color: rgb(64, 50, 38); font-family: sans-serif, &quot;trebuchet ms&quot;, &quot;lucida grande&quot;, &quot;lucida sans unicode&quot;, arial, helvetica, sans-serif; font-size: 14.4px; line-height: 24px; background-color: rgb(255, 255, 255);\">属性应写在元素的首标签上。具体写法是：属性名称（attribute name）后紧跟一个等号（“=”），后面写上用双引号括起来的属性值（attribute value）。对于style属性的值，可以用分号（“;”）来分隔多个样式指令。这个后面会介绍。</span><br/></p></li></ul><hr/><h2>属性实例</h2><p>以下实例利用body的bgcolor属性设置页面的背景色</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;body&nbsp;bgcolor=&quot;red&quot;&gt;~&lt;/body&gt;</pre><p><br/>\n <a href=\"/Home/DIY/6.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 属性常用引用属性值</h2><p>属性值应该始终被包括在引号内。</p><p>双引号是最常用的，不过使用单引号也没有问题。</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/><strong>提示:</strong> 在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：name=&#39;John &quot;ShotGun&quot; Nelson&#39;</p><hr/><h2>HTML 提示：使用小写属性</h2><p>属性和属性值对大小写不敏感。</p><p>不过，万维网联盟在其 HTML 4 推荐标准中推荐小写的属性/属性值。</p><p>而新版本的 (X)HTML 要求使用小写属性。</p><p><br/></p>', 'HTML 属性|HTML 属性|属性实例|实例|HTML 属性常用引用属性值|HTML 提示：使用小写属性|HTML 属性参考手册|');
INSERT INTO `schoolcontent` VALUES ('7', '7', '<h1>HTML <span class=\"color_h1\">标题</span></h1> \n<hr />\n<p class=\"intro\">在 HTML 文档中，标题很重要。</p> \n<hr />\n<h2>HTML 标题</h2> \n<p>标题（Heading）是通过 &lt;h1&gt; - &lt;h6&gt; 标签进行定义的.</p> \n<p>&lt;h1&gt; 定义最大的标题。 &lt;h6&gt; 定义最小的标题。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;h1&gt;这是一个标题。&lt;/h1&gt;\n  <br /> &lt;h2&gt;这是一个标题。&lt;/h2&gt;\n  <br /> &lt;h3&gt;这是一个标题。&lt;/h3&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_headers\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注释:</b> 浏览器会自动地在标题的前后添加空行。</p> \n<hr />\n<h2>标题很重要</h2> \n<p> 请确保将 HTML 标题 标签只用于标题。不要仅仅是为了生成<b>粗体</b>或<b>大号</b>的文本而使用标题。 </p> \n<p>搜索引擎使用标题为您的网页的结构和内容编制索引。</p> \n<p>因为用户可以通过标题来快速浏览您的网页，所以用标题来呈现文档结构是很重要的。</p> \n<p>应该将 h1 用作主标题（最重要的），其后是 h2（次重要的），再其次是 h3，以此类推。</p> \n<hr />\n<h2>HTML 水平线</h2> \n<p>&lt;hr&gt; 标签在 HTML 页面中创建水平线。<br /> <br /> hr 元素可用于分隔内容。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;p&gt;这是一个段落。&lt;/p&gt;\n  <br /> &lt;hr&gt;\n  <br />&lt;p&gt;这是一个段落。&lt;/p&gt;\n  <br /> &lt;hr&gt;\n  <br />&lt;p&gt;这是一个段落。&lt;/p&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_hr\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>HTML 注释</h2> \n<p>可以将注释插入 HTML 代码中，这样可以提高其可读性，使代码更易被人理解。浏览器会忽略注释，也不会显示它们。</p> \n<p>注释写法如下:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!-- 这是一个注释 --&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_comment\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注释:</b> 开始括号之后（左边的括号）需要紧跟一个叹号，结束括号之前（右边的括号）不需要，合理地使用注释可以对未来的代码编辑工作产生帮助。。</p> \n<hr />\n<h2>HTML 提示 - 如何查看源代码</h2> \n<p>你是否看过一些网页然后惊叹它是如何实现的的。</p> \n<p>如果您想找到其中的奥秘，只需要单击右键，然后选择&quot;查看源文件&quot;（IE）或&quot;查看页面源代码&quot;（Firefox），其他浏览器的做法也是类似的。这么做会打开一个包含页面 HTML 代码的窗口。</p> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>本站实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_headers\">标题</a><br /> 如何在 HTML 文档中显示标题。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_comment\">隐藏注释</a><br /> 如何在 HTML 源代码中插入注释。 </p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_hr\">水平线</a><br /> 如何插入水平线。</p> \n<hr />\n<h2>HTML 标签参考手册</h2> \n<p>W3CSchool 的标签参考手册提供了有关这些标题及其属性的更多信息。</p> \n<p>您将在本教程下面的章节中学到更多有关 HTML 标签和属性的知识。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-html.html\">&lt;html&gt;</a></td> \n   <td>定义 HTML 文档</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-body.html\">&lt;body&gt;</a></td> \n   <td> 定义文档的主体</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-hn.html\">&lt;h1&gt; - &lt;h6&gt;</a></td> \n   <td> 定义 HTML 标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-hr.html\">&lt;hr&gt;</a></td> \n   <td> 定义水平线</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-comment.html\">&lt;!--...--&gt;</a></td> \n   <td>定义注释</td> \n  </tr> \n </tbody>\n</table>', '<h1>HTML <span class=\"color_h1\">标题</span></h1><hr/><p class=\"intro\">在 HTML 文档中，标题很重要。</p><hr/><h2>HTML 标题</h2><p>标题（Heading）是通过 &lt;h1&gt; - &lt;h6&gt; 标签进行定义的.</p><p>&lt;h1&gt; 定义最大的标题， &lt;h6&gt; 定义最小的标题，一般一个页面只有一个&lt;h1&gt;标签。</p><p><span style=\"font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; line-height: 28px; text-indent: 28px;\">h标签是成对出现的,以&lt;h&gt;开始,以&lt;/h&gt;结束。</span></p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&nbsp;&nbsp;&nbsp;&nbsp;&lt;h1&gt;这是一个一级标题&lt;/h1&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h2&gt;这是一个子标题&lt;/h2&gt;&nbsp;&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;h3&gt;这是一个三级标题&lt;/h3&gt;</pre><p><br/>\n <a href=\"/DIY/2.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><strong>注释:</strong> 浏览器会自动地在标题的前后添加空行。</p><hr/><h2>标题很重要</h2><p>一般来说H1标签主要用于修饰网页的主标题和文章标题的，&lt;h2&gt;主要用于修饰大段落的标题，&lt;h3&gt;要用于修饰段落的小节标 题，&lt;h4&gt;-&lt;h6&gt;标签基本很少用到。　　</p><p><br/></p><p>H1一级标题</p><p>代表重中之重，它的地位在页面中跟关键字的地位一样重要。一般运用于网站标题或者头条新闻上，一些大型网站也运用在Logo上，虽然H1代码可以写多个，但实际语义上有唯一性，H1在一个页面里面最好只出现1次或者没有。</p><p><br/></p><p>H2二级标题</p><p>主要出现在页面的主体内容的文章标题和栏目标题上，三列结构一般在中间，二列结构一般在重要的一边。可与H3搭配使用。</p><p><br/></p><p>H3三级标题</p><p>一般主打页面的边侧栏。H4是它的辅助，出现频率不高。</p><p><br/></p><p>页面层级关系不能太深，所以H4,H5,H6一般出现较少。　　</p><hr/><h2>HTML 水平线</h2><p>在html文档里面大家经常遇到想要用水平线来隔分开行与行之间或段与段之间的内容，</p><p>那么如何才能达到这个效果呢？</p><p><br/> hr 元素可用于分隔内容。<br/></p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;这是一个段落。&lt;/p&gt;&nbsp;&nbsp;\n&lt;hr&gt;&nbsp;&nbsp;\n&lt;p&gt;这是一个段落。&lt;/p&gt;&nbsp;&nbsp;\n&lt;hr&gt;&nbsp;&nbsp;\n&lt;p&gt;这是一个段落。&lt;/p&gt;</pre><p><br/>\n <a href=\"/Home/DIY/7.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 注释</h2><p>我们经常要在一些代码旁做一些HTML注释,这样做的好处很多,比如:方便查找,方便比对,方便项目组里的其它程序员了解你的代码,而且可以方便以后你对自己代码的理解与修改等等.</p><p>注释写法如下:</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;!--&nbsp;这是一个注释&nbsp;--&gt;</pre><p><br/>\n <a href=\"/Home/DIY/8.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><strong>注释:</strong> HTML 注释会被浏览器忽略，而HTML 注释直接在网站源代码内部编写，也不会显示在前端。如上图，，绿色部分都是注释，不会被显示出来，通过上面绿色文字，我们可以知道这段代码是什么意思，以及代码开始结束。</p><h2>如何查看源代码</h2><p>好多初学程序员或者网页设计员或者是站长等经常回模仿别人的网页，看别人网页是怎么写的，这里呢就需要查看别人网页的源代码。不同浏览器的查看方式略有不同，一般在页面上点击鼠标右键，列出的菜单中会有查看源码的选项。</p><p><br/>\n </p>', 'HTML 标题|水平线|注释');
INSERT INTO `schoolcontent` VALUES ('8', '8', '<h1>HTML <span class=\"color_h1\">段落</span></h1> \n<hr />\n<p class=\"intro\">HTML 可以将文档分割为若干段落。</p> \n<hr />\n<h2>HTML 段落</h2> \n<p>段落是通过 &lt;p&gt; 标签定义的。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;p&gt;This is a paragraph &lt;/p&gt;\n  <br /> &lt;p&gt;This is another paragraph&lt;/p&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意：</b>浏览器会自动地在段落的前后添加空行。（&lt;/p&gt; 是块级元素）</p> \n<hr />\n<h2>不要忘记结束标签</h2> \n<p>即使忘了使用结束标签，大多数浏览器也会正确地将 HTML 显示出来：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;p&gt;This is a paragraph\n  <br /> &lt;p&gt;This is another paragraph \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs0\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>上面的例子在大多数浏览器中都没问题，但不要依赖这种做法。忘记使用结束标签会产生意想不到的结果和错误。</p> \n<p><b>注释:</b> 在未来的 HTML 版本中，不允许省略结束标签。</p> \n<hr />\n<h2>HTML 折行</h2> \n<p>如果您希望在不产生一个新段落的情况下进行换行（新行），请使用 &lt;br /&gt; 标签：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;p&gt;This is&lt;br&gt;a para&lt;br&gt;graph with line breaks&lt;/p&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>&lt;br /&gt; 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。</p> \n<hr /> \n<h2>HTML 输出- 使用提醒</h2> \n<p>我们无法确定 HTML 被显示的确切效果。屏幕的大小，以及对窗口的调整都可能导致不同的结果。</p> \n<p>对于 HTML，您无法通过在 HTML 代码中添加额外的空格或换行来改变输出的效果。</p> \n<p>当显示页面时，浏览器会移除源代码中多余的空格和空行。所有连续的空格或空行都会被算作一个空格。需要注意的是，HTML 代码中的所有连续的空行（换行）也被显示为一个空格。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=tryhtml_poem\" target=\"_blank\">尝试一下</a></p> \n<p>（这个例子演示了一些 HTML 格式化方面的问题）</p> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>本站实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs1\">HTML 段落</a><br /> 如何在浏览器中显示 HTML 段落。 </p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs\">换行</a><br /> 在 HTML 文档中使用换行。 </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_poem\">在 HTML 代码中的排版一首唐诗</a><br /> 浏览器在显示 HTML 时，会省略源代码中多余的空白字符（空格或回车等）。 </p> \n<h2>更多实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs2\">更多段落</a><br /> 段落的默认行为。 </p> \n<hr />\n<h2>HTML 标签参考手册</h2> \n<p>W3CSchool 的标签参考手册提供了有关 HTML 元素及其属性的更多信息。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-p.html\">&lt;p&gt;</a></td> \n   <td>定义一个段落</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-br.html\">&lt;br&gt;</a></td> \n   <td> 插入单个折行（换行）</td> \n  </tr> \n </tbody>\n</table>', '<h1>HTML <span class=\"color_h1\">段落</span></h1><hr/><p class=\"intro\">网页的外观是否美观，很大程度上取决于其排版。在页面中出现大段的文字，通常采用分段进行规划，对换行也有极其严格的划分。本节从段落的细节设置入手，使读者学习后能利用标签自如地处理大段的文字。&nbsp;</p><hr/><h2>HTML 段落</h2><p>浏览器解析HTML文档会忽略空白符，所以要想保证正常的分段换行的话，必须指出哪些文字是属于同一段落的，这就用到了标签&lt;p&gt;。&lt;p&gt;标签式段落标记,浏览器会自动地在段落的前后添加空行。</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;This&nbsp;is&nbsp;a&nbsp;paragraph&nbsp;&lt;/p&gt;&nbsp;&nbsp;\n&lt;p&gt;This&nbsp;is&nbsp;another&nbsp;paragraph&lt;/p&gt;</pre><p><br/> <a href=\"/DIY/3.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p><strong>注意：</strong>浏览器会自动地在段落的前后添加空行。（&lt;/p&gt; 是块级元素）</p><hr/><h2>不要省略结尾标签</h2><p>虽然 &lt;/p&gt; 可以省略，但是为了让人清楚地看出 &lt;p&gt; 在哪里结束，还是不要省略比较好。如果省略 &lt;/p&gt; 的话，在使用样式表的时候有些浏览器会出bug，使网页看上去很奇怪。</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;这个段落没有结尾标签\n&lt;p&gt;这个段落也没有结尾标签</pre><p><br/> <a href=\"/Home/DIY/9.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p><strong>注释:</strong> 在未来的 HTML 版本中，不允许省略结束标签。</p><hr/><h2>换行</h2><p>br 是换行（Break）的缩写。文本会在这个标签的地方换行。在HTML代码里直接换行的话，按浏览器的不同可能显示为一个空格，或者被忽视。在浏览器里正确地换行要使用 &lt;br&gt; 。如果您希望在不产生一个新段落的情况下进行换行（新行），请使用 &lt;br /&gt; 标签：</p><h2 class=\"example\">实例</h2><p>&lt;p&gt;This is&lt;br&gt;a para&lt;br&gt;graph with line breaks&lt;/p&gt;</p><p><br/> <a href=\"/Home/DIY/10.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p>&lt;br /&gt; 元素是一个空的 HTML 元素。由于关闭标签没有任何意义，因此它没有结束标签。</p><hr/><h2>HTML 输出- 使用提醒</h2><p>我们无法确定 HTML 被显示的确切效果。屏幕的大小，以及对窗口的调整都可能导致不同的结果。</p><p>对于 HTML，您无法通过在 HTML 代码中添加额外的空格或换行来改变输出的效果。</p><p>当显示页面时，浏览器会移除源代码中多余的空格和空行。所有连续的空格或空行都会被算作一个空格。需要注意的是，HTML 代码中的所有连续的空行（换行）也被显示为一个空格。</p><p><a href=\"http://www.runoob.com/try/try.php?filename=tryhtml_poem\" target=\"_blank\">尝试一下</a></p><p>（这个例子演示了一些 HTML 格式化方面的问题）</p><hr/><h2>HTML设置段落文字的对齐方式</h2><p>段落中文字的默认对齐方式是左对齐。不过，有时候需要设置为不同的对齐方式，比如：居中对齐、右对齐等。使用</p><p>标签的align属性可以设置段落文字的各种对齐方式。</p><h2>实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;段落默认对齐方式：左对齐方式。&lt;/p&gt;\n&lt;p&nbsp;align=&quot;left&quot;&gt;段落左对齐方式。使用左对齐方式时都使用默认对齐方式。&lt;/p&gt;\n&lt;p&nbsp;align=&quot;center&quot;&gt;段落居中对齐方式。&lt;/p&gt;\n&lt;p&nbsp;align=&quot;right&quot;&gt;段落右对齐方式。&lt;/p&gt;</pre><p><a href=\"/Home/DIY/11.html\" target=\"_blank\" title=\"在线测试\">在线测试</a><br/></p>', 'HTML 段落');
INSERT INTO `schoolcontent` VALUES ('9', '9', '<h1>HTML <span class=\"color_h1\">文本格式化</span></h1> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">HTML 文本格式化</h2> \n <div class=\"example_result notranslate\" style=\"font-size:120%;\"> \n  <b>加粗文本</b>\n  <br />\n  <br /> \n  <i>斜体文本</i>\n  <br />\n  <br /> \n  <code>电脑自动输出</code>\n  <br />\n  <br /> 这是\n  <sub> 下标</sub> 和\n  <sup> 上标</sup>\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_formatting\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr />\n<h2>HTML 格式化标签</h2> \n<p>HTML 使用标签&lt;b&gt; 与&lt;i&gt; 对输出的文本进行格式, 如：<b>粗体</b> or <i>斜体</i> </p> \n<p>这些HTML标签被称为格式化标签（请查看底部完整标签参考手册）。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img border=\"0\" src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"Remark\" /></th> \n   <td> <b>通常标签 &lt;strong&gt; 替换加粗标签 &lt;b&gt; 来使用, &lt;em&gt; 替换 &lt;i&gt;标签使用。</b><br /><br /> 然而，这些标签的含义是不同的：<br /><br /> &lt;b&gt; 与&lt;i&gt; 定义粗体或斜体文本。<br /><br /> &lt;strong&gt; 或者 &lt;em&gt;意味着你要呈现的文本是重要的，所以要突出显示。现今所有主要浏览器都能渲染各种效果的字体。不过，未来浏览器可能会支持更好的渲染效果。</td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_formattingch\">文本格式化</a><br /> 此例演示如何在一个 HTML 文件中对文本进行格式化 </p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_pre\">预格式文本</a><br /> 此例演示如何使用 pre 标签对空行和空格进行控制。 </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_computeroutput\">&quot;计算机输出&quot;标签</a><br /> 此例演示不同的&quot;计算机输出&quot;标签的显示效果。 </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_address\">地址</a><br /> 此例演示如何在 HTML 文件中写地址。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_abbr\">缩写和首字母缩写</a><br /> 此例演示如何实现缩写或首字母缩写。 </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_bdo\">文字方向</a><br /> 此例演示如何改变文字的方向。 </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_q\">块引用</a><br /> 此例演示如何实现长短不一的引用语。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_del\">删除字效果和插入字效果</a><br /> 此例演示如何标记删除文本和插入文本。 </p> \n<hr />\n<h2>HTML 文本格式化标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">标签</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-b.html\">&lt;b&gt;</a></td> \n   <td>定义粗体文本</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-em.html\">&lt;em&gt;</a></td> \n   <td>定义着重文字</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-i.html\">&lt;i&gt;</a></td> \n   <td>定义斜体字</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-small.html\">&lt;small&gt;</a></td> \n   <td>定义小号字</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-strong.html\">&lt;strong&gt;</a></td> \n   <td>定义加重语气</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-sub.html\">&lt;sub&gt;</a></td> \n   <td>定义下标字</td> \n  </tr> \n  <tr> \n   <td><a href=\"m/tags/tag-sup.html\">&lt;sup&gt;</a></td> \n   <td>定义上标字</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-ins.html\">&lt;ins&gt;</a></td> \n   <td>定义插入字</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-del.html\">&lt;del&gt;</a></td> \n   <td>定义删除字</td> \n  </tr> \n </tbody>\n</table> \n<h2>HTML &quot;计算机输出&quot; 标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">标签</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-code.html\">&lt;code&gt;</a></td> \n   <td>定义计算机代码</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-kbd.html\">&lt;kbd&gt;</a></td> \n   <td>定义键盘码</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-samp.html\">&lt;samp&gt;</a></td> \n   <td>定义计算机代码样本</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-var.html\">&lt;var&gt;</a></td> \n   <td>定义变量</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-pre.html\">&lt;pre&gt;</a></td> \n   <td>定义预格式文本</td> \n  </tr> \n </tbody>\n</table> \n<h2>HTML 引文, 引用, 及标签定义</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">标签</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-abbr.html\">&lt;abbr&gt;</a></td> \n   <td>定义缩写</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-address.html\">&lt;address&gt;</a></td> \n   <td>定义地址</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-bdo.html\">&lt;bdo&gt;</a></td> \n   <td>定义文字方向</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-blockquote.html\">&lt;blockquote&gt;</a></td> \n   <td>定义长的引用</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-q.html\">&lt;q&gt;</a></td> \n   <td>定义短的引用语</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-cite.html\">&lt;cite&gt;</a></td> \n   <td>定义引用、引证</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-dfn.html\">&lt;dfn&gt;</a></td> \n   <td>定义一个定义项目。</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 文本格式化|HTML 文本格式化|HTML 格式化标签|在线实例|HTML 文本格式化标签|HTML \"计算机输出\" 标签|HTML 引文, 引用, 及标签定义|');
INSERT INTO `schoolcontent` VALUES ('10', '10', '<h1>HTML <span class=\"color_h1\">链接</span></h1> \n<hr />\n<p class=\"intro\">HTML 使用超级链接与网络上的另一个文档相连。几乎可以在所有的网页中找到链接。点击链接可以从一张页面跳转到另一张页面。</p> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>尝试一下 - 实例</h2> \n</div> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_links\">HTML 链接</a><br /> 如何在HTML文档中创建链接。 </p> \n<p>(可以在本页底端找到更多实例)</p> \n<hr />\n<h2>HTML 超链接（链接）</h2> \n<p>HTML使用标签 &lt;a&gt;来设置超文本链接。</p> \n<p>超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，您可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。</p> \n<p>当您把鼠标指针移动到网页中的某个链接上时，箭头会变为一只小手。</p> \n<p>在标签&lt;a&gt; 中使用了href属性来描述链接的地址。</p> \n<p>默认情况下，链接将以以下形式出现在浏览器中：</p> \n<ul> \n <li>一个未访问过的链接显示为蓝色字体并带有下划线。</li> \n <li>访问过的链接显示为紫色并带有下划线。</li> \n <li>点击链接时，链接显示为红色并带有下划线。</li> \n</ul> \n<blockquote>\n <p>注意：如果为这些超链接设置了 CSS 样式，展示样式会根据 CSS 的设定而显示。</p>\n</blockquote> \n<hr />\n<h2>HTML 链接语法</h2> \n<p>链接的 HTML 代码很简单。它类似这样：:</p> \n<div class=\"code\">\n <div>\n   &lt;a href=&quot;\n  <i>url</i>&quot;&gt;\n  <i>链接文本</i>&lt;/a&gt; \n </div>\n</div> \n<p>href 属性描述了链接的目标。.</p> \n<h2>实例</h2> \n<div class=\"code\">\n <div>\n   &lt;a href=&quot;http://www.runoob.com/&quot;&gt;访问菜鸟教程&lt;/a&gt; \n </div>\n</div> \n<p>上面这行代码显示为：: <a href=\"http://www.runoob.com/\">访问菜鸟教程</a></p> \n<p>点击这个超链接会把用户带到菜鸟教程的首页。</p> \n<p><b>提示:</b> <i>&quot;链接文本&quot;</i> 不必一定是文本。图片或其他 HTML 元素都可以成为链接。</p> \n<hr />\n<h2>HTML 链接 - target 属性</h2> \n<p>使用 target 属性，你可以定义被链接的文档在何处显示。</p> \n<p>下面的这行会在新窗口打开文档：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;a href=&quot;http://www.runoob.com/&quot; target=&quot;_blank&quot;&gt;访问菜鸟教程!&lt;/a&gt; \n </div>\n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_link_target\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>HTML 连接- id 属性</h2> \n<p>id属性可用于创建在一个HTML文档书签标记。</p> \n<p><b>提示:</b> 书签是不以任何特殊的方式显示，在HTML文档中是不显示的，所以对于读者来说是隐藏的。</p> \n<h2>实例</h2> \n<p>在HTML文档中插入ID:</p> \n<div class=\"code\">\n <div>\n   &lt;a id=&quot;tips&quot;&gt;有用的提示部分&lt;/a&gt; \n </div>\n</div> \n<p>在HTML文档中创建一个链接到&quot;有用的提示部分(id=&quot;tips&quot;）&quot;：</p> \n<div class=\"code\">\n <div>\n   &lt;a href=&quot;#tips&quot;&gt;访问有用的提示部分&lt;/a&gt; \n </div>\n</div> \n<p>或者，从另一个页面创建一个链接到&quot;有用的提示部分(id=&quot;tips&quot;）&quot;：</p> \n<div class=\"code\">\n <div>\n   &lt;a href=&quot;http://www.runoob.com/html-links.htm#tips&quot;&gt;\n  <br /> 访问有用的提示部分&lt;/a&gt; \n </div>\n</div> \n<br /> \n<hr />\n<h2>基本的注意事项 - 有用的提示</h2>\n<p><b>注释：</b> 请始终将正斜杠添加到子文件夹。假如这样书写链接：href=&quot;http://www.runoob.com/html&quot;，就会向服务器产生两次 HTTP 请求。这是因为服务器会添加正斜杠到这个地址，然后创建一个新的请求，就像这样：href=&quot;http://www.runoob.com/html/&quot;。 </p> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_imglink\">图片链接</a><br /> 如何使用图片链接。 </p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/demo_source/tryhtml_link_locations.htm\">在当前页面链接到指定位置</a><br /> 如何使用书签 </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_frame_getfree\">跳出框架</a><br /> 本例演示如何跳出框架，假如你的页面被固定在框架之内。 </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_mailto\">创建电子邮件链接</a><br /> 本例演示如何如何链接到一个邮件。（本例在安装邮件客户端程序后才能工作。）</p>\n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_mailto2\">建电子邮件链接 2</a><br /> 本例演示更加复杂的邮件链接。</p>\n<hr />\n<h2>HTML 链接标签</h2>\n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"30%\" align=\"left\">标签</th>\n   <th align=\"left\">描述</th>\n  </tr>\n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-a.html\">&lt;a&gt;</a></td>\n   <td>定义一个超级链接</td>\n  </tr>\n </tbody>\n</table>', '<h1>HTML <span class=\"color_h1\">链接</span></h1><hr/><p class=\"intro\">从一个页面指向另一个目的端的链接，超级链接可以使用&lt;a&gt;标签定义,其链接文档的地址在属性&quot;href&quot;中指定。 链接分为内部链接：链接指向站点文件夹之内的文件（例： &lt;a href=“html / index.php”&gt; ）和外部链接：链接指向站点文件夹之外的文件（例： target index.php”&gt; ）。&lt;a&gt;标签又叫做锚标签,用来建立一个指向其它文档的链接.锚可以连接到网络上任一文档:一个html页面,一张图片,一个音频或者视频文件等.</p><hr/><p><img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\"/></p><h2>尝试一下 - 实例</h2><p><a href=\"http://www.piliyuan.com\" target=\"_blank\" title=\"霹雳猿首页\">HTML 链接</a><br/> 如何在HTML文档中创建链接。</p><p>(可以在本页底端找到更多实例)</p><hr/><h2>HTML 超链接（链接）</h2><p>HTML使用标签 &lt;a&gt;来设置超文本链接。</p><p>超链接可以是一个字，一个词，或者一组词，也可以是一幅图像，您可以点击这些内容来跳转到新的文档或者当前文档中的某个部分。</p><p>a标签的属性包括：</p><p>href: 链接地址</p><p>target：指定链接的目标窗口&nbsp;</p><p>name : 给链接命名</p><p>title：给链接提示文字</p><p>accesskey：链接热键</p><p>注意：如果为这些超链接设置了 CSS 样式，展示样式会根据 CSS 的设定而显示。</p><h2 class=\"example\" style=\"white-space: normal;\">实例</h2><pre class=\"brush:html;toolbar:false;\">&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&nbsp;target=&quot;_blank&quot;&nbsp;&gt;霹雳猿&lt;/a</pre><p><a href=\"/Home/DIY/12.html\" target=\"_blank\" title=\"在线测试\">在线测试</a><br/></p><p>上面这行代码显示为：: <a href=\"http://www.piliyuan.com/\" target=\"_blank\">霹雳猿</a></p><p>点击这个超链接会把用户带到霹雳猿教程的首页。</p><p><strong>提示:</strong> <em>&quot;链接文本&quot;</em> 不必一定是文本。图片或其他 HTML 元素都可以成为链接。</p><hr/><h2>HTML 链接 - target 属性</h2><p>target属性用来定义被链接的文档在何处显示(在新的出口打开,还是在原有的窗口打开).默认的被链接文档是在原有的窗口中打开的。如果将target属性设为&quot;_blank&quot;文档就会在新窗口打开.例如：</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&nbsp;target=&quot;_blank&quot;&gt;这是一个链接&lt;/a&gt;</pre><p><a href=\"/DIY/4.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p><br/></p><hr/><h2>书签链接(name属性)</h2><p>用&lt;a name=&quot;...&quot;&gt;的形式可以给被&lt;name=&quot;...&quot;&gt;～&lt;/a&gt;围起来的部分取名。可以用带 # 符号的 href=&quot;...&quot; 链接来跳转到被取名字的地方。取名后在画面上的显示效果没任何区别。</p><p><strong>提示:</strong> 书签是不以任何特殊的方式显示，在HTML文档中是不显示的，所以对于读者来说是隐藏的。</p><h2>实例</h2><pre class=\"brush:html;toolbar:false\">&lt;html&gt;\n&lt;head&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;书签链接演示&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;&nbsp;href&nbsp;=&nbsp;&quot;#start&quot;&gt;跳转到《静夜思》&lt;/a&gt;\n&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;name=&quot;start&quot;&gt;《静夜思》&lt;/a&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;br&nbsp;/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;窗前明月光，&lt;br&nbsp;/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;疑似地上霜。&lt;br&nbsp;/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;举头望明月，&lt;br&nbsp;/&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;低头思故乡。\n&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;&lt;br&nbsp;/&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><p><br/></p><hr/><h2>链接文字的颜色属性</h2><p><br/></p><p>link：设定链接文字默认的颜色</p><p>alink：设定激活链接时文字的颜色</p><p>vlink：设定访问过的链接文字的颜色</p><pre class=\"brush:html;toolbar:false\"><br/></pre><hr/><p><img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\"/></p>', 'HTML 链接|尝试一下 - 实例|HTML 超链接（链接）|HTML 链接语法|实例|HTML 链接 - target 属性|实例|HTML 连接- id 属性|实例|基本的注意事项 - 有用的提示|更多实例|HTML 链接标签|');
INSERT INTO `schoolcontent` VALUES ('11', '11', '<h1>HTML <span class=\"color_h1\">&lt;head&gt;</span></h1> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>查看在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_title\">&lt;title&gt; - 定义了HTML文档的标题</a><br /> 使用 &lt;title&gt; 标签定义HTML文档的标题</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_base\">&lt;base&gt; - 定义了所有链接的URL</a><br /> 使用 &lt;base&gt; 定义页面中所有链接默认的链接目标地址。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_meta\">&lt;meta&gt; - 提供了HTML文档的meta标记</a><br /> 使用 &lt;meta&gt; 元素来描述HTML文档的描述，关键词，作者，字符集等。</p> \n<hr />\n<h2>HTML &lt;head&gt; 元素</h2> \n<p>&lt;head&gt; 元素包含了所有的头部标签元素。在 &lt;head&gt;元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。</p> \n<p>可以添加在头部区域的元素标签为: &lt;title&gt;, &lt;style&gt;, &lt;meta&gt;, &lt;link&gt;, &lt;script&gt;, &lt;noscript&gt;, and &lt;base&gt;.</p> \n<hr />\n<h2> HTML &lt;title&gt; 元素</h2> \n<p> &lt;title&gt; 标签定义了不同文档的标题。</p> \n<p> &lt;title&gt; 在 HTML/XHTML 文档中是必须的。</p> \n<p> &lt;title&gt; 元素:</p> \n<ul> \n <li>定义了浏览器工具栏的标题</li> \n <li>当网页添加到收藏夹时，显示在收藏夹中的标题</li> \n <li>显示在搜索引擎结果页面的标题</li> \n</ul> \n<p>一个简单的 HTML 文档:</p> \n<div class=\"code\">\n <div>\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;title&gt;Title of the document&lt;/title&gt;\n  <br /> &lt;/head&gt;\n  <br /> \n  <br /> &lt;body&gt;\n  <br /> The content of the document......\n  <br /> &lt;/body&gt;\n  <br /> \n  <br /> &lt;/html&gt; \n </div>\n</div> \n<br /> \n<hr />\n<h2>HTML &lt;base&gt; 元素</h2> \n<p>&lt;base&gt; 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接:</p> \n<div class=\"code\">\n <div>\n   &lt;head&gt;\n  <br />&lt;base href=&quot;http://www.w3cschool.cc/images/&quot; target=&quot;_blank&quot;&gt;\n  <br /> &lt;/head&gt; \n </div>\n</div> \n<br /> \n<hr />\n<h2> HTML &lt;link&gt; 元素</h2> \n<p> &lt;link&gt; 标签定义了文档与外部资源之间的关系。</p> \n<p> &lt;link&gt; 标签通常用于链接到样式表:</p> \n<div class=\"code\">\n <div>\n   &lt;head&gt;\n  <br /> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;\n  <br /> &lt;/head&gt; \n </div>\n</div> \n<br /> \n<hr />\n<h2>HTML &lt;style&gt; 元素</h2> \n<p>&lt;style&gt; 标签定义了HTML文档的样式文件引用地址.</p> \n<p>在&lt;style&gt; 元素中你需要指定样式文件来渲染HTML文档:</p> \n<div class=\"code\">\n <div>\n   &lt;head&gt;\n  <br /> &lt;style type=&quot;text/css&quot;&gt;\n  <br /> body {background-color:yellow}\n  <br /> p {color:blue}\n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt; \n </div>\n</div> \n<br /> \n<hr />\n<h2>HTML &lt;meta&gt; 元素</h2> \n<p>meta标签描述了一些基本的元数据。</p> \n<p>&lt;meta&gt; 标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析。</p> \n<p>META元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。</p> \n<p>元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。</p> \n<p>&lt;meta&gt;一般放置于 &lt;head&gt;区域</p> \n<h2>&lt;meta&gt; 标签- 使用实例</h2> \n<p>为搜索引擎定义关键词:</p> \n<div class=\"code\"> \n <div>\n  &lt;meta name=&quot;keywords&quot; content=&quot;HTML, CSS, XML, XHTML, JavaScript&quot;&gt;\n </div> \n</div> \n<p>为网页定义描述内容:</p> \n<div class=\"code\"> \n <div>\n  &lt;meta name=&quot;description&quot; content=&quot;Free Web tutorials on HTML and CSS&quot;&gt;\n </div> \n</div> \n<p>定义网页作者:</p> \n<div class=\"code\"> \n <div>\n  &lt;meta name=&quot;author&quot; content=&quot;Hege Refsnes&quot;&gt;\n </div> \n</div> \n<p>每30秒中刷新当前页面:</p> \n<div class=\"code\"> \n <div>\n  &lt;meta http-equiv=&quot;refresh&quot; content=&quot;30&quot;&gt;\n </div> \n</div> \n<br /> \n<hr />\n<h2>HTML &lt;script&gt; 元素</h2> \n<p>&lt;script&gt;标签用于加载脚本文件，如： JavaScript。</p> \n<p>&lt;script&gt; 元素在以下章节会详细描述。</p> \n<hr />\n<h2>HTML head 元素</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">标签</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-head.html\">&lt;head&gt;</a></td> \n   <td>定义了文档的信息</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-title.html\">&lt;title&gt;</a></td> \n   <td>定义了文档的标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-base.html\">&lt;base&gt;</a></td> \n   <td>定义了页面链接标签的默认链接地址</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-link.html\">&lt;link&gt;</a></td> \n   <td>定义了一个文档和外部资源之间的关系</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-meta.html\">&lt;meta&gt;</a></td> \n   <td>定义了HTML文档中的元数据</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-script.html\">&lt;script&gt;</a></td> \n   <td>定义了客户端的脚本文件</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-style.html\">&lt;style&gt;</a></td> \n   <td>定义了HTML文档的样式文件</td> \n  </tr> \n </tbody>\n</table>', '<h1>HTML <span class=\"color_h1\">&lt;head&gt;</span></h1><hr/><h2>HTML &lt;head&gt; 元素</h2><p>&lt;head&gt; 元素包含了所有的头部标签元素。在 &lt;head&gt;元素中你可以插入脚本（scripts）, 样式文件（CSS），及各种meta信息。</p><p>head标签中可以包含的标签元素有：</p><p>&lt;title&gt;:定义html页面的标题</p><p>&lt;meta&gt;： &lt;meta&gt; 标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析。</p><p>META元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。</p><p>元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。</p><p>&lt;style&gt;：定义html页面的样式</p><p>&lt;link&gt;:页面样式文件的引入地址，链接到样式表</p><p>&lt;base&gt;：定义页面中所有链接的默认地址</p><p>&lt;script&gt;：用于加载脚本文件</p><hr/><h2>HTML &lt;title&gt; 元素</h2><p>title，也就是标题，一般方便用户了解这个页面的内容，这里就是判定你网页内容的主要根据。</p><p>&lt;title&gt; 标签定义了不同文档的标题。只需要在头部信息（&lt;head&gt;～&lt;/head&gt;）里声明一次。标题将会显示在浏览器的标题栏，历史记录，收藏夹，搜索引擎的结果等等。</p><p>&lt;html&gt;、&lt;head&gt;、&lt;body&gt; 都可以省略，但是 &lt;title&gt; 无法省略</p><p>标题是中文的时候，推荐在&lt;title&gt;～&lt;/title&gt;的前面用 &lt;meta&gt; 的 Content-Type 指定文字的编码。</p><p>一个简单的 HTML 文档:</p><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;\n&lt;/head&gt;\n&lt;&nbsp;body&nbsp;&nbsp;link&nbsp;=”red”&nbsp;&nbsp;&nbsp;alink&nbsp;=”green”&nbsp;vlink&nbsp;=”yello”&nbsp;&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&nbsp;target=&quot;_blank&quot;&gt;这是一个链接&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><p><br/> </p><hr/><h2>HTML &lt;base&gt; 元素</h2><p>使用base元素为页面所有的连接指定一个基础的URL</p><pre class=\"brush:html;toolbar:false\">&lt;head&gt;&nbsp;&nbsp;\n&lt;base&nbsp;href=&quot;http://www.w3cschool.cc/images/&quot;&nbsp;target=&quot;_blank&quot;&gt;&nbsp;&nbsp;\n&lt;/head&gt;</pre><p><br/> </p><hr/><h2>HTML &lt;link&gt; 元素</h2><p>&lt;link&gt; 标签定义了文档与外部资源之间的关系。当在文档中声明使用外接资源(比如CSS)时使用此标签</p><p>&lt;link&gt; 标签通常用于链接到样式表:</p><p>&lt;head&gt; &nbsp;<br/> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt; &nbsp;<br/> &lt;/head&gt;</p><p><br/> </p><hr/><h2>HTML &lt;style&gt; 元素</h2><p>HTML的style属性提供了一种改变HTML样式的通用方法。style是在HTML4版本中引用的，它是一种首选的改变HTML元素样式的方法。可以使用style直接的将样式添加到HTML元素中，或者使用独立的style文件在样式表中间接的定义。</p><p>&lt;head&gt; &nbsp;<br/> &lt;style type=&quot;text/css&quot;&gt; &nbsp;<br/> body {background-color:yellow} &nbsp;<br/> p {color:blue} &nbsp;<br/> &lt;/style&gt; &nbsp;<br/> &lt;/head&gt;</p><p><br/> </p><hr/><h2>HTML &lt;meta&gt; 元素</h2><p>meta是html语言head区的一个辅助性标签。也许你认为这些代码可有可无。其实如果你能够用好meta标签，会给你带来意想不到的效果，meta标签的作用有：搜索引擎优化（SEO），定义页面使用语言，自动刷新并指向新的页面，实现网页转换时的动态效果，控制页面缓冲，网页定级评价，控制网页显示的窗口等！</p><p>meta标签的组成：meta标签共有两个属性，它们分别是http-equiv属性和name属性，不同的属性又有不同的参数值，这些不同的参数值就实现了不同的网页功能。</p><h2>&lt;meta&gt; 标签- 使用实例</h2><p>为搜索引擎定义关键词:</p><p>&lt;meta name=&quot;keywords&quot; content=&quot;HTML, CSS, XML, XHTML, JavaScript&quot;&gt;</p><p>为网页定义描述内容:</p><p>&lt;meta name=&quot;description&quot; content=&quot;Free Web tutorials on HTML and CSS&quot;&gt;</p><p>定义网页作者:</p><p>&lt;meta name=&quot;author&quot; content=&quot;Hege Refsnes&quot;&gt;</p><p>每30秒中刷新当前页面:</p><p>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;30&quot;&gt;</p><p><br/> </p><hr/><h2>HTML &lt;script&gt; 元素</h2><p>&lt;script&gt;标签用于加载脚本文件，如： JavaScript。</p><p>使用&lt;script&gt;元素的方式有两种：直接在页面中嵌入JavaScript 代码和包含外部JavaScript 文件。</p><p>在使用&lt;script&gt;元素嵌入JavaScript 代码时，只须为&lt;script&gt;指定type属性。然后，像下面这样把JavaScript代码直接放在元素内部即可：</p><p>&lt;script&gt; 元素在以下章节会详细描述。</p><hr/><h2>HTML head 元素</h2><table class=\"reference\"><tbody><tr class=\"firstRow\"><th width=\"20%\" align=\"left\"><span style=\"font-weight: normal; white-space: nowrap;\">标签</span></th><th width=\"80%\" align=\"left\" class=\"selectTdClass\"><span style=\"font-weight: normal; white-space: nowrap;\">描述</span></th></tr><tr><td><a href=\"http://www.runoob.com/tags/tag-head.html\" style=\"white-space: nowrap;\"><font color=\"#000000\">&lt;head&gt;</font></a></td><td class=\"selectTdClass\"><span style=\"white-space: nowrap;\">定义了文档的信息</span></td></tr><tr><td><a href=\"http://www.runoob.com/tags/tag-title.html\" style=\"white-space: nowrap;\"><font color=\"#000000\">&lt;title&gt;</font></a></td><td class=\"selectTdClass\"><span style=\"white-space: nowrap;\">定义了文档的标题</span></td></tr><tr><td><a href=\"http://www.runoob.com/tags/tag-base.html\" style=\"white-space: nowrap;\"><font color=\"#000000\">&lt;base&gt;</font></a></td><td class=\"selectTdClass\"><span style=\"white-space: nowrap;\">定义了页面链接标签的默认链接地址</span></td></tr><tr><td><a href=\"http://www.runoob.com/tags/tag-link.html\" style=\"white-space: nowrap;\"><font color=\"#000000\">&lt;link&gt;</font></a></td><td class=\"selectTdClass\"><span style=\"white-space: nowrap;\">定义了一个文档和外部资源之间的关系</span></td></tr><tr><td><a href=\"http://www.runoob.com/tags/tag-meta.html\" style=\"white-space: nowrap;\"><font color=\"#000000\">&lt;meta&gt;</font></a></td><td class=\"selectTdClass\"><span style=\"white-space: nowrap;\">定义了HTML文档中的元数据</span></td></tr><tr><td><a href=\"http://www.runoob.com/tags/tag-script.html\" style=\"white-space: nowrap;\"><font color=\"#000000\">&lt;script&gt;</font></a></td><td class=\"selectTdClass\"><span style=\"white-space: nowrap;\">定义了客户端的脚本文件</span></td></tr><tr><td><a href=\"http://www.runoob.com/tags/tag-style.html\" style=\"white-space: nowrap;\"><font color=\"#000000\">&lt;style&gt;</font></a></td><td class=\"selectTdClass\"><span style=\"white-space: nowrap;\">定义了HTML文档的样式文件</span></td></tr></tbody></table>', 'HTML <head>|查看在线实例|HTML <head> 元素|HTML <title> 元素|HTML <base> 元素|HTML <link> 元素|HTML <style> 元素|HTML <meta> 元素|<meta> 标签- 使用实例|HTML <script> 元素|HTML head 元素|');
INSERT INTO `schoolcontent` VALUES ('12', '12', '<h1>HTML <span class=\"color_h1\">样式- CSS</span></h1> \n<hr /> \n<p class=\"intro\">CSS (Cascading Style Sheets) 用于渲染HTML元素标签的样式.</p> \n<div style=\"position:relative;\"> \n <div style=\"opacity:0.5;position:absolute;left:50px;top:-30px;width:300px;height:150px;background-color:#40B3DF\"></div> \n <div style=\"opacity:0.3;position:absolute;left:120px;top:20px;width:100px;height:200px;background-color:#8AC007\"></div> \n <div style=\"margin-top:30px;width:360px;height:130px;padding:20px;border-radius:10px;border:10px solid #EE872A;font-size:120%;\"> \n  <h1>Look! Styles and colors</h1> \n  <div style=\"letter-spacing:12px;font-size:15px;position:relative;left:25px;top:10px;\">\n   Manipulate Text\n  </div> \n  <div style=\"color:#40B3DF;letter-spacing:12px;font-size:15px;position:relative;left:25px;top:20px;\">\n   Colors, \n   <span style=\"background-color:#B4009E;color:#ffffff;\">&nbsp;Boxes</span>\n  </div> \n  <div style=\"color:#000000;letter-spacing:-1px;font-size:15px;position:relative;top:15px;\">\n   and more...\n  </div> \n </div> \n</div> \n<br />\n<br /> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=tryhtml_styles\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>尝试一下 - 实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_style\">HTML使用样式</a><br /> 本例演示如何使用添加到 &lt;head&gt; 部分的样式信息对 HTML 进行格式化。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_linknoline\">本例演示如何使用样式属性做一个没有下划线的链接。</a><br /> 如何使用 style 属性制作一个没有下划线的链接。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_link\">链接到一个外部样式表</a><br /> 本例演示如何 \n <link /> 标签链接到一个外部样式表。</p> \n<hr /> \n<h2>如何使用CSS</h2> \n<p>CSS 是在 HTML 4 开始使用的,是为了更好的渲染HTML元素而引入的.</p> \n<p>CSS 可以通过以下方式添加到HTML中:</p> \n<ul> \n <li>内联样式- 在HTML元素中使用&quot;style&quot;<strong> 属性</strong> </li> \n <li>内部样式表 -在HTML文档头部 &lt;head&gt; 区域使用&lt;style&gt;<strong> 元素</strong> 来包含CSS</li> \n <li>外部引用 - 使用外部 CSS<strong> 文件</strong></li> \n</ul> \n<p>最好的方式是通过外部引用CSS文件.</p> \n<p>在本站的HTML教程中我们使用了内联CSS样式来介绍实例，这是为了简化的例子，也使得你能更容易在线编辑代码并在线运行实例。 </p> \n<p>你可以通过本站的CSS教程 <a href=\"http://www.runoob.com/css/css-tutorial.html\">CSS 教程</a>学习更多的CSS知识.</p> \n<hr />\n<h2>内联样式</h2> \n<p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。 使用内联样式的方法是在相关的标签中使用样式属性。样式属性可以包含任何 CSS 属性。以下实例显示出如何改变段落的颜色和左外边距。</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;p style=&quot;color:blue;margin-left:20px;&quot;&gt;This is a paragraph.&lt;/p&gt; \n </div>\n</div> \n<p> 学习更多样式，请访问 <a href=\"http://www.runoob.com/css/\"> CSS 教程</a>. </p> \n<hr />\n<h2>HTML样式实例 - 背景颜色</h2> \n<p>背景色属性（background-color）定义一个元素的背景颜色：</p> \n<div class=\"example\"> \n <h2 class=\"example\">Example</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br />\n  <br /> &lt;body style=&quot;background-color:yellow;&quot;&gt;\n  <br /> &lt;h2 style=&quot;background-color:red;&quot;&gt;This is a heading&lt;/h2&gt;\n  <br /> &lt;p style=&quot;background-color:green;&quot;&gt;This is a paragraph.&lt;/p&gt;\n  <br /> &lt;/body&gt;\n  <br />\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_bodybgstyle\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>早期背景色属性（background-color）是使用 bgcolor 属性定义。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_bodybgcol\">尝试一下: 旧版HTML来设置背景方式</a></p> \n<hr />\n<h2>HTML 样式实例 - 字体, 字体颜色 ，字体大小</h2> \n<p>我们可以使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义字体的样式:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br /> &lt;h1 style=&quot;font-family:verdana;&quot;&gt;A heading&lt;/h1&gt;\n  <br /> &lt;p style=&quot;font-family:arial;color:red;font-size:20px;&quot;&gt;A paragraph.&lt;/p&gt;\n  <br /> &lt;/body&gt;\n  <br />\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_newfont\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>现在通常使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义文本样式，而不是使用&lt;font&gt;标签。</p> \n<hr />\n<h2>HTML 样式实例 - 文本对齐方式</h2> \n<p>使用 text-align（文字对齐）属性指定文本的水平与垂直对齐方式：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br /> &lt;h1 style=&quot;text-align:center;&quot;&gt;Center-aligned heading&lt;/h1&gt;\n  <br /> &lt;p&gt;This is a paragraph.&lt;/p&gt;\n  <br /> &lt;/body&gt;\n  <br />\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_headeralign\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>文本对齐属性 text-align取代了旧标签 &lt;center&gt; 。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_header\">尝试一下 </a></p> \n<hr />\n<h2>内部样式表</h2> \n<p>当单个文件需要特别样式时，就可以使用内部样式表。你可以在&lt;head&gt; 部分通过 &lt;style&gt;标签定义内部样式表:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;head&gt;\n  <br /> &lt;style type=&quot;text/css&quot;&gt;\n  <br /> body {background-color:yellow;}\n  <br /> p {color:blue;}\n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt; \n </div>\n</div> \n<br /> \n<hr />\n<h2>外部样式表</h2> \n<p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;head&gt;\n  <br /> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;\n  <br /> &lt;/head&gt; \n </div>\n</div> \n<br /> \n<hr />\n<h2>HTML 样式标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-style.html\">&lt;style&gt;</a></td> \n   <td>定义文本样式</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-link.html\">&lt;link&gt;</a></td> \n   <td>定义资源引用地址 </td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr />\n<h2>已弃用的标签和属性</h2> \n<p>在HTML 4, 原来支持定义HTML元素样式的标签和属性已被弃用。这些标签将不支持新版本的HTML标签。</p> \n<p>不建议使用的标签有: &lt;font&gt;, &lt;center&gt;, &lt;strike&gt;</p>\n<p>不建议使用的属性: color 和 bgcolor.</p>', '<h1>HTML <span class=\"color_h1\">样式- CSS</span></h1><hr/><p class=\"intro\">CSS是用于布局与美化网页的.</p><p>CSS是Cascading Style Sheets的英文缩写,即层叠样式表.</p><p>CSS语言是一种标记语言,因此不需要编译,可以直接由浏览器执行(属于浏览器解释型语言).</p><p>CSS文件是一个文本文件,它包含了一些CSS标记,CSS文件必须使用css为文件名后缀.</p><p>CSS是大小写不敏感的,CSS与css是一样的.</p><p>CSS是由W3C的CSS工作组产生和维护的.效果如下所示：</p><h1>Look! Styles and colors</h1><p>Manipulate Text</p><p>Colors, \n &nbsp; <span style=\"background-color:#B4009E;color:#ffffff;\">&nbsp;Boxes</span>\n &nbsp;</p><p>and more...</p><hr/><h2>如何使用CSS</h2><p>CSS 可以通过以下方式添加到HTML中:</p><ul class=\" list-paddingleft-2\"><li><p>内联样式- 在HTML元素中使用&quot;style&quot;<strong> 属性</strong></p></li><li><p>内部样式表 -在HTML文档头部 &lt;head&gt; 区域使用&lt;style&gt;<strong> 元素</strong> 来包含CSS</p></li><li><p>外部引用 - 使用外部 CSS<strong> 文件</strong></p></li></ul><p>最好的方式是通过外部引用CSS文件.</p><hr/><h2>内联样式</h2><p>当特殊的样式需要应用到个别元素时，就可以使用内联样式。 使用内联样式的方法是在相关的标签中使用样式属性。样式属性可以包含任何 CSS 属性。以下实例显示出如何改变段落的颜色和左外边距。</p><p>&lt;p style=&quot;color:blue;margin-left:20px;&quot;&gt;This is a paragraph.&lt;/p&gt;</p><p>学习更多样式，请访问 <a href=\"http://www.runoob.com/css/\"> CSS 教程</a>.</p><hr/><h2>HTML样式实例 - 背景颜色</h2><p>背景色属性（background-color）定义一个元素的背景颜色：</p><h2 class=\"example\">Example</h2><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&nbsp;style=&quot;background-color:yellow;&quot;&gt;&nbsp;&nbsp;\n&lt;h2&nbsp;style=&quot;background-color:red;&quot;&gt;This&nbsp;is&nbsp;a&nbsp;heading&lt;/h2&gt;&nbsp;&nbsp;\n&lt;p&nbsp;style=&quot;background-color:green;&quot;&gt;This&nbsp;is&nbsp;a&nbsp;paragraph.&lt;/p&gt;&nbsp;&nbsp;\n&lt;/body&gt;&nbsp;\n&lt;/html&gt;</pre><p><a href=\"/Home/DIY/14.html\" target=\"_blank\" title=\"在线测试\">在线测试</a> <br/></p><p>早期背景色属性（background-color）是使用 bgcolor 属性定义。</p><hr/><h2>内部样式表</h2><p>当单个文件需要特别样式时，就可以使用内部样式表。你可以在&lt;head&gt; 部分通过 &lt;style&gt;标签定义内部样式表直接把CSS内容写在HTML文件的head标签中:</p><pre class=\"brush:html;toolbar:false\">&lt;head&gt;&nbsp;&nbsp;\n&lt;style&nbsp;type=&quot;text/css&quot;&gt;&nbsp;&nbsp;\nbody&nbsp;{background-color:yellow;}&nbsp;&nbsp;\np&nbsp;{color:blue;}&nbsp;&nbsp;\n&lt;/style&gt;&nbsp;&nbsp;\n&lt;/head&gt;</pre>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 &lt;style&gt; 标签在文档头部定义内部样式表<hr/><h2>外部样式表</h2><p>当样式需要被应用到很多页面的时候，外部样式表将是理想的选择。使用外部样式表，你就可以通过更改一个文件来改变整个站点的外观。</p><p>&lt;head&gt; &nbsp;<br/> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt; &nbsp;<br/> &lt;/head&gt;</p><p><br/></p><p><br/></p><br/><p><br/></p>', 'HTML 样式');
INSERT INTO `schoolcontent` VALUES ('13', '13', '<h1>HTML <span class=\"color_h1\">图像</span></h1> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_result notranslate\" style=\"text-align:center\"> \n  <h2>Norwegian Mountain Trip</h2> \n  <img border=\"0\" src=\"http://www.runoob.com/images/pulpit.jpg\" alt=\"Pulpit Rock\" />\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_pulpitimage\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_images\">插入图像</a><br /> 本例演示如何在网页中显示图像。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_images2\">从不同的位置插入图片</a><br /> 本例演示如何将其他文件夹或服务器的图片显示到网页中。</p> \n<p>（可以在本页底端找到更多实例。）</p> \n<hr />\n<h2>HTML 图像- 图像标签（ &lt;img&gt;）和源属性（Src）</h2> \n<p>在 HTML 中，图像由&lt;img&gt; 标签定义。</p> \n<p>&lt;img&gt; 是空标签，意思是说，它只包含属性，并且没有闭合标签。 </p> \n<p>要在页面上显示图像，你需要使用源属性（src）。src 指 &quot;source&quot;。源属性的值是图像的 URL 地址。</p> \n<p><b>定义图像的语法是：</b></p> \n<div class=\"code notranslate\">\n <div>\n   &lt;img src=&quot;\n  <i>url</i>&quot; alt=&quot;\n  <i>some_text</i>&quot;&gt; \n </div>\n</div> \n<p> URL 指存储图像的位置。如果名为 &quot;boat.gif&quot; 的图像位于 www.w3school.com.cn 的 images 目录中，那么其 URL 为 http://www.w3school.com.cn/images/boat.gif。 </p> \n<p>浏览器将图像显示在文档中图像标签出现的地方。如果你将图像标签置于两个段落之间，那么浏览器会首先显示第一个段落，然后显示图片，最后显示第二段。 </p> \n<hr />\n<h2> HTML 图像- Alt属性</h2> \n<p> alt 属性用来为图像定义一串预备的可替换的文本。</p> \n<p> 替换文本属性的值是用户定义的。 </p> \n<div class=\"code notranslate\">\n <div>\n   &lt;img src=&quot;boat.gif&quot; alt=&quot;Big Boat&quot;&gt;\n </div>\n</div> \n<p>在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。此时，浏览器将显示这个替代性的文本而不是图像。为页面上的图像都加上替换文本属性是个好习惯，这样有助于更好的显示信息，并且对于那些使用纯文本浏览器的人来说是非常有用的。</p> \n<hr />\n<h2> HTML 图像- 设置图像的高度与宽度</h2> \n<p> height（高度） 与 width（宽度）属性用于设置图像的高度与宽度。</p> \n<p> 属性值默认单位为像素:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;img src=&quot;pulpit.jpg&quot; alt=&quot;Pulpit rock&quot; width=&quot;304&quot; height=&quot;228&quot;&gt;\n </div>\n</div> \n<p> <strong>提示:</strong> 指定图像的高度和宽度的一个很好的习惯。如果图像指定了高度宽度，页面加载时就会保留指定的尺寸。如果没有指定图片的大小，加载页面时有可能会破坏HTML页面的整体布局。</p> \n<hr />\n<h2>基本的注意事项 - 有用的提示：</h2> \n<p><b>注意:</b> 假如某个 HTML 文件包含十个图像，那么为了正确显示这个页面，需要加载 11 个文件。加载图片是需要时间的，所以我们的建议是：慎用图片。 </p> \n<p><b>注意:</b> 加载页面时，要注意插入页面图像的路径，如果不能正确设置图像的位置，浏览器无法加载图片，图像标签就会显示一个破碎的图片。</p> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_image_align\">排列图片</a><br /> 本例演示如何在文字中排列图像。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_image_float\">浮动图像</a><br /> 本例演示如何使图片浮动至段落的左边或右边。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_imglink\">设置图像链接</a><br /> 本例演示如何将图像作为一个链接使用。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_areamap\">创建图像映射</a><br /> 本例显示如何创建带有可供点击区域的图像地图。其中的每个区域都是一个超级链接。</p> \n<hr />\n<h2>HTML 图像标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-img.html\">&lt;img&gt;</a></td> \n   <td>定义图像</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-map.html\">&lt;map&gt;</a></td> \n   <td>定义图像地图</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-area.html\">&lt;area&gt;</a></td> \n   <td>定义图像地图中的可点击区域</td> \n  </tr> \n </tbody>\n</table>', '<h1>HTML <span class=\"color_h1\">图像</span></h1><p><br/></p><h2 class=\"example\">实例</h2><p>旅游图片</p><p><img src=\"http://www.runoob.com/images/pulpit.jpg\" alt=\"Pulpit Rock\"/></p><p><br/> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_pulpitimage\" class=\"tryitbtn\">尝试一下 &amp;raquo;</a></p><p><br/></p><hr/><h2>HTML 图像- 图像标签（ &lt;img&gt;）和源属性（Src）</h2><p>在 HTML 中，图像由&lt;img&gt; 标签定义。图像会使网页更加生动,图可以描述更复杂的问题。</p><p>img元素没有尾标签，它与&lt;br /&gt;一样，不与特定的文本相关。</p><p>要在页面上显示图像，你需要使用源属性（src）。src 指 &quot;source&quot;。源属性的值是图像的 URL 地址。</p><p><strong>定义图像的语法是：</strong></p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;&nbsp;&nbsp;url&quot;&nbsp;alt=&quot;&nbsp;&nbsp;some_text&quot;&gt;</pre><p>src属性规定了显示图像的URL，浏览器会对该URL发起Http Get请求。如果名为 &quot;boat.gif&quot; 的图像位于 www.piliyuan.com 的 images 目录中，那么其 URL 为 http://www.piliyuan.com/images/boat.gif。</p><hr/><h2>HTML 图像- Alt属性</h2><p>alt 代表图像的替代文字。</p><p>替换文本属性的值是用户定义的。</p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;boat.gif&quot;&nbsp;alt=&quot;Big&nbsp;Boat&quot;&gt;</pre><p>alt属性用于给出图像的替用描述，假如由于某些原因该图像未能显示出来，浏览器就通过显示这个描述来替代图像。对于有视力障碍的人士来说，或者当网页打开很慢的时候，这一特性显得尤为重要。</p><hr/><h2>HTML 图像- 设置图像的高度与宽度</h2><p>width和height属性分别用于设置图像的宽度和高度，以像素为单位。像素（pixel）是用于测量屏幕分辨率的计量单位。（目前大多数屏幕分辨率是1024×768或更高）。像素跟公分不同，像素是一种相对计量单位，一个像素的实际大小跟屏幕分辨率有关。在高分辨率显示模式下，差不多25个像素等于1公分；而在低分辨率显示模式下，同样的25个像素大约等于1.5公分。</p><p>如果你没有为图像设置宽度和高度，它将按原始尺寸显示。但是如果设置了的话，你就可以控制它的显示尺寸：</p><p>属性值默认单位为像素:</p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;pulpit.jpg&quot;&nbsp;alt=&quot;Pulpit&nbsp;rock&quot;&nbsp;width=&quot;304&quot;&nbsp;height=&quot;228&quot;&gt;</pre><hr/><h2>HTML图像-Title属性</h2><p>鼠标滑过时显示的文字提示，用户体验上很重要。当然不必要所有的img标签都加此属性，比方说logo这样比较重要或者说用户会体验到的图片内容建议一定要加此属性。</p><pre class=\"brush:html;toolbar:false\">&lt;img&nbsp;src=&quot;图片路径&quot;&nbsp;alt=&quot;logo&quot;&nbsp;title=&quot;首页&quot;&nbsp;/&gt;</pre><p><span style=\"font-family: tahoma, arial, 宋体; font-size: 14px; line-height: 25.2px; background-color: rgb(255, 255, 255);\"></span><br/></p>', 'HTML 图像');
INSERT INTO `schoolcontent` VALUES ('14', '14', '<h1>HTML <span class=\"color_h1\">表格</span></h1> \n<hr /> \n<h2>HTML 表格实例:</h2> \n<table border=\"1\" cellpadding=\"3\"> \n <tbody>\n  <tr> \n   <th>First Name</th> \n   <th>Last Name</th> \n   <th>Points</th> \n  </tr> \n  <tr> \n   <td>Jill</td> \n   <td>Smith</td> \n   <td>50</td> \n  </tr> \n  <tr> \n   <td>Eve</td> \n   <td>Jackson</td> \n   <td>94</td> \n  </tr> \n  <tr> \n   <td>John</td> \n   <td>Doe</td> \n   <td>80</td> \n  </tr> \n  <tr> \n   <td>Adam</td> \n   <td>Johnson</td> \n   <td>67</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_tables\">表格</a><br /> 这个例子演示如何在 HTML 文档中创建表格。 </p>\n<p>（可以在本页底端找到更多实例。）</p> \n<hr />\n<h2>HTML 表格</h2> \n<p>表格由 &lt;table&gt; 标签来定义。每个表格均有若干行（由 &lt;tr&gt; 标签定义），每行被分割为若干单元格（由 &lt;td&gt; 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p> \n<h2>表格实例</h2> \n<div class=\"code notranslate\">\n <div>\n   &lt;table border=&quot;1&quot;&gt;\n  <br /> &lt;tr&gt;\n  <br /> &lt;td&gt;row 1, cell 1&lt;/td&gt;\n  <br /> &lt;td&gt;row 1, cell 2&lt;/td&gt;\n  <br /> &lt;/tr&gt;\n  <br /> &lt;tr&gt;\n  <br /> &lt;td&gt;row 2, cell 1&lt;/td&gt;\n  <br /> &lt;td&gt;row 2, cell 2&lt;/td&gt;\n  <br /> &lt;/tr&gt;\n  <br /> &lt;/table&gt; \n </div>\n</div> \n<p>在浏览器显示如下：:</p> \n<table border=\"1\"> \n <tbody>\n  <tr> \n   <td>row 1, cell 1</td> \n   <td>row 1, cell 2</td> \n  </tr> \n  <tr> \n   <td>row 2, cell 1</td> \n   <td>row 2, cell 2</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr />\n<h2>HTML 表格和边框属性</h2> \n<p>如果不定义边框属性，表格将不显示边框。有时这很有用，但是大多数时候，我们希望显示边框。 </p> \n<p>使用边框属性来显示一个带有边框的表格：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;table border=&quot;1&quot;&gt;\n  <br /> &lt;tr&gt;\n  <br /> &lt;td&gt;Row 1, cell 1&lt;/td&gt;\n  <br /> &lt;td&gt;Row 1, cell 2&lt;/td&gt;\n  <br /> &lt;/tr&gt;\n  <br /> &lt;/table&gt; \n </div>\n</div> \n<br /> \n<hr />\n<h2>HTML 表格表头</h2> \n<p>表格的表头使用 &lt;th&gt; 标签进行定义。</p> \n<p>大多数浏览器会把表头显示为粗体居中的文本：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;table border=&quot;1&quot;&gt;\n  <br /> &lt;tr&gt;\n  <br /> &lt;th&gt;Header 1&lt;/th&gt;\n  <br /> &lt;th&gt;Header 2&lt;/th&gt;\n  <br /> &lt;/tr&gt;\n  <br /> &lt;tr&gt;\n  <br /> &lt;td&gt;row 1, cell 1&lt;/td&gt;\n  <br /> &lt;td&gt;row 1, cell 2&lt;/td&gt;\n  <br /> &lt;/tr&gt;\n  <br /> &lt;tr&gt;\n  <br /> &lt;td&gt;row 2, cell 1&lt;/td&gt;\n  <br /> &lt;td&gt;row 2, cell 2&lt;/td&gt;\n  <br /> &lt;/tr&gt;\n  <br /> &lt;/table&gt; \n </div>\n</div> \n<p>在浏览器显示如下：</p> \n<table border=\"1\"> \n <tbody>\n  <tr> \n   <th>Header 1</th> \n   <th>Header 2</th> \n  </tr> \n  <tr> \n   <td>row 1, cell 1</td> \n   <td>row 1, cell 2</td> \n  </tr> \n  <tr> \n   <td>row 2, cell 1</td> \n   <td>row 2, cell 2</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_tables3\">没有边框的表格</a><br /> 本例演示一个没有边框的表格。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_headers\">表格中的表头(Heading)</a><br /> 本例演示如何显示表格表头。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_tables2\">带有标题的表格</a><br /> 本例演示一个带标题 (caption) 的表格</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_span\">跨行或跨列的表格单元格</a><br /> 本例演示如何定义跨行或跨列的表格单元格。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_elements\">表格内的标签</a><br /> 本例演示如何显示在不同的元素内显示元素。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_cellpadding\">单元格边距(Cell padding)</a><br /> 本例演示如何使用 Cell padding 来创建单元格内容与其边框之间的空白。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_cellspacing\">单元格间距(Cell spacing)</a><br /> 本例演示如何使用 Cell spacing 增加单元格之间的距离。</p> \n<hr />\n<h2>HTML 表格标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-table.html\">&lt;table&gt;</a></td> \n   <td>定义表格</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-th.html\">&lt;th&gt;</a></td> \n   <td>定义表格的表头</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-tr.html\">&lt;tr&gt;</a></td> \n   <td>定义表格的行</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-td.html\">&lt;td&gt;</a></td> \n   <td>定义表格单元</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-caption.html\">&lt;caption&gt;</a></td> \n   <td>定义表格标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-colgroup.html\">&lt;colgroup&gt;</a></td> \n   <td>定义表格列的组</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-col.html\">&lt;col&gt;</a></td> \n   <td>定义用于表格列的属性</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-thead.html\">&lt;thead&gt;</a></td> \n   <td>定义表格的页眉</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-tbody.html\">&lt;tbody&gt;</a></td> \n   <td>定义表格的主体</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-tfoot.html\">&lt;tfoot&gt;</a></td> \n   <td>定义表格的页脚 </td> \n  </tr> \n </tbody>\n</table>', '<h1>HTML <span class=\"color_h1\">表格介绍</span></h1><hr/><h2>HTML表格演示:</h2><table border=\"1\"><tbody><tr class=\"firstRow\"><th style=\"word-break: break-all;\">姓名</th><th style=\"word-break: break-all;\">性别</th><th style=\"word-break: break-all;\">分数</th></tr><tr><td style=\"word-break: break-all;\">刘德华</td><td style=\"word-break: break-all;\">男</td><td>50</td></tr><tr><td style=\"word-break: break-all;\">张学友</td><td style=\"word-break: break-all;\">男</td><td>94</td></tr><tr><td style=\"word-break: break-all;\">梁咏琪</td><td style=\"word-break: break-all;\">女</td><td>80</td></tr><tr><td style=\"word-break: break-all;\">卿文刚</td><td style=\"word-break: break-all;\">男</td><td style=\"word-break: break-all;\">100</td></tr></tbody></table><hr/><h2>HTML 表格</h2><p>表格由 &lt;table&gt; 标签来定义。每个表格均有若干行（由 &lt;tr&gt; 标签定义），每行被分割为若干单元格（由 &lt;td&gt; 标签定义）。字母 td 指表格数据（table data），即数据单元格的内容。数据单元格可以包含文本、图片、列表、段落、表单、水平线、表格等等。</p><p>用于创建表格的3个基本元素是：</p><p>首标签&lt;table&gt;和尾标签&lt;/table&gt;分别表示一个表格的开始与结束。这是不难理解的。</p><p>tr是“table row（表格行）”的缩写，用于表示一行的开始和结束。这也容易理解。</p><p>td是“table data（表格数据）”的缩写，用于表示行中各个单元格（cell）的开始和结束。这些都是容易理解的。</p><h2>表格实例</h2><pre class=\"brush:html;toolbar:false\">&lt;table&nbsp;border=&quot;1&quot;&gt;\n&lt;tr&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;th&nbsp;colspan=&quot;2&quot;&gt;电话&lt;/th&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;Bill&nbsp;Gates&lt;/td&gt;&lt;td&gt;555&nbsp;77&nbsp;854&lt;/td&gt;&lt;td&gt;555&nbsp;77&nbsp;855&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</pre><p><a href=\"/Home/DIY/15.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><hr/><h2>HTML 表格和边框属性</h2><p>如果不定义边框属性，表格将不显示边框。有时这很有用，但是大多数时候，我们希望显示边框。</p><p>一般我们用表格的时候总会给它个border属性，比如：</p><pre class=\"brush:html;toolbar:false\">&lt;!DOCTYPE&nbsp;html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta&nbsp;charset=&quot;utf-8&quot;&gt;\n&lt;title&gt;霹雳猿(www.piliyuan.com)&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;table&nbsp;border=&quot;1&quot;&gt;\n&lt;tr&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;th&nbsp;colspan=&quot;2&quot;&gt;电话&lt;/th&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;Bill&nbsp;Gates&lt;/td&gt;&lt;td&gt;555&nbsp;77&nbsp;854&lt;/td&gt;&lt;td&gt;555&nbsp;77&nbsp;855&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;</pre><p><a href=\"/Home/DIY/16.html\" target=\"_blank\" title=\"在线测试\">在线测试</a><br/></p><hr/><h2>HTML 表头和表尾</h2><p>从结构上看，表格可以分成表头、主体和表尾三部分，在HTML语言中分别用thead、tbody、tfoot表示。</p><p>大多数浏览器会把表头显示为粗体居中的文本：</p><pre class=\"brush:html;toolbar:false\">&lt;table&nbsp;border=&quot;1&quot;&gt;&nbsp;&nbsp;\n&nbsp;&lt;tr&gt;&nbsp;&nbsp;\n&nbsp;&lt;th&gt;Header&nbsp;1&lt;/th&gt;&nbsp;&nbsp;\n&nbsp;&lt;th&gt;Header&nbsp;2&lt;/th&gt;&nbsp;&nbsp;\n&nbsp;&lt;/tr&gt;&nbsp;&nbsp;\n&nbsp;&lt;tr&gt;&nbsp;&nbsp;\n&nbsp;&lt;td&gt;row&nbsp;1,&nbsp;cell&nbsp;1&lt;/td&gt;&nbsp;&nbsp;\n&nbsp;&lt;td&gt;row&nbsp;1,&nbsp;cell&nbsp;2&lt;/td&gt;&nbsp;&nbsp;\n&nbsp;&lt;/tr&gt;&nbsp;&nbsp;\n&nbsp;&lt;tr&gt;&nbsp;&nbsp;\n&nbsp;&lt;td&gt;row&nbsp;2,&nbsp;cell&nbsp;1&lt;/td&gt;&nbsp;&nbsp;\n&nbsp;&lt;td&gt;row&nbsp;2,&nbsp;cell&nbsp;2&lt;/td&gt;&nbsp;&nbsp;\n&nbsp;&lt;/tr&gt;&nbsp;&nbsp;\n&nbsp;&lt;/table&gt;</pre><p>在浏览器显示如下：</p><table border=\"1\"><tbody><tr class=\"firstRow\"><th>Header 1</th><th>Header 2</th></tr><tr><td>row 1, cell 1</td><td>row 1, cell 2</td></tr><tr><td>row 2, cell 1</td><td>row 2, cell 2</td></tr></tbody></table><hr/><h2>HTML表格&nbsp;跨行或者跨列的表格</h2><p><span style=\"font-family: 宋体; line-height: 28.8px; background-color: rgb(255, 255, 255);\">表格内部如果有内容需要跨行展示，可以用colspan跨行</span></p><pre class=\"brush:html;toolbar:false\">&lt;table&nbsp;border=&quot;1&quot;&gt;\n&lt;tr&gt;&lt;th&gt;姓名&lt;/th&gt;&lt;td&gt;Bill&nbsp;Gates&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;th&nbsp;rowspan=&quot;2&quot;&gt;电话&lt;/th&gt;&lt;td&gt;555&nbsp;77&nbsp;854&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;555&nbsp;77&nbsp;855&lt;/td&gt;&lt;/tr&gt;\n&lt;/table&gt;</pre><p><a href=\"/Home/DIY/17.html\" target=\"_blank\" title=\"点击链接在线测试\">在线测试</a><span style=\"font-family: 宋体; line-height: 28.8px; background-color: rgb(255, 255, 255);\"></span><br/></p>', 'HTML 表格|HTML 表格实例:|在线实例|HTML 表格|表格实例|HTML 表格和边框属性|HTML 表格表头|更多实例|HTML 表格标签|');
INSERT INTO `schoolcontent` VALUES ('15', '15', '<h1>HTML <span class=\"color_h1\">列表</span></h1> \n<hr />\n<p class=\"intro\">HTML 支持有序、无序和定义列表:</p> \n<div class=\"example\"> \n <h2 class=\"example\">HTML 列表</h2> \n <div class=\"example_result notranslate\"> \n  <table width=\"100%\" border=\"0\"> \n   <tbody>\n    <tr> \n     <td width=\"50%\"> <h3>有序列表</h3> \n      <ol> \n       <li>第一个列表项</li> \n       <li>第二个列表项</li> \n       <li>第三个列表项</li> \n      </ol> </td> \n     <td width=\"50%\"> <h3>无序列表</h3> \n      <ul> \n       <li>列表项</li> \n       <li>列表项</li> \n       <li>列表项</li> \n      </ul> </td> \n    </tr>\n   </tbody>\n  </table> \n </div> \n</div> \n<hr /> \n<table width=\"100%\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\"> \n <tbody>\n  <tr> \n   <td align=\"left\" width=\"48px\"><img border=\"0\" src=\"http://www.runoob.com/images/tryitimg.gif\" alt=\"实例\" /></td> \n   <td align=\"left\"><h2>在线实例</h2></td> \n  </tr> \n </tbody>\n</table> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists4\">无序列表</a><br /> 本例演示无序列表。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists\">有序列表</a><br /> 本例演示有序列表。</p> \n<p>（可以在本页底端找到更多实例。）</p> \n<hr />\n<h2>HTML无序列表</h2> \n<p>无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。 </p>\n<p>无序列表使用 &lt;ul&gt; 标签</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;ul&gt;\n  <br /> &lt;li&gt;Coffee&lt;/li&gt;\n  <br /> &lt;li&gt;Milk&lt;/li&gt;\n  <br /> &lt;/ul&gt; \n </div>\n</div> \n<p>浏览器显示如下：</p> \n<ul> \n <li>Coffee</li> \n <li>Milk</li> \n</ul> \n<hr />\n<h2>HTML 有序列表</h2> \n<p>同样，有序列表也是一列项目，列表项目使用数字进行标记。 有序列表始于 &lt;ol&gt; 标签。每个列表项始于 &lt;li&gt; 标签。</p> \n<p>列表项项使用数字来标记。</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;ol&gt;\n  <br /> &lt;li&gt;Coffee&lt;/li&gt;\n  <br /> &lt;li&gt;Milk&lt;/li&gt;\n  <br /> &lt;/ol&gt; \n </div>\n</div> \n<p>浏览器中显示如下：</p> \n<ol> \n <li>Coffee</li> \n <li>Milk</li> \n</ol> \n<hr />\n<h2>HTML 自定义列表</h2> \n<p>自定义列表不仅仅是一列项目，而是项目及其注释的组合。</p> \n<p>自定义列表以 &lt;dl&gt; 标签开始。每个自定义列表项以 &lt;dt&gt; 开始。每个自定义列表项的定义以 &lt;dd&gt; 开始。</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;dl&gt;\n  <br /> &lt;dt&gt;Coffee&lt;/dt&gt;\n  <br /> &lt;dd&gt;- black hot drink&lt;/dd&gt;\n  <br /> &lt;dt&gt;Milk&lt;/dt&gt;\n  <br /> &lt;dd&gt;- white cold drink&lt;/dd&gt;\n  <br /> &lt;/dl&gt; \n </div>\n</div> \n<p>浏览器显示如下：</p> \n<dl> \n <dt>\n  Coffee\n </dt> \n <dd>\n  - black hot drink\n </dd> \n <dt>\n  Milk\n </dt> \n <dd>\n  - white cold drink\n </dd> \n</dl> \n<hr />\n<h2>注意事项 - 有用提示</h2> \n<p><b>提示:</b> 列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</p> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists_ordered\">不同类型的有序列表</a><br /> 本例演示不同类型的有序列表。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists_unordered\">不同类型的无序列表</a><br /> 本例演示不同类型的无序列表。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists2\">嵌套列表</a><br /> 本例演示如何嵌套列表。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_nestedlists2\">嵌套列表 2</a><br /> 本例演示更复杂的嵌套列表。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists3\">自定义列表</a><br /> 本例演示一个定义列表。</p> \n<hr />\n<h2>HTML 列表标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/tags/tag-ol.html\">&lt;ol&gt;</a></td> \n   <td>定义有序列表</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/tags/tag-ul.html\">&lt;ul&gt;</a></td> \n   <td>定义无序列表</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/tags/tag-li.html\">&lt;li&gt;</a></td> \n   <td>定义列表项</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-dl.html\">&lt;dl&gt;</a></td> \n   <td>定义定义列表</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/tags/tag-dt.html\">&lt;dt&gt;</a></td> \n   <td>自定义列表项目</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/tags/tag-dd.html\">&lt;dd&gt;</a></td> \n   <td>定义自定列表项的描述</td> \n  </tr> \n </tbody>\n</table>', '<h1>HTML <span class=\"color_h1\">列表</span></h1><hr/><p>HTML中列表中共有三种：有序列表、无序列表和定义列表。</p><p>从语义上来讲，三组标签分别对应不同具有含义的列表：无序列表适合成员之间无级别顺序关系的情形；有序列表适合各项目之间存在顺序关系的情形；定义列表用于一个术语名对应多重定义或者多个术语名同一个给出的定义。</p><hr/><h2>HTML无序列表</h2><p>无序列表是一组使用黑点状进行标记的项目，它使用&lt;li&gt;包含在&lt;ul&gt;标签（unordered lists）内。</p><p>无序列表使用 &lt;ul&gt; 标签</p><pre class=\"brush:html;toolbar:false\">&lt;ul&gt;&nbsp;&nbsp;\n&nbsp;&lt;li&gt;Coffee&lt;/li&gt;&nbsp;&nbsp;\n&nbsp;&lt;li&gt;Milk&lt;/li&gt;&nbsp;&nbsp;\n&lt;/ul&gt;</pre><p><a href=\"/Home/DIY/18.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p>浏览器显示如下：</p><ul class=\" list-paddingleft-2\"><li><p>Coffee</p></li><li><p>Milk</p></li></ul><hr/><h2>HTML 有序列表</h2><p>有序列表是一列使用数字进行标记的项目，它使用&lt;li&gt;包含于&lt;ol&gt;标签（ordered lists）内</p><pre class=\"brush:html;toolbar:false\">&lt;ol&gt;&nbsp;&nbsp;\n&nbsp;&lt;li&gt;Coffee&lt;/li&gt;&nbsp;&nbsp;\n&nbsp;&lt;li&gt;Milk&lt;/li&gt;&nbsp;&nbsp;\n&lt;/ol&gt;</pre><p><a href=\"/Home/DIY/19.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p>浏览器中显示如下：</p><ol class=\" list-paddingleft-2\"><li><p>Coffee</p></li><li><p>Milk</p></li></ol><hr/><h2>HTML 自定义列表</h2><p>定义列表语义上表示项目及其注释的组合，它以&lt;dl&gt;标签（definition lists）开始，自定义列表项以&lt;dt&gt;（definition title）开始，自定义列表项的定义以&lt;dd&gt;（definition description）开始。</p><pre class=\"brush:html;toolbar:false\">&lt;dl&gt;&nbsp;&nbsp;\n&nbsp;&lt;dt&gt;Coffee&lt;/dt&gt;&nbsp;&nbsp;\n&nbsp;&lt;dd&gt;-&nbsp;black&nbsp;hot&nbsp;drink&lt;/dd&gt;&nbsp;&nbsp;\n&nbsp;&lt;dt&gt;Milk&lt;/dt&gt;&nbsp;&nbsp;\n&nbsp;&lt;dd&gt;-&nbsp;white&nbsp;cold&nbsp;drink&lt;/dd&gt;&nbsp;&nbsp;\n&lt;/dl&gt;</pre><p><a href=\"/Home/DIY/20.html\" target=\"_blank\" title=\"在线测试\">在线测试</a></p><p>浏览器显示如下：</p><ul class=\" list-paddingleft-2\"><li><p>Coffee</p></li><li><p>- black hot drink</p></li><li><p>Milk</p></li><li><p>- white cold drink</p></li></ul><hr/><h2>有用提示</h2><p><strong>提示:</strong> 学习了这么多控制网页显示的HTML标签，读者可以初步制作纯文章页面了。本节学习HTML中的列表元素，列表形式在网站设计中占有比较大的比重，显示信息非常整齐直观，便于用户理解。在后面的CSS样式学习中将大量使用到列表元素的高级作用。&nbsp;</p>', 'HTML 列表');
INSERT INTO `schoolcontent` VALUES ('16', '16', '<h1>HTML <span class=\"color_h1\">&lt;div&gt; 和&lt;span&gt;</span></h1> \n<hr />\n<p class=\"intro\">HTML 可以通过 &lt;div&gt; 和 &lt;span&gt;将元素组合起来。</p> \n<hr />\n<h2>HTML 区块元素</h2> \n<p>大多数 HTML 元素被定义为<strong>块级元素</strong>或<strong>内联元素</strong>。</p> \n<p>块级元素在浏览器显示时，通常会以新行来开始（和结束）。</p> \n<p>实例: &lt;h1&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;table&gt; </p> \n<hr />\n<h2>HTML 内联元素</h2> \n<p>内联元素在显示时通常不会以新行开始。</p> \n<p>实例: &lt;b&gt;, &lt;td&gt;, &lt;a&gt;, &lt;img&gt;</p> \n<hr />\n<h2>HTML &lt;div&gt; 元素</h2> \n<p>HTML &lt;div&gt; 元素是块级元素，它可用于组合其他 HTML 元素的容器。</p> \n<p> &lt;div&gt; 元素没有特定的含义。除此之外，由于它属于块级元素，浏览器会在其前后显示折行。</p> \n<p>如果与 CSS 一同使用，&lt;div&gt; 元素可用于对大的内容块设置样式属性。</p> \n<p>&lt;div&gt; 元素的另一个常见的用途是文档布局。它取代了使用表格定义布局的老式方法。使用 &lt;table&gt; 元素进行文档布局不是表格的正确用法。&lt;table&gt; 元素的作用是显示表格化的数据。</p> \n<hr />\n<h2>HTML &lt;span&gt; 与元素</h2> \n<p>HTML &lt;span&gt; 元素是内联元素，可用作文本的容器</p> \n<p>&lt;span&gt; 元素也没有特定的含义。 </p> \n<p>当与 CSS 一同使用时，&lt;span&gt; 元素可用于为部分文本设置样式属性。</p> \n<hr />\n<h2>HTML 分组标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-div.html\">&lt;div&gt;</a></td> \n   <td>定义了文档的区域，块级 (block-level)</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-span.html\">&lt;span&gt;</a></td> \n   <td>用来组合文档中的行内元素， 内联元素(inline)</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML <div> 和<span>|HTML 区块元素|HTML 内联元素|HTML <div> 元素|HTML <span> 与元素|HTML 分组标签|');
INSERT INTO `schoolcontent` VALUES ('17', '17', '<h1>HTML <span class=\"color_h1\">布局</span></h1> \n<hr />\n<p class=\"intro\">网页布局对改善网站的外观非常重要。</p> \n<p class=\"intro\">请慎重设计您的网页布局。</p> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_layout_divs\">使用 &lt;div&gt; 元素的网页布局</a><br /> 如何使用 &lt;div&gt; 元素添加布局。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_layout_tables\">使用 &lt;table&gt; 元素的网页布局</a><br /> 如何使用 &lt;table&gt; 元素添加布局。</p> \n<hr />\n<h2>网站布局</h2> \n<p>大多数网站会把内容安排到多个列中（就像杂志或报纸那样）。</p> \n<p>大多数网站可以使用 &lt;div&gt; 或者 &lt;table&gt; 元素来创建多列。CSS 用于对元素进行定位，或者为页面创建背景以及色彩丰富的外观。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 虽然我们可以使用HTML table标签来设计出漂亮的布局，但是table标签是不建议作为布局工具使用的 - 表格不是布局工具。</td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<hr />\n<h2>HTML 布局 - 使用&lt;div&gt; 元素</h2> \n<p>div 元素是用于分组 HTML 元素的块级元素。</p> \n<p>下面的例子使用五个 div 元素来创建多列布局：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;body&gt;\n  <br /> \n  <br /> &lt;div id=&quot;container&quot; style=&quot;width:500px&quot;&gt;\n  <br /> \n  <br /> &lt;div id=&quot;header&quot; style=&quot;background-color:#FFA500;&quot;&gt;\n  <br /> &lt;h1 style=&quot;margin-bottom:0;&quot;&gt;Main Title of Web Page&lt;/h1&gt;&lt;/div&gt;\n  <br /> \n  <br /> &lt;div id=&quot;menu&quot; style=&quot;background-color:#FFD700;height:200px;width:100px;float:left;&quot;&gt;\n  <br /> &lt;b&gt;Menu&lt;/b&gt;&lt;br&gt;\n  <br /> HTML&lt;br&gt;\n  <br /> CSS&lt;br&gt;\n  <br /> JavaScript&lt;/div&gt;\n  <br /> \n  <br /> &lt;div id=&quot;content&quot; style=&quot;background-color:#EEEEEE;height:200px;width:400px;float:left;&quot;&gt;\n  <br /> Content goes here&lt;/div&gt;\n  <br /> \n  <br /> &lt;div id=&quot;footer&quot; style=&quot;background-color:#FFA500;clear:both;text-align:center;&quot;&gt;\n  <br /> Copyright &copy; W3Schools.com&lt;/div&gt;\n  <br /> \n  <br /> &lt;/div&gt;\n  <br /> \n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div>\n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_layout_divs\">尝试一下 &raquo;</a> \n</div> \n<p>上面的 HTML 代码会产生如下结果：</p> \n<div style=\"width:500px;\"> \n <div style=\"background-color:#FFA500;\"> \n  <h1 style=\"margin-bottom:0;\">Main Title of Web Page</h1>\n </div> \n <div style=\"background-color:#FFD700;height:200px;width:100px;float:left;\"> \n  <b>Menu</b>\n  <br /> HTML\n  <br /> CSS\n  <br /> JavaScript\n </div> \n <div style=\"background-color:#eeeeee;height:200px;width:400px;float:left;\">\n   Content goes here\n </div> \n <div style=\"background-color:#FFA500;clear:both;text-align:center;\">\n   Copyright &copy; W3CSchool.cc\n </div> \n</div> \n<br /> \n<hr />\n<h2>HTML 布局 - 使用表格</h2> \n<p>使用 HTML &lt;table&gt; 标签是创建布局的一种简单的方式。</p> \n<p>大多数站点可以使用 &lt;div&gt; 或者 &lt;table&gt; 元素来创建多列。CSS 用于对元素进行定位，或者为页面创建背景以及色彩丰富的外观。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 即使可以使用 HTML 表格来创建漂亮的布局，但设计表格的目的是呈现表格化数据 - 表格不是布局工具！</td> \n  </tr>\n </tbody>\n</table> \n<p>下面的例子使用三行两列的表格 - 第一和最后一行使用 colspan 属性来横跨两列：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;body&gt;\n  <br /> \n  <br /> &lt;table width=&quot;500&quot; border=&quot;0&quot;&gt;\n  <br /> &lt;tr&gt;\n  <br /> &lt;td colspan=&quot;2&quot; style=&quot;background-color:#FFA500;&quot;&gt;\n  <br /> &lt;h1&gt;Main Title of Web Page&lt;/h1&gt;\n  <br /> &lt;/td&gt;\n  <br /> &lt;/tr&gt;\n  <br /> \n  <br /> &lt;tr&gt;\n  <br /> &lt;td style=&quot;background-color:#FFD700;width:100px;&quot;&gt;\n  <br /> &lt;b&gt;Menu&lt;/b&gt;&lt;br&gt;\n  <br /> HTML&lt;br&gt;\n  <br /> CSS&lt;br&gt;\n  <br /> JavaScript\n  <br /> &lt;/td&gt;\n  <br /> &lt;td style=&quot;background-color:#EEEEEE;height:200px;width:400px;&quot;&gt;\n  <br /> Content goes here&lt;/td&gt;\n  <br /> &lt;/tr&gt;\n  <br /> \n  <br /> &lt;tr&gt;\n  <br /> &lt;td colspan=&quot;2&quot; style=&quot;background-color:#FFA500;text-align:center;&quot;&gt;\n  <br /> Copyright &copy; W3Schools.com&lt;/td&gt;\n  <br /> &lt;/tr&gt;\n  <br /> &lt;/table&gt;\n  <br /> \n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div>\n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_layout_tables\">尝试一下 &raquo;</a> \n</div> \n<p>上面的 HTML 代码会产生以下结果： </p> \n<table width=\"500\" border=\"0\"> \n <tbody>\n  <tr> \n   <td colspan=\"2\" style=\"background-color:#FFA500;\"> <h1>Main Title of Web Page</h1> </td> \n  </tr> \n  <tr> \n   <td style=\"background-color:#FFD700;width:100px;text-align:top;\"> <b>Menu</b><br /> HTML<br /> CSS<br /> JavaScript </td> \n   <td style=\"background-color:#eeeeee;height:200px;width:400px;text-align:top;\"> Content goes here</td> \n  </tr> \n  <tr> \n   <td colspan=\"2\" style=\"background-color:#FFA500;text-align:center;\"> Copyright &copy; W3CSchool.cc/td&gt; </td>\n  </tr> \n </tbody>\n</table> \n<br /> \n<hr />\n<h2>HTML 布局 - 有用的提示</h2> \n<p><b>Tip:</b> 使用 CSS 最大的好处是，如果把 CSS 代码存放到外部样式表中，那么站点会更易于维护。通过编辑单一的文件，就可以改变所有页面的布局。如需学习更多有关 CSS 的知识，请访问我们的<a href=\"http://www.runoob.com/css/default.php\">CSS 教程</a>.</p> \n<p><b>Tip:</b> 由于创建高级的布局非常耗时，使用模板是一个快速的选项。通过搜索引擎可以找到很多免费的网站模板（您可以使用这些预先构建好的网站布局，并优化它们）。</p> \n<hr />\n<h2>HTML 布局标签</h2>\n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"30%\" align=\"left\">标签</th>\n   <th align=\"left\">描述</th>\n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-div.html\">&lt;div&gt;</a></td>\n   <td>定义文档区块，块级(block-level)</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-span.html\">&lt;span&gt;</a></td>\n   <td>定义 span，用来组合文档中的行内元素。</td>\n  </tr>\n </tbody>\n</table>', null, 'HTML 布局|Main Title of Web Page|Main Title of Web Page|在线实例|网站布局|HTML 布局 - 使用<div> 元素|实例|HTML 布局 - 使用表格|实例|HTML 布局 - 有用的提示|HTML 布局标签|');
INSERT INTO `schoolcontent` VALUES ('18', '18', '<h1>HTML <span class=\"color_h1\">表单和输入</span></h1> \n<hr /> \n<p class=\"intro\">HTML 表单用于搜集不同类型的用户输入。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" /> \n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_input\">创建文本字段 (Text field)</a><br /> 本例演示如何在 HTML 页面创建文本域。用户可以在文本域中写入文本。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_inputpassword\">创建密码字段</a><br /> 本例演示如何创建 HTML 的密码域。</p> \n<p>（在本页底端可以找到更多实例。）</p> \n<hr /> \n<h2>HTML 表单</h2> \n<p>表单是一个包含表单元素的区域。</p> \n<p>表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。</p> \n<p>表单使用表单标签 &lt;form&gt; 来设置:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;form&gt;\n  <br /> .\n  <br /> \n  <i>input 元素</i>\n  <br /> .\n  <br /> &lt;/form&gt;\n  <br /> \n </div>\n</div> \n<br /> \n<hr /> \n<h2>HTML 表单 - 输入元素</h2> \n<p>多数情况下被用到的表单标签是输入标签（&lt;input&gt;）。</p>\n<p>输入类型是由类型属性（type）定义的。大多数经常被用到的输入类型如下：</p> \n<hr /> \n<h2>文本域（Text Fields）</h2> \n<p>文本域通过&lt;input type=&quot;text&quot;&gt; 标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域。</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;form&gt;\n  <br /> First name: &lt;input type=&quot;text&quot; name=&quot;firstname&quot;&gt;&lt;br&gt;\n  <br /> Last name: &lt;input type=&quot;text&quot; name=&quot;lastname&quot;&gt;\n  <br /> &lt;/form&gt; \n </div>\n</div> \n<p>浏览器显示如下：</p> \n<form action=\"\">\n  First name: \n <input type=\"text\" name=\"firstname\" size=\"20\" />\n <br /> Last name: \n <input type=\"text\" name=\"lastname\" size=\"20\" /> \n</form> \n<p><b> 注意:</b>表单本身并不可见。同时，在大多数浏览器中，文本域的缺省宽度是20个字符。 </p> \n<hr /> \n<h2>密码字段</h2> \n<p>密码字段通过标签&lt;input type=&quot;password&quot;&gt; 来定义:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;form&gt;\n  <br /> Password: &lt;input type=&quot;password&quot; name=&quot;pwd&quot;&gt;\n  <br /> &lt;/form&gt; \n </div>\n</div> \n<p>浏览器显示效果如下:</p> \n<form action=\"\">\n  Password: \n <input type=\"password\" name=\"pwd\" /> \n</form> \n<p><b>注意:</b>密码字段字符不会明文显示，而是以星号或圆点替代。</p> \n<hr /> \n<h2>单选按钮（Radio Buttons）</h2> \n<p>&lt;input type=&quot;radio&quot;&gt; 标签定义了表单单选框选项</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;form&gt;\n  <br /> &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot;&gt;Male&lt;br&gt;\n  <br /> &lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;Female\n  <br /> &lt;/form&gt; \n </div>\n</div> \n<p>浏览器显示效果如下:</p> \n<form action=\"\"> \n <input type=\"radio\" name=\"sex\" value=\"male\" />Male\n <br /> \n <input type=\"radio\" name=\"sex\" value=\"female\" />Female \n</form> \n<hr /> \n<h2>复选框（Checkboxes）</h2> \n<p>&lt;input type=&quot;checkbox&quot;&gt; 定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项。</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;form&gt;\n  <br /> &lt;input type=&quot;checkbox&quot; name=&quot;vehicle&quot; value=&quot;Bike&quot;&gt;I have a bike&lt;br&gt;\n  <br /> &lt;input type=&quot;checkbox&quot; name=&quot;vehicle&quot; value=&quot;Car&quot;&gt;I have a car \n  <br /> &lt;/form&gt; \n </div>\n</div> \n<p>浏览器显示效果如下:</p> \n<form action=\"\"> \n <input type=\"checkbox\" name=\"vehicle\" value=\"Bike\" />I have a bike\n <br /> \n <input type=\"checkbox\" name=\"vehicle\" value=\"Car\" />I have a car \n</form> \n<hr /> \n<h2>提交按钮(Submit Button)</h2> \n<p>&lt;input type=&quot;submit&quot;&gt; 定义了提交按钮.</p> \n<p>当用户单击确认按钮时，表单的内容会被传送到另一个文件。表单的动作属性定义了目的文件的文件名。由动作属性定义的这个文件通常会对接收到的输入数据进行相关的处理。:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;form name=&quot;input&quot; action=&quot;html_form_action.php&quot; method=&quot;get&quot;&gt;\n  <br /> Username: &lt;input type=&quot;text&quot; name=&quot;user&quot;&gt;\n  <br /> &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n  <br /> &lt;/form&gt; \n </div>\n</div> \n<p>浏览器显示效果如下:</p> \n<form name=\"input0\" target=\"_blank\" action=\"/try/demo_source/html_form_action.php\" method=\"get\">\n  Username: \n <input type=\"text\" name=\"user\" size=\"20\" />\n <input type=\"submit\" value=\"Submit\" /> \n</form> \n<p> 假如您在上面的文本框内键入几个字母，然后点击确认按钮，那么输入数据会传送到 &quot;html_form_action.php&quot; 的页面。该页面将显示出输入的结果。 </p> \n<hr /> \n<h2> <img border=\"0\" align=\"middle\" src=\"http://www.runoob.com/images/tryitpic.gif\" width=\"44\" height=\"46\" alt=\"Try it\" /> 更多实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_radio\">单选按钮(Radio buttons)</a><br /> 本例演示如何在 HTML 中创建单选按钮。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_checkbox\">复选框(Checkboxes)</a><br /> 本例演示如何在 HTML 页中创建复选框。用户可以选中或取消选取复选框。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_select2\">简单的下拉列表</a><br /> 本例演示如何在 HTML 页面中创建简单的下拉列表框。下拉列表框是一个可选列表。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_select3\">预选下拉列表</a><br /> 本例演示如何创建一个简单的带有预选值的下拉列表。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_textarea\">文本域(Textarea)</a><br /> 本例演示如何创建文本域（多行文本输入控件）。用户可在文本域中写入文本。可写入字符的字数不受限制。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_button\">创建按钮</a><br /> 本例演示如何创建按钮。你可以对按钮上的文字进行自定义。</p> \n<h2> <img border=\"0\" align=\"middle\" src=\"http://www.runoob.com/images/tryitpic.gif\" width=\"44\" height=\"46\" alt=\"Try it\" /> 表单实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_legend\">带边框的表单</a><br /> 本例演示如何在数据周围绘制一个带标题的框。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_form_submit\">带有输入框和确认按钮的表单</a><br /> 本例演示如何向页面添加表单。此表单包含两个输入框和一个确认按钮。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_form_checkbox\">带有复选框的表单</a><br /> 此表单包含两个复选框和一个确认按钮。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_form_radio\">带有单选按钮的表单</a><br /> 此表单包含两个单选框和一个确认按钮。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_form_mail\">从表单发送电子邮件</a><br /> 此例演示如何从表单发送电子邮件。</p> \n<hr /> \n<h2>HTML 表单标签</h2> \n<p><span class=\"new\" style=\"float:left;\">New</span>&nbsp;: HTML5新标签</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-form.html\">&lt;form&gt;</a></td> \n   <td> 定义供用户输入的表单</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-input.html\">&lt;input&gt;</a></td> \n   <td>定义输入域</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-textarea.html\">&lt;textarea&gt;</a></td> \n   <td>定义文本域 (一个多行的输入控件)</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-label.html\">&lt;label&gt;</a></td> \n   <td>定义了 &lt;input&gt; 元素的标签，一般为输入标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-fieldset.html\">&lt;fieldset&gt;</a></td> \n   <td>定义了一组相关的表单元素，并使用外框包含起来</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-legend.html\">&lt;legend&gt;</a></td> \n   <td>定义了 &lt;fieldset&gt; 元素的标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-select.html\">&lt;select&gt;</a></td> \n   <td>定义了下拉选项列表</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-optgroup.html\">&lt;optgroup&gt;</a></td> \n   <td>定义选项组</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-option.html\">&lt;option&gt;</a></td> \n   <td>定义下拉列表中的选项</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-button.html\">&lt;button&gt;</a></td> \n   <td>定义一个点击按钮</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-datalist.html\">&lt;datalist&gt;</a><span class=\"new\">New</span></td> \n   <td>指定一个预先定义的输入控件选项列表</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-keygen.html\">&lt;keygen&gt;</a><span class=\"new\">New</span></td> \n   <td>定义了表单的密钥对生成器字段</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-output.html\">&lt;output&gt;</a><span class=\"new\">New</span></td> \n   <td>定义一个计算结果</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 表单和输入|在线实例|HTML 表单|HTML 表单 - 输入元素|文本域（Text Fields）|密码字段|单选按钮（Radio Buttons）|复选框（Checkboxes）|提交按钮(Submit Button)|更多实例|表单实例|HTML 表单标签|');
INSERT INTO `schoolcontent` VALUES ('19', '19', '<h1>HTML <span class=\"color_h1\">框架</span></h1> \n<hr />\n<p class=\"intro\">通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。</p> \n<iframe src=\"/html/\" height=\"300px\" width=\"99%\"></iframe> \n<hr />\n<p><b>iframe语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   &lt;iframe src=&quot;\n  <em>URL</em>&quot;&gt;&lt;/iframe&gt; \n </div>\n</div> \n<p>该URL指向不同的网页。</p> \n<hr />\n<h2>Iframe - 设置高度与宽度</h2> \n<p>height 和 width 属性用来定义iframe标签的高度与宽度。</p> \n<p>属性默认以像素为单位, 但是你可以指定其按比例显示 (如：&quot;80%&quot;).</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;iframe src=&quot;demo_iframe.htm&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;&lt;/iframe&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_iframe_height_width\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>Iframe - 移除边框</h2> \n<p>frameborder 属性用于定义iframe表示是否显示边框。</p> \n<p>设置属性值为 &quot;0&quot; 移除iframe的边框:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;iframe src=&quot;demo_iframe.htm&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_iframe_frameborder\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>使用iframe来显示目录链接页面</h2> \n<p>iframe可以显示一个目标链接的页面</p> \n<p>目标链接的属性必须使用iframe的属性，如下实例:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;iframe src=&quot;demo_iframe.htm&quot; name=&quot;iframe_a&quot;&gt;&lt;/iframe&gt;\n  <br /> &lt;p&gt;&lt;a href=&quot;http://www.runoob.com&quot; target=&quot;iframe_a&quot;&gt;RUNOOB.COM&lt;/a&gt;&lt;/p&gt; \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_iframe_target\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>HTML iframe 标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">说明</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-iframe.html\">&lt;iframe&gt;</a></td> \n   <td>定义一个内联的iframe</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 框架|Iframe - 设置高度与宽度|实例|Iframe - 移除边框|实例|使用iframe来显示目录链接页面|实例|HTML iframe 标签|');
INSERT INTO `schoolcontent` VALUES ('20', '20', '<h1>HTML <span class=\"color_h1\">颜色</span></h1> \n<hr />\n<p class=\"intro\"> HTML 颜色由红色、绿色、蓝色混合而成。</p> \n<hr />\n<h2>Color Values </h2> \n<p>HTML 颜色由一个十六进制符号来定义，这个符号由红色、绿色和蓝色的值组成（RGB）。 </p> \n<p>种颜色的最小值是0（十六进制：#00）。最大值是255（十六进制：#FF）。</p> \n<p>这个表格给出了由三种颜色混合而成的具体效果：</p> \n<div class=\"example\"> \n <h2 class=\"example\">颜色值</h2> \n <table class=\"reference notranslate\"> \n  <tbody>\n   <tr> \n    <th xstyle=\"background-color:white\" width=\"50%\">颜色(Color)</th> \n    <th xstyle=\"background-color:white\" width=\"25%\">颜色十六进制(Color HEX)</th> \n    <th xstyle=\"background-color:white\" width=\"25%\">颜色RGB(Color RGB)</th> \n   </tr> \n   <tr> \n    <td bgcolor=\"#000000\">&nbsp;</td> \n    <td>#000000</td> \n    <td>rgb(0,0,0)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#FF0000\">&nbsp;</td> \n    <td>#FF0000</td> \n    <td>rgb(255,0,0)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#00FF00\">&nbsp;</td> \n    <td>#00FF00</td> \n    <td>rgb(0,255,0)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#0000FF\">&nbsp;</td> \n    <td>#0000FF</td> \n    <td>rgb(0,0,255)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#FFFF00\">&nbsp;</td> \n    <td>#FFFF00</td> \n    <td>rgb(255,255,0)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#00FFFF\">&nbsp;</td> \n    <td>#00FFFF</td> \n    <td>rgb(0,255,255)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#FF00FF\">&nbsp;</td> \n    <td>#FF00FF</td> \n    <td>rgb(255,0,255)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#C0C0C0\">&nbsp;</td> \n    <td>#C0C0C0</td> \n    <td>rgb(192,192,192)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#FFFFFF\">&nbsp;</td> \n    <td>#FFFFFF</td> \n    <td>rgb(255,255,255)</td> \n   </tr> \n  </tbody>\n </table> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_colorhex\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr />\n<h2>1600万种不同颜色</h2> \n<p>三种颜色 红，绿，蓝的组合从0到255，一共有1600万种不同颜色(256 x 256 x 256)。</p> \n<p>在下面的颜色表中你会看到不同的结果，从0到255的红色，同时设置绿色和蓝色的值为0,随着红色的值变化，不同的值都显示了不同的颜色。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"50%\">Red Light</th> \n   <th width=\"20%\">Color HEX</th> \n   <th width=\"30%\">Color RGB</th> \n  </tr> \n  <tr> \n   <td bgcolor=\"#000000\">&nbsp;</td> \n   <td>#000000&nbsp;</td> \n   <td>rgb(0,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#080000\">&nbsp;</td> \n   <td>#080000</td> \n   <td>rgb(8,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#100000\">&nbsp;</td> \n   <td>#100000</td> \n   <td>rgb(16,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#180000\">&nbsp;</td> \n   <td>#180000</td> \n   <td>rgb(24,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#200000\">&nbsp;</td> \n   <td>#200000</td> \n   <td>rgb(32,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#280000\">&nbsp;</td> \n   <td>#280000</td> \n   <td>rgb(40,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#300000\">&nbsp;</td> \n   <td>#300000</td> \n   <td>rgb(48,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#380000\">&nbsp;</td> \n   <td>#380000</td> \n   <td>rgb(56,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#400000\">&nbsp;</td> \n   <td>#400000</td> \n   <td>rgb(64,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#480000\">&nbsp;</td> \n   <td>#480000</td> \n   <td>rgb(72,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#500000\">&nbsp;</td> \n   <td>#500000</td> \n   <td>rgb(80,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#580000\">&nbsp;</td> \n   <td>#580000</td> \n   <td>rgb(88,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#600000\">&nbsp;</td> \n   <td>#600000</td> \n   <td>rgb(96,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#680000\">&nbsp;</td> \n   <td>#680000</td> \n   <td>rgb(104,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#700000\">&nbsp;</td> \n   <td>#700000</td> \n   <td>rgb(112,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#780000\">&nbsp;</td> \n   <td>#780000</td> \n   <td>rgb(120,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#800000\">&nbsp;</td> \n   <td>#800000</td> \n   <td>rgb(128,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#880000\">&nbsp;</td> \n   <td>#880000</td> \n   <td>rgb(136,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#900000\">&nbsp;</td> \n   <td>#900000</td> \n   <td>rgb(144,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#980000\">&nbsp;</td> \n   <td>#980000</td> \n   <td>rgb(152,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#A00000\">&nbsp;</td> \n   <td>#A00000</td> \n   <td>rgb(160,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#A80000\">&nbsp;</td> \n   <td>#A80000</td> \n   <td>rgb(168,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#B00000\">&nbsp;</td> \n   <td>#B00000</td> \n   <td>rgb(176,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#B80000\">&nbsp;</td> \n   <td>#B80000</td> \n   <td>rgb(184,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#C00000\">&nbsp;</td> \n   <td>#C00000</td> \n   <td>rgb(192,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#C80000\">&nbsp;</td> \n   <td>#C80000</td> \n   <td>rgb(200,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#D00000\">&nbsp;</td> \n   <td>#D00000</td> \n   <td>rgb(208,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#D80000\">&nbsp;</td> \n   <td>#D80000</td> \n   <td>rgb(216,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#E00000\">&nbsp;</td> \n   <td>#E00000</td> \n   <td>rgb(224,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#E80000\">&nbsp;</td> \n   <td>#E80000</td>\n   <td>rgb(232,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#F00000\">&nbsp;</td> \n   <td>#F00000</td> \n   <td>rgb(240,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#F80000\">&nbsp;</td> \n   <td>#F80000</td> \n   <td>rgb(248,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#FF0000\">&nbsp;</td> \n   <td>#FF0000</td> \n   <td>rgb(255,0,0)</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr />\n<h2>灰暗色调</h2> \n<p>以下展示了灰色到黑色的渐变</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"50%\">Gray Shades</th> \n   <th width=\"20%\">Color HEX</th> \n   <th width=\"30%\">Color RGB</th> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#000000\">&nbsp;</td> \n   <td width=\"20%\">#000000&nbsp;</td> \n   <td width=\"30%\">rgb(0,0,0)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#080808\">&nbsp;</td> \n   <td width=\"20%\">#080808&nbsp;</td> \n   <td width=\"30%\">rgb(8,8,8)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#101010\">&nbsp;</td> \n   <td width=\"20%\">#101010&nbsp;</td> \n   <td width=\"30%\">rgb(16,16,16)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#181818\">&nbsp;</td> \n   <td width=\"20%\">#181818&nbsp;</td> \n   <td width=\"30%\">rgb(24,24,24)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#202020\">&nbsp;</td> \n   <td width=\"20%\">#202020&nbsp;</td> \n   <td width=\"30%\">rgb(32,32,32)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#282828\">&nbsp;</td> \n   <td width=\"20%\">#282828&nbsp;</td> \n   <td width=\"30%\">rgb(40,40,40)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#303030\">&nbsp;</td> \n   <td width=\"20%\">#303030&nbsp;</td> \n   <td width=\"30%\">rgb(48,48,48)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#383838\">&nbsp;</td> \n   <td width=\"20%\">#383838&nbsp;</td> \n   <td width=\"30%\">rgb(56,56,56)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#404040\">&nbsp;</td> \n   <td width=\"20%\">#404040&nbsp;</td> \n   <td width=\"30%\">rgb(64,64,64)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#484848\">&nbsp;</td> \n   <td width=\"20%\">#484848&nbsp;</td> \n   <td width=\"30%\">rgb(72,72,72)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#505050\">&nbsp;</td> \n   <td width=\"20%\">#505050&nbsp;</td> \n   <td width=\"30%\">rgb(80,80,80)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#585858\">&nbsp;</td> \n   <td width=\"20%\">#585858&nbsp;</td> \n   <td width=\"30%\">rgb(88,88,88)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#606060\">&nbsp;</td> \n   <td width=\"20%\">#606060&nbsp;</td> \n   <td width=\"30%\">rgb(96,96,96)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#686868\">&nbsp;</td> \n   <td width=\"20%\">#686868&nbsp;</td> \n   <td width=\"30%\">rgb(104,104,104)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#707070\">&nbsp;</td> \n   <td width=\"20%\">#707070&nbsp;</td> \n   <td width=\"30%\">rgb(112,112,112)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#787878\">&nbsp;</td> \n   <td width=\"20%\">#787878&nbsp;</td> \n   <td width=\"30%\">rgb(120,120,120)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#808080\">&nbsp;</td> \n   <td width=\"20%\">#808080&nbsp;</td> \n   <td width=\"30%\">rgb(128,128,128)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#888888\">&nbsp;</td> \n   <td width=\"20%\">#888888&nbsp;</td> \n   <td width=\"30%\">rgb(136,136,136)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#909090\">&nbsp;</td> \n   <td width=\"20%\">#909090&nbsp;</td> \n   <td width=\"30%\">rgb(144,144,144)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#989898\">&nbsp;</td> \n   <td width=\"20%\">#989898&nbsp;</td> \n   <td width=\"30%\">rgb(152,152,152)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#A0A0A0\">&nbsp;</td> \n   <td width=\"20%\">#A0A0A0&nbsp;</td> \n   <td width=\"30%\">rgb(160,160,160)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#A8A8A8\">&nbsp;</td> \n   <td width=\"20%\">#A8A8A8&nbsp;</td> \n   <td width=\"30%\">rgb(168,168,168)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#B0B0B0\">&nbsp;</td> \n   <td width=\"20%\">#B0B0B0&nbsp;</td> \n   <td width=\"30%\">rgb(176,176,176)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#B8B8B8\">&nbsp;</td> \n   <td width=\"20%\">#B8B8B8&nbsp;</td> \n   <td width=\"30%\">rgb(184,184,184)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#C0C0C0\">&nbsp;</td> \n   <td width=\"20%\">#C0C0C0&nbsp;</td> \n   <td width=\"30%\">rgb(192,192,192)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#C8C8C8\">&nbsp;</td> \n   <td width=\"20%\">#C8C8C8&nbsp;</td> \n   <td width=\"30%\">rgb(200,200,200)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#D0D0D0\">&nbsp;</td> \n   <td width=\"20%\">#D0D0D0&nbsp;</td> \n   <td width=\"30%\">rgb(208,208,208)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#D8D8D8\">&nbsp;</td> \n   <td width=\"20%\">#D8D8D8&nbsp;</td> \n   <td width=\"30%\">rgb(216,216,216)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#E0E0E0\">&nbsp;</td> \n   <td width=\"20%\">#E0E0E0&nbsp;</td> \n   <td width=\"30%\">rgb(224,224,224)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#E8E8E8\">&nbsp;</td> \n   <td width=\"20%\">#E8E8E8&nbsp;</td> \n   <td width=\"30%\">rgb(232,232,232)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#F0F0F0\">&nbsp;</td> \n   <td width=\"20%\">#F0F0F0&nbsp;</td> \n   <td width=\"30%\">rgb(240,240,240)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#F8F8F8\">&nbsp;</td> \n   <td width=\"20%\">#F8F8F8&nbsp;</td> \n   <td width=\"30%\">rgb(248,248,248)&nbsp;</td> \n  </tr> \n  <tr> \n   <td width=\"50%\" bgcolor=\"#FFFFFF\">&nbsp;</td> \n   <td width=\"20%\">#FFFFFF&nbsp;</td> \n   <td width=\"30%\">rgb(255,255,255)&nbsp;</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr />\n<h2>Web安全色?</h2> \n<p>数年以前，当大多数计算机仅支持 256 种颜色的时候，一系列 216 种 Web 安全色作为 Web 标准被建议使用。其中的原因是，微软和 Mac 操作系统使用了 40 种不同的保留的固定系统颜色（双方大约各使用 20 种）。</p> \n<p>我们不确定如今这么做的意义有多大，因为越来越多的计算机有能力处理数百万种颜色，不过做选择还是你自己。</p> \n<p>最初，216 跨平台 web 安全色被用来确保：当计算机使用 256 色调色板时，所有的计算机能够正确地显示所有的颜色。</p> \n<p></p> \n<table border=\"1\" width=\"100%\"> \n <tbody>\n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#000000\">000000</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#000033\">000033</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#000066\">000066</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#000099\">000099</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#0000cc\">0000CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#0000ff\">0000FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#003300\">003300</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#003333\">003333</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#003366\">003366</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#003399\">003399</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#0033cc\">0033CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#0033ff\">0033FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#006600\">006600</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#006633\">006633</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#006666\">006666</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#006699\">006699</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#0066cc\">0066CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#0066ff\">0066FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#009900\">009900</td> \n   <td align=\"center\" bgcolor=\"#009933\">009933</td> \n   <td align=\"center\" bgcolor=\"#009966\">009966</td> \n   <td align=\"center\" bgcolor=\"#009999\">009999</td> \n   <td align=\"center\" bgcolor=\"#0099cc\">0099CC</td> \n   <td align=\"center\" bgcolor=\"#0099ff\">0099FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#00cc00\">00CC00</td> \n   <td align=\"center\" bgcolor=\"#00cc33\">00CC33</td> \n   <td align=\"center\" bgcolor=\"#00cc66\">00CC66</td> \n   <td align=\"center\" bgcolor=\"#00cc99\">00CC99</td> \n   <td align=\"center\" bgcolor=\"#00cccc\">00CCCC</td> \n   <td align=\"center\" bgcolor=\"#00ccff\">00CCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#00ff00\">00FF00</td> \n   <td align=\"center\" bgcolor=\"#00ff33\">00FF33</td> \n   <td align=\"center\" bgcolor=\"#00ff66\">00FF66</td> \n   <td align=\"center\" bgcolor=\"#00ff99\">00FF99</td> \n   <td align=\"center\" bgcolor=\"#00ffcc\">00FFCC</td> \n   <td align=\"center\" bgcolor=\"#00ffff\">00FFFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#330000\">330000</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#330033\">330033</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#330066\">330066</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#330099\">330099</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#3300cc\">3300CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#3300ff\">3300FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#333300\">333300</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#333333\">333333</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#333366\">333366</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#333399\">333399</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#3333cc\">3333CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#3333ff\">3333FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#336600\">336600</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#336633\">336633</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#336666\">336666</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#336699\">336699</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#3366cc\">3366CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#3366ff\">3366FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#339900\">339900</td> \n   <td align=\"center\" bgcolor=\"#339933\">339933</td> \n   <td align=\"center\" bgcolor=\"#339966\">339966</td> \n   <td align=\"center\" bgcolor=\"#339999\">339999</td> \n   <td align=\"center\" bgcolor=\"#3399cc\">3399CC</td> \n   <td align=\"center\" bgcolor=\"#3399ff\">3399FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#33cc00\">33CC00</td> \n   <td align=\"center\" bgcolor=\"#33cc33\">33CC33</td> \n   <td align=\"center\" bgcolor=\"#33cc66\">33CC66</td> \n   <td align=\"center\" bgcolor=\"#33cc99\">33CC99</td> \n   <td align=\"center\" bgcolor=\"#33cccc\">33CCCC</td> \n   <td align=\"center\" bgcolor=\"#33ccff\">33CCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#33ff00\">33FF00</td> \n   <td align=\"center\" bgcolor=\"#33ff33\">33FF33</td> \n   <td align=\"center\" bgcolor=\"#33ff66\">33FF66</td> \n   <td align=\"center\" bgcolor=\"#33ff99\">33FF99</td> \n   <td align=\"center\" bgcolor=\"#33ffcc\">33FFCC</td> \n   <td align=\"center\" bgcolor=\"#33ffff\">33FFFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#660000\">660000</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#660033\">660033</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#660066\">660066</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#660099\">660099</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#6600cc\">6600CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#6600ff\">6600FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#663300\">663300</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#663333\">663333</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#663366\">663366</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#663399\">663399</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#6633cc\">6633CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#6633ff\">6633FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#666600\">666600</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#666633\">666633</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#666666\">666666</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#666699\">666699</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#6666cc\">6666CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#6666ff\">6666FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#669900\">669900</td> \n   <td align=\"center\" bgcolor=\"#669933\">669933</td> \n   <td align=\"center\" bgcolor=\"#669966\">669966</td> \n   <td align=\"center\" bgcolor=\"#669999\">669999</td> \n   <td align=\"center\" bgcolor=\"#6699cc\">6699CC</td> \n   <td align=\"center\" bgcolor=\"#6699ff\">6699FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#66cc00\">66CC00</td> \n   <td align=\"center\" bgcolor=\"#66cc33\">66CC33</td> \n   <td align=\"center\" bgcolor=\"#66cc66\">66CC66</td> \n   <td align=\"center\" bgcolor=\"#66cc99\">66CC99</td> \n   <td align=\"center\" bgcolor=\"#66cccc\">66CCCC</td> \n   <td align=\"center\" bgcolor=\"#66ccff\">66CCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#66ff00\">66FF00</td> \n   <td align=\"center\" bgcolor=\"#66ff33\">66FF33</td> \n   <td align=\"center\" bgcolor=\"#66ff66\">66FF66</td> \n   <td align=\"center\" bgcolor=\"#66ff99\">66FF99</td> \n   <td align=\"center\" bgcolor=\"#66ffcc\">66FFCC</td> \n   <td align=\"center\" bgcolor=\"#66ffff\">66FFFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#990000\">990000</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#990033\">990033</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#990066\">990066</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#990099\">990099</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#9900cc\">9900CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#9900ff\">9900FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#993300\">993300</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#993333\">993333</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#993366\">993366</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#993399\">993399</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#9933cc\">9933CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#9933ff\">9933FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#996600\">996600</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#996633\">996633</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#996666\">996666</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#996699\">996699</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#9966cc\">9966CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#9966ff\">9966FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#999900\">999900</td> \n   <td align=\"center\" bgcolor=\"#999933\">999933</td> \n   <td align=\"center\" bgcolor=\"#999966\">999966</td> \n   <td align=\"center\" bgcolor=\"#999999\">999999</td> \n   <td align=\"center\" bgcolor=\"#9999cc\">9999CC</td> \n   <td align=\"center\" bgcolor=\"#9999ff\">9999FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#99cc00\">99CC00</td> \n   <td align=\"center\" bgcolor=\"#99cc33\">99CC33</td> \n   <td align=\"center\" bgcolor=\"#99cc66\">99CC66</td> \n   <td align=\"center\" bgcolor=\"#99cc99\">99CC99</td> \n   <td align=\"center\" bgcolor=\"#99cccc\">99CCCC</td> \n   <td align=\"center\" bgcolor=\"#99ccff\">99CCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#99ff00\">99FF00</td> \n   <td align=\"center\" bgcolor=\"#99ff33\">99FF33</td> \n   <td align=\"center\" bgcolor=\"#99ff66\">99FF66</td> \n   <td align=\"center\" bgcolor=\"#99ff99\">99FF99</td> \n   <td align=\"center\" bgcolor=\"#99ffcc\">99FFCC</td> \n   <td align=\"center\" bgcolor=\"#99ffff\">99FFFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc0000\">CC0000</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc0033\">CC0033</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc0066\">CC0066</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc0099\">CC0099</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc00cc\">CC00CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc00ff\">CC00FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc3300\">CC3300</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc3333\">CC3333</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc3366\">CC3366</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc3399\">CC3399</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc33cc\">CC33CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc33ff\">CC33FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc6600\">CC6600</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc6633\">CC6633</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc6666\">CC6666</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc6699\">CC6699</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc66cc\">CC66CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#cc66ff\">CC66FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#cc9900\">CC9900</td> \n   <td align=\"center\" bgcolor=\"#cc9933\">CC9933</td> \n   <td align=\"center\" bgcolor=\"#cc9966\">CC9966</td> \n   <td align=\"center\" bgcolor=\"#cc9999\">CC9999</td> \n   <td align=\"center\" bgcolor=\"#cc99cc\">CC99CC</td> \n   <td align=\"center\" bgcolor=\"#cc99ff\">CC99FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#cccc00\">CCCC00</td> \n   <td align=\"center\" bgcolor=\"#cccc33\">CCCC33</td> \n   <td align=\"center\" bgcolor=\"#cccc66\">CCCC66</td> \n   <td align=\"center\" bgcolor=\"#cccc99\">CCCC99</td> \n   <td align=\"center\" bgcolor=\"#cccccc\">CCCCCC</td> \n   <td align=\"center\" bgcolor=\"#ccccff\">CCCCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#ccff00\">CCFF00</td> \n   <td align=\"center\" bgcolor=\"#ccff33\">CCFF33</td> \n   <td align=\"center\" bgcolor=\"#ccff66\">CCFF66</td> \n   <td align=\"center\" bgcolor=\"#ccff99\">CCFF99</td> \n   <td align=\"center\" bgcolor=\"#ccffcc\">CCFFCC</td> \n   <td align=\"center\" bgcolor=\"#ccffff\">CCFFFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff0000\">FF0000</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff0033\">FF0033</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff0066\">FF0066</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff0099\">FF0099</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff00cc\">FF00CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff00ff\">FF00FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff3300\">FF3300</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff3333\">FF3333</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff3366\">FF3366</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff3399\">FF3399</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff33cc\">FF33CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff33ff\">FF33FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff6600\">FF6600</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff6633\">FF6633</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff6666\">FF6666</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff6699\">FF6699</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff66cc\">FF66CC</td> \n   <td align=\"center\" style=\"color:#ffffff\" bgcolor=\"#ff66ff\">FF66FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#ff9900\">FF9900</td> \n   <td align=\"center\" bgcolor=\"#ff9933\">FF9933</td> \n   <td align=\"center\" bgcolor=\"#ff9966\">FF9966</td> \n   <td align=\"center\" bgcolor=\"#ff9999\">FF9999</td> \n   <td align=\"center\" bgcolor=\"#ff99cc\">FF99CC</td> \n   <td align=\"center\" bgcolor=\"#ff99ff\">FF99FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#ffcc00\">FFCC00</td> \n   <td align=\"center\" bgcolor=\"#ffcc33\">FFCC33</td> \n   <td align=\"center\" bgcolor=\"#ffcc66\">FFCC66</td> \n   <td align=\"center\" bgcolor=\"#ffcc99\">FFCC99</td> \n   <td align=\"center\" bgcolor=\"#ffcccc\">FFCCCC</td> \n   <td align=\"center\" bgcolor=\"#ffccff\">FFCCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#ffff00\">FFFF00</td> \n   <td align=\"center\" bgcolor=\"#ffff33\">FFFF33</td> \n   <td align=\"center\" bgcolor=\"#ffff66\">FFFF66</td> \n   <td align=\"center\" bgcolor=\"#ffff99\">FFFF99</td> \n   <td align=\"center\" bgcolor=\"#ffffcc\">FFFFCC</td> \n   <td align=\"center\" bgcolor=\"#ffffff\">FFFFFF</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 颜色|Color Values|颜色值|1600万种不同颜色|灰暗色调|Web安全色?|');
INSERT INTO `schoolcontent` VALUES ('21', '21', '<h1>HTML <span class=\"color_h1\">颜色名</span></h1> \n<hr /> \n<h2>目前所有浏览器都支持以下颜色名。</h2> \n<p>141个颜色名称是在HTML和CSS颜色规范定义的（17标准颜色，再加124）。下表列出了所有颜色的值，包括十六进制值。</p> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> <b>提示:</b> 17标准颜色：黑色，蓝色，水，紫红色，灰色，绿色，石灰，栗色，海军，橄榄，橙，紫，红，白，银，蓝绿色，黄色。点击其中一个颜色名称（或一个十六进制值）就可以查看与不同文字颜色搭配的背景颜色。：</p> \n<hr />\n<h2>按颜色名排序</h2> \n<p><a href=\"http://www.runoob.com/html/html-colorvalues.html\">按十六进制的值排序</a></p> \n<p>单击一个颜色名或者 16 进制值，就可以查看与不同文字颜色搭配的背景颜色。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"25%\">Color Name</th> \n   <th align=\"left\" width=\"15%\">HEX</th> \n   <th align=\"left\" width=\"43%\">Color</th> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AliceBlue\">AliceBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0F8FF\">#F0F8FF</a></td> \n   <td bgcolor=\"#F0F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AntiqueWhite\">AntiqueWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAEBD7\">#FAEBD7</a></td> \n   <td bgcolor=\"#FAEBD7\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aqua\">Aqua</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aquamarine\">Aquamarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFFD4\">#7FFFD4</a></td> \n   <td bgcolor=\"#7FFFD4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Azure\">Azure</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFFF\">#F0FFFF</a></td> \n   <td bgcolor=\"#F0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Beige\">Beige</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5DC\">#F5F5DC</a></td> \n   <td bgcolor=\"#F5F5DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Bisque\">Bisque</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4C4\">#FFE4C4</a></td> \n   <td bgcolor=\"#FFE4C4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Black\">Black</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000000\">#000000</a></td> \n   <td bgcolor=\"#000000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlanchedAlmond\">BlanchedAlmond</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEBCD\">#FFEBCD</a></td> \n   <td bgcolor=\"#FFEBCD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Blue\">Blue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000FF\">#0000FF</a></td> \n   <td bgcolor=\"#0000FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlueViolet\">BlueViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8A2BE2\">#8A2BE2</a></td> \n   <td bgcolor=\"#8A2BE2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Brown\">Brown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A52A2A\">#A52A2A</a></td> \n   <td bgcolor=\"#A52A2A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BurlyWood\">BurlyWood</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DEB887\">#DEB887</a></td> \n   <td bgcolor=\"#DEB887\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CadetBlue\">CadetBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=5F9EA0\">#5F9EA0</a></td> \n   <td bgcolor=\"#5F9EA0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chartreuse\">Chartreuse</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFF00\">#7FFF00</a></td> \n   <td bgcolor=\"#7FFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chocolate\">Chocolate</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2691E\">#D2691E</a></td> \n   <td bgcolor=\"#D2691E\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Coral\">Coral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF7F50\">#FF7F50</a></td> \n   <td bgcolor=\"#FF7F50\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CornflowerBlue\">CornflowerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6495ED\">#6495ED</a></td> \n   <td bgcolor=\"#6495ED\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cornsilk\">Cornsilk</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF8DC\">#FFF8DC</a></td> \n   <td bgcolor=\"#FFF8DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Crimson\">Crimson</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DC143C\">#DC143C</a></td> \n   <td bgcolor=\"#DC143C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cyan\">Cyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkBlue\">DarkBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00008B\">#00008B</a></td> \n   <td bgcolor=\"#00008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkCyan\">DarkCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008B8B\">#008B8B</a></td> \n   <td bgcolor=\"#008B8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGoldenRod\">DarkGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B8860B\">#B8860B</a></td> \n   <td bgcolor=\"#B8860B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGray\">DarkGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A9A9A9\">#A9A9A9</a></td> \n   <td bgcolor=\"#A9A9A9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGreen\">DarkGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=006400\">#006400</a></td> \n   <td bgcolor=\"#006400\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkKhaki\">DarkKhaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BDB76B\">#BDB76B</a></td> \n   <td bgcolor=\"#BDB76B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkMagenta\">DarkMagenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B008B\">#8B008B</a></td> \n   <td bgcolor=\"#8B008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOliveGreen\">DarkOliveGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=556B2F\">#556B2F</a></td> \n   <td bgcolor=\"#556B2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrange\">DarkOrange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF8C00\">#FF8C00</a></td> \n   <td bgcolor=\"#FF8C00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrchid\">DarkOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9932CC\">#9932CC</a></td> \n   <td bgcolor=\"#9932CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkRed\">DarkRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B0000\">#8B0000</a></td> \n   <td bgcolor=\"#8B0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSalmon\">DarkSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E9967A\">#E9967A</a></td> \n   <td bgcolor=\"#E9967A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSeaGreen\">DarkSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8FBC8F\">#8FBC8F</a></td> \n   <td bgcolor=\"#8FBC8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateBlue\">DarkSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=483D8B\">#483D8B</a></td> \n   <td bgcolor=\"#483D8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateGray\">DarkSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2F4F4F\">#2F4F4F</a></td> \n   <td bgcolor=\"#2F4F4F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkTurquoise\">DarkTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00CED1\">#00CED1</a></td> \n   <td bgcolor=\"#00CED1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkViolet\">DarkViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9400D3\">#9400D3</a></td> \n   <td bgcolor=\"#9400D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepPink\">DeepPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF1493\">#FF1493</a></td> \n   <td bgcolor=\"#FF1493\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepSkyBlue\">DeepSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00BFFF\">#00BFFF</a></td> \n   <td bgcolor=\"#00BFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DimGray\">DimGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=696969\">#696969</a></td> \n   <td bgcolor=\"#696969\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DodgerBlue\">DodgerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=1E90FF\">#1E90FF</a></td> \n   <td bgcolor=\"#1E90FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FireBrick\">FireBrick</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B22222\">#B22222</a></td> \n   <td bgcolor=\"#B22222\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FloralWhite\">FloralWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAF0\">#FFFAF0</a></td> \n   <td bgcolor=\"#FFFAF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=ForestGreen\">ForestGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=228B22\">#228B22</a></td> \n   <td bgcolor=\"#228B22\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Fuchsia\">Fuchsia</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gainsboro\">Gainsboro</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DCDCDC\">#DCDCDC</a></td> \n   <td bgcolor=\"#DCDCDC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GhostWhite\">GhostWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F8F8FF\">#F8F8FF</a></td> \n   <td bgcolor=\"#F8F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gold\">Gold</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFD700\">#FFD700</a></td> \n   <td bgcolor=\"#FFD700\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GoldenRod\">GoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DAA520\">#DAA520</a></td> \n   <td bgcolor=\"#DAA520\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gray\">Gray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808080\">#808080</a></td> \n   <td bgcolor=\"#808080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Green\">Green</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008000\">#008000</a></td> \n   <td bgcolor=\"#008000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GreenYellow\">GreenYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADFF2F\">#ADFF2F</a></td> \n   <td bgcolor=\"#ADFF2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HoneyDew\">HoneyDew</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFF0\">#F0FFF0</a></td> \n   <td bgcolor=\"#F0FFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HotPink\">HotPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF69B4\">#FF69B4</a></td> \n   <td bgcolor=\"#FF69B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=IndianRed \">IndianRed </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD5C5C\">#CD5C5C</a></td> \n   <td bgcolor=\"#CD5C5C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Indigo  \">Indigo </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4B0082\">#4B0082</a></td> \n   <td bgcolor=\"#4B0082\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Ivory\">Ivory</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFF0\">#FFFFF0</a></td> \n   <td bgcolor=\"#FFFFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Khaki\">Khaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0E68C\">#F0E68C</a></td> \n   <td bgcolor=\"#F0E68C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lavender\">Lavender</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E6E6FA\">#E6E6FA</a></td> \n   <td bgcolor=\"#E6E6FA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LavenderBlush\">LavenderBlush</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF0F5\">#FFF0F5</a></td> \n   <td bgcolor=\"#FFF0F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LawnGreen\">LawnGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7CFC00\">#7CFC00</a></td> \n   <td bgcolor=\"#7CFC00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LemonChiffon\">LemonChiffon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFACD\">#FFFACD</a></td> \n   <td bgcolor=\"#FFFACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightBlue\">LightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADD8E6\">#ADD8E6</a></td> \n   <td bgcolor=\"#ADD8E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCoral\">LightCoral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F08080\">#F08080</a></td> \n   <td bgcolor=\"#F08080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCyan\">LightCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E0FFFF\">#E0FFFF</a></td> \n   <td bgcolor=\"#E0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGoldenRodYellow\">LightGoldenRodYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAFAD2\">#FAFAD2</a></td> \n   <td bgcolor=\"#FAFAD2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGray\">LightGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D3D3D3\">#D3D3D3</a></td> \n   <td bgcolor=\"#D3D3D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGreen\">LightGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=90EE90\">#90EE90</a></td> \n   <td bgcolor=\"#90EE90\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightPink\">LightPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFB6C1\">#FFB6C1</a></td> \n   <td bgcolor=\"#FFB6C1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSalmon\">LightSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA07A\">#FFA07A</a></td> \n   <td bgcolor=\"#FFA07A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSeaGreen\">LightSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=20B2AA\">#20B2AA</a></td> \n   <td bgcolor=\"#20B2AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSkyBlue\">LightSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEFA\">#87CEFA</a></td> \n   <td bgcolor=\"#87CEFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSlateGray\">LightSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=778899\">#778899</a></td> \n   <td bgcolor=\"#778899\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSteelBlue\">LightSteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0C4DE\">#B0C4DE</a></td> \n   <td bgcolor=\"#B0C4DE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightYellow\">LightYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFE0\">#FFFFE0</a></td> \n   <td bgcolor=\"#FFFFE0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lime\">Lime</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF00\">#00FF00</a></td> \n   <td bgcolor=\"#00FF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LimeGreen\">LimeGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=32CD32\">#32CD32</a></td> \n   <td bgcolor=\"#32CD32\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Linen\">Linen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAF0E6\">#FAF0E6</a></td> \n   <td bgcolor=\"#FAF0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Magenta\">Magenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Maroon\">Maroon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800000\">#800000</a></td> \n   <td bgcolor=\"#800000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumAquaMarine\">MediumAquaMarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=66CDAA\">#66CDAA</a></td> \n   <td bgcolor=\"#66CDAA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumBlue\">MediumBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000CD\">#0000CD</a></td> \n   <td bgcolor=\"#0000CD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumOrchid\">MediumOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BA55D3\">#BA55D3</a></td> \n   <td bgcolor=\"#BA55D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumPurple\">MediumPurple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9370DB\">#9370DB</a></td> \n   <td bgcolor=\"#9370DB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSeaGreen\">MediumSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=3CB371\">#3CB371</a></td> \n   <td bgcolor=\"#3CB371\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSlateBlue\">MediumSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7B68EE\">#7B68EE</a></td> \n   <td bgcolor=\"#7B68EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSpringGreen\">MediumSpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FA9A\">#00FA9A</a></td> \n   <td bgcolor=\"#00FA9A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumTurquoise\">MediumTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=48D1CC\">#48D1CC</a></td> \n   <td bgcolor=\"#48D1CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumVioletRed\">MediumVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C71585\">#C71585</a></td> \n   <td bgcolor=\"#C71585\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MidnightBlue\">MidnightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=191970\">#191970</a></td> \n   <td bgcolor=\"#191970\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MintCream\">MintCream</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5FFFA\">#F5FFFA</a></td> \n   <td bgcolor=\"#F5FFFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MistyRose\">MistyRose</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4E1\">#FFE4E1</a></td> \n   <td bgcolor=\"#FFE4E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Moccasin\">Moccasin</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4B5\">#FFE4B5</a></td> \n   <td bgcolor=\"#FFE4B5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=NavajoWhite\">NavajoWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDEAD\">#FFDEAD</a></td> \n   <td bgcolor=\"#FFDEAD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Navy\">Navy</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000080\">#000080</a></td> \n   <td bgcolor=\"#000080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OldLace\">OldLace</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FDF5E6\">#FDF5E6</a></td> \n   <td bgcolor=\"#FDF5E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Olive\">Olive</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808000\">#808000</a></td> \n   <td bgcolor=\"#808000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OliveDrab\">OliveDrab</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6B8E23\">#6B8E23</a></td> \n   <td bgcolor=\"#6B8E23\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orange\">Orange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA500\">#FFA500</a></td> \n   <td bgcolor=\"#FFA500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OrangeRed\">OrangeRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF4500\">#FF4500</a></td> \n   <td bgcolor=\"#FF4500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orchid\">Orchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DA70D6\">#DA70D6</a></td> \n   <td bgcolor=\"#DA70D6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGoldenRod\">PaleGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EEE8AA\">#EEE8AA</a></td> \n   <td bgcolor=\"#EEE8AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGreen\">PaleGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=98FB98\">#98FB98</a></td> \n   <td bgcolor=\"#98FB98\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleTurquoise\">PaleTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=AFEEEE\">#AFEEEE</a></td> \n   <td bgcolor=\"#AFEEEE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleVioletRed\">PaleVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DB7093\">#DB7093</a></td> \n   <td bgcolor=\"#DB7093\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PapayaWhip\">PapayaWhip</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEFD5\">#FFEFD5</a></td> \n   <td bgcolor=\"#FFEFD5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PeachPuff\">PeachPuff</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDAB9\">#FFDAB9</a></td> \n   <td bgcolor=\"#FFDAB9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Peru\">Peru</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD853F\">#CD853F</a></td> \n   <td bgcolor=\"#CD853F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Pink\">Pink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFC0CB\">#FFC0CB</a></td> \n   <td bgcolor=\"#FFC0CB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Plum\">Plum</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DDA0DD\">#DDA0DD</a></td> \n   <td bgcolor=\"#DDA0DD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PowderBlue\">PowderBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0E0E6\">#B0E0E6</a></td> \n   <td bgcolor=\"#B0E0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Purple\">Purple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800080\">#800080</a></td> \n   <td bgcolor=\"#800080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Red\">Red</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF0000\">#FF0000</a></td> \n   <td bgcolor=\"#FF0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RosyBrown\">RosyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BC8F8F\">#BC8F8F</a></td> \n   <td bgcolor=\"#BC8F8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RoyalBlue\">RoyalBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4169E1\">#4169E1</a></td> \n   <td bgcolor=\"#4169E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SaddleBrown\">SaddleBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B4513\">#8B4513</a></td> \n   <td bgcolor=\"#8B4513\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Salmon\">Salmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FA8072\">#FA8072</a></td> \n   <td bgcolor=\"#FA8072\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SandyBrown\">SandyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F4A460\">#F4A460</a></td> \n   <td bgcolor=\"#F4A460\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaGreen\">SeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2E8B57\">#2E8B57</a></td> \n   <td bgcolor=\"#2E8B57\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaShell\">SeaShell</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF5EE\">#FFF5EE</a></td> \n   <td bgcolor=\"#FFF5EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Sienna\">Sienna</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A0522D\">#A0522D</a></td> \n   <td bgcolor=\"#A0522D\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Silver\">Silver</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C0C0C0\">#C0C0C0</a></td> \n   <td bgcolor=\"#C0C0C0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SkyBlue\">SkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEEB\">#87CEEB</a></td> \n   <td bgcolor=\"#87CEEB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateBlue\">SlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6A5ACD\">#6A5ACD</a></td> \n   <td bgcolor=\"#6A5ACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateGray\">SlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=708090\">#708090</a></td> \n   <td bgcolor=\"#708090\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Snow\">Snow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAFA\">#FFFAFA</a></td> \n   <td bgcolor=\"#FFFAFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SpringGreen\">SpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF7F\">#00FF7F</a></td> \n   <td bgcolor=\"#00FF7F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SteelBlue\">SteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4682B4\">#4682B4</a></td> \n   <td bgcolor=\"#4682B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tan\">Tan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2B48C\">#D2B48C</a></td> \n   <td bgcolor=\"#D2B48C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Teal\">Teal</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008080\">#008080</a></td> \n   <td bgcolor=\"#008080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Thistle\">Thistle</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D8BFD8\">#D8BFD8</a></td> \n   <td bgcolor=\"#D8BFD8\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tomato\">Tomato</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF6347\">#FF6347</a></td> \n   <td bgcolor=\"#FF6347\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Turquoise\">Turquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=40E0D0\">#40E0D0</a></td> \n   <td bgcolor=\"#40E0D0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Violet\">Violet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EE82EE\">#EE82EE</a></td> \n   <td bgcolor=\"#EE82EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Wheat\">Wheat</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5DEB3\">#F5DEB3</a></td> \n   <td bgcolor=\"#F5DEB3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=White\">White</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFFF\">#FFFFFF</a></td> \n   <td bgcolor=\"#FFFFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=WhiteSmoke\">WhiteSmoke</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5F5\">#F5F5F5</a></td> \n   <td bgcolor=\"#F5F5F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Yellow\">Yellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFF00\">#FFFF00</a></td> \n   <td bgcolor=\"#FFFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=YellowGreen\">YellowGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9ACD32\">#9ACD32</a></td> \n   <td bgcolor=\"#9ACD32\">&nbsp;</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 颜色名|目前所有浏览器都支持以下颜色名。|按颜色名排序|');
INSERT INTO `schoolcontent` VALUES ('22', '22', '<h1>HTML <span class=\"color_h1\">颜色值</span></h1> \n<p class=\"intro\">颜色由红(R)、绿(G)、蓝(B)组成。</p> \n<hr /> \n<h2>颜色值</h2> \n<p>颜色值由十六进制来表示红、绿、蓝（RGB）。</p> \n<p>每个颜色的最低值为0(十六进制为00)，最高值为255(十六进制为FF)。</p> \n<p>十六进制值的写法为#号后跟三个或六个十六进制字符。</p> \n<p>三位数表示法为：#RGB，转换为6位数表示为：#RRGGBB。</p> \n<div class=\"example\"> \n <h2 class=\"example\">颜色实例</h2> \n <table class=\"reference\"> \n  <tbody>\n   <tr> \n    <th style=\"width:25%\">颜色</th> \n    <th style=\"width:25%\">3位十六进制颜色值</th> \n    <th style=\"width:25%\">6位十六进制颜色值</th> \n    <th>RGB</th> \n   </tr> \n   <tr> \n    <td style=\"background-color:#000000\">&nbsp;</td> \n    <td>#000</td> \n    <td>#000000</td> \n    <td>rgb(0,0,0)</td> \n   </tr> \n   <tr> \n    <td style=\"background-color:#FF0000\">&nbsp;</td> \n    <td>#F00</td> \n    <td>#FF0000</td> \n    <td>rgb(255,0,0)</td> \n   </tr> \n   <tr> \n    <td style=\"background-color:#00FF00\">&nbsp;</td> \n    <td>#0F0</td> \n    <td>#00FF00</td> \n    <td>rgb(0,255,0)</td> \n   </tr> \n   <tr> \n    <td style=\"background-color:#0000FF\">&nbsp;</td> \n    <td>#00F</td> \n    <td>#0000FF</td> \n    <td>rgb(0,0,255)</td> \n   </tr> \n   <tr> \n    <td style=\"background-color:#FFFF00\">&nbsp;</td> \n    <td>#FF0</td> \n    <td>#FFFF00</td> \n    <td>rgb(255,255,0)</td> \n   </tr> \n   <tr> \n    <td style=\"background-color:#00FFFF\">&nbsp;</td> \n    <td>#0FF</td> \n    <td>#00FFFF</td> \n    <td>rgb(0,255,255)</td> \n   </tr> \n   <tr> \n    <td style=\"background-color:#FF00FF\">&nbsp;</td> \n    <td>#F0F</td> \n    <td>#FF00FF</td> \n    <td>rgb(255,0,255)</td> \n   </tr> \n   <tr> \n    <td style=\"background-color:#C0C0C0\">&nbsp;</td> \n    <td>#888</td> \n    <td>#888888</td> \n    <td>rgb(136,136,136)</td> \n   </tr> \n   <tr> \n    <td style=\"background-color:#FFFFFF\">&nbsp;</td> \n    <td>#FFF</td> \n    <td>#FFFFFF</td> \n    <td>rgb(255,255,255)</td> \n   </tr> \n  </tbody>\n </table> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryhtml_colorhex\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr />\n<h2>通过十六进制（Hex）的颜色值排序</h2> \n<p><a href=\"http://www.w3cschool.cc/html/html-colornames.html\" target=\"_blank\">查看以颜色名称排序的颜色列表</a></p> \n<table class=\"reference notranslate\" cellspacing=\"0\" border=\"1\" width=\"100%\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"25%\">Color Name</th> \n   <th align=\"left\" width=\"15%\">HEX</th> \n   <th align=\"left\" width=\"60%\">Color</th> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Black\">Black</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000000\">#000000</a></td> \n   <td bgcolor=\"#000000\">&nbsp;</td>\n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Navy\">Navy</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000080\">#000080</a></td> \n   <td bgcolor=\"#000080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkBlue\">DarkBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00008B\">#00008B</a></td> \n   <td bgcolor=\"#00008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumBlue\">MediumBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000CD\">#0000CD</a></td> \n   <td bgcolor=\"#0000CD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Blue\">Blue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000FF\">#0000FF</a></td> \n   <td bgcolor=\"#0000FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGreen\">DarkGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=006400\">#006400</a></td> \n   <td bgcolor=\"#006400\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Green\">Green</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008000\">#008000</a></td> \n   <td bgcolor=\"#008000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Teal\">Teal</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008080\">#008080</a></td> \n   <td bgcolor=\"#008080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkCyan\">DarkCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008B8B\">#008B8B</a></td> \n   <td bgcolor=\"#008B8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepSkyBlue\">DeepSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00BFFF\">#00BFFF</a></td> \n   <td bgcolor=\"#00BFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkTurquoise\">DarkTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00CED1\">#00CED1</a></td> \n   <td bgcolor=\"#00CED1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSpringGreen\">MediumSpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FA9A\">#00FA9A</a></td> \n   <td bgcolor=\"#00FA9A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lime\">Lime</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF00\">#00FF00</a></td> \n   <td bgcolor=\"#00FF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SpringGreen\">SpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF7F\">#00FF7F</a></td> \n   <td bgcolor=\"#00FF7F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aqua\">Aqua</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cyan\">Cyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MidnightBlue\">MidnightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=191970\">#191970</a></td> \n   <td bgcolor=\"#191970\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DodgerBlue\">DodgerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=1E90FF\">#1E90FF</a></td> \n   <td bgcolor=\"#1E90FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSeaGreen\">LightSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=20B2AA\">#20B2AA</a></td> \n   <td bgcolor=\"#20B2AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=ForestGreen\">ForestGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=228B22\">#228B22</a></td> \n   <td bgcolor=\"#228B22\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaGreen\">SeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2E8B57\">#2E8B57</a></td> \n   <td bgcolor=\"#2E8B57\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateGray\">DarkSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2F4F4F\">#2F4F4F</a></td> \n   <td bgcolor=\"#2F4F4F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LimeGreen\">LimeGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=32CD32\">#32CD32</a></td> \n   <td bgcolor=\"#32CD32\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSeaGreen\">MediumSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=3CB371\">#3CB371</a></td> \n   <td bgcolor=\"#3CB371\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Turquoise\">Turquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=40E0D0\">#40E0D0</a></td> \n   <td bgcolor=\"#40E0D0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RoyalBlue\">RoyalBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4169E1\">#4169E1</a></td> \n   <td bgcolor=\"#4169E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SteelBlue\">SteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4682B4\">#4682B4</a></td> \n   <td bgcolor=\"#4682B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateBlue\">DarkSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=483D8B\">#483D8B</a></td> \n   <td bgcolor=\"#483D8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumTurquoise\">MediumTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=48D1CC\">#48D1CC</a></td> \n   <td bgcolor=\"#48D1CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Indigo  \">Indigo </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4B0082\">#4B0082</a></td> \n   <td bgcolor=\"#4B0082\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOliveGreen\">DarkOliveGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=556B2F\">#556B2F</a></td> \n   <td bgcolor=\"#556B2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CadetBlue\">CadetBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=5F9EA0\">#5F9EA0</a></td> \n   <td bgcolor=\"#5F9EA0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CornflowerBlue\">CornflowerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6495ED\">#6495ED</a></td> \n   <td bgcolor=\"#6495ED\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumAquaMarine\">MediumAquaMarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=66CDAA\">#66CDAA</a></td> \n   <td bgcolor=\"#66CDAA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DimGray\">DimGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=696969\">#696969</a></td> \n   <td bgcolor=\"#696969\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateBlue\">SlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6A5ACD\">#6A5ACD</a></td> \n   <td bgcolor=\"#6A5ACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OliveDrab\">OliveDrab</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6B8E23\">#6B8E23</a></td> \n   <td bgcolor=\"#6B8E23\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateGray\">SlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=708090\">#708090</a></td> \n   <td bgcolor=\"#708090\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSlateGray\">LightSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=778899\">#778899</a></td> \n   <td bgcolor=\"#778899\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSlateBlue\">MediumSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7B68EE\">#7B68EE</a></td> \n   <td bgcolor=\"#7B68EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LawnGreen\">LawnGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7CFC00\">#7CFC00</a></td> \n   <td bgcolor=\"#7CFC00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chartreuse\">Chartreuse</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFF00\">#7FFF00</a></td> \n   <td bgcolor=\"#7FFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aquamarine\">Aquamarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFFD4\">#7FFFD4</a></td> \n   <td bgcolor=\"#7FFFD4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Maroon\">Maroon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800000\">#800000</a></td> \n   <td bgcolor=\"#800000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Purple\">Purple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800080\">#800080</a></td> \n   <td bgcolor=\"#800080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Olive\">Olive</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808000\">#808000</a></td> \n   <td bgcolor=\"#808000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gray\">Gray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808080\">#808080</a></td> \n   <td bgcolor=\"#808080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SkyBlue\">SkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEEB\">#87CEEB</a></td> \n   <td bgcolor=\"#87CEEB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSkyBlue\">LightSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEFA\">#87CEFA</a></td> \n   <td bgcolor=\"#87CEFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlueViolet\">BlueViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8A2BE2\">#8A2BE2</a></td> \n   <td bgcolor=\"#8A2BE2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkRed\">DarkRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B0000\">#8B0000</a></td> \n   <td bgcolor=\"#8B0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkMagenta\">DarkMagenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B008B\">#8B008B</a></td> \n   <td bgcolor=\"#8B008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SaddleBrown\">SaddleBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B4513\">#8B4513</a></td> \n   <td bgcolor=\"#8B4513\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSeaGreen\">DarkSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8FBC8F\">#8FBC8F</a></td> \n   <td bgcolor=\"#8FBC8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGreen\">LightGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=90EE90\">#90EE90</a></td> \n   <td bgcolor=\"#90EE90\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumPurple\">MediumPurple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9370DB\">#9370DB</a></td> \n   <td bgcolor=\"#9370DB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkViolet\">DarkViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9400D3\">#9400D3</a></td> \n   <td bgcolor=\"#9400D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGreen\">PaleGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=98FB98\">#98FB98</a></td> \n   <td bgcolor=\"#98FB98\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrchid\">DarkOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9932CC\">#9932CC</a></td> \n   <td bgcolor=\"#9932CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=YellowGreen\">YellowGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9ACD32\">#9ACD32</a></td> \n   <td bgcolor=\"#9ACD32\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Sienna\">Sienna</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A0522D\">#A0522D</a></td> \n   <td bgcolor=\"#A0522D\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Brown\">Brown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A52A2A\">#A52A2A</a></td> \n   <td bgcolor=\"#A52A2A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGray\">DarkGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A9A9A9\">#A9A9A9</a></td> \n   <td bgcolor=\"#A9A9A9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightBlue\">LightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADD8E6\">#ADD8E6</a></td> \n   <td bgcolor=\"#ADD8E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GreenYellow\">GreenYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADFF2F\">#ADFF2F</a></td> \n   <td bgcolor=\"#ADFF2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleTurquoise\">PaleTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=AFEEEE\">#AFEEEE</a></td> \n   <td bgcolor=\"#AFEEEE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSteelBlue\">LightSteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0C4DE\">#B0C4DE</a></td> \n   <td bgcolor=\"#B0C4DE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PowderBlue\">PowderBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0E0E6\">#B0E0E6</a></td> \n   <td bgcolor=\"#B0E0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FireBrick\">FireBrick</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B22222\">#B22222</a></td> \n   <td bgcolor=\"#B22222\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGoldenRod\">DarkGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B8860B\">#B8860B</a></td> \n   <td bgcolor=\"#B8860B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumOrchid\">MediumOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BA55D3\">#BA55D3</a></td> \n   <td bgcolor=\"#BA55D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RosyBrown\">RosyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BC8F8F\">#BC8F8F</a></td> \n   <td bgcolor=\"#BC8F8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkKhaki\">DarkKhaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BDB76B\">#BDB76B</a></td> \n   <td bgcolor=\"#BDB76B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Silver\">Silver</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C0C0C0\">#C0C0C0</a></td> \n   <td bgcolor=\"#C0C0C0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumVioletRed\">MediumVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C71585\">#C71585</a></td> \n   <td bgcolor=\"#C71585\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=IndianRed \">IndianRed </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD5C5C\">#CD5C5C</a></td> \n   <td bgcolor=\"#CD5C5C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Peru\">Peru</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD853F\">#CD853F</a></td> \n   <td bgcolor=\"#CD853F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chocolate\">Chocolate</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2691E\">#D2691E</a></td> \n   <td bgcolor=\"#D2691E\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tan\">Tan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2B48C\">#D2B48C</a></td> \n   <td bgcolor=\"#D2B48C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGray\">LightGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D3D3D3\">#D3D3D3</a></td> \n   <td bgcolor=\"#D3D3D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Thistle\">Thistle</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D8BFD8\">#D8BFD8</a></td> \n   <td bgcolor=\"#D8BFD8\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orchid\">Orchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DA70D6\">#DA70D6</a></td> \n   <td bgcolor=\"#DA70D6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GoldenRod\">GoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DAA520\">#DAA520</a></td> \n   <td bgcolor=\"#DAA520\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleVioletRed\">PaleVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DB7093\">#DB7093</a></td> \n   <td bgcolor=\"#DB7093\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Crimson\">Crimson</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DC143C\">#DC143C</a></td> \n   <td bgcolor=\"#DC143C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gainsboro\">Gainsboro</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DCDCDC\">#DCDCDC</a></td> \n   <td bgcolor=\"#DCDCDC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Plum\">Plum</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DDA0DD\">#DDA0DD</a></td> \n   <td bgcolor=\"#DDA0DD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BurlyWood\">BurlyWood</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DEB887\">#DEB887</a></td> \n   <td bgcolor=\"#DEB887\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCyan\">LightCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E0FFFF\">#E0FFFF</a></td> \n   <td bgcolor=\"#E0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lavender\">Lavender</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E6E6FA\">#E6E6FA</a></td> \n   <td bgcolor=\"#E6E6FA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSalmon\">DarkSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E9967A\">#E9967A</a></td> \n   <td bgcolor=\"#E9967A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Violet\">Violet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EE82EE\">#EE82EE</a></td> \n   <td bgcolor=\"#EE82EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGoldenRod\">PaleGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EEE8AA\">#EEE8AA</a></td> \n   <td bgcolor=\"#EEE8AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCoral\">LightCoral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F08080\">#F08080</a></td> \n   <td bgcolor=\"#F08080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Khaki\">Khaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0E68C\">#F0E68C</a></td> \n   <td bgcolor=\"#F0E68C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AliceBlue\">AliceBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0F8FF\">#F0F8FF</a></td> \n   <td bgcolor=\"#F0F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HoneyDew\">HoneyDew</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFF0\">#F0FFF0</a></td> \n   <td bgcolor=\"#F0FFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Azure\">Azure</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFFF\">#F0FFFF</a></td> \n   <td bgcolor=\"#F0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SandyBrown\">SandyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F4A460\">#F4A460</a></td> \n   <td bgcolor=\"#F4A460\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Wheat\">Wheat</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5DEB3\">#F5DEB3</a></td> \n   <td bgcolor=\"#F5DEB3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Beige\">Beige</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5DC\">#F5F5DC</a></td> \n   <td bgcolor=\"#F5F5DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=WhiteSmoke\">WhiteSmoke</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5F5\">#F5F5F5</a></td> \n   <td bgcolor=\"#F5F5F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MintCream\">MintCream</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5FFFA\">#F5FFFA</a></td> \n   <td bgcolor=\"#F5FFFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GhostWhite\">GhostWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F8F8FF\">#F8F8FF</a></td> \n   <td bgcolor=\"#F8F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Salmon\">Salmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FA8072\">#FA8072</a></td> \n   <td bgcolor=\"#FA8072\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AntiqueWhite\">AntiqueWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAEBD7\">#FAEBD7</a></td> \n   <td bgcolor=\"#FAEBD7\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Linen\">Linen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAF0E6\">#FAF0E6</a></td> \n   <td bgcolor=\"#FAF0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGoldenRodYellow\">LightGoldenRodYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAFAD2\">#FAFAD2</a></td> \n   <td bgcolor=\"#FAFAD2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OldLace\">OldLace</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FDF5E6\">#FDF5E6</a></td> \n   <td bgcolor=\"#FDF5E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Red\">Red</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF0000\">#FF0000</a></td> \n   <td bgcolor=\"#FF0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Fuchsia\">Fuchsia</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Magenta\">Magenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepPink\">DeepPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF1493\">#FF1493</a></td> \n   <td bgcolor=\"#FF1493\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OrangeRed\">OrangeRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF4500\">#FF4500</a></td> \n   <td bgcolor=\"#FF4500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tomato\">Tomato</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF6347\">#FF6347</a></td> \n   <td bgcolor=\"#FF6347\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HotPink\">HotPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF69B4\">#FF69B4</a></td> \n   <td bgcolor=\"#FF69B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Coral\">Coral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF7F50\">#FF7F50</a></td> \n   <td bgcolor=\"#FF7F50\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrange\">DarkOrange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF8C00\">#FF8C00</a></td> \n   <td bgcolor=\"#FF8C00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSalmon\">LightSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA07A\">#FFA07A</a></td> \n   <td bgcolor=\"#FFA07A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orange\">Orange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA500\">#FFA500</a></td> \n   <td bgcolor=\"#FFA500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightPink\">LightPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFB6C1\">#FFB6C1</a></td> \n   <td bgcolor=\"#FFB6C1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Pink\">Pink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFC0CB\">#FFC0CB</a></td> \n   <td bgcolor=\"#FFC0CB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gold\">Gold</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFD700\">#FFD700</a></td> \n   <td bgcolor=\"#FFD700\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PeachPuff\">PeachPuff</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDAB9\">#FFDAB9</a></td> \n   <td bgcolor=\"#FFDAB9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=NavajoWhite\">NavajoWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDEAD\">#FFDEAD</a></td> \n   <td bgcolor=\"#FFDEAD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Moccasin\">Moccasin</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4B5\">#FFE4B5</a></td> \n   <td bgcolor=\"#FFE4B5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Bisque\">Bisque</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4C4\">#FFE4C4</a></td> \n   <td bgcolor=\"#FFE4C4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MistyRose\">MistyRose</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4E1\">#FFE4E1</a></td> \n   <td bgcolor=\"#FFE4E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlanchedAlmond\">BlanchedAlmond</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEBCD\">#FFEBCD</a></td> \n   <td bgcolor=\"#FFEBCD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PapayaWhip\">PapayaWhip</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEFD5\">#FFEFD5</a></td> \n   <td bgcolor=\"#FFEFD5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LavenderBlush\">LavenderBlush</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF0F5\">#FFF0F5</a></td> \n   <td bgcolor=\"#FFF0F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaShell\">SeaShell</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF5EE\">#FFF5EE</a></td> \n   <td bgcolor=\"#FFF5EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cornsilk\">Cornsilk</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF8DC\">#FFF8DC</a></td> \n   <td bgcolor=\"#FFF8DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LemonChiffon\">LemonChiffon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFACD\">#FFFACD</a></td> \n   <td bgcolor=\"#FFFACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FloralWhite\">FloralWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAF0\">#FFFAF0</a></td> \n   <td bgcolor=\"#FFFAF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Snow\">Snow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAFA\">#FFFAFA</a></td> \n   <td bgcolor=\"#FFFAFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Yellow\">Yellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFF00\">#FFFF00</a></td> \n   <td bgcolor=\"#FFFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightYellow\">LightYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFE0\">#FFFFE0</a></td> \n   <td bgcolor=\"#FFFFE0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Ivory\">Ivory</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFF0\">#FFFFF0</a></td> \n   <td bgcolor=\"#FFFFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=White\">White</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFFF\">#FFFFFF</a></td> \n   <td bgcolor=\"#FFFFFF\">&nbsp;</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 颜色值|颜色值|颜色实例|通过十六进制（Hex）的颜色值排序|');
INSERT INTO `schoolcontent` VALUES ('23', '23', '<h1>HTML <span class=\"color_h1\">脚本</span></h1> \n<hr />\n<p class=\"intro\">JavaScript 使 HTML 页面具有更强的动态和交互性。</p> \n<hr />\n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_script\">插入一段脚本</a><br /> 如何将脚本插入 HTML 文档。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_noscript\">使用 &lt;noscript&gt; 标签 </a><br /> 如何应对不支持脚本或禁用脚本的浏览器。</p> \n<hr />\n<h2>HTML &lt;script&gt; 标签</h2> \n<p>&lt;script&gt; 标签用于定义客户端脚本，比如 JavaScript。</p> \n<p>&lt;script&gt; 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。</p> \n<p>JavaScript 最常用于图片操作、表单验证以及内容动态更新。</p> \n<p>下面的脚本会向浏览器输出&quot;Hello World!&quot;：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br /> document.write(&quot;Hello World!&quot;)\n  <br /> &lt;/script&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_script\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><img border=\"0\" src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /><b>Tip:</b> 学习更多关于Javascript教程，请查看<a href=\"http://www.runoob.com/js/js-tutorial.html\">JavaScript 教程</a>!<br /> </p> \n<hr />\n<h2>HTML&lt;noscript&gt; 标签</h2> \n<p>&lt;noscript&gt; 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。</p> \n<p>&lt;noscript&gt;元素可包含普通 HTML 页面的 body 元素中能够找到的所有元素。</p> \n<p>只有在浏览器不支持脚本或者禁用脚本时，才会显示 &lt;noscript&gt; 元素中的内容：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br /> document.write(&quot;Hello World!&quot;)\n  <br /> &lt;/script&gt;\n  <br /> &lt;noscript&gt;Sorry, your browser does not support JavaScript!&lt;/noscript&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_noscript\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>JavaScript体验(来自本站javascript教程)</h2> \n<p>JavaScript实例代码:</p> \n<div class=\"example\"> \n <h2 class=\"example\">JavaScript可以直接在HTMl输出:</h2> \n <div class=\"example_code notranslate\">\n   document.write(&quot;&lt;p&gt;This is a paragraph&lt;/p&gt;&quot;); \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_document_write\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">JavaScript事件响应:</h2> \n <div class=\"example_code notranslate\">\n   &lt;button type=&quot;button&quot; onclick=&quot;myFunction()&quot;&gt;Click Me!&lt;/button&gt;\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_event\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">JavaScript处理 HTML 样式:</h2> \n <div class=\"example_code notranslate\">\n   document.getElementById(&quot;demo&quot;).style.color=&quot;#ff0000&quot;;\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_style\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr />\n<h2>HTML 脚本标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-script.html\">&lt;script&gt;</a></td> \n   <td>定义了客户端脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-noscript.html\">&lt;noscript&gt;</a></td> \n   <td>定义了不支持脚本浏览器输出的文本</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 脚本|在线实例|HTML <script> 标签|实例|HTML<noscript> 标签|实例|JavaScript体验(来自本站javascript教程)|JavaScript可以直接在HTMl输出:|JavaScript事件响应:|JavaScript处理 HTML 样式:|HTML 脚本标签|');
INSERT INTO `schoolcontent` VALUES ('24', '24', '<h1>HTML <span class=\"color_h1\">字符实体</span> </h1> \n<hr /> \n<p class=\"intro\">HTML 中的预留字符必须被替换为字符实体。</p> \n<p class=\"intro\">一些在键盘上找不到的字符也可以使用字符实体来替换。</p> \n<hr /> \n<h2>HTML 实体</h2> \n<p>在 HTML 中，某些字符是预留的。</p> \n<p>在 HTML 中不能使用小于号（&lt;）和大于号（&gt;），这是因为浏览器会误认为它们是标签。</p> \n<p>如果希望正确地显示预留字符，我们必须在 HTML 源代码中使用字符实体（character entities）。 字符实体类似这样：</p> \n<div class=\"code notranslate\">\n <div>\n   &amp;\n  <i>entity_name</i>; \n  <p>或</p> &amp;#\n  <i>entity_number</i>; \n </div>\n</div> \n<p>如需显示小于号，我们必须这样写：<b>&amp;lt;</b> 或<b> &amp;#60;</b> 或 <b>&amp;#060;</b> </p> \n<p><img border=\"0\" src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /><b>提示：</b> 使用实体名而不是数字的好处是，名称易于记忆。不过坏处是，浏览器也许并不支持所有实体名称（对实体数字的支持却很好）。</p> \n<hr /> \n<h2>不间断空格(Non-breaking Space)</h2> \n<p>HTML 中的常用字符实体是不间断空格(&amp;nbsp;)。</p> \n<p>浏览器总是会截短 HTML 页面中的空格。如果您在文本中写 10 个空格，在显示该页面之前，浏览器会删除它们中的 9 个。如需在页面中增加空格的数量，您需要使用 &amp;nbsp; 字符实体。</p> \n<hr />\n<h2>结合音标符</h2> \n<p>发音符号是加到字母上的一个&quot;glyph(字形)&quot;。</p> \n<p>一些变音符号, 如 尖音符 (&nbsp; ̀) 和 抑音符 (&nbsp; ́) 。 </p> \n<p>变音符号可以出现字母的上面和下面，或者字母里面，或者两个字母间。</p> \n<p>变音符号可以与字母、数字字符的组合来使用。</p> \n<p>以下是一些实例:</p> \n<table class=\"reference notranslate\" style=\"font-size:14px\"> \n <tbody>\n  <tr> \n   <th style=\"width:15%\">音标符</th> \n   <th style=\"width:15%\">字符</th> \n   <th>Construct</th> \n   <th style=\"width:15%\">输出结果 </th> \n  </tr> \n  <tr> \n   <td> &nbsp;&nbsp;̀</td> \n   <td>a</td> \n   <td>a&amp;#768;</td> \n   <td>à</td> \n  </tr> \n  <tr> \n   <td> &nbsp;&nbsp;́</td> \n   <td>a</td> \n   <td>a&amp;#769;</td> \n   <td>á</td> \n  </tr> \n  <tr> \n   <td> ̂</td> \n   <td>a</td> \n   <td>a&amp;#770;</td> \n   <td>â</td> \n  </tr> \n  <tr> \n   <td> &nbsp;&nbsp;̃</td> \n   <td>a</td> \n   <td>a&amp;#771;</td> \n   <td>ã</td> \n  </tr> \n  <tr> \n   <td> &nbsp;&nbsp;̀</td> \n   <td>O</td> \n   <td>O&amp;#768;</td> \n   <td>Ò</td> \n  </tr> \n  <tr> \n   <td> &nbsp;&nbsp;́</td> \n   <td>O</td> \n   <td>O&amp;#769;</td> \n   <td>Ó</td> \n  </tr> \n  <tr> \n   <td> ̂</td> \n   <td>O</td> \n   <td>O&amp;#770;</td> \n   <td>Ô</td> \n  </tr> \n  <tr> \n   <td> &nbsp;&nbsp;̃</td> \n   <td>O</td> \n   <td>O&amp;#771;</td> \n   <td>Õ</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>HTML字符实体</h2> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> <p>&nbsp;实体名称对大小写敏感！</p> </td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:20%\">显示结果</th> \n   <th style=\"width:20%\">描述</th> \n   <th style=\"width:30%\">实体名称</th> \n   <th style=\"width:30%\">实体编号</th> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>空格</td> \n   <td>&amp;nbsp;</td> \n   <td>&amp;#160;</td> \n  </tr> \n  <tr> \n   <td>&lt;</td> \n   <td>小于号</td> \n   <td>&amp;lt;</td> \n   <td>&amp;#60;</td> \n  </tr> \n  <tr> \n   <td>&gt;</td> \n   <td>大于号</td> \n   <td>&amp;gt;</td> \n   <td>&amp;#62;</td> \n  </tr> \n  <tr> \n   <td>&amp;</td> \n   <td>和号</td> \n   <td>&amp;amp;</td> \n   <td>&amp;#38;</td> \n  </tr> \n  <tr> \n   <td>&quot;</td> \n   <td>引号</td> \n   <td>&amp;quot;</td> \n   <td>&amp;#34;</td> \n  </tr> \n  <tr> \n   <td>\'</td> \n   <td>撇号&nbsp;</td> \n   <td>&amp;apos; (IE不支持)</td> \n   <td>&amp;#39;</td> \n  </tr> \n  <tr> \n   <td>￠</td> \n   <td>分</td> \n   <td>&amp;cent;</td> \n   <td>&amp;#162;</td> \n  </tr> \n  <tr> \n   <td>&pound;</td> \n   <td>镑</td> \n   <td>&amp;pound;</td> \n   <td>&amp;#163;</td> \n  </tr> \n  <tr> \n   <td>&yen;</td> \n   <td>日元</td> \n   <td>&amp;yen;</td> \n   <td>&amp;#165;</td> \n  </tr> \n  <tr> \n   <td>€</td> \n   <td>欧元</td> \n   <td>&amp;euro;</td> \n   <td>&amp;#8364;</td> \n  </tr> \n  <tr> \n   <td>&sect;</td> \n   <td>小节</td> \n   <td>&amp;sect;</td> \n   <td>&amp;#167;</td> \n  </tr> \n  <tr> \n   <td>&copy;</td> \n   <td>版权</td> \n   <td>&amp;copy;</td> \n   <td>&amp;#169;</td> \n  </tr> \n  <tr> \n   <td>&reg;</td> \n   <td>注册商标</td> \n   <td>&amp;reg;</td> \n   <td>&amp;#174;</td> \n  </tr> \n  <tr> \n   <td>™</td> \n   <td>商标</td> \n   <td>&amp;trade;</td> \n   <td>&amp;#8482;</td> \n  </tr> \n  <tr> \n   <td>&times;</td> \n   <td>乘号</td> \n   <td>&amp;times;</td> \n   <td>&amp;#215;</td> \n  </tr> \n  <tr> \n   <td>&divide;</td> \n   <td>除号</td> \n   <td>&amp;divide;</td> \n   <td>&amp;#247;</td> \n  </tr> \n </tbody>\n</table> \n<p> 查看本站完整的HTML实体：请点击 <a href=\"http://www.runoob.com/tags/ref-entities.html\">HTML 实体参考手册</a>。 </p>', null, 'HTML 字符实体|HTML 实体|不间断空格(Non-breaking Space)|结合音标符|HTML字符实体|');
INSERT INTO `schoolcontent` VALUES ('25', '25', '<h1>HTML <span class=\"color_h1\"> 统一资源定位器(Uniform Resource Locators)</span> </h1> \n<hr /> \n<p>URL是一个网页地址。</p> \n<p>URL可以由字母组成，如&quot;W3CSchools.cc&quot;，或互联网协议（IP）地址： 192.68.20.50。大多数人进入网站使用网站域名来访问，因为 名字比数字更容易记住。</p> \n<hr /> \n<h2>URL - 统一资源定位器</h2> \n<p>Web浏览器通过URL从Web服务器请求页面。</p> \n<p>当您点击 HTML 页面中的某个链接时，对应的 &lt;a&gt; 标签指向万维网上的一个地址。</p> \n<p>一个统一资源定位器(URL) 用于定位万维网上的文档。</p> \n<p>一个网页地址实例: <a target=\"_blank\" href=\"http://www.w3cschool.cc/html/html-tutorial.html\"> http://www.w3cschool.cc/html/html-tutorial.html</a> 语法规则:</p> \n<div class=\"code notranslate\">\n <div> \n  <b>scheme<tt>://</tt>host.domain<tt>:</tt>port<tt>/</tt>path<tt>/</tt>filename</b> \n </div>\n</div> \n<p>说明:</p> \n<ul> \n <ul> \n  <li>scheme - 定义因特网服务的类型。最常见的类型是 http</li> \n  <li>host - 定义域主机（http 的默认主机是 www）</li> \n  <li>domain - 定义因特网域名，比如 w3cschool.cc</li> \n  <li>:port - 定义主机上的端口号（http 的默认端口号是 80）</li> \n  <li>path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。</li> \n  <li>filename - 定义文档/资源的名称</li> \n </ul> \n</ul> \n<hr /> \n<h2>常见的 URL Schemes</h2> \n<p>以下是一些URL scheme：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th>Scheme</th> \n   <th>访问</th> \n   <th>用于...</th> \n  </tr> \n  <tr> \n   <td>http</td> \n   <td>超文本传输协议</td> \n   <td>以 http:// 开头的普通网页。不加密。</td> \n  </tr> \n  <tr> \n   <td>https</td> \n   <td>安全超文本传输协议</td> \n   <td>安全网页，加密所有信息交换。</td> \n  </tr> \n  <tr> \n   <td>ftp</td> \n   <td>文件传输协议</td> \n   <td>用于将文件下载或上传至网站。</td> \n  </tr> \n  <tr> \n   <td>file</td> \n   <td>&nbsp;</td> \n   <td>您计算机上的文件。</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>URL 字符编码</h2> \n<p>URL 只能使用 <a href=\"http://www.runoob.com/tags/html-ascii.html\">ASCII 字符集</a>.</p> \n<p>来通过因特网进行发送。由于 URL 常常会包含 ASCII 集合之外的字符，URL 必须转换为有效的 ASCII 格式。</p> \n<p>URL 编码使用 &quot;%&quot; 其后跟随两位的十六进制数来替换非 ASCII 字符。</p> \n<p>URL 不能包含空格。URL 编码通常使用 + 来替换空格。</p> \n<hr /> \n<h2>在线实例</h2> \n<p>如果您点击下面的&quot;提交&quot;按钮，浏览器会在发送输入之前对其进行 URL 编码。服务器上的页面会显示出接收到的输入。</p> \n<form name=\"input\" target=\"_blank\" action=\"/try/form-action.php\" method=\"get\"> \n <input type=\"text\" value=\"w3cschool.cc\" name=\"text\" size=\"30\" /> \n <input type=\"submit\" value=\"提交\" /> \n</form> \n<p>试着输入一些字符，然后再次点击提交按钮。</p> \n<hr /> \n<h2>URL 编码实例</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th>字符</th> \n   <th>URL 编码</th> \n  </tr> \n  <tr> \n   <td>€</td> \n   <td>%80</td> \n  </tr> \n  <tr> \n   <td>&pound;</td> \n   <td>%A3</td> \n  </tr> \n  <tr> \n   <td>&copy;</td> \n   <td>%A9</td> \n  </tr> \n  <tr> \n   <td>&reg;</td> \n   <td>%AE</td> \n  </tr> \n  <tr> \n   <td>&Agrave;</td> \n   <td>%C0</td> \n  </tr> \n  <tr> \n   <td>&Aacute;</td> \n   <td>%C1</td> \n  </tr> \n  <tr> \n   <td>&Acirc;</td> \n   <td>%C2</td> \n  </tr> \n  <tr> \n   <td>&Atilde;</td> \n   <td>%C3</td> \n  </tr> \n  <tr> \n   <td>&Auml;</td> \n   <td>%C4</td> \n  </tr> \n  <tr> \n   <td>&Aring;</td> \n   <td>%C5</td> \n  </tr> \n </tbody>\n</table> \n<p> 如需完整的 URL 编码参考，请访问我们的 <a href=\"http://www.w3cschool.cc/tags/html-urlencode.html\" target=\"_blank\">URL 编码参考手册</a>。</p> \n<br />\n<br />', null, 'HTML 统一资源定位器(Uniform Resource Locators)|URL - 统一资源定位器|常见的 URL Schemes|URL 字符编码|在线实例|URL 编码实例|');
INSERT INTO `schoolcontent` VALUES ('26', '26', '<h1>HTML <span class=\"color_h1\">速查列表</span> </h1> \n<hr /> \n<p class=\"intro\">HTML 速查列表. 你可以打印它，以备日常使用。</p> \n<hr /> \n<h2>HTML 基本文档</h2> \n<p>&lt;!DOCTYPE html&gt;<br /> &lt;html&gt;<br /> &lt;head&gt;<br /> &lt;title&gt;文档标题&lt;/title&gt;<br /> &lt;/head&gt;</p> &lt;body&gt;\n<br /> 可见文本...\n<br /> &lt;/body&gt; \n<p>&lt;/html&gt;</p> \n<h2>基本标签（Basic Tags）</h2> &lt;h1&gt;最大的标题&lt;/h1&gt;\n<br /> &lt;h2&gt; . . . &lt;/h2&gt;\n<br /> &lt;h3&gt; . . . &lt;/h3&gt;\n<br /> &lt;h4&gt; . . . &lt;/h4&gt;\n<br /> &lt;h5&gt; . . . &lt;/h5&gt;\n<br /> &lt;h6&gt;最小的标题&lt;/h6&gt;\n<br />\n<br /> &lt;p&gt;这是一个段落。&lt;/p&gt;\n<br /> &lt;br&gt; （换行）\n<br /> &lt;hr&gt; （水平线）\n<br /> &lt;!-- 这是注释 --&gt; \n<h2>文本格式化（Formatting）</h2> &lt;b&gt;粗体文本&lt;/b&gt;\n<br /> &lt;code&gt;计算机代码&lt;/code&gt;\n<br /> &lt;em&gt;强调文本&lt;/em&gt;\n<br /> &lt;i&gt;斜体文本&lt;/i&gt;\n<br /> &lt;kbd&gt;键盘输入&lt;/kbd&gt; \n<br /> &lt;pre&gt;预格式化文本&lt;/pre&gt;\n<br /> &lt;small&gt;更小的文本&lt;/small&gt;\n<br /> &lt;strong&gt;重要的文本&lt;/strong&gt;\n<br />\n<br /> &lt;abbr&gt; （缩写）\n<br /> &lt;address&gt; （联系信息）\n<br /> &lt;bdo&gt; （文字方向）\n<br /> &lt;blockquote&gt; （从另一个源引用的部分）\n<br /> &lt;cite&gt; （工作的名称）\n<br /> &lt;del&gt; （删除的文本）\n<br /> &lt;ins&gt; （插入的文本）\n<br /> &lt;sub&gt; （下标文本）\n<br /> &lt;sup&gt; （上标文本） \n<h2>链接（Links）</h2> 普通的链接： &lt;a href=&quot;http://www.example.com/&quot;&gt;链接文本&lt;/a&gt;\n<br /> 图像链接： &lt;a href=&quot;http://www.example.com/&quot;&gt;&lt;img src=&quot;URL&quot; alt=&quot;替换文本&quot;&gt;&lt;/a&gt;\n<br /> 邮件链接： &lt;a href=&quot;mailto:webmaster@example.com&quot;&gt;发送e-mail&lt;/a&gt;\n<p> 书签：<br /> &lt;a id=&quot;tips&quot;&gt;提示部分&lt;/a&gt;<br /> &lt;a href=&quot;#tips&quot;&gt;跳到提示部分&lt;/a&gt;</p> \n<h2>图片（Images）</h2> &lt;img src=&quot;URL&quot; alt=&quot;替换文本&quot; height=&quot;42&quot; width=&quot;42&quot;&gt; \n<h2>样式/区块（Styles/Sections）</h2> &lt;style type=&quot;text/css&quot;&gt;\n<br /> &nbsp; h1 {color:red;}\n<br /> &nbsp; p {color:blue;}\n<br /> &lt;/style&gt;\n<br />\n<br /> &lt;div&gt;文档中的块级元素&lt;/div&gt;\n<br /> &lt;span&gt;文档中的内联元素&lt;/span&gt; \n<h2>无序列表</h2> &lt;ul&gt;\n<br /> &nbsp; &lt;li&gt;项目&lt;/li&gt;\n<br /> &nbsp; &lt;li&gt;项目&lt;/li&gt;\n<br /> &lt;/ul&gt; \n<h2>有序列表</h2> &lt;ol&gt;\n<br /> &nbsp; &lt;li&gt;第一项&lt;/li&gt;\n<br /> &nbsp; &lt;li&gt;第二项&lt;/li&gt;\n<br /> &lt;/ol&gt; \n<h2>定义列表</h2> &lt;dl&gt;\n<br /> &nbsp; &lt;dt&gt;项目 1&lt;/dt&gt;\n<br /> &nbsp;&nbsp;&nbsp; &lt;dd&gt;描述项目 1&lt;/dd&gt;\n<br /> &nbsp; &lt;dt&gt;项目 2&lt;/dt&gt;\n<br /> &nbsp;&nbsp;&nbsp; &lt;dd&gt;描述项目 2&lt;/dd&gt;\n<br /> &lt;/dl&gt; \n<h2>表格（Tables）</h2> \n<p>&lt;table border=&quot;1&quot;&gt;<br /> &nbsp; &lt;tr&gt;<br /> &nbsp;&nbsp;&nbsp; &lt;th&gt;表格标题&lt;/th&gt;<br /> &nbsp;&nbsp;&nbsp; &lt;th&gt;表格标题&lt;/th&gt;<br /> &nbsp; &lt;/tr&gt;<br /> &nbsp; &lt;tr&gt;<br /> &nbsp;&nbsp;&nbsp; &lt;td&gt;表格数据&lt;/td&gt;<br /> &nbsp;&nbsp;&nbsp; &lt;td&gt;表格数据&lt;/td&gt;<br /> &nbsp; &lt;/tr&gt;<br /> &lt;/table&gt;</p> \n<h2>框架（Iframe）</h2> \n<p>&lt;iframe src=&quot;demo_iframe.htm&quot;&gt;&lt;/iframe&gt;</p> \n<h2>表单（Forms）</h2> &lt;form action=&quot;demo_form.php&quot; method=&quot;post/get&quot;&gt; \n<p>&lt;input type=&quot;text&quot; name=&quot;email&quot; size=&quot;40&quot; maxlength=&quot;50&quot;&gt;<br /> &lt;input type=&quot;password&quot;&gt;<br /> &lt;input type=&quot;checkbox&quot; checked=&quot;checked&quot;&gt;<br /> &lt;input type=&quot;radio&quot; checked=&quot;checked&quot;&gt;<br /> &lt;input type=&quot;submit&quot; value=&quot;Send&quot;&gt;<br /> &lt;input type=&quot;reset&quot;&gt;<br /> &lt;input type=&quot;hidden&quot;&gt;<br /> &lt;select&gt;<br /> &lt;option&gt;苹果&lt;/option&gt;<br /> &lt;option selected=&quot;selected&quot;&gt;香蕉&lt;/option&gt;<br /> &lt;option&gt;樱桃&lt;/option&gt;<br /> &lt;/select&gt;</p> \n<p>&lt;textarea name=&quot;comment&quot; rows=&quot;60&quot; cols=&quot;20&quot;&gt;&lt;/textarea&gt;<br /><br /> &lt;/form&gt;</p> \n<h2>实体（Entities）</h2> &amp;lt; 等同于 &lt;\n<br /> &amp;gt; 等同于 &gt;\n<br /> &amp;#169; 等同于 &copy;', null, 'HTML 速查列表|HTML 基本文档|基本标签（Basic Tags）|文本格式化（Formatting）|链接（Links）|图片（Images）|样式/区块（Styles/Sections）|无序列表|有序列表|定义列表|表格（Tables）|框架（Iframe）|表单（Forms）|实体（Entities）|');
INSERT INTO `schoolcontent` VALUES ('27', '27', '<h1>你已经完成了 HTML 的学习，下一步该学习什么呢？ </h1> \n<hr /> \n<h2>HTML 总结</h2> \n<p>本教程已教你如何使用 HTML 创建站点。</p> \n<p>HTML 是一种在 Web 上使用的通用标记语言。HTML 允许你格式化文本，添加图片，创建链接、输入表单、框架和表格等等，并可将之存为文本文件，浏览器即可读取和显示。</p> \n<p>HTML 的关键是标签，其作用是指示将出现的内容。</p> \n<p>如需更多关于 HTML 的信息，请查看我们的 <a href=\"http://www.runoob.com/html/html-tutorial.html\" target=\"_blank\">HTML 教程</a> 和 <a href=\"http://www.runoob.com/tags/html-reference.html\" target=\"_blank\">HTML 参考手册</a> 。</p> \n<hr /> \n<h2>现在，你已学完HTML，接下来该学习什么呢？</h2> \n<hr /> \n<h2>学习 CSS</h2> \n<p>CSS被用来同时控制多重网页的样式和布局。</p> \n<p>通过使用 CSS，所有的格式化均可从 HTML 中剥离出来，并存储于一个独立的文件中。</p> \n<p>如需学习如何创建样式表，请访问我们的 <a href=\"http://www.runoob.com/css/css-tutorial.html\" target=\"_blank\">CSS 教程</a> 。</p> \n<hr /> \n<h2>学习 JavaScript</h2> \n<p>JavaScript 可以让你的网页更加生动。</p> \n<p>如果你只想展示内容，静态网站是很好的展示形象，如果你想与用户进行交换或者让网页更加生动那就需要使用到Javascript。 </p> \n<p>JavaScript是互联网上最流行的脚本语言，目前所有主流浏览器都支持Javascript。</p> \n<p>如果你想学习更多关于Javascript的知识，可以访问本站的<a href=\"http://www.runoob.com/js/js-tutorial.html\">JavaScript 教程</a>.</p> \n<hr /> \n<h2>站点服务器</h2> \n<p>在自己的服务器上托管网站始终是一个选项。有几点需要考虑：</p> \n<h3>硬件支出</h3> \n<p>如果要运行&quot;真正&quot;的网站，您不得不购买强大的服务器硬件。不要指望低价的 PC 能够应付这些工作。您还需要稳定的（一天 24 小时）高速连接。</p> \n<h3>软件支出</h3> \n<p>请记住，服务器授权通常比客户端授权更昂贵。同时请注意，服务器授权也许有用户数量限制。</p> \n<h3>人工费</h3> \n<p>不要指望低廉的人工费用。您必须安装自己的硬件和软件。您同时要处理漏洞和病毒，以确保您的服务器时刻正常地运行于一个&quot;任何事都可能发生&quot;的环境中。</p> \n<hr /> \n<h2>使用因特网服务提供商（ISP）</h2> \n<p>从 ISP 租用服务器也很常见。</p> \n<p>大多数小公司会把网站存放到由 ISP 提供的服务器上。其优势有以下几点：</p> \n<h3>连接速度</h3> \n<p>大多数 ISP 都拥有连接因特网的高速连接。</p> \n<h3>强大的硬件</h3> \n<p>ISP 的 web 服务器通常强大到能够由若干网站分享资源。您还要看一下 ISP 是否提供高效的负载平衡，以及必要的备份服务器。</p> \n<h3>安全性和可靠性</h3> \n<p>ISP 是网站托管方面的专家。他们应该提供 99% 以上的在线时间，最新的软件补丁，以及最好的病毒防护。</p> \n<hr /> \n<h2>选择 ISP 时的注意事项</h2> \n<h3>24 小时支持</h3> \n<p>确保 ISP 提供 24 小时支持。不要使自己置于无法解决严重问题的尴尬境地，同时还必须等待第二个工作日。如果您不希望支付长途电话费，那么免费电话服务也是必要的。</p> \n<h3>每日备份</h3> \n<p>确保 ISP 会执行每日备份的例行工作，否则您有可能损失有价值的数据。</p> \n<h3>流量</h3> \n<p>研究一下 ISP 的流量限制。如果出现由于网站受欢迎而激增的不可预期的访问量，那么您要确保不会因此支付额外费用。</p> \n<h3>带宽或内容限制</h3> \n<p>研究一下 ISP 的带宽和内容限制。如果您计划发布图片或播出视频或音频，请确保您有此权限。</p> \n<h3>E-mail 功能</h3> \n<p>请确保 ISP 支持您需要的 e-mail 功能。</p> \n<h3>数据库访问</h3> \n<p>如果您计划使用网站数据库中的数据，那么请确保您的 ISP 支持您需要的数据库访问。</p> \n<p>在您选取一家 ISP 之前，请务必阅读菜鸟教程的 <a href=\"http://www.runoob.com/hosting/hosting-tutorial.html\" target=\"_blank\">Web 主机教程。</a> </p>', null, '你已经完成了 HTML 的学习，下一步该学习什么呢？|HTML 总结|现在，你已学完HTML，接下来该学习什么呢？|学习 CSS|学习 JavaScript|站点服务器|使用因特网服务提供商（ISP）|选择 ISP 时的注意事项|');
INSERT INTO `schoolcontent` VALUES ('28', '28', '<h1>HTML<span class=\"color_h1\"> - XHTML</span> </h1> \n<hr /> \n<p class=\"intro\">XHTML 是以 XML 格式编写的 HTML。</p> \n<hr /> \n<h2>什么是 XHTML?</h2> \n<ul> \n <li>XHTML 指的是可扩展超文本标记语言</li> \n <li>XHTML 与 HTML 4.01 几乎是相同的</li> \n <li>XHTML 是更严格更纯净的 HTML 版本</li> \n <li>XHTML 是以 XML 应用的方式定义的 HTML</li> \n <li>XHTML 是 <a href=\"http://www.runoob.com/w3c/w3c-xhtml.html\" title=\"W3C XHTML 活动\">2001 年 1 月</a>发布的 W3C 推荐标准</li> \n <li>XHTML 得到所有主流浏览器的支持</li> \n</ul> \n<hr /> \n<h2>为什么使用 XHTML?</h2> \n<p>因特网上的很多页面包含了&quot;糟糕&quot;的 HTML。</p> \n<p>如果在浏览器中查看，下面的 HTML 代码运行起来非常正常（即使它并未遵守 HTML 规则）：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;title&gt;This is bad HTML&lt;/title&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;h1&gt;Bad HTML\n  <br /> &lt;p&gt;This is a paragraph\n  <br /> &lt;/body&gt;\n </div>\n</div> \n<p>XML 是一种必须正确标记且格式良好的标记语言。</p> \n<p>如果希望学习 XML，请阅读我们的<a href=\"http://www.runoob.com/xml/xml-tutorial.html\"> XML 教程</a>。</p> \n<p>今日的科技界存在一些不同的浏览器技术。其中一些在计算机上运行，而另一些可能在移动电话或其他小型设备上运行。小型设备往往缺乏解释&quot;糟糕&quot;的标记语言的资源和能力。</p> \n<p>所以 - 通过结合 XML 和 HTML 的长处，开发出了 XHTML。XHTML 是作为 XML 被重新设计的 HTML。</p> \n<hr /> \n<h2>与 HTML 相比最重要的区别：</h2> \n<h3>文档结构</h3> \n<ul> \n <li>XHTML DOCTYPE 是<em>强制性的</em></li> \n <li>&lt;html&gt; 中的 XML namespace 属性是<em>强制性的</em></li> \n <li>&lt;html&gt;、&lt;head&gt;、&lt;title&gt; 以及 &lt;body&gt; 也是<em>强制性的</em></li> \n</ul> \n<h3>元素语法</h3> \n<ul> \n <li>XHTML 元素必须<em>正确嵌套</em></li> \n <li>XHTML 元素必须始终<em>关闭</em></li> \n <li>XHTML 元素必须<em>小写</em></li> \n <li>XHTML 文档必须有<em>一个根元素</em></li> \n</ul> \n<h3>属性语法</h3> \n<ul> \n <li>XHTML 属性必须使用<em>小写</em></li> \n <li>XHTML 属性值必须用<em>引号包围</em></li> \n <li>XHTML 属性最小化也是<em>禁止的</em></li> \n</ul>\n<hr /> \n<h2>&lt;!DOCTYPE ....&gt;是强制性的</h2> \n<p>XHTML 文档必须进行 XHTML 文档类型声明（XHTML DOCTYPE declaration）。</p> \n<p>您可以在 W3School 的标签参考手册中找到完整的 <a href=\"http://www.runoob.com/tags/tag-doctype.html\">XHTML 文档类型。</a></p> \n<p>&lt;html&gt;, &lt;head&gt;, &lt;title&gt;, 和 &lt;body&gt; 元素也必须存在，并且必须使用 &lt;html&gt; 中的 xmlns 属性为文档规定 xml 命名空间。</p> \n<p>下面的例子展示了带有最少的必需标签的 XHTML 文档：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;\n  <br /> &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\n  <br />\n  <br /> &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;\n  <br />\n  <br /> &lt;head&gt;\n  <br /> &lt;title&gt;Title of document&lt;/title&gt;\n  <br /> &lt;/head&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br />...... \n  <br /> &lt;/body&gt;\n  <br />\n  <br /> &lt;/html&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>XHTML 元素必须合理嵌套</h2> \n<p>在 HTML 中，一些元素可以不互相嵌套，像这样：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;b&gt;&lt;i&gt;This text is bold and italic&lt;/b&gt;&lt;/i&gt;\n </div>\n</div> \n<p>在 XHTML 中，所有的元素都必须互相合理地嵌套，像这样：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;b&gt;&lt;i&gt;This text is bold and italic&lt;/i&gt;&lt;/b&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>XHTML 元素必须有关闭标签</h2> \n<p>错误示例：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;p&gt;This is a paragraph\n  <br /> &lt;p&gt;This is another paragraph\n </div>\n</div> \n<p>正确示例：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;p&gt;This is a paragraph&lt;/p&gt;\n  <br /> &lt;p&gt;This is another paragraph&lt;/p&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>空元素必须包含关闭标签</h2> \n<p>错误示例：</p> \n<div class=\"code notranslate\">\n <div>\n   A break: &lt;br&gt;\n  <br /> A horizontal rule: &lt;hr&gt;\n  <br /> An image: &lt;img src=&quot;happy.gif&quot; alt=&quot;Happy face&quot;&gt;\n </div>\n</div> \n<p>正确示例：</p> \n<div class=\"code notranslate\">\n <div>\n   A break: &lt;br /&gt;\n  <br /> A horizontal rule: &lt;hr /&gt;\n  <br /> An image: &lt;img src=&quot;happy.gif&quot; alt=&quot;Happy face&quot; /&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>XHTML 元素必须是小写</h2> \n<p>错误示例:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;BODY&gt;\n  <br /> &lt;P&gt;This is a paragraph&lt;/P&gt;\n  <br /> &lt;/BODY&gt;\n </div>\n</div> \n<p>正确示例：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;body&gt;\n  <br /> &lt;p&gt;This is a paragraph&lt;/p&gt;\n  <br /> &lt;/body&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>属性名称必须是小写</h2> \n<p>错误示例：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;table WIDTH=&quot;100%&quot;&gt;\n </div>\n</div> \n<p>正确示例:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;table width=&quot;100%&quot;&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>属性值必须有引号</h2> \n<p>错误示例：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;table width=100%&gt;\n </div>\n</div> \n<p>正确示例：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;table width=&quot;100%&quot;&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>不允许属性简写</h2> \n<p>错误示例：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;input checked&gt;\n  <br /> &lt;input readonly&gt;\n  <br /> &lt;input disabled&gt;\n  <br /> &lt;option selected&gt;\n </div>\n</div> \n<p>正确示例：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;input checked=&quot;checked&quot;&gt;\n  <br /> &lt;input readonly=&quot;readonly&quot;&gt;\n  <br /> &lt;input disabled=&quot;disabled&quot;&gt;\n  <br /> &lt;option selected=&quot;selected&quot;&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>如何将 HTML 转换为 XHTML</h2> \n<ol> \n <li>添加一个 XHTML &lt;!DOCTYPE&gt; 到你的网页中</li> \n <li>添加 xmlns 属性添加到每个页面的html元素中。 </li> \n <li>改变所有的元素为小写</li> \n <li>关闭所有的空元素</li> \n <li>修改所有的属性名称为小写</li> \n <li>所有属性值添加引号</li> \n</ol> \n<hr /> \n<h2>使用 W3C 验证器来测试你的 XHTML</h2> \n<form method=\"get\" action=\"http://validator.w3.org/check\" target=\"_blank\"> \n <p>请在下面的输入框中输入您的网址：</p> \n <p><input name=\"uri\" size=\"60\" value=\"http://www.w3cschool.cc\" /></p> \n <input type=\"submit\" value=\"页面验证\" />\n</form>', null, 'HTML - XHTML|什么是 XHTML?|为什么使用 XHTML?|与 HTML 相比最重要的区别：|<!DOCTYPE ....>是强制性的|XHTML 元素必须合理嵌套|XHTML 元素必须有关闭标签|空元素必须包含关闭标签|XHTML 元素必须是小写|属性名称必须是小写|属性值必须有引号|不允许属性简写|如何将 HTML 转换为 XHTML|使用 W3C 验证器来测试你的 XHTML|');
INSERT INTO `schoolcontent` VALUES ('29', '29', '<h1>HTML5 <span class=\"color_h1\">简介</span></h1> \n<div class=\"tutintro\"> \n <img src=\"http://www.runoob.com/wp-content/uploads/2013/07/pic_html5.gif\" alt=\"HTML\" style=\"height:128px;width:128px\" /> \n <p>HTML5是HTML最新的修订版本，2014年10月由万维网联盟（W3C）完成标准制定。</p> \n <p>HTML5的设计目的是为了在移动设备上支持多媒体。</p> \n <p>HTML5 简单易学。</p> \n</div> \n<hr />\n<h2>什么是 HTML5?</h2> \n<p>HTML5 是下一代 HTML 标准。</p> \n<p>HTML , HTML 4.01的上一个版本诞生于 1999 年。自从那以后，Web 世界已经经历了巨变。</p> \n<p>HTML5 仍处于完善之中。然而，大部分现代浏览器已经具备了某些 HTML5 支持。</p> \n<hr />\n<h2>HTML5 是如何起步的？</h2> \n<p>HTML5 是 W3C 与 WHATWG 合作的结果,WHATWG 指 Web Hypertext Application Technology Working Group。。</p> \n<p>WHATWG 致力于 web 表单和应用程序，而 W3C 专注于 XHTML 2.0。在 2006 年，双方决定进行合作，来创建一个新版本的 HTML。</p> \n<p>HTML5 中的一些有趣的新特性：</p> \n<ul> \n <li>用于绘画的 canvas 元素</li> \n <li>用于媒介回放的 video 和 audio 元素</li> \n <li>对本地离线存储的更好的支持</li> \n <li>新的特殊内容元素，比如 article、footer、header、nav、section</li> \n <li>新的表单控件，比如 calendar、date、time、email、url、search</li> \n</ul> \n<hr />\n<h2> HTML5 &lt;!DOCTYPE&gt;</h2> \n<p> &lt;!doctype&gt; 声明必须位于 HTML5 文档中的第一行,使用非常简单:</p> \n<pre>\r\n&lt;!DOCTYPE html&gt;\r\n</pre> \n<hr />\n<h2>最小的HTML5文档</h2> \n<p>下面是一个简单的HTML5文档：</p> \n<pre>\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=&quot;utf-8&quot;&gt;\r\n&lt;title&gt;文档标题&lt;/title&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n文档内容......\r\n&lt;/body&gt;\r\n\r\n&lt;/html&gt;\r\n</pre> \n<blockquote>\n <p><strong>注意：</strong>对于中文网页需要使用 <strong>&lt;meta charset=&quot;utf-8&quot;&gt;</strong> 声明编码，否则会出现乱码。</p>\n</blockquote> \n<hr /> \n<h2>HTML5 的改进</h2> \n<ul> \n <li>新元素</li> \n <li>新属性</li> \n <li>完全支持 CSS3 </li> \n <li>Video 和 Audio</li> \n <li>2D/3D 制图</li> \n <li>本地存储</li> \n <li>本地 SQL 数据</li> \n <li>Web 应用</li> \n</ul> \n<hr /> \n<h2>HTML5 多媒体</h2> \n<p>使用 HTML5 你可以简单的在网页中播放 视频(video)与音频 (audio) 。</p> \n<ul> \n <li>HTML5 <a href=\"html5-video.html\">&lt;video&gt;</a></li> \n <li>HTML5 <a href=\"html5-audio.html\">&lt;audio&gt;</a></li> \n</ul> \n<hr /> \n<h2>HTML5 应用</h2> \n<p>使用 HTML5 你可以简单地开发应用</p> \n<ul> \n <li>本地数据存储</li> \n <li>访问本地文件</li> \n <li>本地 SQL 数据</li> \n <li>缓存引用</li> \n <li>Javascript 工作者</li> \n <li>XHTMLHttpRequest 2</li> \n</ul> \n<hr /> \n<h2>HTML5 图形</h2> \n<p>使用 HTML5 你可以简单的绘制图形:</p> \n<ul> \n <li>使用 <a href=\"html5-canvas.html\">&lt;canvas&gt;</a> 元素</li> \n <li>使用内联 <a href=\"html5-svg.html\">SVG</a></li> \n <li>使用 <a href=\"http://www.runoob.com/css3/default.html\">CSS3 2D/3D</a></li> \n</ul> \n<hr /> \n<h2>HTML5 使用 CSS3</h2> \n<ul> \n <li>新选择器</li> \n <li>新属性</li> \n <li>动画</li> \n <li>2D/3D 转换</li> \n <li>圆角</li> \n <li>阴影效果</li> \n <li>可下载的字体</li> \n</ul> \n<p>了解更多CSS3知识请查看本站的 <a href=\"http://www.runoob.com/css3/css3-tutorial.html\">CSS3 教程。</a></p> \n<hr /> \n<h2>语义元素</h2> \n<p>HTML5 添加了很多语义元素如下所示：</p> \n<table class=\"reference\">\n <tbody>\n  <tr>\n   <th>标签 </th>\n   <th>描述 </th>\n  </tr>\n  <tr>\n   <td>&lt;article&gt; </td>\n   <td>定义页面独立的内容区域。 </td>\n  </tr>\n  <tr>\n   <td>&lt;aside&gt; </td>\n   <td>定义页面的侧边栏内容。 </td>\n  </tr>\n  <tr>\n   <td>&lt;bdi&gt; </td>\n   <td>允许您设置一段文本，使其脱离其父元素的文本方向设置。 </td>\n  </tr>\n  <tr>\n   <td>&lt;command&gt; </td>\n   <td>定义命令按钮，比如单选按钮、复选框或按钮 </td>\n  </tr>\n  <tr>\n   <td>&lt;details&gt; </td>\n   <td>用于描述文档或文档某个部分的细节 </td>\n  </tr>\n  <tr>\n   <td>&lt;dialog&gt; </td>\n   <td>定义对话框，比如提示框 </td>\n  </tr>\n  <tr>\n   <td>&lt;summary&gt; </td>\n   <td>标签包含 details 元素的标题 </td>\n  </tr>\n  <tr>\n   <td>&lt;figure&gt; </td>\n   <td>规定独立的流内容（图像、图表、照片、代码等等）。 </td>\n  </tr>\n  <tr>\n   <td>&lt;figcaption&gt; </td>\n   <td>定义 &lt;figure&gt; 元素的标题 </td>\n  </tr>\n  <tr>\n   <td>&lt;footer&gt; </td>\n   <td>定义 section 或 document 的页脚。 </td>\n  </tr>\n  <tr>\n   <td>&lt;header&gt; </td>\n   <td>定义了文档的头部区域 </td>\n  </tr>\n  <tr>\n   <td>&lt;mark&gt; </td>\n   <td>定义带有记号的文本。 </td>\n  </tr>\n  <tr>\n   <td>&lt;meter&gt; </td>\n   <td>定义度量衡。仅用于已知最大和最小值的度量。 </td>\n  </tr>\n  <tr>\n   <td>&lt;nav&gt; </td>\n   <td>定义导航链接的部分。 </td>\n  </tr>\n  <tr>\n   <td>&lt;progress&gt; </td>\n   <td>定义任何类型的任务的进度。 </td>\n  </tr>\n  <tr>\n   <td>&lt;ruby&gt; </td>\n   <td>定义 ruby 注释（中文注音或字符）。 </td>\n  </tr>\n  <tr>\n   <td>&lt;rt&gt; </td>\n   <td>定义字符（中文注音或字符）的解释或发音。 </td>\n  </tr>\n  <tr>\n   <td>&lt;rp&gt; </td>\n   <td>在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容。 </td>\n  </tr>\n  <tr>\n   <td>&lt;section&gt; </td>\n   <td>定义文档中的节（section、区段）。 </td>\n  </tr>\n  <tr>\n   <td>&lt;time&gt; </td>\n   <td>定义日期或时间。 </td>\n  </tr>\n  <tr>\n   <td>&lt;wbr&gt; </td>\n   <td>规定在文本中的何处适合添加换行符。 </td>\n  </tr>\n </tbody>\n</table> \n<h2>HTML5 表单</h2> \n<p>新表单元素, 新属性，新输入类型，自动验证。</p> \n<hr /> \n<h2>已移除元素</h2> \n<p>以下的 HTML 4.01 元素在HTML5中已经被删除:</p> \n<ul>\n <li>&lt;acronym&gt; </li>\n <li>&lt;applet&gt; </li>\n <li>&lt;basefont&gt; </li>\n <li>&lt;big&gt; </li>\n <li>&lt;center&gt; </li>\n <li>&lt;dir&gt; </li>\n <li>&lt;font&gt; </li>\n <li>&lt;frame&gt; </li>\n <li>&lt;frameset&gt; </li>\n <li>&lt;noframes&gt; </li>\n <li>&lt;strike&gt; </li>\n</ul> \n<hr /> \n<h2>每一章中的实例</h2> \n<p>通过我们的 HTML 编辑器，您能够编辑 HTML，然后点击按钮来查看结果。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE HTML&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;meta charset=&quot;utf-8&quot;&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> \n  <br /> &lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;\n  <br /> &nbsp; 你的浏览器不支持 video 标签。\n  <br /> &lt;/video&gt;\n  <br /> \n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_video_bear\">尝试一下 &raquo;</a>\n</div> \n<p><b>点击 &quot;尝试一下&quot; 按钮查看在线运行结果。</b></p> \n<hr />\n<h2>HTML5 浏览器支持</h2> \n<p>最新版本的 Safari、Chrome、Firefox 以及 Opera 支持某些 HTML5 特性。Internet Explorer 9 将支持某些 HTML5 特性。</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2013/07/browsers_say.png\" /></p> \n<p>IE9 以下版本浏览器兼容HTML5的方法，使用百度静态资源的html5shiv包：</p> \n<pre>\r\n&lt;!--[if lt IE9]&gt; \r\n&lt;script src=&quot;http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt;\r\n&lt;![endif]--&gt;\r\n</pre> \n<p>载入后，初始化新标签的CSS：</p> \n<pre>\r\n/*html5*/\r\narticle,aside,dialog,footer,header,section,footer,nav,figure,menu{display:block}\r\n</pre> \n<br /> \n<h2 class=\"tutheader\">HTML5 参考手册</h2> \n<p>在本站中你可以找到关于HTML5 的标签及属性描述，详细请点击 <a href=\"tags/html-reference.html\">HTML5参考手册。</a></p>', null, 'HTML5 简介|什么是 HTML5?|HTML5 是如何起步的？|HTML5 <!DOCTYPE>|最小的HTML5文档|HTML5 的改进|HTML5 多媒体|HTML5 应用|HTML5 图形|HTML5 使用 CSS3|语义元素|HTML5 表单|已移除元素|每一章中的实例|实例|HTML5 浏览器支持|HTML5 参考手册|');
INSERT INTO `schoolcontent` VALUES ('30', '30', '<h1>HTML5 <span class=\"color_h1\">浏览器支持</span> </h1> \n<hr /> \n<p class=\"intro\">你可以让一些较早的浏览器（不支持HTML5）支持 HTML5。</p> \n<hr /> \n<h2>HTML5 浏览器支持</h2> \n<p>现代的浏览器都支持 HTML5。</p> \n<p>此外，所有浏览器，包括旧的和最新的，对无法识别的元素会作为内联元素自动处理。</p> \n<p>正因为如此，你可以 <b>&quot;教会&quot;</b> 浏览器处理 <b>&quot;未知&quot;</b> 的 HTML 元素。</p> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /> </th> \n   <td> 甚至你可以教会 IE6 (Windows XP 2001) 浏览器处理未知的 HTML 元素。 </td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>将 HTML5 元素定义为块元素</h2> \n<p>HTML5 定了 8 个新的 HTML <strong>语义（semantic）</strong> 元素。所有这些元素都是 <strong>块级</strong> 元素。</p> \n<p>为了能让旧版本的浏览器正确显示这些元素，你可以设置 CSS 的 <strong>display</strong> 属性值为 <strong>block</strong>:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   header, section, footer, aside, nav, main, article, figure {\n  <br /> &nbsp;&nbsp;&nbsp; display: block; \n  <br /> } \n </div> \n</div> \n<br />\n<hr /> \n<h2>为 HTML 添加新元素</h2> \n<p>你可以为 HTML 添加新的元素。</p> \n<p>该实例向 HTML 添加的新的元素，并为该元素定义样式，元素名为 <strong>&lt;myHero&gt;</strong> ：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br />&lt;head&gt;\n  <br /> &lt;meta charset=&quot;utf-8&quot;&gt;\n  <br /> &nbsp; &lt;title&gt;为 HTML 添加新元素&lt;/title&gt;\n  <br />&nbsp; &lt;script&gt;document.createElement(&quot;myHero&quot;)&lt;/script&gt;\n  <br />&nbsp; &lt;style&gt;\n  <br />&nbsp; myHero {\n  <br />&nbsp;&nbsp;&nbsp; display: block;\n  <br />&nbsp;&nbsp;&nbsp; background-color: #ddd;\n  <br />&nbsp;&nbsp;&nbsp; padding: 50px;\n  <br />&nbsp;&nbsp;&nbsp; font-size: 30px;\n  <br />&nbsp; } \n  <br />&nbsp; &lt;/style&gt; \n  <br />&lt;/head&gt;\n  <br />\n  <br />&lt;body&gt;\n  <br />\n  <br /> &lt;h1&gt;我的第一个标题&lt;/h1&gt;\n  <br />\n  <br /> &lt;p&gt;我的第一个段落。&lt;/p&gt;\n  <br />\n  <br />&lt;myHero&gt;我的第一个新元素&lt;/myHero&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_browsers_myhero\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> JavaScript 语句 <strong>document.createElement(&quot;myHero&quot;)</strong> 是为 IE 浏览器添加新的元素。</p> \n<hr /> \n<h2>Internet Explorer 浏览器问题</h2> \n<p>你可以使用以上的方法来为 IE 浏览器添加 HTML5 元素，但是：</p> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /> </th> \n   <td> Internet Explorer 8 及更早 IE 版本的浏览器不支持以上的方式。 </td> \n  </tr>\n </tbody>\n</table> \n<p>我们可以使用 Sjoerd Visscher 创建的 &quot;HTML5 Enabling JavaScript&quot;, &quot;<strong> shiv</strong>&quot; 来解决该问题:</p> \n<div class=\"example\"> \n <div class=\"example_code notranslate htmlHigh\">\n   &lt;!--[if lt IE 9]&gt;\n  <br />&nbsp; &lt;script src=&quot;http://html5shiv.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;\n  <br /> &lt;![endif]--&gt; \n </div> \n</div> \n<p>以上代码是一个注释，作用是在 IE 浏览器的版本小于 IE9 时将读取 html5.js 文件，并解析它。</p> \n<p><b>注意：</b>国内用户请使用百度静态资源库（Google 资源库在国内不稳定）：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   &lt;!--[if lt IE 9]&gt;\n  <br />&nbsp; &lt;script src=&quot;http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt;\n  <br /> &lt;![endif]--&gt; \n </div> \n</div> \n<p> 针对IE浏览器html5shiv 是比较好的解决方案。html5shiv主要解决HTML5提出的新的元素不被IE6-8识别，这些新元素不能作为父节点包裹子元素，并且不能应用CSS样式。 </p> \n<hr /> \n<h2>完美的 Shiv 解决方案</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br />&lt;head&gt;\n  <br /> &lt;meta charset=&quot;utf-8&quot;&gt;\n  <br /> &lt;title&gt;渲染 HTML5&lt;/title&gt;\n  <br />&nbsp; &lt;!--[if lt IE 9]&gt;\n  <br /> &nbsp; &lt;script src=&quot;http://apps.bdimg.com/libs/html5shiv/3.7/html5shiv.min.js&quot;&gt;&lt;/script&gt;\n  <br /> &nbsp; &lt;![endif]--&gt;\n  <br />&lt;/head&gt;\n  <br />\n  <br />&lt;body&gt;\n  <br />\n  <br /> &lt;h1&gt;我的第一篇文章&lt;/h1&gt;\n  <br />\n  <br /> &lt;article&gt;\n  <br />菜鸟教程 —— 学的不仅是技术，更是梦想！！！\n  <br />&lt;/article&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_browsers_theshiv\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> html5shiv.js 引用代码必须放在 &lt;head&gt; 元素中，因为 IE 浏览器在解析 HTML5 新元素时需要先加载该文件。</p>', null, 'HTML5 浏览器支持|HTML5 浏览器支持|将 HTML5 元素定义为块元素|实例|为 HTML 添加新元素|实例|Internet Explorer 浏览器问题|完美的 Shiv 解决方案|实例|');
INSERT INTO `schoolcontent` VALUES ('31', '31', '<h1>HTML5 <span class=\"color_h1\">新元素</span> </h1> \n<hr /> \n<h2>HTML5 新元素</h2> \n<p>自1999年以后HTML 4.01 已经改变了很多,今天，在HTML 4.01中的几个已经被废弃，这些元素在HTML5中已经被删除或重新定义。</p> \n<p>为了更好地处理今天的互联网应用，HTML5添加了很多新元素及功能，比如: 图形的绘制，多媒体内容，更好的页面结构，更好的形式 处理，和几个api拖放元素，定位，包括网页 应用程序缓存，存储，网络工作者，等。</p> \n<hr /> \n<h2> &lt;canvas&gt; 新元素</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"110\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-canvas.html\">&lt;canvas&gt;</a></td> \n   <td> 标签定义图形，比如图表和其他图像。该标签基于 JavaScript 的绘图 API</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>新多媒体元素</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"110\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-audio.html\">&lt;audio&gt;</a></td> \n   <td>定义音频内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-video.html\">&lt;video&gt;</a></td> \n   <td>定义视频（video 或者 movie）</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-source.html\">&lt;source&gt;</a></td> \n   <td>定义多媒体资源 &lt;video&gt; 和 &lt;audio&gt;</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-embed.html\">&lt;embed&gt;</a></td> \n   <td>定义嵌入的内容，比如插件。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-track.html\">&lt;track&gt;</a></td> \n   <td>为诸如 &lt;video&gt; 和 &lt;audio&gt; 元素之类的媒介规定外部文本轨道。</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>新表单元素</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"110\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-datalist.html\">&lt;datalist&gt;</a></td> \n   <td>定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-keygen.html\">&lt;keygen&gt;</a></td> \n   <td>规定用于表单的密钥对生成器字段。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-output.html\">&lt;output&gt;</a></td> \n   <td>定义不同类型的输出，比如脚本的输出。</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>新的语义和结构元素</h2> \n<p>HTML5提供了新的元素来创建更好的页面结构：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"110\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-article.html\">&lt;article&gt;</a></td> \n   <td>定义页面独立的内容区域。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-aside.html\">&lt;aside&gt;</a></td> \n   <td>定义页面的侧边栏内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-bdi.html\">&lt;bdi&gt;</a></td> \n   <td>允许您设置一段文本，使其脱离其父元素的文本方向设置。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-command.html\">&lt;command&gt;</a></td> \n   <td>定义命令按钮，比如单选按钮、复选框或按钮</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-details.html\">&lt;details&gt;</a></td> \n   <td>用于描述文档或文档某个部分的细节</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-dialog.html\">&lt;dialog&gt;</a></td> \n   <td>定义对话框，比如提示框</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-summary.html\">&lt;summary&gt;</a></td> \n   <td>标签包含 details 元素的标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-figure.html\">&lt;figure&gt;</a></td> \n   <td>规定独立的流内容（图像、图表、照片、代码等等）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-figcaption.html\">&lt;figcaption&gt;</a></td> \n   <td>定义 &lt;figure&gt; 元素的标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-footer.html\">&lt;footer&gt;</a></td> \n   <td>定义 section 或 document 的页脚。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-header.html\">&lt;header&gt;</a></td> \n   <td>定义了文档的头部区域</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-mark.html\">&lt;mark&gt;</a></td> \n   <td>定义带有记号的文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-meter.html\">&lt;meter&gt;</a></td> \n   <td>定义度量衡。仅用于已知最大和最小值的度量。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-nav.html\">&lt;nav&gt;</a></td> \n   <td>定义导航链接的部分。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-progress.html\">&lt;progress&gt;</a></td> \n   <td>定义任何类型的任务的进度。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-ruby.html\">&lt;ruby&gt;</a></td> \n   <td>定义 ruby 注释（中文注音或字符）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-rt.html\">&lt;rt&gt;</a></td> \n   <td>定义字符（中文注音或字符）的解释或发音。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-rp.html\">&lt;rp&gt;</a></td> \n   <td>在 ruby 注释中使用，定义不支持 ruby 元素的浏览器所显示的内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-section.html\">&lt;section&gt;</a></td> \n   <td>定义文档中的节（section、区段）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-time.html\">&lt;time&gt;</a></td> \n   <td>定义日期或时间。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-wbr.html\">&lt;wbr&gt;</a></td> \n   <td>规定在文本中的何处适合添加换行符。</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>已移除的元素</h2> \n<p>以下的 HTML 4.01 元素在HTML5中已经被删除:</p> \n<ul> \n <li>&lt;acronym&gt;</li> \n <li>&lt;applet&gt;</li> \n <li>&lt;basefont&gt;</li> \n <li>&lt;big&gt;</li> \n <li>&lt;center&gt;</li> \n <li>&lt;dir&gt;</li> \n <li>&lt;font&gt;</li> \n <li>&lt;frame&gt;</li> \n <li>&lt;frameset&gt;</li> \n <li>&lt;noframes&gt;</li> \n <li>&lt;strike&gt;</li> \n <li>&lt;tt&gt;</li> \n</ul>', null, 'HTML5 新元素|HTML5 新元素|<canvas> 新元素|新多媒体元素|新表单元素|新的语义和结构元素|已移除的元素|');
INSERT INTO `schoolcontent` VALUES ('32', '32', '<h1>HTML5 <span class=\"color_h1\">Canvas</span> </h1> \n<hr /> \n<p class=\"intro\">&lt;canvas&gt; 标签定义图形，比如图表和其他图像，您必须使用脚本来绘制图形。</p> \n<p class=\"intro\">在画布上（Canvas）画一个红色矩形，渐变矩形，彩色矩形，和一些彩色的文字。</p> \n<canvas id=\"myCanvas\" width=\"270\" height=\"160\" style=\"border:1px solid #c3c3c3;\">\n  你的浏览器不支持 HTML5 的 &lt;canvas&gt; 元素. \n</canvas> \n<script>\r\nvar c=document.getElementById(\"myCanvas\");\r\nvar canvOK=1;\r\ntry {c.getContext(\"2d\");}\r\ncatch (er) {canvOK=0;}\r\nif (canvOK==1)\r\n	{\r\n	var ctx=c.getContext(\"2d\");\r\n	ctx.fillStyle=\"#FF0000\";\r\n	ctx.fillRect(20,20,100,50);\r\n	\r\n	var grd=ctx.createLinearGradient(140,20,240,70);\r\n    grd.addColorStop(0,\"black\");\r\n    grd.addColorStop(1,\"white\");\r\n    ctx.fillStyle=grd;\r\n    ctx.fillRect(140,20,100,50);\r\n    \r\n    var grd2=ctx.createLinearGradient(20,90,120,90);\r\n    grd2.addColorStop(0,\"black\");\r\n    grd2.addColorStop(\"0.3\",\"magenta\");\r\n    grd2.addColorStop(\"0.5\",\"blue\");\r\n    grd2.addColorStop(\"0.6\",\"green\");\r\n    grd2.addColorStop(\"0.8\",\"yellow\");\r\n    grd2.addColorStop(1,\"red\");\r\n    ctx.fillStyle=grd2;\r\n    ctx.fillRect(20,90,100,50);\r\n    \r\n    ctx.font=\"30px Verdana\";\r\n    var grd3=ctx.createLinearGradient(140,20,240,90);\r\n    grd3.addColorStop(0,\"black\");\r\n    grd3.addColorStop(\"0.3\",\"magenta\");\r\n    grd3.addColorStop(\"0.6\",\"blue\");\r\n    grd3.addColorStop(\"0.8\",\"green\");\r\n    grd3.addColorStop(1,\"red\");\r\n    ctx.strokeStyle=grd3;\r\n    ctx.strokeText(\"Smile!\",140,120); \r\n	}\r\n	</script> \n<br />\n<hr /> \n<h2>什么是 Canvas?</h2> \n<p> HTML5 &lt;canvas&gt; 元素用于图形的绘制，通过脚本 (通常是JavaScript)来完成.</p> \n<p>&lt;canvas&gt; 标签只是图形容器，您必须使用脚本来绘制图形。</p> \n<p>你可以通过多种方法使用Canva绘制路径,盒、圆、字符以及添加图像。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 9+, Firefox, Opera, Chrome, 和 Safari 支持 &lt;canvas&gt; 元素.</p> \n<p><b>注意:</b> Internet Explorer 8 及更早 IE 版本的浏览器不支持 &lt;canvas&gt; 元素.</p> \n<hr /> \n<h2>创建一个画布（Canvas）</h2> \n<p>一个画布在网页中是一个矩形框，通过 &lt;canvas&gt; 元素来绘制.</p> \n<p><b>注意:</b> 默认情况下 &lt;canvas&gt; 元素没有边框和内容。</p> \n<p>&lt;canvas&gt;简单实例如下:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;100&quot;&gt;&lt;/canvas&gt; \n </div>\n</div> \n<p><b>注意:</b> 标签通常需要指定一个id属性 (脚本中经常引用), width 和 height 属性定义的画布的大小.</p> \n<p><b>提示:</b>你可以在HTML页面中使用多个 &lt;canvas&gt; 元素.</p> \n<p>使用 style 属性来添加边框:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;100&quot;\n  <br /> style=&quot;border:1px solid #000000;&quot;&gt;\n  <br /> &lt;/canvas&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_empty\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>使用 JavaScript 来绘制图像</h2> \n<p>canvas 元素本身是没有绘图能力的。所有的绘制工作必须在 JavaScript 内部完成：</p>\n<p> </p>\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br /> var c=document.getElementById(&quot;myCanvas&quot;);\n  <br /> var ctx=c.getContext(&quot;2d&quot;);\n  <br /> ctx.fillStyle=&quot;#FF0000&quot;;\n  <br /> ctx.fillRect(0,0,150,75);\n  <br /> &lt;/script&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_first\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>实例解析:</b></p> \n<p>首先，找到 &lt;canvas&gt; 元素:</p> \n<div class=\"code notranslate\">\n <div>\n   var c=document.getElementById(&quot;myCanvas&quot;); \n </div>\n</div> \n<p>然后，创建 context 对象：</p> \n<div class=\"code notranslate\">\n <div>\n   var ctx=c.getContext(&quot;2d&quot;); \n </div>\n</div> \n<p>getContext(&quot;2d&quot;) 对象是内建的 HTML5 对象，拥有多种绘制路径、矩形、圆形、字符以及添加图像的方法。 </p> \n<p>下面的两行代码绘制一个红色的矩形：</p> \n<div class=\"code notranslate\">\n <div>\n   ctx.fillStyle=&quot;#FF0000&quot;;\n  <br /> ctx.fillRect(0,0,150,75); \n </div>\n</div> \n<p>设置fillStyle属性可以是CSS颜色，渐变，或图案。fillStyle 默认设置是#000000（黑色）。</p> \n<p> fillRect(<i>x,y,width,height</i>) 方法定义了矩形当前的填充方式。</p> \n<hr /> \n<h2>Canvas 坐标</h2> \n<p>canvas 是一个二维网格。</p> \n<p>canvas 的左上角坐标为 (0,0)</p> \n<p>上面的 fillRect 方法拥有参数 (0,0,150,75)。</p> \n<p>意思是：在画布上绘制 150x75 的矩形，从左上角开始 (0,0)。</p> \n<p><b>坐标实例</b></p> \n<p>如下图所示，画布的 X 和 Y 坐标用于在画布上对绘画进行定位。鼠标移动的矩形框上，显示定位坐标。</p> \n<div> \n <div style=\"width:230px;height:20px;text-align:center;clear:both\">\n  X\n </div> \n <div style=\"width:20px;padding-top:40px;float:left\">\n  Y\n </div> \n <div style=\"width:402px;float:left\"> \n  <iframe src=\"/try/demo_source/tryhtml5_canvas_coordinates.htm\" frameborder=\"0\" style=\"border:0;overflow:hidden;width:400px;height:120px;\"></iframe> \n </div> \n</div> \n<hr /> \n<h2>Canvas - 路径</h2> \n<p>在Canvas上画线，我们将使用以下两种方法：</p> \n<ul> \n <li>moveTo(<i>x,y</i>) 定义线条开始坐标</li> \n <li>lineTo(<i>x,y</i>) 定义线条结束坐标</li> \n</ul> \n<p>绘制线条我们必须使用到 &quot;ink&quot; 的方法，就像stroke().</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>定义开始坐标(0,0), 和结束坐标 (200,100). 然后使用 stroke() 方法来绘制线条:</p> \n <canvas id=\"myCanvas2\" width=\"200\" height=\"100\" style=\"border:1px solid #d3d3d3;background:#ffffff;\">\n   你的浏览器不支持 HTML5 的 &lt;canvas&gt; 元素. \n </canvas> \n <script>\r\nvar c=document.getElementById(\"myCanvas2\");\r\nvar canvOK=1;\r\ntry {c.getContext(\"2d\");}\r\ncatch (er) {canvOK=0;}\r\nif (canvOK==1)\r\n	{\r\n	var ctx=c.getContext(\"2d\");\r\n	ctx.moveTo(0,0);\r\n	ctx.lineTo(200,100);\r\n	ctx.stroke();\r\n	}\r\n</script> \n <p>JavaScript:</p> \n <div class=\"example_code notranslate\">\n   var c=document.getElementById(&quot;myCanvas&quot;);\n  <br />var ctx=c.getContext(&quot;2d&quot;);\n  <br /> ctx.moveTo(0,0);\n  <br />ctx.lineTo(200,100);\n  <br /> ctx.stroke();\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_tut_path\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>在canvas中绘制圆形, 我们将使用以下方法:</p> \n<ul> \n <li>arc(x,y,r,start,stop)</li> \n</ul> \n<p>实际上我们在绘制圆形时使用了 &quot;ink&quot; 的方法, 比如 stroke() 或者 fill().</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>使用 arc() 方法 绘制一个圆:</p> \n <canvas id=\"myCanvas3\" width=\"200\" height=\"100\" style=\"border:1px solid #d3d3d3;background:#ffffff;\">\n   你的浏览器不支持 HTML5 的 &lt;canvas&gt; 元素. \n </canvas> \n <script>\r\nvar c=document.getElementById(\"myCanvas3\");\r\nvar canvOK=1;\r\ntry {c.getContext(\"2d\");}\r\ncatch (er) {canvOK=0;}\r\nif (canvOK==1)\r\n	{\r\n	var ctx=c.getContext(\"2d\");\r\n	ctx.beginPath();\r\n	ctx.arc(95,50,40,0,2*Math.PI);\r\n	ctx.stroke();\r\n	}\r\n</script> \n <p>JavaScript:</p> \n <div class=\"example_code notranslate\">\n   var c=document.getElementById(&quot;myCanvas&quot;);\n  <br />var ctx=c.getContext(&quot;2d&quot;);\n  <br /> ctx.beginPath();\n  <br />ctx.arc(95,50,40,0,2*Math.PI);\n  <br />ctx.stroke();\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_tut_path2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>Canvas - 文本</h2> \n<p>使用 canvas 绘制文本，重要的属性和方法如下：</p> \n<ul> \n <li>font - 定义字体</li> \n <li>fillText(<i>text,x,y</i>) - 在 canvas 上绘制实心的文本</li> \n <li>strokeText(<i>text,x,y</i>) - 在 canvas 上绘制空心的文本</li> \n</ul> \n<p>使用 fillText():</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>使用 &quot;Arial&quot; 字体在画布上绘制一个高 30px 的文字（实心）：</p> \n <canvas id=\"myCanvas4\" width=\"200\" height=\"100\" style=\"border:1px solid #d3d3d3;background:#ffffff;\">\n   你的浏览器不支持 HTML5 的 &lt;canvas&gt; 元素. \n </canvas> \n <script>\r\n\r\nvar c=document.getElementById(\"myCanvas4\");\r\nvar canvOK=1;\r\ntry {c.getContext(\"2d\");}\r\ncatch (er) {canvOK=0;}\r\nif (canvOK==1)\r\n	{\r\n    var ctx=c.getContext(\"2d\");\r\n    ctx.font=\"30px Arial\";\r\n    ctx.fillText(\"Hello World\",10,50);\r\n	}\r\n	</script> \n <p>JavaScript:</p> \n <div class=\"example_code notranslate\">\n   var c=document.getElementById(&quot;myCanvas&quot;);\n  <br />var ctx=c.getContext(&quot;2d&quot;);\n  <br /> ctx.font=&quot;30px Arial&quot;;\n  <br />ctx.fillText(&quot;Hello World&quot;,10,50);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_tut_text\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>使用 strokeText():</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>使用 &quot;Arial&quot; 字体在画布上绘制一个高 30px 的文字（空心）：</p> \n <canvas id=\"myCanvas5\" width=\"200\" height=\"100\" style=\"border:1px solid #d3d3d3;background:#ffffff;\">\n   你的浏览器不支持 HTML5 的 &lt;canvas&gt; 元素. \n </canvas> \n <script>\r\n\r\nvar c=document.getElementById(\"myCanvas5\");\r\nvar canvOK=1;\r\ntry {c.getContext(\"2d\");}\r\ncatch (er) {canvOK=0;}\r\nif (canvOK==1)\r\n	{\r\n    var ctx=c.getContext(\"2d\");\r\n    ctx.font=\"30px Arial\";\r\n    ctx.strokeText(\"Hello World\",10,50);\r\n	}\r\n	</script> \n <p>JavaScript:</p> \n <div class=\"example_code notranslate\">\n   var c=document.getElementById(&quot;myCanvas&quot;);\n  <br />var ctx=c.getContext(&quot;2d&quot;);\n  <br /> ctx.font=&quot;30px Arial&quot;;\n  <br />ctx.strokeText(&quot;Hello World&quot;,10,50);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_tut_text2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>Canvas - 渐变</h2> \n<p> 渐变可以填充在矩形, 圆形, 线条, 文本等等, 各种形状可以自己定义不同的颜色。</p> \n<p>以下有两种不同的方式来设置Canvas渐变：</p> \n<ul> \n <li>createLinearGradient(<i>x,y,x1,y1</i>) - 创建线条渐变</li> \n <li>createRadialGradient(<i>x,y,r,x1,y1,r1</i>) - 创建一个径向/圆渐变</li> \n</ul> \n<p>当我们使用渐变对象，必须使用两种或两种以上的停止颜色。</p> \n<p> addColorStop()方法指定颜色停止，参数使用坐标来描述，可以是0至1.</p> \n<p>使用渐变，设置fillStyle或strokeStyle的值为 渐变，然后绘制形状，如矩形，文本，或一条线。</p> \n<p>使用 createLinearGradient():</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>创建一个线性渐变。使用渐变填充矩形:</p> \n <canvas id=\"myCanvas6\" width=\"200\" height=\"100\" style=\"border:1px solid #d3d3d3;background:#ffffff;\">\n   你的浏览器不支持 HTML5 的 &lt;canvas&gt; 元素. \n </canvas> \n <script>\r\n\r\nvar c=document.getElementById(\"myCanvas6\");\r\nvar canvOK=1;\r\ntry {c.getContext(\"2d\");}\r\ncatch (er) {canvOK=0;}\r\nif (canvOK==1)\r\n	{\r\n    var ctx=c.getContext(\"2d\");\r\n    var grd=ctx.createLinearGradient(0,0,200,0);\r\n    grd.addColorStop(0,\"red\");\r\n    grd.addColorStop(1,\"white\");\r\n    ctx.fillStyle=grd;\r\n    ctx.fillRect(10,10,150,80);\r\n	}\r\n	</script> \n <p>JavaScript:</p> \n <div class=\"example_code notranslate\">\n   var c=document.getElementById(&quot;myCanvas&quot;);\n  <br /> var ctx=c.getContext(&quot;2d&quot;);\n  <br />\n  <br /> // Create gradient\n  <br /> var grd=ctx.createLinearGradient(0,0,200,0);\n  <br /> grd.addColorStop(0,&quot;red&quot;);\n  <br /> grd.addColorStop(1,&quot;white&quot;);\n  <br />\n  <br /> // Fill with gradient\n  <br /> ctx.fillStyle=grd;\n  <br /> ctx.fillRect(10,10,150,80);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_tut_grad\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>使用 createRadialGradient():</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>创建一个径向/圆渐变。使用渐变填充矩形：</p> \n <canvas id=\"myCanvas7\" width=\"200\" height=\"100\" style=\"border:1px solid #d3d3d3;background:#ffffff;\">\n   你的浏览器不支持 HTML5 的 &lt;canvas&gt; 元素. \n </canvas> \n <script>\r\n\r\nvar c=document.getElementById(\"myCanvas7\");\r\nvar canvOK=1;\r\ntry {c.getContext(\"2d\");}\r\ncatch (er) {canvOK=0;}\r\nif (canvOK==1)\r\n	{\r\n    var ctx=c.getContext(\"2d\");\r\n    // Create gradient\r\n    var grd=ctx.createRadialGradient(75,50,5,90,60,100);\r\n    grd.addColorStop(0,\"red\");\r\n    grd.addColorStop(1,\"white\");\r\n    // Fill with gradient\r\n    ctx.fillStyle=grd;\r\n    ctx.fillRect(10,10,150,80);\r\n	}\r\n	</script> \n <p>JavaScript:</p> \n <div class=\"example_code notranslate\">\n   var c=document.getElementById(&quot;myCanvas&quot;);\n  <br /> var ctx=c.getContext(&quot;2d&quot;);\n  <br />\n  <br /> // Create gradient\n  <br /> var grd=ctx.createRadialGradient(75,50,5,90,60,100);\n  <br /> grd.addColorStop(0,&quot;red&quot;);\n  <br /> grd.addColorStop(1,&quot;white&quot;);\n  <br />\n  <br /> // Fill with gradient\n  <br /> ctx.fillStyle=grd;\n  <br /> ctx.fillRect(10,10,150,80);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_tut_grad2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>Canvas - 图像</h2> \n<p>把一幅图像放置到画布上, 使用以下方法:</p> \n<ul> \n <li>drawImage(<i>image,x,y</i>)</li> \n</ul> \n<div class=\"example\"> \n <h2 class=\"example\">使用图像:</h2> \n <p><img id=\"scream\" src=\"http://www.runoob.com/images/img_the_scream.jpg\" alt=\"The Scream\" /></p> \n <h2 class=\"example\">实例</h2> \n <p>把一幅图像放置到画布上:</p> \n <canvas id=\"myCanvas8\" width=\"250\" height=\"300\" style=\"border:1px solid #d3d3d3;background:#ffffff;\">\n   你的浏览器不支持 HTML5 的 &lt;canvas&gt; 元素. \n </canvas> \n <script>\r\n\r\nvar c=document.getElementById(\"myCanvas8\");\r\nvar canvOK=1;\r\ntry {c.getContext(\"2d\");}\r\ncatch (er) {canvOK=0;}\r\nif (canvOK==1)\r\n	{\r\n    var ctx=c.getContext(\"2d\");\r\n    var img=document.getElementById(\"scream\");\r\n    ctx.drawImage(img,10,10);\r\n	}\r\n	</script> \n <p>JavaScript:</p> \n <div class=\"example_code notranslate\">\n   var c=document.getElementById(&quot;myCanvas&quot;);\n  <br /> var ctx=c.getContext(&quot;2d&quot;);\n  <br /> var img=document.getElementById(&quot;scream&quot;);\n  <br /> ctx.drawImage(img,10,10);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_canvas_tut_img\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML Canvas 参考手册</h2> \n<p>标签的完整属性可以参考<a href=\"http://www.runoob.com/tags/ref-canvas.html\">Canvas 参考手册.</a></p> \n<h2>The HTML &lt;canvas&gt; Tag</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"150\">Tag</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-canvas.html\">&lt;canvas&gt;</a></td> \n   <td>HTML5 的 canvas 元素使用 JavaScript 在网页上绘制图像。</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML5 Canvas|什么是 Canvas?|浏览器支持|创建一个画布（Canvas）|实例|使用 JavaScript 来绘制图像|实例|Canvas 坐标|Canvas - 路径|实例|实例|Canvas - 文本|实例|实例|Canvas - 渐变|实例|实例|Canvas - 图像|使用图像:|实例|HTML Canvas 参考手册|The HTML <canvas> Tag|');
INSERT INTO `schoolcontent` VALUES ('33', '33', '<h1>HTML5 <span class=\"color_h1\">内联 SVG</span> </h1> \n<hr /> \n<p class=\"intro\">HTML5 支持内联 SVG。</p> \n<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" height=\"130px\" width=\"500px\"> \n <defs> \n  <lineargradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \n   <stop offset=\"0%\" style=\"stop-color:rgb(255,255,0);stop-opacity:1\">\n    <stop offset=\"100%\" style=\"stop-color:rgb(255,0,0);stop-opacity:1\"></stop>\n   </stop>\n  </lineargradient> \n </defs> \n <ellipse cx=\"300\" cy=\"70\" rx=\"85\" ry=\"55\" fill=\"url(#grad1)\">\n  <text fill=\"#ffffff\" font-size=\"45\" font-family=\"Verdana\" x=\"250\" y=\"86\">\n   SVG\n  </text> Sorry, your browser does not support inline SVG. \n </ellipse>\n</svg> \n<hr /> \n<h2>什么是SVG？</h2> \n<ul> \n <li>SVG 指可伸缩矢量图形 (Scalable Vector Graphics)</li> \n <li>SVG 用于定义用于网络的基于矢量的图形</li> \n <li>SVG 使用 XML 格式定义图形</li> \n <li>SVG 图像在放大或改变尺寸的情况下其图形质量不会有损失</li> \n <li>SVG 是万维网联盟的标准</li> \n</ul> \n<hr /> \n<h2>SVG优势</h2> \n<p>与其他图像格式相比（比如 JPEG 和 GIF），使用 SVG 的优势在于：</p> \n<ul> \n <li>SVG 图像可通过文本编辑器来创建和修改</li> \n <li>SVG 图像可被搜索、索引、脚本化或压缩</li> \n <li>SVG 是可伸缩的</li> \n <li>SVG 图像可在任何的分辨率下被高质量地打印</li> \n <li>SVG 可在图像质量不下降的情况下被放大</li> \n</ul> \n<hr /> \n<h2>浏览器支持</h2> \n<p><img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 9+, Firefox, Opera, Chrome, 和 Safari 支持内联SVG。</p> \n<hr /> \n<h2>把 SVG 直接嵌入 HTML 页面</h2> \n<p>在 HTML5 中，您能够将 SVG 元素直接嵌入 HTML 页面中：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; version=&quot;1.1&quot; height=&quot;190&quot;&gt;\n  <br /> &nbsp; &lt;polygon points=&quot;100,10 40,180 190,60 10,60 160,180&quot;\n  <br /> &nbsp; style=&quot;fill:lime;stroke:purple;stroke-width:5;fill-rule:evenodd;&quot;&gt;\n  <br /> &lt;/svg&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_svg_ex\">尝试一下 &raquo;</a> \n</div> \n<p>结果：</p> 抱歉, 你的浏览器不支持内联SVG. \n<p>学习更多关于 SVG 教程, 请访问 <a href=\"http://www.runoob.com/svg/svg-tutorial.html\">SVG 教程</a>.</p> \n<hr /> \n<h2>SVG 与 Canvas两者间的区别</h2> \n<p>SVG 是一种使用 XML 描述 2D 图形的语言。</p> \n<p>Canvas 通过 JavaScript 来绘制 2D 图形。</p> \n<p>SVG 基于 XML，这意味着 SVG DOM 中的每个元素都是可用的。您可以为某个元素附加 JavaScript 事件处理器。</p> \n<p>在 SVG 中，每个被绘制的图形均被视为对象。如果 SVG 对象的属性发生变化，那么浏览器能够自动重现图形。</p> \n<p>Canvas 是逐像素进行渲染的。在 canvas 中，一旦图形被绘制完成，它就不会继续得到浏览器的关注。如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象。</p> \n<hr /> \n<h2>Canvas 与 SVG 的比较</h2> \n<p>下表列出了 canvas 与 SVG 之间的一些不同之处。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"50%\">Canvas</th> \n   <th align=\"left\" width=\"50%\">SVG</th> \n  </tr> \n  <tr> \n   <td> \n    <ul> \n     <li>依赖分辨率</li> \n     <li>不支持事件处理器</li> \n     <li>弱的文本渲染能力</li> \n     <li>能够以 .png 或 .jpg 格式保存结果图像</li> \n     <li>最适合图像密集型的游戏，其中的许多对象会被频繁重绘</li> \n    </ul> </td>\n   <td> \n    <ul> \n     <li>不依赖分辨率</li> \n     <li>支持事件处理器</li> \n     <li>最适合带有大型渲染区域的应用程序（比如谷歌地图）</li> \n     <li>复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）</li> \n     <li>不适合游戏应用</li> \n    </ul> </td> \n  </tr> \n </tbody>\n</table>', null, 'HTML5 内联 SVG|什么是SVG？|SVG优势|浏览器支持|把 SVG 直接嵌入 HTML 页面|实例|SVG 与 Canvas两者间的区别|Canvas 与 SVG 的比较|');
INSERT INTO `schoolcontent` VALUES ('34', '34', '<h1>HTML5 MathML</h1> \n<p>HTML5 可以在文档中使用 MathML 元素，对应的标签是 &lt;math&gt;...&lt;/math&gt; 。</p> \n<p>MathML 是数学标记语言，是一种基于XML（标准通用标记语言的子集）的标准，用来在互联网上书写数学符号和公式的置标语言。</p> \n<blockquote>\n <p><strong>注意：</strong>大部分浏览器都支持 MathML 标签，如果你的浏览器不支持该标签，可以使用最新版的 Firefox 或 Safari 浏览器查看。</p>\n</blockquote> \n<hr /> \n<h2>MathML 实例</h2> \n<p>以下是一个简单的 MathML 实例：</p> \n<pre>\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n   &lt;head&gt;\r\n      &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n      &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;\r\n   &lt;/head&gt;\r\n	\r\n   &lt;body&gt;\r\n	\r\n      &lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;\r\n		\r\n         &lt;mrow&gt;\r\n            &lt;msup&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;\r\n            &lt;mo&gt;+&lt;/mo&gt;\r\n				\r\n            &lt;msup&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;\r\n            &lt;mo&gt;=&lt;/mo&gt;\r\n				\r\n            &lt;msup&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;\r\n         &lt;/mrow&gt;\r\n			\r\n      &lt;/math&gt;\r\n		\r\n   &lt;/body&gt;\r\n&lt;/html&gt; \r\n</pre> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_mathml\" class=\"tryitbtn\">尝试一下 &raquo;</a></p> \n<p>运行结果图，如下所示：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2015/12/mathml1.jpg\" /></p> \n<p>以下实例添加了一些运算符：</p> \n<pre>\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n   &lt;head&gt;\r\n      &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n      &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;\r\n   &lt;/head&gt;\r\n	\r\n   &lt;body&gt;\r\n	\r\n      &lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;\r\n		\r\n         &lt;mrow&gt;			\r\n            &lt;mrow&gt;\r\n				\r\n               &lt;msup&gt;\r\n                  &lt;mi&gt;x&lt;/mi&gt;\r\n                  &lt;mn&gt;2&lt;/mn&gt;\r\n               &lt;/msup&gt;\r\n					\r\n               &lt;mo&gt;+&lt;/mo&gt;\r\n					\r\n               &lt;mrow&gt;\r\n                  &lt;mn&gt;4&lt;/mn&gt;\r\n                  &lt;mo&gt;⁢&lt;/mo&gt;\r\n                  &lt;mi&gt;x&lt;/mi&gt;\r\n               &lt;/mrow&gt;\r\n					\r\n               &lt;mo&gt;+&lt;/mo&gt;\r\n               &lt;mn&gt;4&lt;/mn&gt;\r\n					\r\n            &lt;/mrow&gt;\r\n				\r\n            &lt;mo&gt;=&lt;/mo&gt;\r\n            &lt;mn&gt;0&lt;/mn&gt;\r\n				 \r\n         &lt;/mrow&gt;\r\n      &lt;/math&gt;\r\n		\r\n   &lt;/body&gt;\r\n&lt;/html&gt; \r\n</pre>\n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_mathml1\" class=\"tryitbtn\">尝试一下 &raquo;</a></p> \n<p>运行结果图，如下所示：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2015/12/mathml2-1.jpg\" /></p> \n<p> 以下实例是一个 2&times;2 矩阵，可以在 Firefox 3.5 以上版本查看到效果：</p> \n<pre>\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n   &lt;head&gt;\r\n      &lt;meta charset=&quot;UTF-8&quot;&gt;\r\n      &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;\r\n   &lt;/head&gt;\r\n	\r\n   &lt;body&gt;\r\n      &lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;\r\n		\r\n         &lt;mrow&gt;\r\n            &lt;mi&gt;A&lt;/mi&gt;\r\n            &lt;mo&gt;=&lt;/mo&gt;\r\n			\r\n            &lt;mfenced open=&quot;[&quot; close=&quot;]&quot;&gt;\r\n			\r\n               &lt;mtable&gt;\r\n                  &lt;mtr&gt;\r\n                     &lt;mtd&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mtd&gt;\r\n                     &lt;mtd&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;/mtd&gt;\r\n                  &lt;/mtr&gt;\r\n					\r\n                  &lt;mtr&gt;\r\n                     &lt;mtd&gt;&lt;mi&gt;z&lt;/mi&gt;&lt;/mtd&gt;\r\n                     &lt;mtd&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;/mtd&gt;\r\n                  &lt;/mtr&gt;\r\n               &lt;/mtable&gt;\r\n               \r\n            &lt;/mfenced&gt;\r\n         &lt;/mrow&gt;\r\n      &lt;/math&gt;\r\n      \r\n   &lt;/body&gt;\r\n&lt;/html&gt; \r\n</pre>\n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_mathml2\" class=\"tryitbtn\">尝试一下 &raquo;</a></p> \n<p>运行结果图，如下所示：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2015/12/mathml3.jpg\" /></p>', null, 'HTML5 MathML|MathML 实例|');
INSERT INTO `schoolcontent` VALUES ('35', '35', '<style type=\"text/css\">\r\n#div1, #div2\r\n{float:left; width:100px; height:35px; margin:10px;padding:10px;border:1px solid #aaaaaa;}\r\n</style> \n<script>\r\nfunction allowDrop(ev)\r\n{\r\nev.preventDefault();\r\n}\r\n\r\nfunction drag(ev)\r\n{\r\nev.dataTransfer.setData(\"Text\",ev.target.id);\r\n}\r\n\r\nfunction drop(ev)\r\n{\r\nev.preventDefault();\r\nvar data=ev.dataTransfer.getData(\"Text\");\r\nev.target.appendChild(document.getElementById(data));\r\n}\r\n</script> \n<h1>HTML5 <span class=\"color_h1\">拖放（Drag 和 Drop）</span> </h1> \n<hr /> \n<p class=\"intro\">拖放（Drag 和 drop）是 HTML5 标准的组成部分。</p> \n<hr /> \n<div id=\"div1\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\"> \n <img src=\"http://www.runoob.com/try/demo_source/img_w3slogo.gif\" draggable=\"true\" ondragstart=\"drag(event)\" width=\"100\" height=\"35\" id=\"drag1\" />\n</div> \n<div id=\"div2\" ondrop=\"drop(event)\" ondragover=\"allowDrop(event)\"></div> \n<p style=\"clear:both\">将w3cschool图标拖动到矩形框中。</p> \n<hr /> \n<h2>拖放</h2> \n<p>拖放是一种常见的特性，即抓取对象以后拖到另一个位置。</p> \n<p>在 HTML5 中，拖放是标准的一部分，任何元素都能够拖放。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 9+, Firefox, Opera, Chrome, 和 Safari 支持拖动。</p> \n<p><b>注意:</b>Safari 5.1.2不支持拖动.</p> \n<hr /> \n<h2>HTML5 拖放实例</h2> \n<p>下面的例子是一个简单的拖放实例：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE HTML&gt; \n  <br /> &lt;html&gt; \n  <br /> &lt;head&gt; \n  <br /> &lt;meta charset=&quot;utf-8&quot;&gt; \n  <br /> &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt; \n  <br /> &lt;style type=&quot;text/css&quot;&gt; \n  <br /> #div1 {width:350px;height:70px;padding:10px;border:1px solid #aaaaaa;} \n  <br /> &lt;/style&gt; \n  <br /> &lt;script&gt; \n  <br /> function allowDrop(ev) \n  <br /> { \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;ev.preventDefault(); \n  <br /> } \n  <br /> \n  <br /> function drag(ev) \n  <br /> { \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;ev.dataTransfer.setData(&quot;Text&quot;,ev.target.id); \n  <br /> } \n  <br /> \n  <br /> function drop(ev) \n  <br /> { \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;ev.preventDefault(); \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;var data=ev.dataTransfer.getData(&quot;Text&quot;); \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;ev.target.appendChild(document.getElementById(data)); \n  <br /> } \n  <br /> &lt;/script&gt; \n  <br /> &lt;/head&gt; \n  <br /> &lt;body&gt; \n  <br /> \n  <br /> &lt;p&gt;拖动 W3CSchool.cc 图片到矩形框中:&lt;/p&gt; \n  <br /> \n  <br /> &lt;div id=&quot;div1&quot; ondrop=&quot;drop(event)&quot; ondragover=&quot;allowDrop(event)&quot;&gt;&lt;/div&gt; \n  <br /> &lt;br&gt; \n  <br /> &lt;img id=&quot;drag1&quot; src=&quot;/images/logo.png&quot; draggable=&quot;true&quot; ondragstart=&quot;drag(event)&quot; width=&quot;336&quot; height=&quot;69&quot;&gt; \n  <br /> \n  <br /> &lt;/body&gt; \n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_draganddrop\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>它看上去也许有些复杂，不过我们可以分别研究拖放事件的不同部分。</p> \n<hr /> \n<h2>设置元素为可拖放</h2> \n<p>首先，为了使元素可拖动，把 draggable 属性设置为 true ：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;img draggable=&quot;true&quot;&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>拖动什么 - ondragstart 和 setData()</h2> \n<p>然后，规定当元素被拖动时，会发生什么。</p> \n<p>在上面的例子中，ondragstart 属性调用了一个函数，drag(event)，它规定了被拖动的数据。</p> \n<p>dataTransfer.setData() 方法设置被拖数据的数据类型和值：</p> \n<div class=\"code notranslate\"> \n <div>\n   function drag(ev)\n  <br />{\n  <br />ev.dataTransfer.setData(&quot;Text&quot;,ev.target.id);\n  <br /> } \n </div> \n</div> \n<p>在这个例子中，数据类型是 &quot;Text&quot;，值是可拖动元素的 id (&quot;drag1&quot;)。</p> \n<hr /> \n<h2>放到何处 - ondragover</h2> \n<p>ondragover 事件规定在何处放置被拖动的数据。</p> \n<p>默认地，无法将数据/元素放置到其他元素中。如果需要设置允许放置，我们必须阻止对元素的默认处理方式。 </p> \n<p>这要通过调用 ondragover 事件的 event.preventDefault() 方法：</p> \n<div class=\"code notranslate\"> \n <div> \n  <i>event</i>.preventDefault()\n </div> \n</div> \n<br />\n<hr /> \n<h2>进行放置 - ondrop</h2> \n<p>当放置被拖数据时，会发生 drop 事件。</p> \n<p>在上面的例子中，ondrop 属性调用了一个函数，drop(event)：</p> \n<div class=\"code notranslate\"> \n <div>\n   function drop(ev)\n  <br /> {\n  <br /> ev.preventDefault();\n  <br /> var data=ev.dataTransfer.getData(&quot;Text&quot;);\n  <br /> ev.target.appendChild(document.getElementById(data));\n  <br /> }\n </div> \n</div> \n<p>代码解释：</p> \n<ul> \n <li>调用 preventDefault() 来避免浏览器对数据的默认处理（drop 事件的默认行为是以链接形式打开）</li> \n <li>通过 dataTransfer.getData(&quot;Text&quot;) 方法获得被拖的数据。该方法将返回在 setData() 方法中设置为相同类型的任何数据。</li> \n <li>被拖数据是被拖元素的 id (&quot;drag1&quot;)</li> \n <li>把被拖元素追加到放置元素（目标元素）中</li> \n</ul> \n<br />\n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_draganddrop2\">来回拖放图片</a><br /> 如何在两个 &lt;div&gt; 元素之间拖放图像。</p>', null, 'HTML5 拖放（Drag 和 Drop）|拖放|浏览器支持|HTML5 拖放实例|实例|设置元素为可拖放|拖动什么 - ondragstart 和 setData()|放到何处 - ondragover|进行放置 - ondrop|更多实例|');
INSERT INTO `schoolcontent` VALUES ('36', '36', '<h1>HTML5 <span class=\"color_h1\">Geolocation（地理定位）</span> </h1> \n<hr /> \n<p class=\"intro\" id=\"demo\">HTML5 Geolocation（地理定位）用于定位用户的位置。</p> \n<hr /> \n<h2>定位用户的位置</h2> \n<p>HTML5 Geolocation API 用于获得用户的地理位置。</p> \n<p>鉴于该特性可能侵犯用户的隐私，除非用户同意，否则用户位置信息是不可用的。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 9+, Firefox, Chrome, Safari 和 Opera 支持Geolocation（地理定位）.</p> \n<p><b>注意: </b>Geolocation（地理定位）对于拥有 GPS 的设备，比如 iPhone，地理定位更加精确。</p> \n<hr /> \n<h2>HTML5 - 使用地理定位</h2> \n<p>请使用 getCurrentPosition() 方法来获得用户的位置。</p> \n<p>下例是一个简单的地理定位实例，可返回用户位置的经度和纬度:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br />var x=document.getElementById(&quot;demo&quot;);\n  <br />function getLocation()\n  <br />&nbsp; {\n  <br />&nbsp; if (navigator.geolocation)\n  <br />&nbsp;&nbsp;&nbsp; {\n  <br />&nbsp;&nbsp;&nbsp; navigator.geolocation.getCurrentPosition(showPosition);\n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />&nbsp; else{x.innerHTML=&quot;该浏览器不支持获取地理位置。&quot;;}\n  <br />&nbsp; }\n  <br /> function showPosition(position)\n  <br />&nbsp; {\n  <br />&nbsp; x.innerHTML=&quot;Latitude: &quot; + position.coords.latitude + \n  <br />&nbsp; &quot;&lt;br&gt;Longitude: &quot; + position.coords.longitude; \n  <br />&nbsp; }\n  <br />&lt;/script&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_geolocation\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>实例解析:</p> \n<ul> \n <li>检测是否支持地理定位</li> \n <li>如果支持，则运行 getCurrentPosition() 方法。如果不支持，则向用户显示一段消息。</li> \n <li>如果getCurrentPosition()运行成功，则向参数showPosition中规定的函数返回一个coordinates对象</li> \n <li>showPosition() 函数获得并显示经度和纬度</li> \n</ul> \n<p>上面的例子是一个非常基础的地理定位脚本，不含错误处理。</p> \n<hr /> \n<h2>处理错误和拒绝</h2> \n<p>getCurrentPosition() 方法的第二个参数用于处理错误。它规定当获取用户位置失败时运行的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function showError(error)\n  <br />&nbsp; {\n  <br />&nbsp; switch(error.code) \n  <br />&nbsp;&nbsp;&nbsp; {\n  <br />&nbsp;&nbsp;&nbsp; case error.PERMISSION_DENIED:\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x.innerHTML=&quot;用户拒绝对获取地理位置的请求。&quot;\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;\n  <br />&nbsp;&nbsp;&nbsp; case error.POSITION_UNAVAILABLE:\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x.innerHTML=&quot;位置信息是不可用的。&quot;\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;\n  <br />&nbsp;&nbsp;&nbsp; case error.TIMEOUT:\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x.innerHTML=&quot;请求用户地理位置超时。&quot;\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;\n  <br />&nbsp;&nbsp;&nbsp; case error.UNKNOWN_ERROR:\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x.innerHTML=&quot;未知错误。&quot;\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;\n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />&nbsp; }\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_geolocation_error\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>错误代码：</p> \n<ul> \n <li>Permission denied - 用户不允许地理定位</li> \n <li>Position unavailable - 无法获取当前位置</li> \n <li>Timeout - 操作超时</li> \n</ul> \n<hr /> \n<h2>在地图中显示结果</h2> \n<p>如需在地图中显示结果，您需要访问可使用经纬度的地图服务，比如谷歌地图或百度地图：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function showPosition(position)\n  <br />{\n  <br />var latlon=position.coords.latitude+&quot;,&quot;+position.coords.longitude;\n  <br />\n  <br />var img_url=&quot;http://maps.googleapis.com/maps/api/staticmap?center=&quot;\n  <br /> +latlon+&quot;&amp;zoom=14&amp;size=400x300&amp;sensor=false&quot;;\n  <br />\n  <br /> document.getElementById(&quot;mapholder&quot;).innerHTML=&quot;&lt;img src=\'&quot;+img_url+&quot;\'&gt;&quot;;\n  <br /> }\n  <br /> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_geolocation_map\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>在上例中，我们使用返回的经纬度数据在谷歌地图中显示位置（使用静态图像）。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_geolocation_map_script\" target=\"_blank\">Google地图脚本</a><br /> 上面的链接向您演示如何使用脚本来显示带有标记、缩放和拖曳选项的交互式地图。</p> \n<hr /> \n<h2>给定位置的信息</h2> \n<p>本页演示的是如何在地图上显示用户的位置。不过，地理定位对于给定位置的信息同样很有用处。</p> \n<p>实例:</p> \n<ul> \n <li>更新本地信息</li> \n <li>显示用户周围的兴趣点</li> \n <li>交互式车载导航系统 (GPS)</li> \n</ul> \n<hr /> \n<h2>getCurrentPosition() 方法 - 返回数据</h2> \n<p>T若成功，则 getCurrentPosition() 方法返回对象。始终会返回 latitude、longitude 以及 accuracy 属性。如果可用，则会返回其他下面的属性。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:40%;\">属性</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>coords.latitude</td> \n   <td>十进制数的纬度</td> \n  </tr> \n  <tr> \n   <td>coords.longitude</td> \n   <td>十进制数的经度</td> \n  </tr> \n  <tr> \n   <td>coords.accuracy</td> \n   <td>位置精度</td> \n  </tr> \n  <tr> \n   <td>coords.altitude</td> \n   <td>海拔，海平面以上以米计</td> \n  </tr> \n  <tr> \n   <td>coords.altitudeAccuracy</td> \n   <td>位置的海拔精度</td> \n  </tr> \n  <tr> \n   <td>coords.heading</td> \n   <td>方向，从正北开始以度计</td> \n  </tr> \n  <tr> \n   <td>coords.speed</td> \n   <td>速度，以米/每秒计</td> \n  </tr> \n  <tr> \n   <td>timestamp</td> \n   <td>响应的日期/时间</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>Geolocation 对象 - 其他有趣的方法</h2> \n<p>watchPosition() - 返回用户的当前位置，并继续返回用户移动时的更新位置（就像汽车上的 GPS）。</p> \n<p>clearWatch() - 停止 watchPosition() 方法</p> \n<p>下面的例子展示 watchPosition() 方法。您需要一台精确的 GPS 设备来测试该例（比如 iPhone）： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br />var x=document.getElementById(&quot;demo&quot;);\n  <br />function getLocation()\n  <br />&nbsp; {\n  <br />&nbsp; if (navigator.geolocation)\n  <br />&nbsp;&nbsp;&nbsp; {\n  <br />&nbsp;&nbsp;&nbsp; navigator.geolocation.watchPosition(showPosition);\n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />&nbsp; else{x.innerHTML=&quot;该浏览器不支持获取地理位置。&quot;;}\n  <br />&nbsp; }\n  <br /> function showPosition(position)\n  <br />&nbsp; {\n  <br />&nbsp; x.innerHTML=&quot;纬度: &quot; + position.coords.latitude + \n  <br />&nbsp; &quot;&lt;br&gt;经度: &quot; + position.coords.longitude; \n  <br />&nbsp; }\n  <br />&lt;/script&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_geolocation_watchposition\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>', null, 'HTML5 Geolocation（地理定位）|定位用户的位置|浏览器支持|HTML5 - 使用地理定位|实例|处理错误和拒绝|实例|在地图中显示结果|实例|给定位置的信息|getCurrentPosition() 方法 - 返回数据|Geolocation 对象 - 其他有趣的方法|实例|');
INSERT INTO `schoolcontent` VALUES ('37', '37', '<script>\r\nfunction checkVideo()\r\n{\r\nif(!!document.createElement(\'video\').canPlayType)\r\n  {\r\n  var vidTest=document.createElement(\"video\");\r\n  oggTest=vidTest.canPlayType(\'video/ogg; codecs=\"theora, vorbis\"\');\r\n  if (!oggTest)\r\n    {\r\n    h264Test=vidTest.canPlayType(\'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"\');\r\n    if (!h264Test)\r\n      {\r\n      document.getElementById(\"checkVideoResult\").innerHTML=\"抱歉你的浏览器不支持HTML5 video标签！.\"\r\n      }\r\n    else\r\n      {\r\n      if (h264Test==\"probably\")\r\n        {\r\n        document.getElementById(\"checkVideoResult\").innerHTML=\"非常棒！你的浏览器支持HTML5 video标签！\";\r\n        }\r\n      else\r\n        {\r\n        document.getElementById(\"checkVideoResult\").innerHTML=\"Meh. Some support.\";\r\n        }\r\n      }\r\n    }\r\n  else\r\n    {\r\n    if (oggTest==\"probably\")\r\n      {\r\n      document.getElementById(\"checkVideoResult\").innerHTML=\"非常棒！你的浏览器支持HTML5 video标签！\";\r\n      }\r\n    else\r\n      {\r\n      document.getElementById(\"checkVideoResult\").innerHTML=\"Meh. Some support.\";\r\n      }\r\n    }\r\n  }\r\nelse\r\n  {\r\n  document.getElementById(\"checkVideoResult\").innerHTML=\"Sorry. No video support.\"\r\n  }\r\n}\r\n</script> \n<h1>HTML5 <span class=\"color_h1\">Video(视频)</span> </h1> \n<hr /> \n<p class=\"intro\">很多站点都会使用到视频. HTML5 提供了展示视频的标准。</p> \n<div class=\"example\"> \n <h2 class=\"example\">检测您的浏览器是否支持 HTML5 视频：</h2> \n <div class=\"example_code notranslate\"> \n  <div id=\"checkVideoResult\">\n   <button onclick=\"checkVideo()\">检测</button>\n  </div> \n </div> \n</div> \n<br />\n<hr /> \n<h2>Web站点上的视频</h2> \n<p>直到现在，仍然不存在一项旨在网页上显示视频的标准。</p> \n<p>今天，大多数视频是通过插件（比如 Flash）来显示的。然而，并非所有浏览器都拥有同样的插件。</p> \n<p>HTML5 规定了一种通过 video 元素来包含视频的标准方法。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 9+, Firefox, Opera, Chrome, 和 Safari 支持 &lt;video&gt; 元素.</p> \n<p><b>注意:</b> Internet Explorer 8 或者更早的IE版本不支持 &lt;video&gt; 元素。</p> \n<hr /> \n<h2>HTML5 (视频)- 如何工作</h2> \n<p>如需在 HTML5 中显示视频，您所有需要的是：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;\n  <br /> 您的浏览器不支持Video标签。\n  <br /> &lt;/video&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_video_all\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> &lt;video&gt; 元素提供了 播放、暂停和音量控件来控制视频。</p> \n<p>同时&lt;video&gt; 元素元素也提供了 width 和 height 属性控制视频的尺寸.如果设置的高度和宽度，所需的视频空间会在页面加载时保留。。如果没有设置这些属性，浏览器不知道大小的视频，浏览器就不能再加载时保留特定的空间，页面就会根据原始视频的大小而改变。</p> \n<p>&lt;video&gt; 与&lt;/video&gt; 标签之间插入的内容是提供给不支持 video 元素的浏览器显示的。</p> \n<p>&lt;video&gt; 元素支持多个 &lt;source&gt; 元素. &lt;source&gt; 元素可以链接不同的视频文件。浏览器将使用第一个可识别的格式：</p> \n<hr /> \n<h2>视频格式与浏览器的支持</h2> \n<p>当前， &lt;video&gt; 元素支持三种视频格式： MP4, WebM, 和 Ogg:</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%\">浏览器</th> \n   <th style=\"width:25%\">MP4</th> \n   <th style=\"width:25%\">WebM</th> \n   <th style=\"width:25%\">Ogg</th> \n  </tr> \n  <tr> \n   <td>Internet Explorer</td> \n   <td>YES</td> \n   <td>NO</td> \n   <td>NO</td> \n  </tr> \n  <tr> \n   <td>Chrome</td> \n   <td>YES</td> \n   <td>YES</td> \n   <td>YES</td> \n  </tr> \n  <tr> \n   <td>Firefox</td> \n   <td>YES</td> \n   <td>YES</td> \n   <td>YES</td> \n  </tr> \n  <tr> \n   <td>Safari</td> \n   <td>YES</td> \n   <td>NO</td> \n   <td>NO</td> \n  </tr> \n  <tr> \n   <td>Opera</td> \n   <td>YES (从 Opera 25 起)</td> \n   <td>YES</td> \n   <td>YES</td> \n  </tr> \n </tbody>\n</table> \n<ul> \n <li>MP4 = 带有 H.264 视频编码和 AAC 音频编码的 MPEG 4 文件</li> \n <li>WebM = 带有 VP8 视频编码和 Vorbis 音频编码的 WebM 文件</li> \n <li>Ogg = 带有 Theora 视频编码和 Vorbis 音频编码的 Ogg 文件</li> \n</ul> \n<hr /> \n<h2>视频格式</h2> \n<table class=\"reference notranslate\" id=\"table1\"> \n <tbody>\n  <tr> \n   <th width=\"50%\">格式</th> \n   <th width=\"50%\">MIME-type</th> \n  </tr> \n  <tr> \n   <td>MP4</td> \n   <td>video/mp4</td> \n  </tr> \n  <tr> \n   <td>WebM</td> \n   <td>video/webm</td> \n  </tr> \n  <tr> \n   <td>Ogg</td> \n   <td>video/ogg</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>HTML5 &lt;video&gt; - 使用 DOM 进行控制</h2> \n<p>HTML5 &lt;video&gt; 和 &lt;audio&gt; 元素同样拥有方法、属性和事件。</p> \n<p>&lt;video&gt; 和 &lt;audio&gt;元素的方法、属性和事件可以使用JavaScript进行控制.</p> \n<p>其中的方法有用于播放、暂停以及加载等。其中的属性（比如时长、音量等）可以被读取或设置。其中的 DOM 事件能够通知您，比方说，&lt;video&gt; 元素开始播放、已暂停，已停止，等等。</p> \n<p>例中简单的方法，向我们演示了如何使用 &lt;video&gt; 元素，读取并设置属性，以及如何调用方法。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例 1</h2> \n <p class=\"example\">为视频创建简单的播放/暂停以及调整尺寸控件：</p> \n <div class=\"example_code notranslate\"> \n  <br /> \n  <div style=\"text-align:center\"> \n   <button onclick=\"playPause()\">播放/暂停</button> \n   <button onclick=\"makeBig()\">放大</button> \n   <button onclick=\"makeSmall()\">缩小</button> \n   <button onclick=\"makeNormal()\">普通</button> \n   <br />\n   <br /> \n   <video id=\"video1\" width=\"480\"> \n    <source src=\"/try/demo_source/mov_bbb.mp4\" type=\"video/mp4\"></source>\n    <source src=\"/try/demo_source/mov_bbb.ogg\" type=\"video/ogg\"></source>你的浏览器不支持 HTML5 video. \n   </video> \n  </div> \n  <script> \r\nvar myVideo=document.getElementById(\"video1\"); \r\n\r\nfunction playPause()\r\n{ \r\nif (myVideo.paused) \r\n  myVideo.play(); \r\nelse \r\n  myVideo.pause(); \r\n} \r\n\r\nfunction makeBig()\r\n{ \r\nmyVideo.width=600; \r\n} \r\n\r\nfunction makeSmall()\r\n{ \r\nmyVideo.width=320; \r\n} \r\n\r\nfunction makeNormal()\r\n{ \r\nmyVideo.width=480; \r\n} \r\n</script> \n </div> \n <p>上面的例子调用了两个方法：play() 和 pause()。它同时使用了两个属性：paused 和 width。</p> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_video_js_prop\">尝试一下 &raquo;</a> \n</div> \n<script>\r\n \r\nvar myVideo=document.getElementById(\"video1\"); \r\n\r\nfunction playPause()\r\n{ \r\nif (myVideo.paused) \r\n  myVideo.play(); \r\nelse \r\n  myVideo.pause(); \r\n} \r\n\r\nfunction makeBig()\r\n{ \r\nmyVideo.width=600; \r\n} \r\n\r\nfunction makeSmall()\r\n{ \r\nmyVideo.width=320; \r\n} \r\n\r\nfunction makeNormal()\r\n{ \r\nmyVideo.width=480; \r\n} \r\n</script> \n<p>更多参考请查看 <a href=\"http://www.runoob.com/tags/html-audiovideo.html\">HTML5 Audio/Video DOM 参考手册</a>.</p> \n<hr /> \n<h2>HTML5 Video 标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\">标签</th> \n   <th width=\"80%\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-video.html\">&lt;video&gt;</a></td> \n   <td>定义一个视频</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-source.html\">&lt;source&gt;</a></td> \n   <td>定义多种媒体资源,比如 &lt;video&gt; 和&lt;audio&gt;</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-track.html\">&lt;track&gt;</a></td> \n   <td>定义在媒体播放器文本轨迹</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML5 Video(视频)|检测您的浏览器是否支持 HTML5 视频：|Web站点上的视频|浏览器支持|HTML5 (视频)- 如何工作|实例|视频格式与浏览器的支持|视频格式|HTML5 <video> - 使用 DOM 进行控制|实例 1|HTML5 Video 标签|');
INSERT INTO `schoolcontent` VALUES ('38', '38', '<h1>HTML5 <span class=\"color_h1\">Audio(音频)</span> </h1> \n<hr /> \n<p class=\"intro\">HTML5 提供了播放音频文件的标准。</p> \n<hr /> \n<h2>互联网上的音频</h2> \n<p>直到现在，仍然不存在一项旨在网页上播放音频的标准。</p> \n<p>今天，大多数音频是通过插件（比如 Flash）来播放的。然而，并非所有浏览器都拥有同样的插件。</p> \n<p>HTML5 规定了在网页上嵌入音频元素的标准，即使用 &lt;audio&gt; 元素。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 9+, Firefox, Opera, Chrome, 和 Safari 都支持 &lt;audio&gt; 元素.</p> \n<p><b>注意:</b> Internet Explorer 8 及更早IE版本不支持 &lt;audio&gt; 元素.</p> \n<hr /> \n<h2>HTML5 Audio - 如何工作</h2> \n<p>如需在 HTML5 中播放音频，你需要使用以下代码：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;audio controls&gt;\n  <br /> &nbsp; &lt;source src=&quot;horse.ogg&quot; type=&quot;audio/ogg&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;horse.mp3&quot; type=&quot;audio/mpeg&quot;&gt;\n  <br /> 您的浏览器不支持 audio 元素。\n  <br /> &lt;/audio&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_audio_all\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>control 属性供添加播放、暂停和音量控件。</p> \n<p>在&lt;audio&gt; 与 &lt;/audio&gt; 之间你需要插入浏览器不支持的&lt;audio&gt;元素的提示文本 。</p> \n<p> &lt;audio&gt; 元素允许使用多个 &lt;source&gt; 元素. &lt;source&gt; 元素可以链接不同的音频文件，浏览器将使用第一个支持的音频文件</p> \n<hr /> \n<h2>音频格式及浏览器支持</h2> \n<p>目前, &lt;audio&gt;元素支持三种音频格式文件: MP3, Wav, 和 Ogg:</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"25%\" align=\"left\">浏览器</th> \n   <th width=\"25%\" align=\"left\">MP3</th> \n   <th width=\"25%\" align=\"left\">Wav</th> \n   <th width=\"25%\" align=\"left\">Ogg</th> \n  </tr> \n  <tr> \n   <td>Internet Explorer 9+</td> \n   <td>YES</td> \n   <td>NO</td> \n   <td>NO</td> \n  </tr> \n  <tr> \n   <td>Chrome 6+</td> \n   <td>YES</td> \n   <td>YES</td> \n   <td>YES</td> \n  </tr> \n  <tr> \n   <td>Firefox 3.6+</td> \n   <td>YES</td> \n   <td>YES</td> \n   <td>YES</td> \n  </tr> \n  <tr> \n   <td>Safari 5+</td> \n   <td>YES</td> \n   <td>YES</td> \n   <td>NO</td> \n  </tr> \n  <tr> \n   <td>Opera 10+</td> \n   <td>YES</td> \n   <td>YES</td> \n   <td>YES</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>音频格式的MIME类型</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"50%\" align=\"left\">Format</th> \n   <th width=\"50%\" align=\"left\">MIME-type</th> \n  </tr> \n  <tr> \n   <td>MP3</td> \n   <td>audio/mpeg</td> \n  </tr> \n  <tr> \n   <td>Ogg</td> \n   <td>audio/ogg</td> \n  </tr> \n  <tr> \n   <td>Wav</td> \n   <td>audio/wav</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>HTML5 Audio 标签</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"150\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-audio.html\">&lt;audio&gt;</a></td> \n   <td>定义了声音内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-source.html\">&lt;source&gt;</a></td> \n   <td>规定了多媒体资源, 可以是多个，在 &lt;video&gt; 与 &lt;audio&gt;标签中使用</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML5 Audio(音频)|互联网上的音频|浏览器支持|HTML5 Audio - 如何工作|实例|音频格式及浏览器支持|音频格式的MIME类型|HTML5 Audio 标签|');
INSERT INTO `schoolcontent` VALUES ('39', '39', '<h2>HTML5 新的 Input 类型</h2> \n<p>HTML5 拥有多个新的表单输入类型。这些新特性提供了更好的输入控制和验证。</p> \n<p>本章全面介绍这些新的输入类型：</p> \n<ul> \n <li>color</li> \n <li>date</li> \n <li>datetime</li> \n <li>datetime-local</li> \n <li>email</li> \n <li>month</li> \n <li>number</li> \n <li>range</li> \n <li>search</li> \n <li>tel</li> \n <li>time</li> \n <li>url</li> \n <li>week</li> \n</ul> \n<p><b>注意:</b>并不是所有的主流浏览器都支持新的input类型，不过您已经可以在所有主流的浏览器中使用它们了。即使不被支持，仍然可以显示为常规的文本域。</p> \n<hr /> \n<h2>Input 类型: color</h2> \n<p>color 类型用在input字段主要用于选取颜色，如下所示：</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" /> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" /> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" /> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" /> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" /> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">从拾色器中选择一个颜色:</p> \n <div class=\"example_code notranslate\">\n   选择你喜欢的颜色: &lt;input type=&quot;color&quot; name=&quot;favcolor&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_color\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Input 类型: date</h2> \n<p>date 类型允许你从一个日期选择器选择一个日期。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" /> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" /> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" /> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" /> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" /> \n <h2 class=\"example\">实例</h2> \n <p>定义一个时间控制器:</p> \n <div class=\"example_code notranslate\">\n   生日: &lt;input type=&quot;date&quot; name=&quot;bday&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_date\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Input 类型: datetime</h2> \n<p> datetime 类型允许你选择一个日期（UTC 时间）。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>定义一个日期和时间控制器（本地时间）:</p> \n <div class=\"example_code notranslate\">\n   生日 (日期和时间): &lt;input type=&quot;datetime&quot; name=&quot;bdaytime&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_datetime\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Input 类型: datetime-local</h2> \n<p>datetime-local 类型允许你选择一个日期和时间 (无时区).</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>定义一个日期和时间 (无时区):</p> \n <div class=\"example_code notranslate\">\n   生日 (日期和时间): &lt;input type=&quot;datetime-local&quot; name=&quot;bdaytime&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_datetime-local\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Input 类型: email</h2> \n<p>email 类型用于应该包含 e-mail 地址的输入域。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>在提交表单时，会自动验证 email 域的值是否合法有效:</p> \n <div class=\"example_code notranslate\">\n   E-mail: &lt;input type=&quot;email&quot; name=&quot;email&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_email\">尝试一下 &raquo;</a> \n</div> \n<p><b>提示:</b> iPhone 中的 Safari 浏览器支持 email 输入类型，并通过改变触摸屏键盘来配合它（添加 @ 和 .com 选项）。</p> \n<hr /> \n<h2>Input 类型: month</h2> \n<p> month 类型允许你选择一个月份。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>定义月与年 (无时区):</p> \n <div class=\"example_code notranslate\">\n   生日 (月和年): &lt;input type=&quot;month&quot; name=&quot;bdaymonth&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_month\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Input 类型: number</h2> \n<p>number 类型用于应该包含数值的输入域。</p> \n<p>您还能够设定对所接受的数字的限定：</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">定义一个数值输入域(限定):</p> \n <div class=\"example_code notranslate\">\n   数量 ( 1 到 5 之间 ): &lt;input type=&quot;number&quot; name=&quot;quantity&quot; min=&quot;1&quot; max=&quot;5&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_number\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>使用下面的属性来规定对数字类型的限定：</p> \n<ul> \n <li>max- 规定允许的最大值</li> \n <li>min - 规定允许的最小值</li> \n <li>step - 规定合法的数字间隔（如果 step=&quot;3&quot;，则合法的数是 -3,0,3,6 等）</li> \n <li>value - 规定默认值</li> \n</ul> \n<p>尝试一下带有所有限定属性的例子 <a href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_form_number_adv\" target=\"_blank\">尝试一下 </a></p> \n<hr /> \n<h2>Input 类型: range</h2> \n<p>range 类型用于应该包含一定范围内数字值的输入域。</p> \n<p>range 类型显示为滑动条。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">定义一个不需要非常精确的数值（类似于滑块控制）:</p> \n <div class=\"example_code notranslate\">\n   &lt;input type=&quot;range&quot; name=&quot;points&quot; min=&quot;1&quot; max=&quot;10&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_range\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>请使用下面的属性来规定对数字类型的限定：</p> \n<ul> \n <li>max - 规定允许的最大值</li> \n <li>min - 规定允许的最小值</li> \n <li>step - 规定合法的数字间隔</li> \n <li>value - 规定默认值</li> \n</ul> \n<hr /> \n<h2>Input 类型: search</h2> \n<p>search 类型用于搜索域，比如站点搜索或 Google 搜索。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">定义一个搜索字段 (类似站点搜索或者Google搜索):</p> \n <div class=\"example_code notranslate\">\n   Search Google: &lt;input type=&quot;search&quot; name=&quot;googlesearch&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_search\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Input 类型: tel</h2> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">定义输入电话号码字段:</p> \n <div class=\"example_code notranslate\">\n   电话号码: &lt;input type=&quot;tel&quot; name=&quot;usrtel&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_tel\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Input 类型: time</h2> \n<p> time 类型允许你选择一个时间。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>定义可输入时间控制器（无时区）：</p> \n <div class=\"example_code notranslate\">\n   选择时间: &lt;input type=&quot;time&quot; name=&quot;usr_time&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_time\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Input 类型: url</h2> \n<p>url 类型用于应该包含 URL 地址的输入域。</p> \n<p>在提交表单时，会自动验证 url 域的值。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">定义输入URL字段:</p> \n <div class=\"example_code notranslate\">\n   添加您的主页: &lt;input type=&quot;url&quot; name=&quot;homepage&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_url\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><b>提示:</b> iPhone 中的 Safari 浏览器支持 url 输入类型，并通过改变触摸屏键盘来配合它（添加 .com 选项）。</p> \n<hr /> \n<h2>Input 类型: week</h2> \n<p> week 类型允许你选择周和年。</p> \n<div class=\"example\"> \n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right;\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>定义周和年 (无时区):</p> \n <div class=\"example_code notranslate\">\n   选择周: &lt;input type=&quot;week&quot; name=&quot;week_year&quot;&gt;\n </div> \n <br /> \n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_type_week\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>HTML5 &lt;input&gt; 标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\">标签</th> \n   <th width=\"80%\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-input.html\">&lt;input&gt;</a></td> \n   <td>描述input输入器</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML5 新的 Input 类型|Input 类型: color|实例|Input 类型: date|实例|Input 类型: datetime|实例|Input 类型: datetime-local|实例|Input 类型: email|实例|Input 类型: month|实例|Input 类型: number|实例|Input 类型: range|实例|Input 类型: search|实例|Input 类型: tel|实例|Input 类型: time|实例|Input 类型: url|实例|Input 类型: week|实例|HTML5 <input> 标签|');
INSERT INTO `schoolcontent` VALUES ('40', '40', '<h1>HTML5 <span class=\"color_h1\">表单元素</span> </h1> \n<hr /> \n<h2>HTML5 新的表单元素</h2> \n<p>HTML5 有以下新的表单元素:</p> \n<ul> \n <li>&lt;datalist&gt;</li> \n <li>&lt;keygen&gt;</li> \n <li>&lt;output&gt;</li> \n</ul> \n<p><b>注意:</b>不是所有的浏览器都支持HTML5 新的表单元素，但是你可以在使用它们，即使浏览器不支持表单属性，仍然可以显示为常规的表单元素。</p> \n<hr /> \n<h2>HTML5 &lt;datalist&gt; 元素</h2> \n<p>&lt;datalist&gt; 元素规定输入域的选项列表。 </p> \n<p>&lt;datalist&gt; 属性规定 form 或 input 域应该拥有自动完成功能。当用户在自动完成域中开始输入时，浏览器应该在该域中显示填写的选项：</p> \n<p>使用 &lt;input&gt; 元素的列表属性与 &lt;datalist&gt; 元素绑定.</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">&lt;input&gt; 元素使用&lt;datalist&gt;预定义值:</p> \n <div class=\"example_code notranslate\">\n   &lt;input list=&quot;browsers&quot;&gt;\n  <br />\n  <br /> &lt;datalist id=&quot;browsers&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Internet Explorer&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Firefox&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Chrome&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Opera&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Safari&quot;&gt;\n  <br /> &lt;/datalist&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_datalist\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;keygen&gt; 元素</h2> \n<p>&lt;keygen&gt; 元素的作用是提供一种验证用户的可靠方法。 </p> \n<p>&lt;keygen&gt;标签规定用于表单的密钥对生成器字段。</p> \n<p>当提交表单时，会生成两个键，一个是私钥，一个公钥。</p> \n<p>私钥（private key）存储于客户端，公钥（public key）则被发送到服务器。公钥可用于之后验证用户的客户端证书（client certificate）。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">带有keygen字段的表单:</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo_keygen.asp&quot; method=&quot;get&quot;&gt;\n  <br /> 用户名: &lt;input type=&quot;text&quot; name=&quot;usr_name&quot;&gt;\n  <br /> 加密: &lt;keygen name=&quot;security&quot;&gt;\n  <br /> &lt;input type=&quot;submit&quot;&gt;\n  <br /> &lt;/form&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_keygen\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;output&gt; 元素</h2> \n<p>&lt;output&gt; 元素用于不同类型的输出，比如计算或脚本输出：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">将计算结果显示在 &lt;output&gt; 元素:</p> \n <div class=\"example_code notranslate\">\n   &lt;form oninput=&quot;x.value=parseInt(a.value)+parseInt(b.value)&quot;&gt;0\n  <br /> &lt;input type=&quot;range&quot; id=&quot;a&quot; value=&quot;50&quot;&gt;100 +\n  <br /> &lt;input type=&quot;number&quot; id=&quot;b&quot; value=&quot;50&quot;&gt;=\n  <br /> &lt;output name=&quot;x&quot; for=&quot;a b&quot;&gt;&lt;/output&gt;\n  <br />&lt;/form&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_output\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 新表单元素</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\">标签</th> \n   <th width=\"80%\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-datalist.html\">&lt;datalist&gt;</a></td> \n   <td> &lt;input&gt;标签定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-keygen.html\">&lt;keygen&gt;</a></td> \n   <td>&gt;&lt;keygen&gt; 标签规定用于表单的密钥对生成器字段。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-output.html\">&lt;output&gt;</a></td> \n   <td>&lt;output&gt; 标签定义不同类型的输出，比如脚本的输出。</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML5 表单元素|HTML5 新的表单元素|HTML5 <datalist> 元素|实例|HTML5 <keygen> 元素|实例|HTML5 <output> 元素|实例|HTML5 新表单元素|');
INSERT INTO `schoolcontent` VALUES ('41', '41', '<h1>HTML5 <span class=\"color_h1\">表单属性</span> </h1> \n<hr /> \n<h2>HTML5 新的表单属性</h2> \n<p>HTML5 的 &lt;form&gt; 和 &lt;input&gt;标签添加了几个新属性.</p> \n<p>&lt;form&gt;新属性：</p> \n<ul> \n <li>autocomplete</li> \n <li>novalidate</li> \n</ul> \n<p> &lt;input&gt;新属性：</p> \n<ul> \n <li>autocomplete</li> \n <li>autofocus</li> \n <li>form</li> \n <li>formaction</li> \n <li>formenctype</li> \n <li>formmethod</li> \n <li>formnovalidate</li> \n <li>formtarget</li> \n <li>height and width</li> \n <li>list</li> \n <li>min and max</li> \n <li>multiple</li> \n <li>pattern (regexp)</li> \n <li>placeholder</li> \n <li>required</li> \n <li>step</li> \n</ul> \n<hr /> \n<h2>&lt;form&gt; / &lt;input&gt; autocomplete 属性</h2> \n<p>autocomplete 属性规定 form 或 input 域应该拥有自动完成功能。</p> \n<p>当用户在自动完成域中开始输入时，浏览器应该在该域中显示填写的选项。</p> \n<p><b>提示:</b> autocomplete 属性有可能在 form元素中是开启的，而在input元素中是关闭的。</p> \n<p><strong>注意:</strong> autocomplete 适用于 &lt;form&gt; 标签，以及以下类型的 &lt;input&gt; 标签：text, search, url, telephone, email, password, datepickers, range 以及 color。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">HTML form 中开启 autocomplete (一个 input 字段关闭 autocomplete ):</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo-form.php&quot; autocomplete=&quot;on&quot;&gt;\n  <br /> &nbsp; First name:&lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; Last name: &lt;input type=&quot;text&quot; name=&quot;lname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; E-mail: &lt;input type=&quot;email&quot; name=&quot;email&quot; autocomplete=&quot;off&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot;&gt;\n  <br /> &lt;/form&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_autocomplete\">尝试一下 &raquo;</a> \n</div> \n<p><strong>提示:</strong>某些浏览器中，您可能需要启用自动完成功能，以使该属性生效。</p> \n<hr /> \n<h2>&lt;form&gt; novalidate 属性</h2> \n<p>novalidate 属性的一个boolean 属性.</p> \n<p>novalidate 属性规定在提交表单时不应该验证 form 或 input 域。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">无需验证提交的表单数据</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo-form.php&quot; novalidate&gt;\n  <br /> &nbsp; E-mail: &lt;input type=&quot;email&quot; name=&quot;user_email&quot;&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot;&gt;\n  <br /> &lt;/form&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_form_novalidate\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; autofocus 属性</h2> \n<p>autofocus 属性是一个 boolean 属性.</p> \n<p>autofocus 属性规定在页面加载时，域自动地获得焦点。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">让 &quot;First name&quot; input 输入域在页面载入时自动聚焦：</p> \n <div class=\"example_code notranslate\">\n   First name:&lt;input type=&quot;text&quot; name=&quot;fname&quot; autofocus&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_autofocus\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; form 属性</h2> \n<p>form 属性规定输入域所属的一个或多个表单。</p> \n<p><b>提示:</b>如需引用一个以上的表单，请使用空格分隔的列表。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">位于form表单外的input 字段引用了 HTML form (该 input 表单仍然属于form表单的一部分):</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo-form.php&quot; id=&quot;form1&quot;&gt;\n  <br /> &nbsp; First name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n  <br /> &lt;/form&gt;\n  <br />\n  <br /> Last name: &lt;input type=&quot;text&quot; name=&quot;lname&quot; form=&quot;form1&quot;&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_form\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; formaction 属性</h2> \n<p>The formaction 属性用于描述表单提交的URL地址.</p> \n<p>The formaction 属性会覆盖&lt;form&gt; 元素中的action属性.</p> \n<p><b>注意: </b>The formaction 属性用于 type=&quot;submit&quot; 和 type=&quot;image&quot;.</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>以下HTMLform表单包含了两个不同地址的提交按钮：</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo-form.php&quot;&gt;\n  <br /> &nbsp; First name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; Last name: &lt;input type=&quot;text&quot; name=&quot;lname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; formaction=&quot;demo-admin.php&quot;\n  <br /> &nbsp; value=&quot;Submit as admin&quot;&gt;\n  <br /> &lt;/form&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_formaction\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; formenctype 属性</h2> \n<p> formenctype 属性描述了表单提交到服务器的数据编码 (只对form表单中 method=&quot;post&quot; 表单)</p> \n<p>formenctype 属性覆盖 form 元素的 enctype 属性。</p> \n<p><b>主要: </b>该属性与 type=&quot;submit&quot; 和 type=&quot;image&quot; 配合使用。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>第一个提交按钮已默认编码发送表单数据，第二个提交按钮以 &quot;multipart/form-data&quot; 编码格式发送表单数据:</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo-post_enctype.php&quot; method=&quot;post&quot;&gt;\n  <br /> &nbsp; First name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; formenctype=&quot;multipart/form-data&quot;\n  <br /> &nbsp; value=&quot;Submit as Multipart/form-data&quot;&gt;\n  <br /> &lt;/form&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_formenctype\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; formmethod 属性</h2> \n<p> formmethod 属性定义了表单提交的方式。</p> \n<p> formmethod 属性覆盖了 &lt;form&gt; 元素的的method 属性。</p> \n<p><b>注意:</b> 该属性可以与 type=&quot;submit&quot; 和 type=&quot;image&quot; 配合使用。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>重新定义表单提交方式实例:</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo-form.php&quot; method=&quot;get&quot;&gt;\n  <br /> &nbsp; First name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; Last name: &lt;input type=&quot;text&quot; name=&quot;lname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; formmethod=&quot;post&quot; formaction=&quot;demo-post.php&quot;\n  <br /> &nbsp; value=&quot;Submit using POST&quot;&gt;\n  <br /> &lt;/form&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_formmethod\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; formnovalidate 属性</h2> \n<p> novalidate 属性是一个 boolean 属性.</p> \n<p>novalidate属性描述了 &lt;input&gt; 元素在表单提交时无需被验证。</p> \n<p>formnovalidate 属性会覆盖 &lt;form&gt; 元素的novalidate属性.</p> \n<p><strong>注意:</strong> formnovalidate 属性与type=&quot;submit一起使用</p>\n<p> </p>\n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>两个提交按钮的表单(使用与不适用验证 ):</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo-form.php&quot;&gt;\n  <br /> &nbsp; E-mail: &lt;input type=&quot;email&quot; name=&quot;userid&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; formnovalidate value=&quot;Submit without validation&quot;&gt;\n  <br /> &lt;/form&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_formnovalidate\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; formtarget 属性</h2> \n<p>formtarget 属性指定一个名称或一个关键字来指明表单提交数据接收后的展示。</p> \n<p>The formtarget 属性覆盖 &lt;form&gt;元素的target属性.</p> \n<p><b>注意:</b> formtarget 属性与type=&quot;submit&quot; 和 type=&quot;image&quot;配合使用.</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>两个提交按钮的表单, 在不同窗口中显示:</p> \n <div class=\"example_code notranslate\">\n   &lt;form action=&quot;demo-form.php&quot;&gt;\n  <br /> &nbsp; First name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; Last name: &lt;input type=&quot;text&quot; name=&quot;lname&quot;&gt;&lt;br&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; value=&quot;Submit as normal&quot;&gt;\n  <br /> &nbsp; &lt;input type=&quot;submit&quot; formtarget=&quot;_blank&quot;\n  <br /> &nbsp; value=&quot;Submit to a new window&quot;&gt;\n  <br /> &lt;/form&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_formtarget\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; height 和 width 属性</h2> \n<p>height 和 width 属性规定用于 image 类型的 &lt;input&gt; 标签的图像高度和宽度。</p> \n<p><b>注意:</b> height 和 width 属性只适用于 image 类型的&lt;input&gt; 标签。</p> \n<p><b>提示:</b>图像通常会同时指定高度和宽度属性。如果图像设置高度和宽度，图像所需的空间 在加载页时会被保留。如果没有这些属性， 浏览器不知道图像的大小，并不能预留 适当的空间。图片在加载过程中会使页面布局效果改变 （尽管图片已加载）。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>定义了一个图像提交按钮, 使用了 height 和 width 属性:</p> \n <div class=\"example_code notranslate\">\n   &lt;input type=&quot;image&quot; src=&quot;img_submit.gif&quot; alt=&quot;Submit&quot; width=&quot;48&quot; height=&quot;48&quot;&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_height_width\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; list 属性</h2> \n<p>list 属性规定输入域的 datalist。datalist 是输入域的选项列表。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">在 &lt;datalist&gt;中预定义 &lt;input&gt; 值:</p> \n <div class=\"example_code notranslate\">\n   &lt;input list=&quot;browsers&quot;&gt;\n  <br />\n  <br /> &lt;datalist id=&quot;browsers&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Internet Explorer&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Firefox&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Chrome&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Opera&quot;&gt;\n  <br /> &nbsp; &lt;option value=&quot;Safari&quot;&gt;\n  <br /> &lt;/datalist&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_datalist\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; min 和 max 属性</h2> \n<p>min、max 和 step 属性用于为包含数字或日期的 input 类型规定限定（约束）。</p> \n<p><strong>注意:</strong> min、max 和 step 属性适用于以下类型的 &lt;input&gt; 标签：date pickers、number 以及 range。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">&lt;input&gt; 元素最小值与最大值设置:</p> \n <div class=\"example_code notranslate\">\n   Enter a date before 1980-01-01:\n  <br /> &lt;input type=&quot;date&quot; name=&quot;bday&quot; max=&quot;1979-12-31&quot;&gt;\n  <br />\n  <br /> Enter a date after 2000-01-01:\n  <br /> &lt;input type=&quot;date&quot; name=&quot;bday&quot; min=&quot;2000-01-02&quot;&gt;\n  <br />\n  <br /> Quantity (between 1 and 5):\n  <br /> &lt;input type=&quot;number&quot; name=&quot;quantity&quot; min=&quot;1&quot; max=&quot;5&quot;&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_max_min\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; multiple 属性</h2> \n<p>multiple 属性是一个 boolean 属性.</p> \n<p>multiple 属性规定&lt;input&gt; 元素中可选择多个值。</p> \n<p><b>注意:</b> multiple 属性适用于以下类型的 &lt;input&gt; 标签：email 和 file。: email, and file.</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">上传多个文件:</p> \n <div class=\"example_code notranslate\">\n   Select images: &lt;input type=&quot;file&quot; name=&quot;img&quot; multiple&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_multiple\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; pattern 属性</h2> \n<p> pattern 属性描述了一个正则表达式用于验证 &lt;input&gt; 元素的值。</p> \n<p><b>注意:</b>pattern 属性适用于以下类型的 &lt;input&gt; 标签: text, search, url, tel, email, 和 password.</p> \n<p><strong>提示：</strong> 是用来全局 <a href=\"http://www.runoob.com/tags/tag-title.html\">title</a> 属性描述了模式.</p> \n<p><b>提示：</b> 您可以在我们的 <a href=\"http://www.runoob.com/js/js-tutorial.html\">JavaScript 教程</a>中学习到有关正则表达式的内容</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">下面的例子显示了一个只能包含三个字母的文本域（不含数字及特殊字符）：</p> \n <div class=\"example_code notranslate\">\n   Country code: &lt;input type=&quot;text&quot; name=&quot;country_code&quot; pattern=&quot;[A-Za-z]{3}&quot; title=&quot;Three letter country code&quot;&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_pattern\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; placeholder 属性</h2> \n<p>placeholder 属性提供一种提示（hint），描述输入域所期待的值。</p> \n<p>简短的提示在用户输入值前会显示在输入域上。</p> \n<p><b>注意:</b> placeholder 属性适用于以下类型的 &lt;input&gt; 标签：text, search, url, telephone, email 以及 password。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">input 字段提示文本t:</p> \n <div class=\"example_code notranslate\">\n   &lt;input type=&quot;text&quot; name=&quot;fname&quot; placeholder=&quot;First name&quot;&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_placeholder\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; required 属性</h2> \n<p> required 属性是一个 boolean 属性.</p> \n<p>required 属性规定必须在提交之前填写输入域（不能为空）。</p> \n<p><b>注意:</b>required 属性适用于以下类型的 &lt;input&gt; 标签：text, search, url, telephone, email, password, date pickers, number, checkbox, radio 以及 file。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">不能为空的input字段:</p> \n <div class=\"example_code notranslate\">\n   Username: &lt;input type=&quot;text&quot; name=&quot;usrname&quot; required&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_required\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;input&gt; step 属性</h2> \n<p>step 属性为输入域规定合法的数字间隔。</p> \n<p>如果 step=&quot;3&quot;，则合法的数是 -3,0,3,6 等</p> \n<p><b>提示：</b> step 属性可以与 max 和 min 属性创建一个区域值.</p> \n<p><strong>注意:</strong> step 属性与以下type类型一起使用: number, range, date, datetime, datetime-local, month, time 和 week.</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">规定input step步长为3:</p> \n <div class=\"example_code notranslate\">\n   &lt;input type=&quot;number&quot; name=&quot;points&quot; step=&quot;3&quot;&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_input_step\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;input&gt; 标签</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"150\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-form.html\">&lt;form&gt;</a></td> \n   <td>定义一个form表单</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-input.html\">&lt;input&gt;</a></td> \n   <td>定义一个 input 域</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML5 表单属性|HTML5 新的表单属性|<form> / <input> autocomplete 属性|实例|<form> novalidate 属性|实例|<input> autofocus 属性|实例|<input> form 属性|实例|<input> formaction 属性|实例|<input> formenctype 属性|实例|<input> formmethod 属性|实例|<input> formnovalidate 属性|实例|<input> formtarget 属性|实例|<input> height 和 width 属性|实例|<input> list 属性|实例|<input> min 和 max 属性|实例|<input> multiple 属性|实例|<input> pattern 属性|实例|<input> placeholder 属性|实例|<input> required 属性|实例|<input> step 属性|实例|HTML5 <input> 标签|');
INSERT INTO `schoolcontent` VALUES ('42', '42', '<h1>HTML5 <span class=\"color_h1\">语义元素</span> </h1> \n<hr /> \n<p class=\"intro\">语义= 意义.</p> \n<p class=\"intro\">语义元素 = 元素的意义.</p> \n<hr /> \n<h2>什么是语义元素?</h2> \n<p>一个语义元素能够清楚的描述其意义给浏览器和开发者。</p> \n<p><strong>无语义</strong> 元素实例: &lt;div&gt; 和 &lt;span&gt; - 无需考虑内容.</p> \n<p><strong>语义</strong>元素实例: &lt;form&gt;, &lt;table&gt;, and &lt;img&gt; - 清楚的定义了它的内容.</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p><img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 9+, Firefox, Chrome, Safari 和 Opera 支持语义元素。</p> \n<p><strong>注意:</strong> Internet Explorer 8及更早版本不支持该元素. 但是文章底部提供了兼容的解决方法.</p> \n<hr /> \n<h2>HTML5中新的语义元素</h2> \n<p>许多现有网站都包含以下HTML代码： &lt;div id=&quot;nav&quot;&gt;, &lt;div class=&quot;header&quot;&gt;, 或者 &lt;div id=&quot;footer&quot;&gt;, 来指明导航链接, 头部, 以及尾部.</p> \n<div style=\"width:374px;float:left\"> \n <p>HTML5提供了新的语义元素来明确一个Web页面的不同部分:</p> \n <ul> \n  <li>&lt;header&gt;</li> \n  <li>&lt;nav&gt;</li> \n  <li>&lt;section&gt;</li> \n  <li>&lt;article&gt;</li> \n  <li>&lt;aside&gt;</li> \n  <li>&lt;figcaption&gt;</li> \n  <li>&lt;figure&gt;</li> \n  <li>&lt;footer&gt;</li> \n </ul> \n</div> \n<div style=\"width:260px;float:left;margin-bottom:15px\">\n <img title=\"HTML5 语义元素\" src=\"http://www.runoob.com/images/img_sem_elements.gif\" width=\"219\" height=\"258\" />\n</div> \n<hr /> \n<h2>HTML5 &lt;section&gt; 元素</h2> \n<p>&lt;section&gt; 标签定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。</p> \n<p>根据W3C HTML5文档: section 包含了一组内容及其标题。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;section&gt;\n  <br /> &nbsp; &lt;h1&gt;WWF&lt;/h1&gt;\n  <br /> &nbsp; &lt;p&gt;The World Wide Fund for Nature (WWF) is....&lt;/p&gt;\n  <br /> &lt;/section&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_section\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;article&gt; 元素</h2> \n<p> &lt;article&gt; 标签定义独立的内容。.</p> \n<p>&lt;article&gt; 元素使用实例:</p> \n<ul> \n <li>Forum post</li> \n <li>Blog post</li> \n <li>News story</li> \n <li>Comment</li> \n</ul> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;article&gt;\n  <br /> &nbsp; &lt;h1&gt;Internet Explorer 9&lt;/h1&gt;\n  <br /> &nbsp; &lt;p&gt;Windows Internet Explorer 9 (abbreviated as IE9) was released to\n  <br /> &nbsp; the&nbsp; public on March 14, 2011 at 21:00 PDT.....&lt;/p&gt;\n  <br /> &lt;/article&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_article\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;nav&gt; 元素</h2> \n<p>&lt;nav&gt; 标签定义导航链接的部分。</p> \n<p>&lt;nav&gt; 元素用于定义页面的导航链接部分区域，但是，不是所有的链接都需要包含在 &lt;nav&gt; 元素中! </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;nav&gt;\n  <br /> &lt;a href=&quot;/html/&quot;&gt;HTML&lt;/a&gt; |\n  <br /> &lt;a href=&quot;/css/&quot;&gt;CSS&lt;/a&gt; |\n  <br /> &lt;a href=&quot;/js/&quot;&gt;JavaScript&lt;/a&gt; |\n  <br /> &lt;a href=&quot;/jquery/&quot;&gt;jQuery&lt;/a&gt;\n  <br /> &lt;/nav&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_nav\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;aside&gt; 元素</h2> \n<p>&lt;aside&gt; 标签定义页面主区域内容之外的内容（比如侧边栏）。</p> \n<p>aside 标签的内容应与主区域的内容相关.</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;p&gt;My family and I visited The Epcot center this summer.&lt;/p&gt;\n  <br />\n  <br /> &lt;aside&gt;\n  <br /> &nbsp; &lt;h4&gt;Epcot Center&lt;/h4&gt;\n  <br /> &nbsp; &lt;p&gt;The Epcot Center is a theme park in Disney World, Florida.&lt;/p&gt;\n  <br /> &lt;/aside&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_aside\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;header&gt; 元素</h2> \n<p>&lt;header&gt;元素描述了文档的头部区域</p> \n<p> &lt;header&gt;元素注意用于定义内容的介绍展示区域.</p> \n<p>在页面中你可以使用多个&lt;header&gt; 元素.</p> \n<p>以下实例定义了文章的头部:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;article&gt;\n  <br /> &nbsp; &lt;header&gt;\n  <br /> &nbsp;&nbsp;&nbsp; &lt;h1&gt;Internet Explorer 9&lt;/h1&gt;\n  <br /> &nbsp;&nbsp;&nbsp; &lt;p&gt;&lt;time pubdate datetime=&quot;2011-03-15&quot;&gt;&lt;/time&gt;&lt;/p&gt;\n  <br /> &nbsp; &lt;/header&gt;\n  <br /> &nbsp; &lt;p&gt;Windows Internet Explorer 9 (abbreviated as IE9) was released to\n  <br /> &nbsp; the&nbsp; public on March 14, 2011 at 21:00 PDT.....&lt;/p&gt;\n  <br /> &lt;/article&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_header\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;footer&gt; 元素</h2> \n<p>&lt;footer&gt; 元素描述了文档的底部区域.</p> \n<p> &lt;footer&gt; 元素应该包含它的包含元素</p> \n<p>一个页脚通常包含文档的作者，著作权信息，链接的使用条款，联系信息等</p> \n<p>文档中你可以使用多个 &lt;footer&gt;元素.</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;footer&gt;\n  <br /> &nbsp; &lt;p&gt;Posted by: Hege Refsnes&lt;/p&gt;\n  <br /> &nbsp; &lt;p&gt;&lt;time pubdate datetime=&quot;2012-03-01&quot;&gt;&lt;/time&gt;&lt;/p&gt;\n  <br /> &lt;/footer&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_footer\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML5 &lt;figure&gt; 和 &lt;figcaption&gt; 元素</h2> \n<p>&lt;figure&gt;标签规定独立的流内容（图像、图表、照片、代码等等）。</p> \n<p>&lt;figure&gt; 元素的内容应该与主内容相关，但如果被删除，则不应对文档流产生影响。</p> \n<p>&lt;figcaption&gt; 标签定义 &lt;figure&gt; 元素的标题.</p> \n<p>&lt;figcaption&gt;元素应该被置于 &quot;figure&quot; 元素的第一个或最后一个子元素的位置。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;figure&gt;\n  <br /> &nbsp; &lt;img src=&quot;img_pulpit.jpg&quot; alt=&quot;The Pulpit Rock&quot; width=&quot;304&quot; height=&quot;228&quot;&gt;\n  <br /> &nbsp; &lt;figcaption&gt;Fig1. - The Pulpit Pock, Norway.&lt;/figcaption&gt;\n  <br /> &lt;/figure&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_figcaption\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>我们可以开始使用这些语义元素吗?</h2> \n<p>以上的元素都是块元素(除了&lt;figcaption&gt;).</p> \n<p>为了让这些块及元素在所有版本的浏览器中生效，你需要在样式表文件中设置一下属性 (以下样式代码可以让旧版本浏览器支持本章介绍的块级元素):</p> \n<div class=\"code notranslate\">\n <div>\n   header, section, footer, aside, nav, article, figure\n  <br /> { \n  <br /> display: block; \n  <br /> } \n </div>\n</div> \n<h2> Internet Explorer 8 及更早IE版本中的问题</h2> \n<p>IE8 及更早IE版本无法在这些元素中渲染CSS效果，以至于你不能使用 &lt;header&gt;, &lt;section&gt;, &lt;footer&gt;, &lt;aside&gt;, &lt;nav&gt;, &lt;article&gt;, &lt;figure&gt;, 或者其他的HTML5 elements.</p> \n<p>解决办法:你可以使用HTML5 Shiv Javascript脚本来解决IE的兼容问题。HTML5 Shiv下载地址：<a href=\"http://code.google.com/p/html5shiv/\" target=\"_blank\">http://code.google.com/p/html5shiv/</a></p> \n<p>下载后，将以下代码放入的网页中：</p> \n<div class=\"code notranslate\"> \n <div>\n   &lt;!--[if lt IE 9]&gt;\n  <br />&lt;script src=&quot;html5shiv.js&quot;&gt;&lt;/script&gt;\n  <br /> &lt;![endif]--&gt; \n </div>\n</div> \n<p>以上代码在浏览器小于IE9版本时会加载html5shiv.js文件. 你必须将其放置于&lt;head&gt; 元素中，因为 IE浏览器需要在头部加载后渲染这些HTML5的新元素</p>', null, 'HTML5 语义元素|什么是语义元素?|浏览器支持|HTML5中新的语义元素|HTML5 <section> 元素|实例|HTML5 <article> 元素|实例|HTML5 <nav> 元素|实例|HTML5 <aside> 元素|实例|HTML5 <header> 元素|实例|HTML5 <footer> 元素|实例|HTML5 <figure> 和 <figcaption> 元素|实例|我们可以开始使用这些语义元素吗?|Internet Explorer 8 及更早IE版本中的问题|');
INSERT INTO `schoolcontent` VALUES ('43', '43', '<h1>HTML5 <span class=\"color_h1\">Web 存储</span> </h1> \n<hr /> \n<p class=\"intro\">HTML5 web 存储,一个比cookie更好的本地存储方式。</p> \n<hr /> \n<h2>什么是 HTML5 Web 存储?</h2> \n<p>使用HTML5可以在本地存储用户的浏览数据。</p> \n<p>早些时候,本地存储使用的是cookies。但是Web 存储需要更加的安全与快速. 这些数据不会被保存在服务器上，但是这些数据只用于用户请求网站数据上.它也可以存储大量的数据，而不影响网站的性能.</p> \n<p>数据以 键/值 对存在, web网页的数据只允许该网页访问使用。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p> Internet Explorer 8+, Firefox, Opera, Chrome, 和 Safari支持Web 存储。</p> \n<p><b>注意:</b> Internet Explorer 7 及更早IE版本不支持web 存储.</p> \n<hr /> \n<h2>localStorage 和 sessionStorage&nbsp;</h2> \n<p>There are two new objects for storing data on the client:</p> \n<ul> \n <li>localStorage - 没有时间限制的数据存储</li> \n <li>sessionStorage - 针对一个 session 的数据存储</li> \n</ul> \n<p>在使用 web 存储前,应检查浏览器是否支持 localStorage 和sessionStorage:</p> \n<div class=\"code notranslate\">\n <div>\n   if(typeof(Storage)!==&quot;undefined&quot;)\n  <br /> &nbsp; {\n  <br /> &nbsp; // Yes! localStorage and sessionStorage support!\n  <br /> &nbsp; // \n  <i>Some code.....</i>\n  <br /> &nbsp; }\n  <br /> else\n  <br /> &nbsp; {\n  <br /> &nbsp; // Sorry! No web storage support..\n  <br /> &nbsp; }\n </div>\n</div> \n<br />\n<hr /> \n<h2>localStorage 对象</h2> \n<p>localStorage 对象存储的数据没有时间限制。第二天、第二周或下一年之后，数据依然可用。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   localStorage.lastname=&quot;Smith&quot;;\n  <br />document.getElementById(&quot;result&quot;).innerHTML=&quot;Last name: &quot;\n  <br />+ localStorage.lastname; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_webstorage_local\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>实例解析：</p> \n<ul> \n <li>使用 key=&quot;lastname&quot; 和value=&quot;Smith&quot; 创建一个 localStorage 键/值对</li> \n <li>检索键值为&quot;lastname&quot; 的值然后将数据插入 id=&quot;result&quot;的元素中</li> \n</ul> \n<p><strong>提示:</strong> 键/值对通常以字符串存储，你可以按自己的需要转换该格式。</p> \n<p>下面的实例展示了用户点击按钮的次数. 代码中的字符串值转换为数字类型:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   if (localStorage.clickcount)\n  <br />&nbsp; {\n  <br />&nbsp; localStorage.clickcount=Number(localStorage.clickcount)+1;\n  <br />&nbsp; }\n  <br />else\n  <br />&nbsp; {\n  <br />&nbsp; localStorage.clickcount=1;\n  <br />&nbsp; }\n  <br /> document.getElementById(&quot;result&quot;).innerHTML=&quot;You have clicked the button &quot; + localStorage.clickcount + &quot; time(s).&quot;;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_webstorage_local_clickcount\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2> sessionStorage 对象</h2> \n<p>sessionStorage 方法针对一个 session 进行数据存储。当用户关闭浏览器窗口后，数据会被删除。</p> \n<p>如何创建并访问一个 sessionStorage：:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   if (sessionStorage.clickcount)\n  <br />&nbsp; {\n  <br />&nbsp; sessionStorage.clickcount=Number(sessionStorage.clickcount)+1;\n  <br />&nbsp; }\n  <br /> else\n  <br />&nbsp; {\n  <br />&nbsp; sessionStorage.clickcount=1;\n  <br />&nbsp; }\n  <br /> document.getElementById(&quot;result&quot;).innerHTML=&quot;You have clicked the button &quot; + sessionStorage.clickcount + &quot; time(s) in this session.&quot;; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_webstorage_session\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>', null, 'HTML5 Web 存储|什么是 HTML5 Web 存储?|浏览器支持|localStorage 和 sessionStorage |localStorage 对象|实例|实例|sessionStorage 对象|实例|');
INSERT INTO `schoolcontent` VALUES ('44', '44', '<h1>HTML5 Web SQL 数据库 </h1> \n<p>Web SQL 数据库 API 并不是 HTML5 规范的一部分，但是它是一个独立的规范，引入了一组使用 SQL 操作客户端数据库的 APIs。</p> \n<p>如果你是一个 Web 后端程序员，应该很容易理解 SQL 的操作。</p> \n<p>你也可以参考我们的 <a href=\"http://www.runoob.com/sql/sql-tutorial.html\">SQL 教程</a>，了解更多数据库操作知识。</p> \n<p>Web SQL 数据库可以在最新版的 Safari, Chrome 和 Opera 浏览器中工作。</p> \n<hr /> \n<h2>核心方法</h2> \n<p>以下是规范中定义的三个核心方法：</p> \n<ol> \n <li><strong>openDatabase</strong>：这个方法使用现有的数据库或者新建的数据库创建一个数据库对象。</li> \n <li><strong>transaction</strong>：这个方法让我们能够控制一个事务，以及基于这种情况执行提交或者回滚。</li> \n <li><strong>executeSql</strong>：这个方法用于执行实际的 SQL 查询。</li> \n</ol> \n<hr /> \n<h2>打开数据库</h2> \n<p>我们可以使用 openDatabase() 方法来打开已存在的数据库，如果数据库不存在，则会创建一个新的数据库，使用代码如下：</p> \n<pre>\r\nvar db = openDatabase(\'mydb\', \'1.0\', \'Test DB\', 2 * 1024 * 1024);\r\n</pre> \n<p>openDatabase() 方法对应的五个参数说明：</p> \n<ol> \n <li>数据库名称</li> \n <li>版本号</li> \n <li>描述文本</li> \n <li>数据库大小</li> \n <li>创建回调</li> \n</ol> \n<p>第五个参数，创建回调会在创建数据库后被调用。</p> \n<hr /> \n<h2>执行查询操作</h2> \n<p>执行操作使用 database.transaction() 函数：</p> \n<pre>\r\nvar db = openDatabase(\'mydb\', \'1.0\', \'Test DB\', 2 * 1024 * 1024);\r\ndb.transaction(function (tx) {  \r\n   tx.executeSql(\'CREATE TABLE IF NOT EXISTS LOGS (id unique, log)\');\r\n});\r\n</pre> \n<p>上面的语句执行后会在 \'mydb\' 数据库中创建一个名为 LOGS 的表。</p> \n<hr /> \n<h2>插入数据</h2> \n<p>在执行上面的创建表语句后，我们可以插入一些数据：</p> \n<pre>\r\nvar db = openDatabase(\'mydb\', \'1.0\', \'Test DB\', 2 * 1024 * 1024);\r\ndb.transaction(function (tx) {\r\n   tx.executeSql(\'CREATE TABLE IF NOT EXISTS LOGS (id unique, log)\');\r\n   tx.executeSql(\'INSERT INTO LOGS (id, log) VALUES (1, &quot;菜鸟教程&quot;)\');\r\n   tx.executeSql(\'INSERT INTO LOGS (id, log) VALUES (2, &quot;www.runoob.com&quot;)\');\r\n});\r\n</pre> \n<p>我们也可以使用动态值来插入数据：</p> \n<pre>\r\nvar db = openDatabase(\'mydb\', \'1.0\', \'Test DB\', 2 * 1024 * 1024);\r\ndb.transaction(function (tx) {  \r\n  tx.executeSql(\'CREATE TABLE IF NOT EXISTS LOGS (id unique, log)\');\r\n  tx.executeSql(\'INSERT INTO LOGS \r\n                        (id,log) VALUES (?, ?\'), [e_id, e_log];\r\n});\r\n</pre> \n<p> 实例中的 e_id 和 e_log 是外部变量，executeSql 会映射数组参数中的每个条目给 &quot;?&quot;。 </p> \n<hr /> \n<h2>读取数据</h2> \n<p>以下实例演示了如何读取数据库中已经存在的数据：</p> \n<pre>\r\nvar db = openDatabase(\'mydb\', \'1.0\', \'Test DB\', 2 * 1024 * 1024);\r\n\r\ndb.transaction(function (tx) {\r\n   tx.executeSql(\'CREATE TABLE IF NOT EXISTS LOGS (id unique, log)\');\r\n   tx.executeSql(\'INSERT INTO LOGS (id, log) VALUES (1, &quot;菜鸟教程&quot;)\');\r\n   tx.executeSql(\'INSERT INTO LOGS (id, log) VALUES (2, &quot;www.runoob.com&quot;)\');\r\n});\r\n\r\ndb.transaction(function (tx) {\r\n   tx.executeSql(\'SELECT * FROM LOGS\', [], function (tx, results) {\r\n      var len = results.rows.length, i;\r\n      msg = &quot;&lt;p&gt;查询记录条数: &quot; + len + &quot;&lt;/p&gt;&quot;;\r\n      document.querySelector(\'#status\').innerHTML +=  msg;\r\n	\r\n      for (i = 0; i &lt; len; i++){\r\n         alert(results.rows.item(i).log );\r\n      }\r\n	\r\n   }, null);\r\n});\r\n</pre> \n<hr /> \n<h2>完整实例</h2> \n<pre>\r\n&lt;!DOCTYPE HTML&gt;\r\n&lt;html&gt;\r\n\r\n   &lt;head&gt;\r\n	\r\n      &lt;script type=&quot;text/javascript&quot;&gt;\r\n		\r\n         var db = openDatabase(\'mydb\', \'1.0\', \'Test DB\', 2 * 1024 * 1024);\r\n         var msg;\r\n			\r\n         db.transaction(function (tx) {\r\n            tx.executeSql(\'CREATE TABLE IF NOT EXISTS LOGS (id unique, log)\');\r\n            tx.executeSql(\'INSERT INTO LOGS (id, log) VALUES (1, &quot;菜鸟教程&quot;)\');\r\n            tx.executeSql(\'INSERT INTO LOGS (id, log) VALUES (2, &quot;www.runoob.com&quot;)\');\r\n            msg = \'&lt;p&gt;数据表已创建，且插入了两条数据。&lt;/p&gt;\';\r\n            document.querySelector(\'#status\').innerHTML =  msg;\r\n         });\r\n\r\n         db.transaction(function (tx) {\r\n            tx.executeSql(\'SELECT * FROM LOGS\', [], function (tx, results) {\r\n               var len = results.rows.length, i;\r\n               msg = &quot;&lt;p&gt;查询记录条数: &quot; + len + &quot;&lt;/p&gt;&quot;;\r\n               document.querySelector(\'#status\').innerHTML +=  msg;\r\n					\r\n               for (i = 0; i &lt; len; i++){\r\n                  msg = &quot;&lt;p&gt;&lt;b&gt;&quot; + results.rows.item(i).log + &quot;&lt;/b&gt;&lt;/p&gt;&quot;;\r\n                  document.querySelector(\'#status\').innerHTML +=  msg;\r\n               }\r\n            }, null);\r\n         });\r\n			\r\n      &lt;/script&gt;\r\n		\r\n   &lt;/head&gt;\r\n	\r\n   &lt;body&gt;\r\n      &lt;div id=&quot;status&quot; name=&quot;status&quot;&gt;状态信息&lt;/div&gt;\r\n   &lt;/body&gt;\r\n	\r\n&lt;/html&gt;\r\n</pre>\n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_websql\" class=\"tryitbtn\">尝试一下 &raquo;</a></p> \n<p>以上实例运行结果如下图所示：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2015/12/websql.jpg\" /></p> \n<hr /> \n<h2>删除记录</h2> \n<p>删除记录使用的格式如下：</p> \n<pre>\r\ndb.transaction(function (tx) {\r\n    tx.executeSql(\'DELETE FROM LOGS  WHERE id=1\');\r\n});\r\n</pre> \n<p>删除指定的数据id也可以是动态的：</p> \n<pre>\r\ndb.transaction(function(tx) {\r\n    tx.executeSql(\'DELETE FROM LOGS WHERE id=?\', [id]);\r\n});\r\n</pre> \n<hr /> \n<h2>更新记录</h2> \n<p>更新记录使用的格式如下：</p> \n<pre>\r\ndb.transaction(function (tx) {\r\n    tx.executeSql(\'UPDATE LOGS SET log=\\\'www.w3cschool.cc\\\' WHERE id=2\');\r\n});\r\n</pre> \n<p>更新指定的数据id也可以是动态的：</p> \n<pre>\r\ndb.transaction(function(tx) {\r\n    tx.executeSql(\'UPDATE LOGS SET log=\\\'www.w3cschool.cc\\\' WHERE id=?\', [id]);\r\n});\r\n</pre> \n<hr /> \n<h2>完整实例</h2> \n<pre>\r\n&lt;!DOCTYPE HTML&gt;\r\n&lt;html&gt;\r\n   &lt;head&gt;\r\n      &lt;meta charset=&quot;UTF-8&quot;&gt;  \r\n      &lt;script type=&quot;text/javascript&quot;&gt;\r\n      \r\n         var db = openDatabase(\'mydb\', \'1.0\', \'Test DB\', 2 * 1024 * 1024);\r\n         var msg;\r\n         \r\n         db.transaction(function (tx) {\r\n            tx.executeSql(\'CREATE TABLE IF NOT EXISTS LOGS (id unique, log)\');\r\n            tx.executeSql(\'INSERT INTO LOGS (id, log) VALUES (1, &quot;菜鸟教程&quot;)\');\r\n            tx.executeSql(\'INSERT INTO LOGS (id, log) VALUES (2, &quot;www.runoob.com&quot;)\');\r\n            msg = \'&lt;p&gt;数据表已创建，且插入了两条数据。&lt;/p&gt;\';\r\n            document.querySelector(\'#status\').innerHTML =  msg;\r\n         });\r\n\r\n         db.transaction(function (tx) {\r\n              tx.executeSql(\'DELETE FROM LOGS  WHERE id=1\');\r\n              msg = \'&lt;p&gt;删除 id 为 1 的记录。&lt;/p&gt;\';\r\n              document.querySelector(\'#status\').innerHTML =  msg;\r\n         });\r\n\r\n         db.transaction(function (tx) {\r\n             tx.executeSql(\'UPDATE LOGS SET log=\\\'www.w3cschool.cc\\\' WHERE id=2\');\r\n              msg = \'&lt;p&gt;更新 id 为 2 的记录。&lt;/p&gt;\';\r\n              document.querySelector(\'#status\').innerHTML =  msg;\r\n         });\r\n\r\n         db.transaction(function (tx) {\r\n            tx.executeSql(\'SELECT * FROM LOGS\', [], function (tx, results) {\r\n               var len = results.rows.length, i;\r\n               msg = &quot;&lt;p&gt;查询记录条数: &quot; + len + &quot;&lt;/p&gt;&quot;;\r\n               document.querySelector(\'#status\').innerHTML +=  msg;\r\n               \r\n               for (i = 0; i &lt; len; i++){\r\n                  msg = &quot;&lt;p&gt;&lt;b&gt;&quot; + results.rows.item(i).log + &quot;&lt;/b&gt;&lt;/p&gt;&quot;;\r\n                  document.querySelector(\'#status\').innerHTML +=  msg;\r\n               }\r\n            }, null);\r\n         });\r\n         \r\n      &lt;/script&gt;\r\n      \r\n   &lt;/head&gt;\r\n   \r\n   &lt;body&gt;\r\n      &lt;div id=&quot;status&quot; name=&quot;status&quot;&gt;状态信息&lt;/div&gt;\r\n   &lt;/body&gt;\r\n   \r\n&lt;/html&gt;\r\n</pre> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_websql2\" class=\"tryitbtn\">尝试一下 &raquo;</a></p> \n<p>以上实例运行结果如下图所示：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2015/12/websql2.jpg\" /></p>', null, 'HTML5 Web SQL 数据库|核心方法|打开数据库|执行查询操作|插入数据|读取数据|完整实例|删除记录|更新记录|完整实例|');
INSERT INTO `schoolcontent` VALUES ('45', '45', '<h1>HTML5 <span class=\"color_h1\">应用程序缓存</span> </h1> \n<hr /> \n<p class=\"intro\">使用 HTML5，通过创建 cache manifest 文件，可以轻松地创建 web 应用的离线版本。</p> \n<hr /> \n<h2>什么是应用程序缓存（Application Cache）？</h2> \n<p>HTML5 引入了应用程序缓存，这意味着 web 应用可进行缓存，并可在没有因特网连接时进行访问。</p> \n<p>应用程序缓存为应用带来三个优势：</p> \n<ol> \n <li>离线浏览 - 用户可在应用离线时使用它们</li> \n <li>速度 - 已缓存资源加载得更快</li> \n <li>减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。</li> \n</ol> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 10, Firefox, Chrome, Safari 和 Opera 支持应用程序缓存.</p> \n<hr /> \n<h2>HTML5 Cache Manifest 实例</h2> \n<p>下面的例子展示了带有 cache manifest 的 HTML 文档（供离线浏览）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE HTML&gt;\n  <br /> &lt;html manifest=&quot;demo\n  <span>.appcache</span>&quot;&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br /> The content of the document......\n  <br /> &lt;/body&gt;\n  <br />\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_html_manifest\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>Cache Manifest 基础</h2> \n<p>如需启用应用程序缓存，请在文档的&lt;html&gt; 标签中包含 manifest 属性： </p> \n<div class=\"code notranslate\">\n <div>\n   &lt;!DOCTYPE HTML&gt;\n  <br /> &lt;html manifest=&quot;demo\n  <span>.appcache</span>&quot;&gt;\n  <br /> ...\n  <br /> &lt;/html&gt; \n </div>\n</div> \n<p>每个指定了 manifest 的页面在用户对其访问时都会被缓存。如果未指定 manifest 属性，则页面不会被缓存（除非在 manifest 文件中直接指定了该页面）。</p> \n<p>manifest 文件的建议的文件扩展名是：&quot;.appcache&quot;。</p> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> 请注意，manifest 文件需要配置正确的 MIME-type，即 &quot;text/cache-manifest&quot;。必须在 web 服务器上进行配置。 </p> \n<hr /> \n<h2>Manifest 文件</h2> \n<p>manifest 文件是简单的文本文件，它告知浏览器被缓存的内容（以及不缓存的内容）。</p> \n<p>manifest 文件可分为三个部分：</p> \n<ul> \n <li><em>CACHE MANIFEST</em> - 在此标题下列出的文件将在首次下载后进行缓存</li> \n <li><em>NETWORK</em> - 在此标题下列出的文件需要与服务器的连接，且不会被缓存</li> \n <li><em>FALLBACK</em> - 在此标题下列出的文件规定当页面无法访问时的回退页面（比如 404 页面）</li> \n</ul> \n<h3>CACHE MANIFEST</h3> \n<p>第一行，CACHE MANIFEST，是必需的：</p> \n<div class=\"code notranslate\">\n <div>\n   CACHE MANIFEST\n  <br /> /theme.css\n  <br /> /logo.gif\n  <br /> /main.js \n </div>\n</div> \n<p>上面的 manifest 文件列出了三个资源：一个 CSS 文件，一个 GIF 图像，以及一个 JavaScript 文件。当 manifest 文件加载后，浏览器会从网站的根目录下载这三个文件。然后，无论用户何时与因特网断开连接，这些资源依然是可用的。</p> \n<h3>NETWORK</h3> \n<p>下面的 NETWORK 小节规定文件 &quot;login.php&quot; 永远不会被缓存，且离线时是不可用的：</p> \n<div class=\"code notranslate\">\n <div>\n   NETWORK:\n  <br /> login.php\n </div>\n</div> \n<p>可以使用星号来指示所有其他其他资源/文件都需要因特网连接：</p> \n<div class=\"code notranslate\">\n <div>\n   NETWORK:\n  <br /> *\n </div>\n</div> \n<h3>FALLBACK</h3> \n<p>下面的 FALLBACK 小节规定如果无法建立因特网连接，则用 &quot;offline.html&quot; 替代 /html5/ 目录中的所有文件：</p> \n<div class=\"code notranslate\">\n <div>\n   FALLBACK:\n  <br /> /html/ /offline.html\n </div>\n</div> \n<p><strong>注意:</strong> 第一个 URI 是资源，第二个是替补。</p> \n<hr /> \n<h2>更新缓存</h2> \n<p>一旦应用被缓存，它就会保持缓存直到发生下列情况：</p> \n<ul> \n <li>用户清空浏览器缓存</li> \n <li>manifest 文件被修改（参阅下面的提示）</li> \n <li>由程序来更新应用缓存</li> \n</ul> \n<h2>实例 - 完整的 Manifest 文件</h2> \n<div class=\"code notranslate\">\n <div>\n   CACHE MANIFEST\n  <br /> # 2012-02-21 v1.0.0\n  <br /> /theme.css\n  <br /> /logo.gif\n  <br /> /main.js\n  <br />\n  <br /> NETWORK:\n  <br /> login.php\n  <br />\n  <br /> FALLBACK:\n  <br /> /html/ /offline.html\n </div>\n</div> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /><b>提示:</b>以 &quot;#&quot; 开头的是注释行，但也可满足其他用途。应用的缓存会在其 manifest 文件更改时被更新。如果您编辑了一幅图片，或者修改了一个 JavaScript 函数，这些改变都不会被重新缓存。更新注释行中的日期和版本号是一种使浏览器重新缓存文件的办法。</p> \n<hr /> \n<h2>关于应用程序缓存的说明</h2> \n<p>请留心缓存的内容。</p> \n<p>一旦文件被缓存，则浏览器会继续展示已缓存的版本，即使您修改了服务器上的文件。为了确保浏览器更新缓存，您需要更新 manifest 文件。</p> \n<p><strong>注意:</strong> 浏览器对缓存数据的容量限制可能不太一样（某些浏览器设置的限制是每个站点 5MB）。</p>', null, 'HTML5 应用程序缓存|什么是应用程序缓存（Application Cache）？|浏览器支持|HTML5 Cache Manifest 实例|实例|Cache Manifest 基础|Manifest 文件|更新缓存|实例 - 完整的 Manifest 文件|关于应用程序缓存的说明|');
INSERT INTO `schoolcontent` VALUES ('46', '46', '<h1>HTML5 <span class=\"color_h1\">Web Workers</span> </h1> \n<hr /> \n<p class=\"intro\">web worker 是运行在后台的 JavaScript，不会影响页面的性能。</p> \n<hr /> \n<h2>什么是 Web Worker？</h2> \n<p>当在 HTML 页面中执行脚本时，页面的状态是不可响应的，直到脚本已完成。</p> \n<p>web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能。您可以继续做任何愿意做的事情：点击、选取内容等等，而此时 web worker 在后台运行。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>Internet Explorer 10, Firefox, Chrome, Safari 和 Opera 都支持Web workers.</p> \n<hr /> \n<h2>HTML5 Web Workers 实例</h2> \n<p>下面的例子创建了一个简单的 web worker，在后台计数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   计数: \n  <output id=\"result\"></output>\n  <p> <button onclick=\"startWorker()\">开始 Worker</button> <button onclick=\"stopWorker()\">停止 Worker</button> <br /><br /> <script>\r\nvar w;\r\nfunction startWorker()\r\n{\r\nif(typeof(Worker)!==\"undefined\")\r\n  {\r\n  if(typeof(w)==\"undefined\")\r\n  {\r\n  w=new Worker(\"/try/demo_source/demo_workers.js\");\r\n  }\r\n  w.onmessage = function (event) {\r\n    document.getElementById(\"result\").innerHTML=event.data;\r\n    };\r\n  }\r\nelse\r\n  {\r\n  document.getElementById(\"result\").innerHTML=\"抱歉，你的浏览器不支持 Web Workers...\";\r\n  }\r\n}\r\n\r\nfunction stopWorker()\r\n{ \r\n    w.terminate();\r\n    w = undefined;\r\n}\r\n</script> </p> \n </div> \n <br />\n <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_webworker\">尝试一下 &raquo;</a> \n</div> \n<p>demo_workers.js 文件代码：</p> \n<div class=\"code\"> \n <div>\n   var i=0;\n  <br /> \n  <br /> function timedCount()\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;i=i+1;\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;postMessage(i);\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;setTimeout(&quot;timedCount()&quot;,500);\n  <br /> }\n  <br /> \n  <br /> timedCount(); \n </div>\n</div> \n<br />\n<hr /> \n<h2>检测浏览器是否支持 Web Worker</h2> \n<p>在创建 web worker 之前，请检测用户的浏览器是否支持它：</p> \n<div class=\"code\">\n <div>\n   if(typeof(Worker)!==&quot;undefined&quot;)\n  <br /> {\n  <br /> // Yes! Web worker support!\n  <br /> // \n  <i>Some code.....</i>\n  <br /> }\n  <br /> else\n  <br /> {\n  <br /> // Sorry! No Web Worker support..\n  <br /> } \n </div>\n</div> \n<br />\n<hr /> \n<h2>创建 web worker 文件</h2> \n<p>现在，让我们在一个外部 JavaScript 中创建我们的 web worker。</p> \n<p>在这里，我们创建了计数脚本。该脚本存储于 &quot;demo_workers.js&quot; 文件中：</p> \n<div class=\"code\"> \n <div>\n   var i=0;\n  <br />\n  <br /> function timedCount()\n  <br /> {\n  <br /> i=i+1;\n  <br /> postMessage(i);\n  <br /> setTimeout(&quot;timedCount()&quot;,500);\n  <br /> }\n  <br />\n  <br /> timedCount(); \n </div> \n</div> \n<p>以上代码中重要的部分是 postMessage() 方法 - 它用于向 HTML 页面传回一段消息。</p> \n<p><b>注意:</b> web worker 通常不用于如此简单的脚本，而是用于更耗费 CPU 资源的任务。</p> \n<hr /> \n<h2>创建 Web Worker 对象</h2> \n<p>我们已经有了 web worker 文件，现在我们需要从 HTML 页面调用它。/p&gt; </p>\n<p>下面的代码检测是否存在 worker，如果不存在，- 它会创建一个新的 web worker 对象，然后运行 &quot;demo_workers.js&quot; 中的代码：/p&gt; </p>\n<div class=\"code notranslate\">\n <div>\n   if(typeof(w)==&quot;undefined&quot;)\n  <br /> &nbsp; {\n  <br /> &nbsp; w=new Worker(&quot;demo_workers.js&quot;);\n  <br /> &nbsp; }\n </div>\n</div> \n<p>然后我们就可以从 web worker 发生和接收消息了。</p> \n<p>向 web worker 添加一个 &quot;onmessage&quot; 事件监听器：</p> \n<div class=\"code notranslate\">\n <div>\n   w.onmessage=function(event){\n  <br /> document.getElementById(&quot;result&quot;).innerHTML=event.data;\n  <br /> }; \n </div>\n</div> \n<p当 web=\"\" worker=\"\" 传递消息时，会执行事件监听器中的代码。event.data=\"\" 中存有来自=\"\" event.data=\"\" 的数据。<=\"\"> \n <hr /> \n <h2>终止 Web Worker</h2> \n <p>当我们创建 web worker 对象后，它会继续监听消息（即使在外部脚本完成之后）直到其被终止为止。</p> \n <p>如需终止 web worker，并释放浏览器/计算机资源，请使用 terminate() 方法：</p> \n <div class=\"code notranslate\">\n  <div>\n    w.terminate(); \n  </div>\n </div> \n <br />\n <hr /> \n <h2>完整的 Web Worker 实例代码</h2> \n <p>我们已经看到了 .js 文件中的 Worker 代码。下面是 HTML 页面的代码：</p> \n <div class=\"example\"> \n  <h2 class=\"example\">实例</h2> \n  <div class=\"example_code notranslate\">\n    &lt;!DOCTYPE html&gt;\n   <br /> &lt;html&gt;\n   <br /> &lt;body&gt;\n   <br />\n   <br /> &lt;p&gt;Count numbers: &lt;output id=&quot;result&quot;&gt;&lt;/output&gt;&lt;/p&gt;\n   <br /> &lt;button onclick=&quot;startWorker()&quot;&gt;Start Worker&lt;/button&gt; \n   <br /> &lt;button onclick=&quot;stopWorker()&quot;&gt;Stop Worker&lt;/button&gt;\n   <br /> &lt;br&gt;&lt;br&gt;\n   <br />\n   <br /> &lt;script&gt;\n   <br /> var w;\n   <br />\n   <br /> function startWorker()\n   <br /> {\n   <br /> if(typeof(Worker)!==&quot;undefined&quot;)\n   <br /> {\n   <br /> &nbsp; if(typeof(w)==&quot;undefined&quot;)\n   <br /> &nbsp;&nbsp;&nbsp; {\n   <br /> &nbsp;&nbsp;&nbsp; w=new Worker(&quot;demo_workers.js&quot;);\n   <br /> &nbsp;&nbsp;&nbsp; }\n   <br /> &nbsp; w.onmessage = function (event) {\n   <br /> &nbsp;&nbsp;&nbsp; document.getElementById(&quot;result&quot;).innerHTML=event.data;\n   <br /> &nbsp; };\n   <br /> }\n   <br /> else\n   <br /> {\n   <br /> document.getElementById(&quot;result&quot;).innerHTML=&quot;Sorry, your browser does not support Web Workers...&quot;;\n   <br /> }\n   <br /> }\n   <br />\n   <br /> function stopWorker()\n   <br /> { \n   <br /> w.terminate();\n   <br /> }\n   <br /> &lt;/script&gt;\n   <br />\n   <br /> &lt;/body&gt;\n   <br /> &lt;/html&gt;\n  </div> \n  <br />\n  <a class=\"tryitbtn\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_webworker\">尝试一下 &raquo;</a> \n </div> \n <br />\n <hr /> \n <h2>Web Workers 和 DOM</h2> \n <p>由于 web worker 位于外部文件中，它们无法访问下例 JavaScript 对象：</p> \n <ul> \n  <li>window 对象</li> \n  <li>document 对象</li> \n  <li>parent 对象</li> \n </ul> \n</p当>', null, 'HTML5 Web Workers|什么是 Web Worker？|浏览器支持|HTML5 Web Workers 实例|实例|检测浏览器是否支持 Web Worker|创建 web worker 文件|创建 Web Worker 对象|终止 Web Worker|完整的 Web Worker 实例代码|实例|Web Workers 和 DOM|');
INSERT INTO `schoolcontent` VALUES ('47', '47', '<h1>HTML5 <span class=\"color_h1\">服务器发送事件(Server-Sent Events)</span> </h1> \n<hr /> \n<p class=\"intro\">HTML5 服务器发送事件（server-sent event）允许网页获得来自服务器的更新。</p> \n<hr /> \n<h2>Server-Sent 事件 - 单向消息传递</h2> \n<p>Server-Sent 事件指的是网页自动获取来自服务器的更新。</p> \n<p>以前也可能做到这一点，前提是网页不得不询问是否有可用的更新。通过服务器发送事件，更新能够自动到达。</p> \n<p>例子：Facebook/Twitter 更新、估价更新、新的博文、赛事结果等。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/incompatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>所有主流浏览器均支持服务器发送事件，除了 Internet Explorer。</p> \n<hr /> \n<h2>接收 Server-Sent 事件通知</h2> \n<p>EventSource 对象用于接收服务器发送事件通知：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var source=new EventSource(&quot;demo_sse.php&quot;);\n  <br />source.onmessage=function(event)\n  <br />{\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;result&quot;).innerHTML+=event.data + &quot;&lt;br&gt;&quot;;\n  <br /> };\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml5_sse\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>实例解析：</p> \n<ul> \n <li>创建一个新的 EventSource 对象，然后规定发送更新的页面的 URL（本例中是 &quot;demo_sse.php&quot;）</li> \n <li>每接收到一次更新，就会发生 onmessage 事件</li> \n <li>当 onmessage 事件发生时，把已接收的数据推入 id 为 &quot;result&quot; 的元素中</li> \n</ul> \n<hr /> \n<h2>检测 Server-Sent 事件支持</h2> \n<p>以下实例，我们编写了一段额外的代码来检测服务器发送事件的浏览器支持情况：</p> \n<div class=\"code\"> \n <div>\n   if(typeof(EventSource)!==&quot;undefined&quot;)\n  <br /> {\n  <br /> &nbsp; // 浏览器支持 Server-Sent\n  <br /> &nbsp; // \n  <i>一些代码.....</i>\n  <br /> }\n  <br /> else\n  <br /> {\n  <br /> // 浏览器不支持 Server-Sent..\n  <br /> } \n </div> \n</div> \n<br />\n<hr /> \n<h2>服务器端代码实例</h2> \n<p>为了让上面的例子可以运行，您还需要能够发送数据更新的服务器（比如 PHP 和 ASP）。</p> \n<p>服务器端事件流的语法是非常简单的。把 &quot;Content-Type&quot; 报头设置为 &quot;text/event-stream&quot;。现在，您可以开始发送事件流了。</p> \n<div class=\"example\">\n <h2 class=\"example\">实例</h2>\n <div class=\"example_code\">\n  <span style=\"color: #000000\"> <span style=\"color: #0000BB\">&lt;?php <br />header</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">\'Content-Type:&nbsp;text/event-stream\'</span><span style=\"color: #007700\">); <br /></span><span style=\"color: #0000BB\">header</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">\'Cache-Control:&nbsp;no-cache\'</span><span style=\"color: #007700\">); <br /> <br /></span><span style=\"color: #0000BB\">$time&nbsp;</span><span style=\"color: #007700\">=&nbsp;</span><span style=\"color: #0000BB\">date</span><span style=\"color: #007700\">(</span><span style=\"color: #DD0000\">\'r\'</span><span style=\"color: #007700\">); <br />echo&nbsp;&quot;</span><span style=\"color: #DD0000\">data:&nbsp;The&nbsp;server&nbsp;time&nbsp;is:&nbsp;</span><span style=\"color: #007700\">{</span><span style=\"color: #0000BB\">$time</span><span style=\"color: #007700\">}</span><span style=\"color: #DD0000\">nn</span><span style=\"color: #007700\">&quot;; <br /></span><span style=\"color: #0000BB\">flush</span><span style=\"color: #007700\">(); <br /></span><span style=\"color: #0000BB\">?&gt;</span> </span> \n </div>\n</div> \n<p>ASP 代码 (VB) (demo_sse.asp):</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;%\n  <br />Response.ContentType=&quot;text/event-stream&quot;\n  <br />Response.Expires=-1\n  <br /> Response.Write(&quot;data: &quot; &amp; now())\n  <br />Response.Flush()\n  <br />%&gt; \n </div>\n</div> \n<p>代码解释:</p> \n<ul> \n <li>把报头 &quot;Content-Type&quot; 设置为 &quot;text/event-stream&quot;</li> \n <li>规定不对页面进行缓存</li> \n <li>输出发送日期（始终以 &quot;data: &quot; 开头）</li> \n <li>向网页刷新输出数据</li> \n</ul> \n<hr /> \n<h2>EventSource 对象</h2> \n<p>在上面的例子中，我们使用 onmessage 事件来获取消息。不过还可以使用其他事件：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\">事件</th> \n   <th width=\"80%\">描述</th> \n  </tr> \n  <tr> \n   <td>onopen</td> \n   <td>当通往服务器的连接被打开</td> \n  </tr> \n  <tr> \n   <td>onmessage</td> \n   <td>当接收到消息</td> \n  </tr> \n  <tr> \n   <td>onerror</td> \n   <td>当发生错误</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML5 服务器发送事件(Server-Sent Events)|Server-Sent 事件 - 单向消息传递|浏览器支持|接收 Server-Sent 事件通知|实例|检测 Server-Sent 事件支持|服务器端代码实例|实例|EventSource 对象|');
INSERT INTO `schoolcontent` VALUES ('48', '48', '<h1>HTML5 WebSocket</h1> \n<p>WebSocket是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。</p> \n<p>在WebSocket API中，浏览器和服务器只需要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。</p> \n<p>浏览器通过 JavaScript 向服务器发出建立 WebSocket 连接的请求，连接建立以后，客户端和服务器端就可以通过 TCP 连接直接交换数据。</p> \n<p>当你获取 Web Socket 连接后，你可以通过 <b>send()</b> 方法来向服务器发送数据，并通过 <b>onmessage</b> 事件来接收服务器返回的数据。</p> \n<p>以下 API 用于创建 WebSocket 对象。</p> \n<pre>\r\nvar Socket = new WebSocket(url, [protocal] );\r\n</pre> \n<p>以上代码中的第一个参数 url, 指定连接的 URL。第二个参数 protocol 是可选的，指定了可接受的子协议。</p> \n<hr /> \n<h2>WebSocket 属性</h2> \n<p>以下是 WebSocket 对象的属性。假定我们使用了以上代码创建了 Socket 对象：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"30%\">属性</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>Socket.readyState</td> \n   <td><p>只读属性 <b>readyState</b> 表示连接状态，可以是以下值：</p> \n    <ul class=\"list\"> \n     <li><p>0 - 表示连接尚未建立。</p></li> \n     <li><p>1 - 表示连接已建立，可以进行通信。</p></li> \n     <li><p>2 - 表示连接正在进行关闭。</p></li> \n     <li><p>3 - 表示连接已经关闭或者连接不能打开。</p></li> \n    </ul> </td> \n  </tr> \n  <tr> \n   <td>Socket.bufferedAmount</td> \n   <td><p>只读属性 <b>bufferedAmount</b> 已被 send() 放入正在队列中等待传输，但是还没有发出的 UTF-8 文本字节数。</p> </td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>WebSocket 事件</h2> \n<p>以下是 WebSocket 对象的相关事件。假定我们使用了以上代码创建了 Socket 对象：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"10%\">事件</th> \n   <th width=\"25%\">事件处理程序</th> \n   <th>描述</th>\n  </tr> \n  <tr> \n   <td>open</td> \n   <td>Socket.onopen</td> \n   <td>连接建立时触发</td> \n  </tr> \n  <tr> \n   <td>message</td> \n   <td>Socket.onmessage</td> \n   <td>客户端接收服务端数据时触发</td> \n  </tr> \n  <tr> \n   <td>error</td> \n   <td>Socket.onerror</td> \n   <td>通信发生错误时触发</td> \n  </tr> \n  <tr> \n   <td>close</td> \n   <td>Socket.onclose</td> \n   <td>连接关闭时触发</td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>WebSocket 方法</h2> \n<p>以下是 WebSocket 对象的相关方法。假定我们使用了以上代码创建了 Socket 对象：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>方法</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>Socket.send()</td> \n   <td><p>使用连接发送数据</p></td> \n  </tr> \n  <tr> \n   <td>Socket.close()</td> \n   <td><p>关闭连接</p></td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>WebSocket 实例</h2> \n<p>WebSocket 协议本质上是一个基于 TCP 的协议。</p> \n<p>为了建立一个 WebSocket 连接，客户端浏览器首先要向服务器发起一个 HTTP 请求，这个请求和通常的 HTTP 请求不同，包含了一些附加头信息，其中附加头信息&quot;Upgrade: WebSocket&quot;表明这是一个申请协议升级的 HTTP 请求，服务器端解析这些附加的头信息然后产生应答信息返回给客户端，客户端和服务器端的 WebSocket 连接就建立起来了，双方就可以通过这个连接通道自由的传递信息，并且这个连接会持续存在直到客户端或者服务器端的某一方主动的关闭连接。</p> \n<h3>客户端的 HTML 和 JavaScript</h3> \n<p>目前大部分浏览器支持 WebSocket() 接口，你可以在以下浏览器中尝试实例： Chrome, Mozilla, Opera 和 Safari。</p> \n<p>runoob_websocket.html 文件内容</p> \n<pre>\r\n&lt;!DOCTYPE HTML&gt;\r\n&lt;html&gt;\r\n   &lt;head&gt;\r\n   &lt;meta charset=&quot;utf-8&quot;&gt;\r\n   &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;\r\n	\r\n      &lt;script type=&quot;text/javascript&quot;&gt;\r\n         function WebSocketTest()\r\n         {\r\n            if (&quot;WebSocket&quot; in window)\r\n            {\r\n               alert(&quot;您的浏览器支持 WebSocket!&quot;);\r\n               \r\n               // 打开一个 web socket\r\n               var ws = new WebSocket(&quot;ws://localhost:9998/echo&quot;);\r\n				\r\n               ws.onopen = function()\r\n               {\r\n                  // Web Socket 已连接上，使用 send() 方法发送数据\r\n                  ws.send(&quot;发送数据&quot;);\r\n                  alert(&quot;数据发送中...&quot;);\r\n               };\r\n				\r\n               ws.onmessage = function (evt) \r\n               { \r\n                  var received_msg = evt.data;\r\n                  alert(&quot;数据已接收...&quot;);\r\n               };\r\n				\r\n               ws.onclose = function()\r\n               { \r\n                  // 关闭 websocket\r\n                  alert(&quot;连接已关闭...&quot;); \r\n               };\r\n            }\r\n            \r\n            else\r\n            {\r\n               // 浏览器不支持 WebSocket\r\n               alert(&quot;您的浏览器不支持 WebSocket!&quot;);\r\n            }\r\n         }\r\n      &lt;/script&gt;\r\n		\r\n   &lt;/head&gt;\r\n   &lt;body&gt;\r\n   \r\n      &lt;div id=&quot;sse&quot;&gt;\r\n         &lt;a href=&quot;javascript:WebSocketTest()&quot;&gt;运行 WebSocket&lt;/a&gt;\r\n      &lt;/div&gt;\r\n      \r\n   &lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre> \n<hr /> \n<h2>安装 pywebsocket</h2> \n<p>在执行以上程序前，我们需要创建一个支持 WebSocket 的服务。从 <a rel=\"nofollow\" href=\"https://github.com/google/pywebsocket\" target=\"_blank\">pywebsocket</a> 下载 mod_pywebsocket ,或者使用 git 命令下载：</p> \n<pre>\r\ngit clone https://github.com/google/pywebsocket.git\r\n</pre> \n<p> mod_pywebsocket 需要 python 环境支持</p> mod_pywebsocket 是一个 Apache HTTP 的 Web Socket扩展，安装步骤如下：\n<p></p> \n<ul> \n <li><p>解压下载的文件。</p></li> \n <li><p>进入 <b>pywebsocket</b> 目录。</p></li> \n <li><p>执行命令：</p> <pre>$ python setup.py build\r\n$ sudo python setup.py install\r\n</pre> </li> \n <li><p>查看文档说明:</p> <pre>$ pydoc mod_pywebsocket</pre></li> \n</ul> \n<h3>开启服务</h3> \n<p>在 <b>pywebsocket/mod_pywebsocket</b> 目录下执行以下命令：</p> \n<pre>\r\n$ sudo python standalone.py -p 9998 -w ../example/\r\n</pre> \n<p>以上命令会开启一个端口号为 9998 的服务，使用 -w 来设置处理程序 echo_wsh.py 所在的目录。</p> \n<p>现在我们可以在 Chrome 浏览器打开前面创建的 runoob_websocket.html 文件。如果你的浏览器支持 WebSocket(), 点击&quot;运行 WebSocket&quot;，你就可以看到整个流程各个步骤弹出的窗口，流程 Gif 演示：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2016/03/websockert.gif\" /> </p> \n<p>在我们停止服务后，会弹出 &quot;连接已关闭...&quot;。</p>', null, 'HTML5 WebSocket|WebSocket 属性|WebSocket 事件|WebSocket 方法|WebSocket 实例|安装 pywebsocket|');
INSERT INTO `schoolcontent` VALUES ('49', '49', '<script>\r\n$(function() {\r\n	$.post(\"/try/quiz/html5.php\",\r\n	  {\r\n	  },\r\n	  function(data){\r\n		$(\"#content\").html(data)\r\n	  });\r\n	\r\n})\r\n</script>', null, '');
INSERT INTO `schoolcontent` VALUES ('50', '50', '<h1>HTML(5) 代码规范 </h1> \n<hr /> \n<h2>HTML 代码约定</h2> \n<p>很多 Web 开发人员对 HTML 的代码规范知之甚少。</p> \n<p>在2000年至2010年，许多Web开发人员从 HTML 转换到 XHTML。</p> \n<p>使用 XHTML 开发人员逐渐养成了比较好的 HTML 编写规范。</p> \n<p>而针对于 HTML5 ，我们应该形成比较好的代码规范，以下提供了几种规范的建议。</p> \n<hr /> \n<h2>使用正确的文档类型</h2> \n<p>文档类型声明位于HTML文档的第一行：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>如果你想跟其他标签一样使用小写，可以使用以下代码：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!doctype</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>使用小写元素名</h2> \n<p>HTML5 元素名可以使用大写和小写字母。</p> \n<p>推荐使用小写字母：</p> \n<ul> \n <li>混合了大小写的风格是非常糟糕的。</li> \n <li>开发人员通常使用小写 (类似 XHTML)。</li> \n <li>小写风格看起来更加清爽。</li> \n <li>小写字母容易编写。</li> \n</ul> \n<div class=\"example\"> \n <h3>不推荐:</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">SECTION</span>\n  <span class=\"highGT\">&gt;</span> \n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/SECTION</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<div class=\"example\"> \n <h3>非常糟糕:</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">Section</span>\n  <span class=\"highGT\">&gt;</span> \n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/SECTION</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<div class=\"example\"> \n <h3>推荐:</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">section</span>\n  <span class=\"highGT\">&gt;</span> \n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/section</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>关闭所有 HTML 元素</h2> \n<p>在 HTML5 中, 你不一定要关闭所有元素 (例如 &lt;p&gt; 元素)，但我们建议每个元素都要添加关闭标签。 </p> \n<p>不推荐:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">section</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/section</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>推荐:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">section</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/section</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>关闭空的 HTML 元素</h2> \n<p>在 HTML5 中, 空的 HTML 元素也不一定要关闭：</p> \n<p>我们可以这么写：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">meta</span> \n  <span class=\"highATT\">charset=</span>\n  <span class=\"highVAL\">&quot;utf-8&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>也可以这么写：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">meta</span> \n  <span class=\"highATT\">charset=</span>\n  <span class=\"highVAL\">&quot;utf-8&quot;</span> \n  <span class=\"highATT\">/</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>在 XHTML 和 XML 中斜线 (/) 是必须的。</p> \n<p>如果你期望 XML 软件使用你的页面，使用这种风格是非常好的。 </p> \n<hr /> \n<h2>使用小写属性名</h2> \n<p>HTML5 属性名允许使用大写和小写字母。</p> \n<p>我们推荐使用小写字母属性名:</p> \n<ul> \n <li>同时使用大写写是非常不好的习惯。</li> \n <li>开发人员通常使用小写 (类似 XHTML)。</li> \n <li>小写风格看起来更加清爽。</li> \n <li>小写字母容易编写。</li> \n</ul> \n<p>不推荐：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">CLASS=</span>\n  <span class=\"highVAL\">&quot;menu&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>推荐：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;menu&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>属性值</h2> \n<p>HTML5 属性值可以不用引号。</p> \n<p>属性值我们推荐使用引号:</p> \n<ul> \n <li>如果属性值含有空格需要使用引号。</li> \n <li>混合风格不推荐的，建议统一风格。</li> \n <li>属性值使用引号易于阅读。</li> \n</ul> \n<p>以下实例属性值包含空格，没有使用引号，所以不能起作用:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">table</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">table striped&gt;</span>\n </div> \n</div> \n<p>以下使用了双引号，是正确的：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">table</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;table striped&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>图片属性</h2> \n<p>图片通常使用 <strong>alt</strong> 属性。 在图片不能显示时，它能替代图片显示。</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">img</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;html5.gif&quot;</span> \n  <span class=\"highATT\"><strong>alt=</strong></span>\n  <strong><span class=\"highVAL\">&quot;HTML5&quot;</span><span class=\"highATT\"></span></strong> style=\n  <span class=\"highVAL\">&quot;width:128px;height:128px&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>定义好图片的尺寸，在加载时可以预留指定空间，减少闪烁。</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">img</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;html5.gif&quot;</span> \n  <span class=\"highATT\">alt=</span>\n  <span class=\"highVAL\">&quot;HTML5&quot;</span> \n  <span class=\"highATT\"><strong>style=</strong></span>\n  <strong><span class=\"highVAL\">&quot;width:128px;height:128px</span></strong>&quot;\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>空格和等号</h2> \n<p>等号前后可以使用空格。</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">link</span> \n  <span class=\"highATT\">rel =</span>\n  <span class=\"highVAL\"> &quot;stylesheet&quot;</span> \n  <span class=\"highATT\">href =</span>\n  <span class=\"highVAL\"> &quot;styles.css&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>但我们推荐少用空格:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">link</span> \n  <span class=\"highATT\">rel=</span>\n  <span class=\"highVAL\">&quot;stylesheet&quot;</span> \n  <span class=\"highATT\">href=</span>\n  <span class=\"highVAL\">&quot;styles.css&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>避免一行代码过长</h2> \n<p>使用 HTML 编辑器，左右滚动代码是不方便的。</p> \n<p>每行代码尽量少于 80 个字符。</p> \n<hr /> \n<h2>空行和缩进</h2> \n<p>不要无缘无故添加空行。</p> \n<p>为每个逻辑功能块添加空行，这样更易于阅读。</p> \n<p>缩进使用两个空格，不建议使用 TAB。</p> \n<p>比较短的代码间不要使用不必要的空行很缩进。</p> \n<div class=\"example\"> \n <h3>不必要的空行和缩进:</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>菜鸟教程\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h2</span>\n  <span class=\"highGT\">&gt;</span>HTML\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h2</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; 菜鸟教程，学的不仅是技术，更是梦想。\n  <br />&nbsp;&nbsp;&nbsp; 菜鸟教程，学的不仅是技术，更是梦想。\n  <br />&nbsp;&nbsp;&nbsp;菜鸟教程，学的不仅是技术，更是梦想,\n  <br />&nbsp;&nbsp;&nbsp; 菜鸟教程，学的不仅是技术，更是梦想。\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<div class=\"example\"> \n <h3>推荐:</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>菜鸟教程\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h2</span>\n  <span class=\"highGT\">&gt;</span>\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h2</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>菜鸟教程，学的不仅是技术，更是梦想。\n  <br />菜鸟教程，学的不仅是技术，更是梦想。\n  <br />菜鸟教程，学的不仅是技术，更是梦想。\n  <br />菜鸟教程，学的不仅是技术，更是梦想。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<div class=\"example\"> \n <h3>表格实例:</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">table</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">tr</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">th</span>\n  <span class=\"highGT\">&gt;</span>Name\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/th</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">th</span>\n  <span class=\"highGT\">&gt;</span>Description\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/th</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> &nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/tr</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">tr</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">td</span>\n  <span class=\"highGT\">&gt;</span>A\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/td</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">td</span>\n  <span class=\"highGT\">&gt;</span>Description of A\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/td</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> &nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/tr</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">tr</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">td</span>\n  <span class=\"highGT\">&gt;</span>B\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/td</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">td</span>\n  <span class=\"highGT\">&gt;</span>Description of B\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/td</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/tr</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/table</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<div class=\"example\"> \n <h3>列表实例:</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">ol</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">li</span>\n  <span class=\"highGT\">&gt;</span>London\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/li</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">li</span>\n  <span class=\"highGT\">&gt;</span>Paris\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/li</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> &nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">li</span>\n  <span class=\"highGT\">&gt;</span>Tokyo\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/li</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/ol</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>省略 &lt;html&gt; 和 &lt;body&gt;?</h2> \n<p>在标准 HTML5 中， &lt;html&gt; 和 &lt;body&gt; 标签是可以省略的。</p> \n<p>以下 HTML5 文档是正确的:</p> \n<div class=\"example\"> \n <h3>实例:</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">head</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">title</span>\n  <span class=\"highGT\">&gt;</span>页面标题\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/title</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/head</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>这是一个标题\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n </div>\n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_syntax_nobody\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><strong>不推荐省略 &lt;html&gt; 和 &lt;body&gt; 标签。</strong></p> \n<p>&lt;html&gt; 元素是文档的根元素，用于描述页面的语言：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span> \n  <span class=\"highATT\">lang=</span>\n  <span class=\"highVAL\">&quot;zh&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>声明语言是为了方便屏幕阅读器及搜索引擎。</p> \n<p>省略 &lt;html&gt; 或 &lt;body&gt; 在 DOM 和 XML 软件中会崩溃。</p> \n<p>省略 &lt;body&gt; 在旧版浏览器 (IE9)会发生错误。</p> \n<hr /> \n<h2>省略 &lt;head&gt;?</h2> \n<p>在标准 HTML5 中， &lt;head&gt;标签是可以省略的。</p> \n<p>默认情况下，浏览器会将 &lt;body&gt; 之前的内容添加到一个默认的 &lt;head&gt; 元素上。</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">title</span>\n  <span class=\"highGT\">&gt;</span>页面标题\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/title</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>这是一个标题\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>这是一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/html</span>\n  <span class=\"highGT\">&gt;</span>\n </div>\n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_syntax_nohead\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 现在省略 head 标签还不推荐使用。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>元数据</h2> \n<p>HTML5 中 &lt;title&gt; 元素是必须的，标题名描述了页面的主题:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">title</span>\n  <span class=\"highGT\">&gt;</span>菜鸟教程\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/title</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<p>标题和语言可以让搜索引擎很快了解你页面的主题:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span> \n  <span class=\"highATT\">lang=</span>\n  <span class=\"highVAL\">&quot;zh&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">head</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">meta</span> \n  <span class=\"highATT\">charset=</span>\n  <span class=\"highVAL\">&quot;UTF-8&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">title</span>\n  <span class=\"highGT\">&gt;</span>菜鸟教程\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/title</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/head</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>HTML 注释</h2> \n<p>注释可以写在 &lt;!-- 和 --&gt; 中:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highCOM\">&lt;!-- 这是注释 --&gt;</span> \n </div> \n</div> \n<p>比较长的评论可以在 &lt;!-- 和 --&gt; 中分行写：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highCOM\">&lt;!-- <br />&nbsp; 这是一个较长评论。 这是 一个较长评论。这是一个较长评论。<br />&nbsp; 这是 一个较长评论 这是一个较长评论。 这是 一个较长评论。<br />--&gt;</span> \n </div> \n</div> \n<p>长评论第一个字符缩进两个空格，更易于阅读。</p> \n<hr /> \n<h2>样式表</h2> \n<p>样式表使用简洁的语法格式 ( type 属性不是必须的):</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">link</span> \n  <span class=\"highATT\">rel=</span>\n  <span class=\"highVAL\">&quot;stylesheet&quot;</span> \n  <span class=\"highATT\">href=</span>\n  <span class=\"highVAL\">&quot;styles.css&quot;</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n</div> \n<p>短的规则可以写成一行:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highELE\">p.into </span>{\n  <span class=\"highATT\">font-family:</span>\n  <span class=\"highVAL\"> Verdana;</span> \n  <span class=\"highATT\">font-size:</span>\n  <span class=\"highVAL\"> 16em;</span>}\n </div> \n</div> \n<p>长的规则可以写成多行:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highELE\">body </span>{\n  <br />&nbsp; \n  <span class=\"highATT\">background-color:</span>\n  <span class=\"highVAL\"> lightgrey;</span>\n  <br />&nbsp; \n  <span class=\"highATT\">font-family:</span>\n  <span class=\"highVAL\"> &quot;Arial Black&quot;, Helvetica, sans-serif;</span>\n  <br />&nbsp; \n  <span class=\"highATT\">font-size:</span>\n  <span class=\"highVAL\"> 16em;</span>\n  <br />&nbsp; \n  <span class=\"highATT\">color:</span>\n  <span class=\"highVAL\"> black;</span>\n  <br />}\n </div> \n</div> \n<ul> \n <li>将左花括号与选择器放在同一行。</li> \n <li>左花括号与选择器间添加以空格。</li> \n <li>使用两个空格来缩进。</li> \n <li>冒号与属性值之间添加已空格。</li> \n <li>逗号和符号之后使用一个空格。</li> \n <li>每个属性与值结尾都要使用符号。</li> \n <li>只有属性值包含空格时才使用引号。</li> \n <li>右花括号放在新的一行。</li> \n <li>每行最多 80 个字符。</li> \n</ul> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 在逗号和分号后添加空格是常用的一个规则。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>在 HTML 中载入 JavaScript</h2> \n<p>使用简洁的语法来载入外部的脚本文件 ( type 属性不是必须的 ):</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;myscript.js&quot;</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n</div> \n<hr /> \n<h2>使用 JavaScript 访问 HTML 元素</h2> \n<p>一个糟糕的 HTML 格式可能会导致 JavaScript 执行错误。</p> \n<p>以下两个 JavaScript 语句会输出不同结果:</p> \n<div class=\"example\">\n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> obj = getElementById(\n  <span class=\"highVAL\">&quot;Demo&quot;</span>)\n  <br />\n  <br />\n  <span class=\"highELE\">var</span> obj = getElementById(\n  <span class=\"highVAL\">&quot;demo&quot;</span>) \n </div>\n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_syntax_javascript\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>HTML 中 JavaScript 尽量使用相同的命名规则。</p> \n<p><a href=\"http://www.runoob.com/js/js-conventions.html\">访问 JavaScript 代码规范</a>。</p> \n<hr /> \n<h2>使用小写文件名</h2> \n<p> 大多 Web 服务器 (Apache, Unix) 对大小写敏感： london.jpg 不能通过 London.jpg 访问。 </p>\n<p> 其他 Web 服务器 (Microsoft, IIS) 对大小写不敏感： london.jpg 可以通过 London.jpg 或 london.jpg 访问。 </p>\n<p> 你必须保持统一的风格，我们建议统一使用小写的文件名。</p> \n<hr /> \n<h2>文件扩展名</h2> \n<p>HTML 文件后缀可以是 <strong>.html</strong> (或r <strong>.htm</strong>)。</p> \n<p>CSS 文件后缀是 <strong>.css</strong> 。</p> \n<p>JavaScript 文件后缀是 <strong>.js</strong> 。</p> \n<hr /> \n<h2>.htm 和 .html 的区别</h2> \n<p> .htm 和 .html 的扩展名文件本质上是没有区别的。浏览器和 Web 服务器都会把它们当作 HTML 文件来处理。</p> \n<p>区别在于：</p> \n<p>.htm 应用在早期 DOS 系统，系统现在或者只能有三个字符。</p> \n<p>在 Unix 系统中后缀没有特别限制，一般用 .html。</p> \n<h2>技术上区别</h2> \n<p>如果一个 URL 没有指定文件名 (如 http://www.runoob.com/css/), 服务器会返回默认的文件名。通常默认文件名为 index.html, index.htm, default.html, 和 default.htm。</p> \n<p>如果服务器只配置了 &quot;index.html&quot; 作为默认文件，你必须将文件命名为 &quot;index.html&quot;, 而不是 &quot;index.htm&quot;。</p> \n<p>但是，通常服务器可以设置多个默认文件，你可以根据需要设置默认文件吗。</p> \n<p>不管怎样，HTML 完整的后缀是 &quot;.html&quot;。</p>', null, 'HTML(5) 代码规范|HTML 代码约定|使用正确的文档类型|使用小写元素名|关闭所有 HTML 元素|关闭空的 HTML 元素|使用小写属性名|属性值|图片属性|空格和等号|避免一行代码过长|空行和缩进|省略 <html> 和 <body>?|省略 <head>?|元数据|HTML 注释|样式表|在 HTML 中载入 JavaScript|使用 JavaScript 访问 HTML 元素|使用小写文件名|文件扩展名|.htm 和 .html 的区别|技术上区别|');
INSERT INTO `schoolcontent` VALUES ('51', '51', '<h1>HTML<span class=\"color_h1\"> 多媒体</span> </h1> \n<hr /> \n<p class=\"intro\">Web 上的多媒体指的是音效、音乐、视频和动画。</p> \n<p class=\"intro\">现代网络浏览器已支持很多多媒体格式。</p> \n<hr /> \n<h2>什么是多媒体？</h2> \n<p>多媒体来自多种不同的格式。它可以是您听到或看到的任何内容，文字、图片、音乐、音效、录音、电影、动画等等。</p> \n<p>在因特网上，您会经常发现嵌入网页中的多媒体元素，现代浏览器已支持多种多媒体格式。 </p> \n<p>在本教程中，您将了解到不同的多媒体格式，以及如何在您的网页中使用它们。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p>第一款因特网浏览器只支持文本，而且即使是对文本的支持也仅限于单一字体和单一颜色。随后诞生了支持颜色、字体和文本样式的浏览器，图片支持也被加入。</p> \n<p>不同的浏览器以不同的方式处理对音效、动画和视频的支持。某些元素能够以内联的方式处理，而某些则需要额外的插件。</p> \n<p>您将在下面的章节学习更多有关插件的知识。</p> \n<hr /> \n<h2>多媒体格式</h2> \n<p>格式 多媒体元素（比如视频和音频）存储于媒体文件中。</p> \n<p>确定媒体类型的最常用的方法是查看文件扩展名。当浏览器得到文件扩展名 .htm 或 .html 时，它会假定该文件是 HTML 页面。.xml 扩展名指示 XML 文件，而 .css 扩展名指示样式表。图片格式则通过 .gif 或 .jpg 来识别。</p> \n<p>多媒体元素元素也拥有带有不同扩展名的文件格式，比如 .swf、.wmv、.mp3 以及 .mp4。</p> \n<hr /> \n<h2>视频格式</h2> \n<table> \n <tbody>\n  <tr> \n   <td style=\"width:225px\"><img src=\"http://www.runoob.com/wp-content/uploads/2013/07/pic_video.jpg\" alt=\"pic_video\" width=\"196\" height=\"109\" class=\"alignnone size-full wp-image-9428\" /></td> \n   <td style=\"vertical-align:top\"> MP4是互联网推出新的视频格式。<br /> <br />YouTube 推荐使用 MP4 。<br /><br /> Flash Players 支持 MP4<br /> <br />HTML5 支持 MP4。 <br /> </td> \n  </tr> \n </tbody>\n</table> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:14%;\">格式</th> \n   <th style=\"width:10%;\">文件</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>AVI</td> \n   <td>.avi</td> \n   <td>AVI (Audio Video Interleave) 格式是由微软开发的。所有运行 Windows 的计算机都支持 AVI 格式。它是因特网上很常见的格式，但非 Windows 计算机并不总是能够播放。</td> \n  </tr> \n  <tr> \n   <td>WMV</td> \n   <td>.wmv</td> \n   <td>Windows Media 格式是由微软开发的。Windows Media 在因特网上很常见，但是如果未安装额外的（免费）组件，就无法播放 Windows Media 电影。一些后期的 Windows Media 电影在所有非 Windows 计算机上都无法播放，因为没有合适的播放器。</td> \n  </tr> \n  <tr> \n   <td>MPEG</td> \n   <td> \n    <ul> \n     <li>.mpg</li> \n     <li>.mpeg</li> \n    </ul> </td> \n   <td>MPEG (Moving Pictures Expert Group) 格式是因特网上最流行的格式。它是跨平台的，得到了所有最流行的浏览器的支持。</td> \n  </tr> \n  <tr> \n   <td>QuickTime</td> \n   <td>.mov</td> \n   <td>QuickTime 格式是由苹果公司开发的。QuickTime 是因特网上常见的格式，但是 QuickTime 电影不能在没有安装额外的（免费）组件的 Windows 计算机上播放。</td> \n  </tr> \n  <tr> \n   <td>RealVideo</td> \n   <td> \n    <ul> \n     <li>.rm</li> \n     <li>.ram</li> \n    </ul> </td> \n   <td>RealVideo 格式是由 Real Media 针对因特网开发的。该格式允许低带宽条件下（在线视频、网络电视）的视频流。由于是低带宽优先的，质量常会降低。</td> \n  </tr> \n  <tr> \n   <td>Flash</td> \n   <td> \n    <ul> \n     <li>.swf</li> \n     <li>.flv</li> \n    </ul> </td> \n   <td>Flash (Shockwave) 格式是由 Macromedia 开发的。Shockwave 格式需要额外的组件来播放。但是该组件会预装到 Firefox 或 IE 之类的浏览器上。</td> \n  </tr> \n  <tr> \n   <td>Mpeg-4</td> \n   <td>.mp4</td> \n   <td>Mpeg-4 (with H.264 video compression) 是一种针对因特网的新格式。事实上，YouTube 推荐使用 MP4。YouTube 接收多种格式，然后全部转换为 .flv 或 .mp4 以供分发。越来越多的视频发布者转到 MP4，将其作为 Flash 播放器和 HTML5 的因特网共享格式。</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>最新的 HTML5 标准只支持 MP4, WebM, 和 Ogg 视频格式。 </td> \n  </tr>\n </tbody>\n</table> \n<h2>声音格式</h2> \n<p>MP3是一种音频压缩技术，其全称是动态影像专家压缩标准音频层面3（Moving Picture Experts Group Audio Layer III），简称为MP3。它被设计用来大幅度地降低音频数据量。如果你的站点是音乐类型的，你可以选择mp3格式。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:14%;\">格式</th> \n   <th style=\"width:10%;\">文件</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>MIDI</td> \n   <td> \n    <ul> \n     <li>.mid</li> \n     <li>.midi</li> \n    </ul> </td> \n   <td> <p>MIDI (Musical Instrument Digital Interface) 是一种针对电子音乐设备（比如合成器和声卡）的格式。MIDI 文件不含有声音，但包含可被电子产品（比如声卡）播放的数字音乐指令。</p> <p><a href=\"http://www.runoob.com/try/demo_source/beatles.mid\">点击这里播放 The Beatles</a>。</p> <p>因为 MIDI 格式仅包含指令，所以 MIDI 文件极其小巧。上面的例子只有 23k 的大小，但却能播放将近 5 分钟。MIDI 得到了广泛的平台上的大量软件的支持。大多数流行的网络浏览器都支持 MIDI。</p> </td> \n  </tr> \n  <tr> \n   <td>RealAudio</td> \n   <td> \n    <ul> \n     <li>.rm</li> \n     <li>.ram</li> \n    </ul> </td> \n   <td>RealAudio 格式是由 Real Media 针对因特网开发的。该格式也支持视频。该格式允许低带宽条件下的音频流（在线音乐、网络音乐）。由于是低带宽优先的，质量常会降低。</td> \n  </tr> \n  <tr> \n   <td>Wave</td> \n   <td>.wav</td> \n   <td>Wave (waveform) 格式是由 IBM 和微软开发的。所有运行 Windows 的计算机和所有网络浏览器（除了 Google Chrome）都支持它。</td> \n  </tr> \n  <tr> \n   <td>WMA</td> \n   <td>.wma</td> \n   <td>WMA 格式 (Windows Media Audio)，质量优于 MP3，兼容大多数播放器，除了 iPod。WMA 文件可作为连续的数据流来传输，这使它对于网络电台或在线音乐很实用。</td> \n  </tr> \n  <tr> \n   <td>MP3</td> \n   <td> \n    <ul> \n     <li>.mp3</li> \n     <li>.mpga</li> \n    </ul> </td> \n   <td>MP3 文件实际上是 MPEG 文件的声音部分。MPEG 格式最初是由运动图像专家组开发的。MP3 是其中最受欢迎的针对音乐的声音格式。期待未来的软件系统都支持它。</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>HTML5 的最新标准支持 MP3, WAV, 和 Ogg 音频格式。</td> \n  </tr>\n </tbody>\n</table>', null, 'HTML 多媒体|什么是多媒体？|浏览器支持|多媒体格式|视频格式|声音格式|');
INSERT INTO `schoolcontent` VALUES ('52', '52', '<h1>HTML <span class=\"color_h1\"> 插件</span></h1> \n<hr /> \n<p class=\"intro\">插件的功能是扩展 HTML 浏览器的功能。</p> \n<hr /> \n<h2>HTML 助手（插件）</h2> \n<p>辅助应用程序（helper application）是可由浏览器启动的程序。辅助应用程序也称为插件。</p> \n<p>辅助程序可用于播放音频和视频（以及其他）。辅助程序是使用 &lt;object&gt; 标签来加载的。</p> \n<p>使用辅助程序播放视频和音频的一个优势是，您能够允许用户来控制部分或全部播放设置。</p> \n<p>插件可以通过 &lt;object&gt; 标签或者 &lt;embed&gt; 标签添加在页面中。&nbsp; </p> \n<p>大多数辅助应用程序允许对音量设置和播放功能（比如后退、暂停、停止和播放）的手工（或程序的）控制。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>我们可以使用 &lt;video&gt; 和 &lt;audio&gt; 标签来显示视频和音频 </td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>&lt;object&gt; 元素</h2> \n<p>所有主流浏览器都支持 &lt;object&gt; 标签。</p> \n<p>&lt;object&gt; 元素定义了在 HTML 文档中嵌入的对象。</p> \n<p>该标签用于插入对象 (例如在网页中嵌入 Java 小程序, PDF 阅读器, Flash 播放器) 。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">object</span> \n  <span class=\"highATT\">width=</span>\n  <span class=\"highVAL\">&quot;400&quot;</span> \n  <span class=\"highATT\">height=</span>\n  <span class=\"highVAL\">&quot;50&quot;</span> \n  <span class=\"highATT\">data=</span>\n  <span class=\"highVAL\">&quot;bookmark.swf&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/object</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryhtml_object_plugin\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> &lt;object&gt; 元素同样可用于包含HTML文件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">object</span> \n  <span class=\"highATT\">width=</span>\n  <span class=\"highVAL\">&quot;100%&quot;</span> \n  <span class=\"highATT\">height=</span>\n  <span class=\"highVAL\">&quot;500px&quot;</span> \n  <span class=\"highATT\">data=</span>\n  <span class=\"highVAL\">&quot;snippet.html&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/object</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryhtml_object_html\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>或者插入一张图片:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">object</span> \n  <span class=\"highATT\">data=</span>\n  <span class=\"highVAL\">&quot;audi.jpeg&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/object</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryhtml_object_image\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2> &lt;embed&gt; 元素</h2> \n<p>所有主流浏览器都支持 &lt;embed&gt; 元素。</p> \n<p>&lt;embed&gt; 元素表示一个 HTML Embed 对象 。</p> \n<p> &lt;embed&gt; 元素已经出现很长一段时间了，但是在 HTML5 前并未被详细说明，该元素在 HTML 5 页面上会被验证，在 HTML 4 上不会。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">embed</span> \n  <span class=\"highATT\">width=</span>\n  <span class=\"highVAL\">&quot;400&quot;</span> \n  <span class=\"highATT\">height=</span>\n  <span class=\"highVAL\">&quot;50&quot;</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;bookmark.swf&quot;</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryhtml_embed_plugin\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>注意 &lt;embed&gt; 元素没有关闭标签。 不能使用替代文本。</td> \n  </tr>\n </tbody>\n</table> \n<p> &lt;embed&gt; 元素同样可用于包含 HTML 文件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">embed</span> \n  <span class=\"highATT\">width=</span>\n  <span class=\"highVAL\">&quot;100%&quot;</span> \n  <span class=\"highATT\">height=</span>\n  <span class=\"highVAL\">&quot;500px&quot;</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;snippet.html&quot;</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryhtml_embed_html\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>或者插入一张图片:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate htmlHigh\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">embed</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;audi.jpeg&quot;</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryhtml_embed_image\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>', null, 'HTML 插件|HTML 助手（插件）|<object> 元素|实例|实例|实例|<embed> 元素|实例|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('53', '53', '<h1>HTML <span class=\"color_h1\">音频(Audio)</span> </h1> \n<hr /> \n<p class=\"intro\">声音在HTML中可以以不同的方式播放.</p> \n<hr /> \n<h2>问题以及解决方法</h2> \n<p>在 HTML 中播放音频并不容易！</p> \n<p>您需要谙熟大量技巧，以确保您的音频文件在所有浏览器中（Internet Explorer, Chrome, Firefox, Safari, Opera）和所有硬件上（PC, Mac , iPad, iPhone）都能够播放。 </p> \n<p>在本章，W3CSchool 为您总结了问题和解决方法。</p> \n<hr /> \n<h2>使用插件</h2> \n<p>浏览器插件是一种扩展浏览器标准功能的小型计算机程序。 </p> \n<p>插件可以使用 &lt;object&gt; 标签 或者 &lt;embed&gt; 标签添加在页面上.&nbsp; </p> \n<p>这些标签定义资源（通常非 HTML 资源）的容器，根据类型，它们即会由浏览器显示，也会由外部插件显示。</p> \n<hr /> \n<h2>使用 &lt;embed&gt; 元素</h2> \n<p>&lt;embed&gt;标签定义外部（非 HTML）内容的容器。（这是一个 HTML5 标签，在 HTML4 中是非法的，但是所有浏览器中都有效）。</p> \n<p>下面的代码片段能够显示嵌入网页中的 MP3 文件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;embed height=&quot;50&quot; width=&quot;100&quot; src=&quot;horse.mp3&quot;&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_soundmidiembed\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<h3><b>问题:</b></h3> \n<ul> \n <li>&lt;embed&gt; 标签在 HTML 4 中是无效的。页面无法通过 HTML 4 验证。</li> \n <li>不同的浏览器对音频格式的支持也不同。</li> \n <li>如果浏览器不支持该文件格式，没有插件的话就无法播放该音频。</li> \n <li>如果用户的计算机未安装插件，无法播放音频。</li> \n <li>如果把该文件转换为其他格式，仍然无法在所有浏览器中播放。</li> \n</ul> \n<hr /> \n<h2>使用 &lt;object&gt; 元素</h2> \n<p> &lt;object tag&gt; 标签也可以定义外部（非 HTML）内容的容器。</p> \n<p>下面的代码片段能够显示嵌入网页中的 MP3 文件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;object height=&quot;50&quot; width=&quot;100&quot; data=&quot;horse.mp3&quot;&gt;&lt;/object&gt;\n  <br /> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_soundmidobject\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<h3><b>问题:</b></h3> \n<ul> \n <li>不同的浏览器对音频格式的支持也不同。</li> \n <li>如果浏览器不支持该文件格式，没有插件的话就无法播放该音频。</li> \n <li>如果用户的计算机未安装插件，无法播放音频。</li> \n <li>如果把该文件转换为其他格式，仍然无法在所有浏览器中播放。</li> \n</ul> \n<hr /> \n<h2>使用 HTML5 &lt;audio&gt; 元素</h2> \n<p>HTML5 &lt;audio&gt; 元素是一个 HTML5 元素，在 HTML 4 中是非法的，但在所有浏览器中都有效。</p> \n<p>The &lt;audio&gt; element works in all modern browsers.</p> \n<p>以下我们将使用 &lt;audio&gt; 标签来描述 MP3 文件(Internet Explorer、Chrome 以及 Safari 中是有效的), 同样添加了一个 OGG 类型文件(Firefox 和 Opera浏览器中有效).如果失败，它会显示一个错误文本信息:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;audio controls&gt;\n  <br /> &nbsp; &lt;source src=&quot;horse.mp3&quot; type=&quot;audio/mpeg&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;horse.ogg&quot; type=&quot;audio/ogg&quot;&gt;\n  <br /> &nbsp; Your browser does not support this audio format.\n  <br /> &lt;/audio&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_audio_5\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<h3><b>问题:</b></h3> \n<ul> \n <li>&lt;audio&gt; 标签在 HTML 4 中是无效的。您的页面无法通过 HTML 4 验证。</li> \n <li>您必须把音频文件转换为不同的格式。</li> \n <li>&lt;audio&gt; 元素在老式浏览器中不起作用。</li> \n</ul> \n<hr /> \n<h2>最好的 HTML 解决方法</h2> \n<p>下面的例子使用了两个不同的音频格式。HTML5 &lt;audio&gt; 元素会尝试以 mp3 或 ogg 来播放音频。如果失败，代码将回退尝试 &lt;embed&gt; 元素。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;audio controls height=&quot;100&quot; width=&quot;100&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;horse.mp3&quot; type=&quot;audio/mpeg&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;horse.ogg&quot; type=&quot;audio/ogg&quot;&gt;\n  <br /> &nbsp; &lt;embed height=&quot;50&quot; width=&quot;100&quot; src=&quot;horse.mp3&quot;&gt;\n  <br /> &lt;/audio&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_audio_all\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<h3><strong>问题:</strong></h3> \n<ul> \n <li>您必须把音频转换为不同的格式。</li> \n <li>&lt;embed&gt; 元素无法回退来显示错误消息。</li> \n</ul> \n<hr /> \n<h2>雅虎媒体播放器 - 一个简单的添加音频到你网站上的方式</h2> \n<p>使用雅虎播放器是免费的。如需使用它，您需要把这段 JavaScript 插入网页底部：</p> \n<p>雅虎播放器可以播放MP3以及其他各种格式。你只需添加一行代码到你的页面或 博客中就可以轻松地将您的HTML页面制作成 专业的播放列表：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;a href=&quot;horse.mp3&quot;&gt;Play Sound&lt;/a&gt;\n  <br />\n  <br /> &lt;script src=&quot;http://mediaplayer.yahoo.com/latest&quot;&gt;&lt;/script&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_audio_yahoo\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>如果你要使用它，您需要把这段 JavaScript 插入网页底部：</p> \n<div class=\"code notranslate\"> \n <div>\n   &lt;script src=&quot;http://mediaplayer.yahoo.com/latest&quot;&gt;&lt;/script&gt; \n </div> \n</div> \n<p>然后只需简单地把 MP3 文件链接到您的 HTML 中，JavaScript 会自动地为每首歌创建播放按钮：<br /><br /> &lt;a href=&quot;song1.mp3&quot;&gt;Play Song 1&lt;/a&gt;<br /> &lt;a href=&quot;song2.wav&quot;&gt;Play Song 2&lt;/a&gt;<br /> ...<br /> ...</p> \n<p>雅虎媒体播放器为您的用户提供的是一个小型的播放按钮，而不是完整的播放器。不过，当您点击该按钮，会弹出完整的播放器。</p> \n<p>请注意，这个播放器始终停靠在窗框底部。只需点击它，就可将其滑出。</p> \n<hr /> \n<h2>使用超链接</h2> \n<p>如果网页包含指向媒体文件的超链接，大多数浏览器会使用&quot;辅助应用程序&quot;来播放文件。</p> \n<p>以下代码片段显示指向 mp3 文件的链接。如果用户点击该链接，浏览器会启动&quot;辅助应用程序&quot;来播放该文件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;a href=&quot;horse.mp3&quot;&gt;Play the sound&lt;/a&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_sound_mp3link\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>内联的声音说明</h2> \n<p>当您在网页中包含声音，或者作为网页的组成部分时，它被称为内联声音。</p> \n<p>如果您打算在 web 应用程序中使用内联声音，您需要意识到很多人都觉得内联声音令人恼火。同时请注意，用户可能已经关闭了浏览器中的内联声音选项。</p> \n<p>我们最好的建议是只在用户希望听到内联声音的地方包含它们。一个正面的例子是，在用户需要听到录音并点击某个链接时，会打开页面然后播放录音。</p> \n<hr /> \n<h2>HTML 多媒体标签</h2> \n<p><span class=\"new\" style=\"float:left\">New</span>&nbsp;: HTML5 新标签</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-embed.html\">&lt;embed&gt;</a></td> \n   <td>定义内嵌对象。HTML4 中不赞成，HTML5 中允许。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-object.html\">&lt;object&gt;</a></td> \n   <td>定义内嵌对象。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-param.html\">&lt;param&gt;</a></td> \n   <td>定义对象的参数。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/tags/tag-audio.html\">&lt;audio&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义了声音内容</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/tags/tag-video.html\">&lt;video&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个视频或者影片</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/tags/tag-source.html\">&lt;source&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义了media元素的多媒体资源(&lt;video&gt; 和 &lt;audio&gt;)</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/tags/tag-track.html\">&lt;track&gt;</a><span class=\"new\">New</span> </td> \n   <td>规定media元素的字幕文件或其他包含文本的文件 (&lt;video&gt; 和&lt;audio&gt;)</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 音频(Audio)|问题以及解决方法|使用插件|使用 <embed> 元素|实例|使用 <object> 元素|实例|使用 HTML5 <audio> 元素|实例|最好的 HTML 解决方法|实例|雅虎媒体播放器 - 一个简单的添加音频到你网站上的方式|实例|使用超链接|实例|内联的声音说明|HTML 多媒体标签|');
INSERT INTO `schoolcontent` VALUES ('54', '54', '<h1>HTML <span class=\"color_h1\">视频（Videos）</span> </h1> \n<hr /> \n<p class=\"intro\">在 HTML 中播放视频的方法有很多种。</p> \n<hr /> \n<h2>HTML视频（Videos）播放</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.webm&quot; type=&quot;video/webm&quot;&gt;\n  <br /> &nbsp; &lt;object data=&quot;movie.mp4&quot; width=&quot;320&quot; height=&quot;240&quot;&gt;\n  <br /> &nbsp;&nbsp;&nbsp; &lt;embed src=&quot;movie.swf&quot; width=&quot;320&quot; height=&quot;240&quot;&gt;\n  <br /> &nbsp; &lt;/object&gt; \n  <br /> &lt;/video&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_video_html5_4\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>问题以及解决方法</h2> \n<p>在 HTML 中播放视频并不容易！</p> \n<p>您需要谙熟大量技巧，以确保您的视频文件在所有浏览器中（Internet Explorer, Chrome, Firefox, Safari, Opera）和所有硬件上（PC, Mac , iPad, iPhone）都能够播放。</p> \n<p>在本章，W3CSchool 为您总结了问题和解决方法。</p> \n<hr /> \n<h2>使用 &lt;embed&gt; 标签</h2> \n<p>&lt;embed&gt; 标签的作用是在 HTML 页面中嵌入多媒体元素。</p> \n<p>下面的 HTML 代码显示嵌入网页的 Flash 视频：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;embed src=&quot;intro.swf&quot; height=&quot;200&quot; width=&quot;200&quot;&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_videoembed\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><b>问题</b></p> \n<ul> \n <li>HTML4 无法识别 &lt;embed&gt; 标签。您的页面无法通过验证。</li> \n <li>如果浏览器不支持 Flash，那么视频将无法播放</li> \n <li>iPad 和 iPhone 不能显示 Flash 视频。</li> \n <li>如果您将视频转换为其他格式，那么它仍然不能在所有浏览器中播放。</li> \n</ul> \n<hr /> \n<h2>使用 &lt;object&gt; 标签</h2> \n<p>&lt;object&gt; 标签的作用是在 HTML 页面中嵌入多媒体元素。</p> \n<p>下面的 HTML 片段显示嵌入网页的一段 Flash 视频：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;object data=&quot;intro.swf&quot; height=&quot;200&quot; width=&quot;200&quot;&gt;&lt;/object&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_videoobject\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><strong>问题:</strong></p> \n<ul> \n <li>如果浏览器不支持 Flash，将无法播放视频。</li> \n <li>iPad 和 iPhone 不能显示 Flash 视频。</li> \n <li>如果您将视频转换为其他格式，那么它仍然不能在所有浏览器中播放。</li> \n</ul> \n<hr /> \n<h2>使用 HTML5 &lt;video&gt; 元素</h2> \n<p>HTML5 &lt;video&gt; 标签定义了一个视频或者影片.</p> \n<p>&lt;video&gt; 元素在所有现代浏览器中都支持。</p> \n<p>以下 HTML 片段会显示一段嵌入网页的 ogg、mp4 或 webm 格式的视频：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.webm&quot; type=&quot;video/webm&quot;&gt;\n  <br /> Your browser does not support the video tag.\n  <br /> &lt;/video&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_video_html5\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><strong>问题:</strong></p> \n<ul> \n <li>您必须把视频转换为很多不同的格式。</li> \n <li>&lt;video&gt; 元素在老式浏览器中无效。</li> \n</ul> \n<hr /> \n<h2>最好的 HTML 解决方法</h2> \n<p>以下实例中使用了 4 中不同的视频格式。HTML 5 &lt;video&gt; 元素会尝试播放以 mp4、ogg 或 webm 格式中的一种来播放视频。如果均失败，则回退到 &lt;embed&gt; 元素。</p> \n<div class=\"example\"> \n <h2 class=\"example\">HTML 5 + &lt;object&gt; + &lt;embed&gt;</h2> \n <div class=\"example_code notranslate\">\n   &lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt;\n  <br /> &nbsp; &lt;source src=&quot;movie.webm&quot; type=&quot;video/webm&quot;&gt;\n  <br /> &nbsp; &lt;object data=&quot;movie.mp4&quot; width=&quot;320&quot; height=&quot;240&quot;&gt;\n  <br /> &nbsp;&nbsp;&nbsp; &lt;embed src=&quot;movie.swf&quot; width=&quot;320&quot; height=&quot;240&quot;&gt;\n  <br /> &nbsp; &lt;/object&gt; \n  <br /> &lt;/video&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_video_html5_4\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><strong>问题:</strong></p> \n<ul> \n <li>您必须把视频转换为很多不同的格式</li> \n</ul> \n<hr /> \n<h2>优酷解决方案</h2> \n<p>在 HTML 中显示视频的最简单的方法是使用优酷等视频网站。</p> \n<p>如果您希望在网页中播放视频，那么您可以把视频上传到优酷等视频网站，然后在您的网页中插入 HTML 代码即可播放视频：</p> \n<div class=\"code notranslate\"> \n <div>\n   &lt;embed src=&quot;http://player.youku.com/player.php/sid/XMzI2NTc4NTMy/v.swf&quot; width=&quot;480&quot; height=&quot;400&quot; type=&quot;application/x-shockwave-flash&quot;&gt; &lt;/embed&gt; \n </div>\n</div> \n<hr /> \n<h2>使用超链接</h2> \n<p>如果网页包含指向媒体文件的超链接，大多数浏览器会使用&quot;辅助应用程序&quot;来播放文件。</p> \n<p>以下代码片段显示指向 AVI 文件的链接。如果用户点击该链接，浏览器会启动&quot;辅助应用程序&quot;，比如 Windows Media Player 来播放这个 AVI 文件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;a href=&quot;intro.swf&quot;&gt;Play a video file&lt;/a&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_videolink\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>关于内联视频的说明</h2> \n<p>当视频被包含在网页中时，它被称为内联视频。</p> \n<p>如果您打算在 web 应用程序中使用内联视频，您需要意识到很多人都觉得内联视频令人恼火。</p> \n<p>同时请注意，用户可能已经关闭了浏览器中的内联视频选项。</p> \n<p>我们最好的建议是只在用户希望看到内联视频的地方包含它们。一个正面的例子是，在用户需要看到视频并点击某个链接时，会打开页面然后播放视频。</p> \n<hr /> \n<h2>HTML 多媒体标签</h2> \n<p><span class=\"new\" style=\"float:left\">New</span>&nbsp;: HTML5新标签.</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">标签</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-embed.html\">&lt;embed&gt;</a></td> \n   <td>定义内嵌对象。HTML4 中不赞成，HTML5 中允许。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-object.html\">&lt;object&gt;</a></td> \n   <td>定义内嵌对象。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/tag-param.html\">&lt;param&gt;</a></td> \n   <td>定义对象的参数。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/tags/tag-audio.html\">&lt;audio&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义了声音内容</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/tags/tag-video.html\">&lt;video&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个视频或者影片</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/tags/tag-source.html\">&lt;source&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义了media元素的多媒体资源(&lt;video&gt; 和 &lt;audio&gt;)</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/tags/tag-track.html\">&lt;track&gt;</a><span class=\"new\">New</span> </td> \n   <td>规定media元素的字幕文件或其他包含文本的文件 (&lt;video&gt; 和&lt;audio&gt;)</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 视频（Videos）|HTML视频（Videos）播放|实例|问题以及解决方法|使用 <embed> 标签|实例|使用 <object> 标签|实例|使用 HTML5 <video> 元素|实例|最好的 HTML 解决方法|HTML 5 + <object> + <embed>|优酷解决方案|使用超链接|实例|关于内联视频的说明|HTML 多媒体标签|');
INSERT INTO `schoolcontent` VALUES ('55', '55', '<h1>HTML <span class=\"color_h1\">实例</span> </h1> \n<hr /> \n<p><b>HTML 基础</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_intro\">非常简单的HTML文档</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_headers\">HTML 标题</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs1\">HTML 段落</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_basic_link\">HTML 链接</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_basic_img\">HTML 图片</a> </p> \n<p><a class=\"example\" href=\"html-basic.html\">实例解析</a> </p> \n<hr /> \n<p><b>HTML 标题</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_headers\">HTML 标题</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_comment\">在html源码中插入注释</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_hr\">插入水平线</a> </p> \n<p><a class=\"example\" href=\"html-headings.html\">实例解析</a> </p> \n<hr /> \n<p><b>HTML 段落</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs1\">HTML 段落</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs2\">更多段落</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_paragraphs\">本例演示在 HTML 文档中折行的使用。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_poem\"> HTML 格式化的某些问题。</a> </p> \n<p><a class=\"example\" href=\"html-paragraphs.html\">实例解析</a> </p> \n<hr /> \n<p><b>HTML 文本格式化</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_formattingch\">文本格式化</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_pre\">此例演示如何使用 pre 标签对空行和空格进行控制。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_computeroutput\">此例演示不同的&quot;计算机输出&quot;标签的显示效果。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_address\">此例演示如何在 HTML 文件中写地址。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_abbr\">此例演示如何实现缩写或首字母缩写。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_bdo\">此例演示如何改变文字的方向。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_q\">此例演示如何实现长短不一的引用语。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_del\">文本下划线与删除线</a> </p> \n<p><a class=\"example\" href=\"html-formatting.html\">实例解析</a></p> \n<hr /> \n<p><b>HTML 样式</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_styles\">HTML Style 元素</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_bodybgstyle\"> 背景色样式</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_newfont\">字体样式，颜色，大小</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_headeralign\">文本对齐样式</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_font-family\">设置文本字体</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_font-size\">设置文本字体大小</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_color\">设置文本字体颜色</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_fontall\">设置文本字体，字体大小，字体颜色</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_style\">HTML使用不同样式</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_linknoline\">没有下划线的链接</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_link\">链接到一个外部样式表</a> </p> \n<p><a class=\"example\" href=\"html-css.html\">实例解析</a></p> \n<hr /> \n<p><b>HTML 链接</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_links\">创建超级链接</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_imglink\">将图像作为链接</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_link_target\">在新的浏览器窗口打开链接</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_link_locations\">链接到同一个页面的不同位置</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_frame_getfree\">跳出框架</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_mailto\">创建电子邮件链接</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_mailto2\">创建电子邮件链接 2</a></p> \n<p><a class=\"example\" href=\"html-links.html\">实例解析</a> </p> \n<hr /> \n<p><b>HTML 图像</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_images\">插入图像</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_images2\">从不同的位置插入图片</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_image_align\">排列图片</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_image_float\">本例演示如何使图片浮动至段落的左边或右边。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_imglink\">制作图像链接</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_areamap\">创建图像映射</a> </p> \n<p><a class=\"example\" href=\"html-images.html\">实例解析</a></p> \n<hr /> \n<p><b>HTML 表格</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_tables\">简单的表格</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_tables3\">没有边框的表格</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_headers\">表格中的表头</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_tables2\">带有标题的表格</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_span\">跨行或跨列的表格单元格</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_elements\">表格内的标签</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_cellpadding\">单元格边距(Cell padding)</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_table_cellspacing\">单元格间距(Cell spacing)</a><br /></p> \n<p><a class=\"example\" href=\"html-tables.html\">实例解析</a></p> \n<hr /> \n<p><b>HTML 列表</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists4\">无序列表</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists\">有序列表</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists_ordered\">不同类型的有序列表</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists_unordered\">不同类型的无序列表</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists2\">嵌套列表</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_nestedlists2\">嵌套列表 2</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_lists3\">定义列表</a> </p> \n<p><a class=\"example\" href=\"html-lists.html\">实例解析</a></p> \n<hr /> \n<p><b>HTML Forms 和 Input</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_input\">创建文本域(Text fields)</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_inputpassword\">创建密码域</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_checkbox\">复选框</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_radio\">单选按钮</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_select2\">简单的下拉列表</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_select3\">预选下拉列表</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_textarea\">本例演示如何创建一个文本域（多行文本输入控件）。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_button\">创建一个按钮</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_legend\">本例演示如何在数据周围绘制一个带标题的框。</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_form_submit\">带有文本域与输入域的表单</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_form_checkbox\">带有复选框与提交按钮的form表单</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_form_radio\">带有单选框与提交按钮的表单</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_form_mail\">发送邮件表单</a> </p> \n<p><a class=\"example\" href=\"html-forms.html\">实例解析</a></p> \n<hr /> \n<p><b>HTML iframe</b></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_iframe\">内联框架 (HTML页面中插入框架)</a></p> \n<p><a class=\"example\" href=\"html-iframe.html\"> 实例解析 </a></p> \n<hr /> \n<p><b>HTML 头部元素</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_title\">描述了文档标题</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_base\">HTML页面中默认的URL链接</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_meta\">提供文档元数据</a><br /></p> \n<p><a class=\"example\" href=\"html-head.html\">实例解析</a></p> \n<hr /> \n<p><b>HTML 脚本</b></p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_script\">插入一个脚本</a><br /><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_noscript\">使用 &lt;noscript&gt; 标签</a> </p> \n<p><a class=\"example\" href=\"html-scripts.html\">实例解析</a></p>', null, 'HTML 实例|');
INSERT INTO `schoolcontent` VALUES ('56', '56', '<h1>HTML 参考手册- <span class=\"color_h1\">(HTML5 标准)</span></h1> \n<hr /> \n<h2>按字母顺序排列</h2> \n<p><span class=\"new\" style=\"float: left;\">New</span>&nbsp;: HTML5新标签</p> \n<table class=\"reference notranslate\"> \n <tbody> \n  <tr> \n   <th align=\"left\" width=\"25%\">标签</th> \n   <th align=\"left\" width=\"75%\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"tag-comment.html\">&lt;!--...--&gt;</a></td> \n   <td>定义注释</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-doctype.html\">&lt;!DOCTYPE&gt;</a></td> \n   <td>定义文档类型</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-a.html\">&lt;a&gt;</a></td> \n   <td>定义超文本链接</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-abbr.html\">&lt;abbr&gt;</a></td> \n   <td>定义缩写</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-acronym.html\">&lt;acronym&gt;</a></td> \n   <td><span class=\"deprecated\">定义只取首字母的缩写，不支持HTML5</span></td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-address.html\">&lt;address&gt;</a></td> \n   <td>定义文档作者或拥有者的联系信息</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-applet.html\">&lt;applet&gt;</a></td> \n   <td>HTML5中不赞成使用。定义嵌入的 applet。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-area.html\">&lt;area&gt;</a></td> \n   <td>定义图像映射内部的区域</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-article.html\">&lt;article&gt;</a><span class=\"new\">New</span></td> \n   <td>定义一个文章区域</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-aside.html\">&lt;aside&gt;</a><span class=\"new\">New</span></td> \n   <td>定义页面的侧边栏内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-audio.html\">&lt;audio&gt;</a><span class=\"new\">New</span></td> \n   <td>定义音频内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-b.html\">&lt;b&gt;</a></td> \n   <td>定义文本粗体</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-base.html\">&lt;base&gt;</a></td> \n   <td>定义页面中所有链接的默认地址或默认目标。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-basefont.html\">&lt;basefont&gt;</a></td> \n   <td>HTML5不支持，不赞成使用。定义页面中文本的默认字体、颜色或尺寸。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-bdi.html\">&lt;bdi&gt;</a><span class=\"new\">New</span></td> \n   <td>允许您设置一段文本，使其脱离其父元素的文本方向设置。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-bdo.html\">&lt;bdo&gt;</a></td> \n   <td>定义文字方向</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-big.html\">&lt;big&gt;</a></td> \n   <td>定义大号文本，HTML5不支持</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-blockquote.html\">&lt;blockquote&gt;</a></td> \n   <td>定义长的引用</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-body.html\">&lt;body&gt;</a></td> \n   <td>定义文档的主体</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-br.html\">&lt;br&gt;</a></td> \n   <td>定义换行</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-button.html\">&lt;button&gt;</a></td> \n   <td>定义一个点击按钮</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-canvas.html\">&lt;canvas&gt;</a><span class=\"new\">New</span></td> \n   <td>定义图形，比如图表和其他图像,标签只是图形容器，您必须使用脚本来绘制图形</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-caption.html\">&lt;caption&gt;</a></td> \n   <td>定义表格标题</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-center.html\">&lt;center&gt;</a></td> \n   <td>HTML5不支持，不赞成使用。定义居中文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-cite.html\">&lt;cite&gt;</a></td> \n   <td>定义引用(citation)</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-code.html\">&lt;code&gt;</a></td> \n   <td>定义计算机代码文本</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-col.html\">&lt;col&gt;</a></td> \n   <td>定义表格中一个或多个列的属性值</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-colgroup.html\">&lt;colgroup&gt;</a></td> \n   <td>定义表格中供格式化的列组</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-command.html\">&lt;command&gt;</a><span class=\"new\">New</span></td> \n   <td>定义命令按钮，比如单选按钮、复选框或按钮</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-datalist.html\">&lt;datalist&gt;</a><span class=\"new\">New</span></td> \n   <td>定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dd.html\">&lt;dd&gt;</a></td> \n   <td>定义定义列表中项目的描述</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-del.html\">&lt;del&gt;</a></td> \n   <td>定义被删除文本</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-details.html\">&lt;details&gt;</a><span class=\"new\">New</span></td> \n   <td>用于描述文档或文档某个部分的细节</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dfn.html\">&lt;dfn&gt;</a></td> \n   <td>定义定义项目</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dialog.html\">&lt;dialog&gt;</a><span class=\"new\">New</span></td> \n   <td>定义对话框，比如提示框</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-dir.html\">&lt;dir&gt;</a></td> \n   <td>HTML5不支持，不赞成使用。定义目录列表。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-div.html\">&lt;div&gt;</a></td> \n   <td>定义文档中的节</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dl.html\">&lt;dl&gt;</a></td> \n   <td>定义列表详情</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dt.html\">&lt;dt&gt;</a></td> \n   <td>定义列表中的项目</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-em.html\">&lt;em&gt;</a></td> \n   <td>定义强调文本</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-embed.html\">&lt;embed&gt;</a><span class=\"new\">New</span></td> \n   <td>定义嵌入的内容，比如插件。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-fieldset.html\">&lt;fieldset&gt;</a></td> \n   <td>定义围绕表单中元素的边框</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-figcaption.html\">&lt;figcaption&gt;</a><span class=\"new\">New</span></td> \n   <td>定义&lt;figure&gt; 元素的标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-figure.html\">&lt;figure&gt;</a><span class=\"new\">New</span></td> \n   <td>规定独立的流内容（图像、图表、照片、代码等等）。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-font.html\">&lt;font&gt;</a></td> \n   <td>HTML5不支持，不赞成使用。定义文字的字体、尺寸和颜色。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-footer.html\">&lt;footer&gt;</a><span class=\"new\">New</span></td> \n   <td>定义 section 或 document 的页脚。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-form.html\">&lt;form&gt;</a></td> \n   <td>定义了HTML文档的表单</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-frame.html\">&lt;frame&gt;</a></td> \n   <td>定义框架集的窗口或框架</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-frameset.html\">&lt;frameset&gt;</a></td> \n   <td>定义框架集</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-hn.html\">&lt;h1&gt; to &lt;h6&gt;</a></td> \n   <td>定义 HTML 标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-head.html\">&lt;head&gt;</a></td> \n   <td>定义关于文档的信息</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-header.html\">&lt;header&gt;</a><span class=\"new\">New</span></td> \n   <td>定义了文档的头部区域</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-hr.html\">&lt;hr&gt;</a></td> \n   <td>定义水平线</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-html.html\">&lt;html&gt;</a></td> \n   <td>定义 HTML 文档</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-i.html\">&lt;i&gt;</a></td> \n   <td>定义斜体字</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-iframe.html\">&lt;iframe&gt;</a></td> \n   <td>定义内联框架</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-img.html\">&lt;img&gt;</a></td> \n   <td>定义图像</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-input.html\">&lt;input&gt;</a></td> \n   <td>定义输入控件</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-ins.html\">&lt;ins&gt;</a></td> \n   <td>定义被插入文本</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-kbd.html\">&lt;kbd&gt;</a></td> \n   <td>定义键盘文本</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-keygen.html\">&lt;keygen&gt;</a><span class=\"new\">New</span></td> \n   <td>规定用于表单的密钥对生成器字段。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-label.html\">&lt;label&gt;</a></td> \n   <td>定义 input 元素的标注</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-legend.html\">&lt;legend&gt;</a></td> \n   <td>定义 fieldset 元素的标题。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-li.html\">&lt;li&gt;</a></td> \n   <td>定义列表的项目</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-link.html\">&lt;link&gt;</a></td> \n   <td>定义文档与外部资源的关系</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-map.html\">&lt;map&gt;</a></td> \n   <td>定义图像映射</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-mark.html\">&lt;mark&gt;</a><span class=\"new\">New</span></td> \n   <td>定义带有记号的文本。请在需要突出显示文本时使用 &lt;m&gt; 标签。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-menu.html\">&lt;menu&gt;</a></td> \n   <td>不赞成使用。定义菜单列表。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-meta.html\">&lt;meta&gt;</a></td> \n   <td>定义关于 HTML 文档的元信息。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-meter.html\">&lt;meter&gt;</a><span class=\"new\">New</span></td> \n   <td>定义度量衡。仅用于已知最大和最小值的度量。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-nav.html\">&lt;nav&gt;</a><span class=\"new\">New</span></td> \n   <td>定义导航链接的部分</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-noframes.html\">&lt;noframes&gt;</a></td> \n   <td>定义针对不支持框架的用户的替代内容。HTML5不支持</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-noscript.html\">&lt;noscript&gt;</a></td> \n   <td>定义针对不支持客户端脚本的用户的替代内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-object.html\">&lt;object&gt;</a></td> \n   <td>定义内嵌对象</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-ol.html\">&lt;ol&gt;</a></td> \n   <td>定义有序列表。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-optgroup.html\">&lt;optgroup&gt;</a></td> \n   <td>定义选择列表中相关选项的组合。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-option.html\">&lt;option&gt;</a></td> \n   <td>定义选择列表中的选项。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-output.html\">&lt;output&gt;</a><span class=\"new\">New</span></td> \n   <td>定义不同类型的输出，比如脚本的输出。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-p.html\">&lt;p&gt;</a></td> \n   <td>定义段落。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-param.html\">&lt;param&gt;</a></td> \n   <td>定义对象的参数。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-pre.html\">&lt;pre&gt;</a></td> \n   <td>定义预格式文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-progress.html\">&lt;progress&gt;</a><span class=\"new\">New</span></td> \n   <td>定义运行中的进度（进程）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-q.html\">&lt;q&gt;</a></td> \n   <td>定义短的引用。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-rp.html\">&lt;rp&gt;</a><span class=\"new\">New</span></td> \n   <td>&lt;rp&gt; 标签在 ruby 注释中使用，以定义不支持 ruby 元素的浏览器所显示的内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-rt.html\">&lt;rt&gt;</a><span class=\"new\">New</span></td> \n   <td>&lt;rt&gt; 标签定义字符（中文注音或字符）的解释或发音。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-ruby.html\">&lt;ruby&gt;</a><span class=\"new\">New</span></td> \n   <td>&lt;ruby&gt; 标签定义 ruby 注释（中文注音或字符）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-s.html\">&lt;s&gt;</a></td> \n   <td>不赞成使用。定义加删除线的文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-samp.html\">&lt;samp&gt;</a></td> \n   <td>定义计算机代码样本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-script.html\">&lt;script&gt;</a></td> \n   <td>定义客户端脚本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-section.html\">&lt;section&gt;</a><span class=\"new\">New</span></td> \n   <td>&lt;section&gt; 标签定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-select.html\">&lt;select&gt;</a></td> \n   <td>定义选择列表（下拉列表）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-small.html\">&lt;small&gt;</a></td> \n   <td>定义小号文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-source.html\">&lt;source&gt;</a><span class=\"new\">New</span></td> \n   <td>&lt;source&gt; 标签为媒介元素（比如 &lt;video&gt; 和 &lt;audio&gt;）定义媒介资源。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-span.html\">&lt;span&gt;</a></td> \n   <td>定义文档中的节。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-strike.html\">&lt;strike&gt;</a></td> \n   <td>HTML5不支持，不赞成使用。定义加删除线文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-strong.html\">&lt;strong&gt;</a></td> \n   <td>定义强调文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-style.html\">&lt;style&gt;</a></td> \n   <td>定义文档的样式信息。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-sub.html\">&lt;sub&gt;</a></td> \n   <td>定义下标文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-summary.html\">&lt;summary&gt;</a><span class=\"new\">New</span></td> \n   <td>&lt;summary&gt; 标签包含 details 元素的标题，&quot;details&quot; 元素用于描述有关文档或文档片段的详细信息。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-sup.html\">&lt;sup&gt;</a></td> \n   <td>定义上标文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-table.html\">&lt;table&gt;</a></td> \n   <td>定义表格。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-tbody.html\">&lt;tbody&gt;</a></td> \n   <td>定义表格中的主体内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-td.html\">&lt;td&gt;</a></td> \n   <td>定义表格中的单元。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-textarea.html\">&lt;textarea&gt;</a></td> \n   <td>定义多行的文本输入控件。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-tfoot.html\">&lt;tfoot&gt;</a></td> \n   <td>定义表格中的表注内容（脚注）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-th.html\">&lt;th&gt;</a></td> \n   <td>定义表格中的表头单元格。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-thead.html\">&lt;thead&gt;</a></td> \n   <td>定义表格中的表头内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-time.html\">&lt;time&gt;</a><span class=\"new\">New</span></td> \n   <td>定义日期或时间，或者两者。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-title.html\">&lt;title&gt;</a></td> \n   <td>定义文档的标题。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-tr.html\">&lt;tr&gt;</a></td> \n   <td>定义表格中的行。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-track.html\">&lt;track&gt;</a><span class=\"new\">New</span></td> \n   <td>&lt;track&gt; 标签为诸如 video 元素之类的媒介规定外部文本轨道。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-tt.html\">&lt;tt&gt;</a></td> \n   <td>定义打字机文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-u.html\">&lt;u&gt;</a></td> \n   <td>不赞成使用。定义下划线文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-ul.html\">&lt;ul&gt;</a></td> \n   <td>定义无序列表。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-var.html\">&lt;var&gt;</a></td> \n   <td>定义文本的变量部分。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-video.html\">&lt;video&gt;</a><span class=\"new\">New</span></td> \n   <td>&lt;video&gt; 标签定义视频，比如电影片段或其他视频流。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-wbr.html\">&lt;wbr&gt;</a><span class=\"new\">New</span></td> \n   <td>规定在文本中的何处适合添加换行符。</td> \n  </tr> \n </tbody> \n</table>', null, 'HTML 参考手册- (HTML5 标准)|按字母顺序排列|');
INSERT INTO `schoolcontent` VALUES ('57', '57', '<h1>HTML 参考手册- <span class=\"color_h1\">(HTML5 标准)</span> </h1> \n<hr /> \n<h2>功能排序</h2> \n<p><span class=\"new\" style=\"float:left;\">New</span>&nbsp;: HTML5 新标签</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"25%\">标签</th> \n   <th align=\"left\" width=\"75%\">描述</th> \n  </tr> \n  <tr> \n   <td><b>基础</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-doctype.html\">&lt;!DOCTYPE&gt;</a>&nbsp;</td> \n   <td>定义文档类型。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-html.html\">&lt;html&gt;</a></td> \n   <td>定义一个 HTML 文档</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-title.html\">&lt;title&gt;</a></td> \n   <td>为文档定义一个标题 </td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-body.html\">&lt;body&gt;</a></td> \n   <td>定义文档的主体</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-hn.html\">&lt;h1&gt; to &lt;h6&gt;</a></td> \n   <td>定义 HTML 标题</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-p.html\">&lt;p&gt;</a></td> \n   <td>定义一个段落</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-br.html\">&lt;br&gt;</a></td> \n   <td>定义简单的折行。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-hr.html\">&lt;hr&gt;</a></td> \n   <td>定义水平线。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-comment.html\">&lt;!--...--&gt;</a></td> \n   <td>定义一个注释</td> \n  </tr> \n  <tr> \n   <td><b>格式</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-acronym.html\">&lt;acronym&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。</span> 定义只取首字母的缩写。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-abbr.html\">&lt;abbr&gt;</a></td> \n   <td>定义一个缩写。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-address.html\">&lt;address&gt;</a></td> \n   <td>定义文档作者或拥有者的联系信息。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-b.html\">&lt;b&gt;</a></td> \n   <td>定义粗体文本。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-bdi.html\">&lt;bdi&gt;</a><span class=\"new\">New</span> </td> \n   <td>允许您设置一段文本，使其脱离其父元素的文本方向设置。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-bdo.html\">&lt;bdo&gt;</a></td> \n   <td>定义文本的方向。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-big.html\">&lt;big&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。</span> 定义大号文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-blockquote.html\">&lt;blockquote&gt;</a></td> \n   <td>定义块引用。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-center.html\">&lt;center&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。 HTML 4.01 已废弃。</span>定义居中文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-cite.html\">&lt;cite&gt;</a></td> \n   <td>定义引用(citation)。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-code.html\">&lt;code&gt;</a></td> \n   <td>定义计算机代码文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-del.html\">&lt;del&gt;</a></td> \n   <td>定义被删除文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dfn.html\">&lt;dfn&gt;</a></td> \n   <td>定义定义项目。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-em.html\">&lt;em&gt;</a></td> \n   <td>定义强调文本。&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-font.html\">&lt;font&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。 HTML 4.01 已废弃。</span> 定义文本的字体、尺寸和颜色</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-i.html\">&lt;i&gt;</a></td> \n   <td>定义斜体文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-ins.html\">&lt;ins&gt;</a></td> \n   <td>定义被插入文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-kbd.html\">&lt;kbd&gt;</a></td> \n   <td>定义键盘文本。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-mark.html\">&lt;mark&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义带有记号的文本。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-meter.html\">&lt;meter&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义度量衡。仅用于已知最大和最小值的度量。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-pre.html\">&lt;pre&gt;</a></td> \n   <td>定义预格式文本</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-progress.html\">&lt;progress&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义运行中的任务进度（进程）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-q.html\">&lt;q&gt;</a></td> \n   <td>定义短的引用。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-rp.html\">&lt;rp&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义不支持 ruby 元素的浏览器所显示的内容。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-rt.html\">&lt;rt&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义字符（中文注音或字符）的解释或发音。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-ruby.html\">&lt;ruby&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义 ruby 注释（中文注音或字符）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-s.html\">&lt;s&gt;</a></td> \n   <td>定义加删除线的文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-samp.html\">&lt;samp&gt;</a></td> \n   <td>定义计算机代码样本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-small.html\">&lt;small&gt;</a></td> \n   <td>定义小号文本。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-strike.html\">&lt;strike&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。 HTML 4.01 已废弃。</span> 定义加删除线的文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-strong.html\">&lt;strong&gt;</a></td> \n   <td>定义语气更为强烈的强调文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-sub.html\">&lt;sub&gt;</a></td> \n   <td>定义下标文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-sup.html\">&lt;sup&gt;</a></td> \n   <td>定义上标文本。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-time.html\">&lt;time&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个日期/时间</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-tt.html\">&lt;tt&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。</span> 定义打字机文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-u.html\">&lt;u&gt;</a></td> \n   <td>定义下划线文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-var.html\">&lt;var&gt;</a></td> \n   <td>定义文本的变量部分。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-wbr.html\">&lt;wbr&gt;</a><span class=\"new\">New</span> </td> \n   <td>规定在文本中的何处适合添加换行符。</td> \n  </tr> \n  <tr> \n   <td><b>表单</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-form.html\">&lt;form&gt;</a></td> \n   <td>定义一个 HTML 表单，用于用户输入。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-input.html\">&lt;input&gt;</a></td> \n   <td>定义一个输入控件</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-textarea.html\">&lt;textarea&gt;</a></td> \n   <td>定义多行的文本输入控件。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-button.html\">&lt;button&gt;</a></td> \n   <td>定义按钮。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-select.html\">&lt;select&gt;</a></td> \n   <td>定义选择列表（下拉列表）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-optgroup.html\">&lt;optgroup&gt;</a></td> \n   <td>定义选择列表中相关选项的组合。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-option.html\">&lt;option&gt;</a></td> \n   <td>定义选择列表中的选项。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-label.html\">&lt;label&gt;</a></td> \n   <td>定义 input 元素的标注。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-fieldset.html\">&lt;fieldset&gt;</a></td> \n   <td>定义围绕表单中元素的边框。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-legend.html\">&lt;legend&gt;</a></td> \n   <td>定义 fieldset 元素的标题。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-datalist.html\">&lt;datalist&gt;</a><span class=\"new\">New</span> </td> \n   <td>规定了 input 元素可能的选项列表。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-keygen.html\">&lt;keygen&gt;</a><span class=\"new\">New</span> </td> \n   <td>规定用于表单的密钥对生成器字段。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-output.html\">&lt;output&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个计算的结果</td> \n  </tr> \n  <tr> \n   <td><b>框架</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-frame.html\">&lt;frame&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。</span> 定义框架集的窗口或框架。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-frameset.html\">&lt;frameset&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。</span>定义框架集。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-noframes.html\">&lt;noframes&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。</span> 定义针对不支持框架的用户的替代内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-iframe.html\">&lt;iframe&gt;</a></td> \n   <td>定义内联框架。</td> \n  </tr> \n  <tr> \n   <td><b>图像</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-img.html\">&lt;img&gt;</a></td> \n   <td>定义图像。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-map.html\">&lt;map&gt;</a></td> \n   <td>定义图像映射。 </td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-area.html\">&lt;area&gt;</a></td> \n   <td>定义图像地图内部的区域。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-canvas.html\">&lt;canvas&gt;</a><span class=\"new\">New</span> </td> \n   <td>通过脚本（通常是 JavaScript）来绘制图形（比如图表和其他图像）。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-figcaption.html\">&lt;figcaption&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个 caption for a &lt;figure&gt; element</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-figure.html\">&lt;figure&gt;</a><span class=\"new\">New</span> </td> \n   <td>figure 标签用于对元素进行组合。</td> \n  </tr> \n  <tr> \n   <td><b>Audio/Video</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-audio.html\">&lt;audio&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义声音，比如音乐或其他音频流。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-source.html\">&lt;source&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义media元素 (&lt;video&gt; 和 &lt;audio&gt;)的媒体资源。media </td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-track.html\">&lt;track&gt;</a><span class=\"new\">New</span> </td> \n   <td>为媒体(&lt;video&gt; 和 &lt;audio&gt;)元素定义外部文本轨道。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-video.html\">&lt;video&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个音频或者视频</td> \n  </tr> \n  <tr> \n   <td><b>链接</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-a.html\">&lt;a&gt;</a></td> \n   <td>定义一个链接</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-link.html\">&lt;link&gt;</a></td> \n   <td>定义文档与外部资源的关系。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-nav.html\">&lt;nav&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义导航链接</td> \n  </tr> \n  <tr> \n   <td><b>列表</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-ul.html\">&lt;ul&gt;</a></td> \n   <td>定义一个无序列表</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-ol.html\">&lt;ol&gt;</a></td> \n   <td>定义一个有序列表</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-li.html\">&lt;li&gt;</a></td> \n   <td>定义一个列表项</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-dir.html\">&lt;dir&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。 HTML 4.01 已废弃。</span> 定义目录列表。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dl.html\">&lt;dl&gt;</a></td> \n   <td>定义一个定义列表</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dt.html\">&lt;dt&gt;</a></td> \n   <td>定义一个定义定义列表中的项目。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-dd.html\">&lt;dd&gt;</a></td> \n   <td>定义定义列表中项目的描述。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-menu.html\">&lt;menu&gt;</a></td> \n   <td>定义菜单列表。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-command.html\">&lt;command&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义用户可能调用的命令（比如单选按钮、复选框或按钮）。</td> \n  </tr> \n  <tr> \n   <td><b>表格</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-table.html\">&lt;table&gt;</a></td> \n   <td>定义一个表格</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-caption.html\">&lt;caption&gt;</a></td> \n   <td>定义表格标题。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-th.html\">&lt;th&gt;</a></td> \n   <td>定义表格中的表头单元格。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-tr.html\">&lt;tr&gt;</a></td> \n   <td>定义表格中的行。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-td.html\">&lt;td&gt;</a></td> \n   <td>定义表格中的单元。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-thead.html\">&lt;thead&gt;</a></td> \n   <td>定义表格中的表头内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-tbody.html\">&lt;tbody&gt;</a></td> \n   <td>定义表格中的主体内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-tfoot.html\">&lt;tfoot&gt;</a></td> \n   <td>定义表格中的表注内容（脚注）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-col.html\">&lt;col&gt;</a></td> \n   <td>定义表格中一个或多个列的属性值。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-colgroup.html\">&lt;colgroup&gt;</a></td> \n   <td>定义表格中供格式化的列组。</td> \n  </tr> \n  <tr> \n   <td><b>样式/节</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-style.html\">&lt;style&gt;</a></td> \n   <td>定义文档的样式信息。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-div.html\">&lt;div&gt;</a></td> \n   <td>定义文档中的节。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-span.html\">&lt;span&gt;</a></td> \n   <td>定义文档中的节。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-header.html\">&lt;header&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个文档头部部分</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-footer.html\">&lt;footer&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个文档底部</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-section.html\">&lt;section&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义了文档的某个区域</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-article.html\">&lt;article&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个文章内容</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-aside.html\">&lt;aside&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义其所处内容之外的内容。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-details.html\">&lt;details&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义了用户可见的或者隐藏的需求的补充细节。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-dialog.html\">&lt;dialog&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个对话框或者窗口</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-summary.html\">&lt;summary&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义一个可见的标题。 当用户点击标题时会显示出详细信息。</td> \n  </tr> \n  <tr> \n   <td><b>元信息</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-head.html\">&lt;head&gt;</a></td> \n   <td>定义关于文档的信息</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-meta.html\">&lt;meta&gt;</a></td> \n   <td>定义关于 HTML 文档的元信息。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-base.html\">&lt;base&gt;</a></td> \n   <td>定义页面中所有链接的默认地址或默认目标。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-basefont.html\">&lt;basefont&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。 HTML 4.01 已废弃。</span> 定义页面中文本的默认字体、颜色或尺寸。</td> \n  </tr> \n  <tr> \n   <td><b>程序</b></td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-script.html\">&lt;script&gt;</a></td> \n   <td>定义客户端脚本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-noscript.html\">&lt;noscript&gt;</a></td> \n   <td>定义针对不支持客户端脚本的用户的替代内容。</td> \n  </tr> \n  <tr> \n   <td><a class=\"notsupported\" href=\"tag-applet.html\">&lt;applet&gt;</a></td> \n   <td> <span class=\"deprecated\">HTML5不再支持。 HTML 4.01 已废弃。</span> 定义嵌入的 applet。</td> \n  </tr> \n  <tr> \n   <td> <a href=\"tag-embed.html\">&lt;embed&gt;</a><span class=\"new\">New</span> </td> \n   <td>定义了一个容器，用来嵌入外部应用或者互动程序（插件）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-object.html\">&lt;object&gt;</a></td> \n   <td>定义嵌入的对象。</td> \n  </tr> \n  <tr> \n   <td><a href=\"tag-param.html\">&lt;param&gt;</a></td> \n   <td>定义对象的参数。</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 参考手册- (HTML5 标准)|功能排序|');
INSERT INTO `schoolcontent` VALUES ('58', '58', '<h1>HTML <span class=\"color_h1\">全局属性</span></h1> \n<hr /> \n<p> <span class=\"new\" style=\"float: left\">New</span>&nbsp;: HTML5 新属性。</p> \n<table class=\"reference notranslate\"> \n <tbody> \n  <tr> \n   <th align=\"left\" width=\"25%\">属性</th> \n   <th align=\"left\" width=\"75%\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-accesskey.html\" title=\"HTML Global accesskey 属性\">accesskey</a></td> \n   <td>设置访问元素的键盘快捷键。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-class.html\" title=\"HTML Global class 属性\">class</a></td> \n   <td>规定元素的类名（classname）</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-contenteditable.html\" title=\"HTML Global contenteditable 属性\">contenteditable</a><span class=\"new\">New</span></td> \n   <td>规定是否可编辑元素的内容。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-contextmenu.html\" title=\"HTML contextmenu 属性\">contextmenu</a><span class=\"new\">New</span></td> \n   <td>指定一个元素的上下文菜单。当用户右击该元素，出现上下文菜单</td> \n  </tr> \n  <tr> \n   <td><a href=\"att-global-data.html\">data-*</a><span class=\"new\">New</span></td> \n   <td>用于存储页面的自定义数据</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-dir.html\" title=\"HTML dir 属性\">dir</a></td> \n   <td>设置元素中内容的文本方向。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-draggable.html\" title=\"HTML draggable 属性\">draggable</a><span class=\"new\">New</span></td> \n   <td>指定某个元素是否可以拖动</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-dropzone.html\" title=\"HTML dropzone 属性\">dropzone</a><span class=\"new\">New</span></td> \n   <td>指定是否将数据复制，移动，或链接，或删除</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-hidden.html\" title=\"HTML hidden 属性\">hidden</a><span class=\"new\">New</span></td> \n   <td>hidden 属性规定对元素进行隐藏。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-id.html\" title=\"HTML id 属性\">id</a></td> \n   <td>规定元素的唯一 id</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-lang.html\" title=\"HTML lang 属性\">lang</a></td> \n   <td>设置元素中内容的语言代码。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-spellcheck.html\" title=\"HTML spellcheck 属性\">spellcheck</a><span class=\"new\">New</span></td> \n   <td>检测元素是否拼写错误</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-style.html\" title=\"HTML style 属性\">style</a></td> \n   <td>规定元素的行内样式（inline style）</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-tabindex.html\" title=\"HTML tabindex 属性\">tabindex</a></td> \n   <td>设置元素的 Tab 键控制次序。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-title.html\" title=\"HTML title 属性\">title</a></td> \n   <td>规定元素的额外信息（可在工具提示中显示）</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/tags/att-global-translate.html\" title=\"HTML translate 属性\">translate</a><span class=\"new\">New</span></td> \n   <td>指定是否一个元素的值在页面载入时是否需要翻译</td> \n  </tr> \n </tbody> \n</table>', null, 'HTML 全局属性|');
INSERT INTO `schoolcontent` VALUES ('59', '59', '<h1>HTML <span class=\"color_h1\">事件属性</span></h1> \n<hr /> \n<h2>全局事件属性</h2> \n<p>HTML 4 的新特性之一是可以使 HTML 事件触发浏览器中的行为，比方说当用户点击某个 HTML 元素时启动一段 JavaScript。</p> \n<p>如果你想学习更多关于事件属性，请访问 <a href=\"js-tutorial.html\">JavaScript 教程</a></p> \n<p>下面的表格提供了标准的事件属性，可以把它们插入 HTML/XHTML 元素中，以定义事件行为。</p> \n<p><span class=\"new\" style=\"float:left\">New</span>&nbsp;: HTML5新增属性事件。</p> \n<hr /> \n<h2>窗口事件属性（Window Event Attributes）</h2> \n<p>由窗口触发该事件 (适用于 &lt;body&gt; 标签):</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%;\">属性</th> \n   <th style=\"width:8%;\">值</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onafterprint.html\">onafterprint</a><span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>在打印文档之后运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onbeforeprint.html\">onbeforeprint</a><span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>在文档打印之前运行脚本</td> \n  </tr> \n  <tr> \n   <td>onbeforeonload<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>在文档加载之前运行脚本</td> \n  </tr> \n  <tr> \n   <td>onblur</td> \n   <td><i>script</i></td> \n   <td>当窗口失去焦点时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onerror<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当错误发生时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onfocus</td> \n   <td><i>script</i></td> \n   <td>当窗口获得焦点时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onhaschange<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当文档改变时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onload.html\">onload</a></td> \n   <td><i>script</i></td> \n   <td>当文档加载时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onmessage<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当触发消息时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onoffline<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当文档离线时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ononline<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当文档上线时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onpagehide<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当窗口隐藏时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onpageshow<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当窗口可见时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onpopstate<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当窗口历史记录改变时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onredo<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当文档执行再执行操作（redo）时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onresize.html\">onresize</a><span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当调整窗口大小时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onstorage<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当 Web Storage 区域更新时（存储空间中的数据发生变化时）运行脚本</td> \n  </tr> \n  <tr> \n   <td>onundo<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当文档执行撤销时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onunload.html\">onunload</a><span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当用户离开文档时运行脚本</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>表单事件(Form Events)</h2> \n<p>表单事件在HTML表单中触发 (适用于所有 HTML 元素, 但该HTML元素需在form表单内):</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%;\">属性</th> \n   <th style=\"width:8%;\">值</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onblur.html\">onblur</a></td> \n   <td><i>script</i></td> \n   <td>当元素失去焦点时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onchange.html\">onchange</a></td> \n   <td><i>script</i></td> \n   <td>当元素改变时运行脚本</td> \n  </tr> \n  <tr> \n   <td>oncontextmenu<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当触发上下文菜单时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onfocus.html\">onfocus</a></td> \n   <td><i>script</i></td> \n   <td>当元素获得焦点时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onformchange<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当表单改变时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onforminput<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当表单获得用户输入时运行脚本</td> \n  </tr> \n  <tr> \n   <td>oninput<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当元素获得用户输入时运行脚本</td> \n  </tr> \n  <tr> \n   <td>oninvalid<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当元素无效时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onreset</td> \n   <td><i>script</i></td> \n   <td>当表单重置时运行脚本。<span class=\"deprecated\">HTML 5 不支持。</span></td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onselect.html\">onselect</a></td> \n   <td><i>script</i></td> \n   <td>当选取元素时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onsubmit.html\">onsubmit</a></td> \n   <td><i>script</i></td> \n   <td>当提交表单时运行脚本</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>键盘事件（Keyboard Events）</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%;\">属性</th> \n   <th style=\"width:8%;\">值</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onkeydown.html\">onkeydown</a></td> \n   <td><i>script</i></td> \n   <td>当按下按键时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onkeypress.html\">onkeypress</a></td> \n   <td><i>script</i></td> \n   <td>当按下并松开按键时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onkeyup.html\">onkeyup</a></td> \n   <td><i>script</i></td> \n   <td>当松开按键时运行脚本</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>鼠标事件（Mouse Events）</h2> \n<p>通过鼠标触发事件, 类似用户的行为:</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%;\">属性</th> \n   <th style=\"width:8%;\">值</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onclick.html\">onclick</a></td> \n   <td><i>script</i></td> \n   <td>当单击鼠标时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-ondblclick.html\">ondblclick</a></td> \n   <td><i>script</i></td> \n   <td>当双击鼠标时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ondrag<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当拖动元素时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ondragend<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当拖动操作结束时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ondragenter<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当元素被拖动至有效的拖放目标时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ondragleave<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当元素离开有效拖放目标时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ondragover<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当元素被拖动至有效拖放目标上方时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ondragstart<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当拖动操作开始时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ondrop<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当被拖动元素正在被拖放时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onmousedown.html\">onmousedown</a></td> \n   <td><i>script</i></td> \n   <td>当按下鼠标按钮时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onmousemove.html\">onmousemove</a></td> \n   <td><i>script</i></td> \n   <td>当鼠标指针移动时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onmouseout.html\">onmouseout</a></td> \n   <td><i>script</i></td> \n   <td>当鼠标指针移出元素时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onmouseover.html\">onmouseover</a></td> \n   <td><i>script</i></td> \n   <td>当鼠标指针移至元素之上时运行脚本</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onmouseup.html\">onmouseup</a></td> \n   <td><i>script</i></td> \n   <td>当松开鼠标按钮时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onmousewheel<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当转动鼠标滚轮时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onscroll<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当滚动元素的滚动条时运行脚本</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>多媒体事件(Media Events)</h2> \n<p>通过视频（videos），图像（images）或者音频（audio） 触发该事件，多应用于HTML媒体元素比如 &lt;audio&gt;, &lt;embed&gt;, &lt;img&gt;, &lt;object&gt;, 和&lt;video&gt;):</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%;\">属性</th> \n   <th style=\"width:8%;\">值</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>onabort</td> \n   <td><i>script</i></td> \n   <td>当发生中止事件时运行脚本</td> \n  </tr> \n  <tr> \n   <td>oncanplay<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介能够开始播放但可能因缓冲而需要停止时运行脚本</td> \n  </tr> \n  <tr> \n   <td>oncanplaythrough<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介能够无需因缓冲而停止即可播放至结尾时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ondurationchange<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介长度改变时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onemptied<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介资源元素突然为空时（网络错误、加载错误等）运行脚本</td> \n  </tr> \n  <tr> \n   <td>onended<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介已抵达结尾时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onerror<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当在元素加载期间发生错误时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onloadeddata<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当加载媒介数据时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onloadedmetadata<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介元素的持续时间以及其他媒介数据已加载时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onloadstart<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当浏览器开始加载媒介数据时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onpause<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介数据暂停时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onplay<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介数据将要开始播放时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onplaying<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介数据已开始播放时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onprogress<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当浏览器正在取媒介数据时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onratechange<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介数据的播放速率改变时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onreadystatechange<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当就绪状态（ready-state）改变时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onseeked<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介元素的定位属性 [1] 不再为真且定位已结束时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onseeking<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介元素的定位属性为真且定位已开始时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onstalled<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当取回媒介数据过程中（延迟）存在错误时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onsuspend<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当浏览器已在取媒介数据但在取回整个媒介文件之前停止时运行脚本</td> \n  </tr> \n  <tr> \n   <td>ontimeupdate<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介改变其播放位置时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onvolumechange<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介改变音量亦或当音量被设置为静音时运行脚本</td> \n  </tr> \n  <tr> \n   <td>onwaiting<span class=\"new\">New</span> </td>\n   <td><i>script</i></td> \n   <td>当媒介已停止播放但打算继续播放时运行脚本</td> \n  </tr> \n </tbody>\n</table> \n<h2>其他事件</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:160px\">属性</th> \n   <th style=\"width:40px\">值</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"ev-onshow.html\">onshow</a><span class=\"new\">New</span></td> \n   <td><i>script</i></td> \n   <td>当 &lt;menu&gt; 元素在上下文显示时触发</td> \n  </tr> \n  <tr> \n   <td><a href=\"ev-ontoggle.html\">ontoggle</a><span class=\"new\">New</span></td> \n   <td><i>script</i></td> \n   <td>当用户打开或关闭 &lt;details&gt; 元素时触发</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 事件属性|全局事件属性|窗口事件属性（Window Event Attributes）|表单事件(Form Events)|键盘事件（Keyboard Events）|鼠标事件（Mouse Events）|多媒体事件(Media Events)|其他事件|');
INSERT INTO `schoolcontent` VALUES ('60', '62', '<h1>HTML 元素<span class=\"color_h1\">和有效 DOCTYPES</span> </h1> \n<hr /> \n<h2>HTML 元素 - 有效 DOCTYPES</h2> \n<p>下面的表格列出了所有的 HTML5/HTML 4.01/XHTML 元素，以及它们会出现在什么文档类型 (!DOCTYPE) 中： </p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"background-color:#ffffff;border:none;\"></th> \n   <th style=\"background-color:#ffffff;border:none;\"></th> \n   <th colspan=\"3\" style=\"text-align:center;\">HTML 4.01 / XHTML 1.0</th> \n   <th style=\"background-color:#ffffff;border:none;\"></th> \n  </tr> \n  <tr> \n   <th valign=\"bottom\" align=\"left\" width=\"20%\">Tag</th> \n   <th valign=\"bottom\" align=\"left\" width=\"15%\">HTML5</th> \n   <th align=\"right\" width=\"15%\">Transitional</th> \n   <th align=\"right\" width=\"15%\">Strict</th> \n   <th align=\"right\" width=\"15%\">Frameset</th> \n   <th valign=\"bottom\" align=\"right\" width=\"20%\">XHTML 1.1</th> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-a.html\">&lt;a&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-abbr.html\">&lt;abbr&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-acronym.html\">&lt;acronym&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-address.html\">&lt;address&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-applet.html\">&lt;applet&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-area.html\">&lt;area&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-article.html\">&lt;article&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-aside.html\">&lt;aside&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-audio.html\">&lt;audio&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-b.html\">&lt;b&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-base.html\">&lt;base&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-basefont.html\">&lt;basefont&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-bdi.html\">&lt;bdi&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-bdo.html\">&lt;bdo&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-big.html\">&lt;big&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-blockquote.html\">&lt;blockquote&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-body.html\">&lt;body&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-br.html\">&lt;br&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-button.html\">&lt;button&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-canvas.html\">&lt;canvas&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-caption.html\">&lt;caption&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-center.html\">&lt;center&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-cite.html\">&lt;cite&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-phrase_elements.html\">&lt;code&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-col.html\">&lt;col&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-colgroup.html\">&lt;colgroup&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-command.html\">&lt;command&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-datalist.html\">&lt;datalist&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-dd.html\">&lt;dd&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-del.html\">&lt;del&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-details.html\">&lt;details&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-phrase_elements.html\">&lt;dfn&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-dir.html\">&lt;dir&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-div.html\">&lt;div&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-dl.html\">&lt;dl&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-dt.html\">&lt;dt&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-phrase_elements.html\">&lt;em&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-embed.html\">&lt;embed&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-fieldset.html\">&lt;fieldset&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-figcaption.html\">&lt;figcaption&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-figure.html\">&lt;figure&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-font.html\">&lt;font&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-footer.html\">&lt;footer&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-form.html\">&lt;form&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-frame.html\">&lt;frame&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-frameset.html\">&lt;frameset&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-hn.html\">&lt;h1&gt; to &lt;h6&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-head.html\">&lt;head&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-header.html\">&lt;header&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-hgroup.html\">&lt;hgroup&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-hr.html\">&lt;hr&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-html.html\">&lt;html&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-i.html\">&lt;i&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-iframe.html\">&lt;iframe&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-img.html\">&lt;img&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-input.html\">&lt;input&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-ins.html\">&lt;ins&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-phrase_elements.html\">&lt;kbd&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-keygen.html\">&lt;keygen&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-label.html\">&lt;label&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-legend.html\">&lt;legend&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-li.html\">&lt;li&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-link.html\">&lt;link&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-map.html\">&lt;map&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-mark.html\">&lt;mark&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-menu.html\">&lt;menu&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-meta.html\">&lt;meta&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-meter.html\">&lt;meter&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-nav.html\">&lt;nav&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-noframes.html\">&lt;noframes&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-noscript.html\">&lt;noscript&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-object.html\">&lt;object&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-ol.html\">&lt;ol&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-optgroup.html\">&lt;optgroup&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-option.html\">&lt;option&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-output.html\">&lt;output&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-p.html\">&lt;p&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-param.html\">&lt;param&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-pre.html\">&lt;pre&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-progress.html\">&lt;progress&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-q.html\">&lt;q&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-rp.html\">&lt;rp&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-rt.html\">&lt;rt&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-ruby.html\">&lt;ruby&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-s.html\">&lt;s&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-phrase_elements.html\">&lt;samp&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-script.html\">&lt;script&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-section.html\">&lt;section&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-select.html\">&lt;select&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-small.html\">&lt;small&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-source.html\">&lt;source&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-span.html\">&lt;span&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-strike.html\">&lt;strike&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-phrase_elements.html\">&lt;strong&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-style.html\">&lt;style&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-sup.html\">&lt;sub&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-summary.html\">&lt;summary&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-sup.html\">&lt;sup&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-table.html\">&lt;table&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-tbody.html\">&lt;tbody&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-td.html\">&lt;td&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-textarea.html\">&lt;textarea&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-tfoot.html\">&lt;tfoot&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-th.html\">&lt;th&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-thead.html\">&lt;thead&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-time.html\">&lt;time&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-title.html\">&lt;title&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-tr.html\">&lt;tr&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-track.html\">&lt;track&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-tt.html\">&lt;tt&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-u.html\">&lt;u&gt;</a></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-ul.html\">&lt;ul&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-phrase_elements.html\">&lt;var&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\">Yes</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-video.html\">&lt;video&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a href=\"tag-wbr.html\">&lt;wbr&gt;</a></td> \n   <td align=\"right\">Yes</td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n   <td align=\"right\"><span class=\"marked\">No</span></td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 元素和有效 DOCTYPES|HTML 元素 - 有效 DOCTYPES|');
INSERT INTO `schoolcontent` VALUES ('61', '63', '<h1>HTML <span class=\"color_h1\">颜色名</span></h1> \n<hr /> \n<h2>目前所有浏览器都支持以下颜色名。</h2> \n<p>141个颜色名称是在HTML和CSS颜色规范定义的（17标准颜色，再加124）。下表列出了所有颜色的值，包括十六进制值。</p> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> <b>提示:</b> 17标准颜色：黑色，蓝色，水，紫红色，灰色，绿色，石灰，栗色，海军，橄榄，橙，紫，红，白，银，蓝绿色，黄色。点击其中一个颜色名称（或一个十六进制值）就可以查看与不同文字颜色搭配的背景颜色。：</p> \n<hr />\n<h2>按颜色名排序</h2> \n<p><a href=\"http://www.runoob.com/html/html-colorvalues.html\">按十六进制的值排序</a></p> \n<p>单击一个颜色名或者 16 进制值，就可以查看与不同文字颜色搭配的背景颜色。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"25%\">Color Name</th> \n   <th align=\"left\" width=\"15%\">HEX</th> \n   <th align=\"left\" width=\"43%\">Color</th> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AliceBlue\">AliceBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0F8FF\">#F0F8FF</a></td> \n   <td bgcolor=\"#F0F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AntiqueWhite\">AntiqueWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAEBD7\">#FAEBD7</a></td> \n   <td bgcolor=\"#FAEBD7\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aqua\">Aqua</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aquamarine\">Aquamarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFFD4\">#7FFFD4</a></td> \n   <td bgcolor=\"#7FFFD4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Azure\">Azure</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFFF\">#F0FFFF</a></td> \n   <td bgcolor=\"#F0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Beige\">Beige</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5DC\">#F5F5DC</a></td> \n   <td bgcolor=\"#F5F5DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Bisque\">Bisque</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4C4\">#FFE4C4</a></td> \n   <td bgcolor=\"#FFE4C4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Black\">Black</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000000\">#000000</a></td> \n   <td bgcolor=\"#000000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlanchedAlmond\">BlanchedAlmond</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEBCD\">#FFEBCD</a></td> \n   <td bgcolor=\"#FFEBCD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Blue\">Blue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000FF\">#0000FF</a></td> \n   <td bgcolor=\"#0000FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlueViolet\">BlueViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8A2BE2\">#8A2BE2</a></td> \n   <td bgcolor=\"#8A2BE2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Brown\">Brown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A52A2A\">#A52A2A</a></td> \n   <td bgcolor=\"#A52A2A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BurlyWood\">BurlyWood</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DEB887\">#DEB887</a></td> \n   <td bgcolor=\"#DEB887\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CadetBlue\">CadetBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=5F9EA0\">#5F9EA0</a></td> \n   <td bgcolor=\"#5F9EA0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chartreuse\">Chartreuse</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFF00\">#7FFF00</a></td> \n   <td bgcolor=\"#7FFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chocolate\">Chocolate</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2691E\">#D2691E</a></td> \n   <td bgcolor=\"#D2691E\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Coral\">Coral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF7F50\">#FF7F50</a></td> \n   <td bgcolor=\"#FF7F50\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CornflowerBlue\">CornflowerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6495ED\">#6495ED</a></td> \n   <td bgcolor=\"#6495ED\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cornsilk\">Cornsilk</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF8DC\">#FFF8DC</a></td> \n   <td bgcolor=\"#FFF8DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Crimson\">Crimson</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DC143C\">#DC143C</a></td> \n   <td bgcolor=\"#DC143C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cyan\">Cyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkBlue\">DarkBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00008B\">#00008B</a></td> \n   <td bgcolor=\"#00008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkCyan\">DarkCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008B8B\">#008B8B</a></td> \n   <td bgcolor=\"#008B8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGoldenRod\">DarkGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B8860B\">#B8860B</a></td> \n   <td bgcolor=\"#B8860B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGray\">DarkGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A9A9A9\">#A9A9A9</a></td> \n   <td bgcolor=\"#A9A9A9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGreen\">DarkGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=006400\">#006400</a></td> \n   <td bgcolor=\"#006400\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkKhaki\">DarkKhaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BDB76B\">#BDB76B</a></td> \n   <td bgcolor=\"#BDB76B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkMagenta\">DarkMagenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B008B\">#8B008B</a></td> \n   <td bgcolor=\"#8B008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOliveGreen\">DarkOliveGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=556B2F\">#556B2F</a></td> \n   <td bgcolor=\"#556B2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrange\">DarkOrange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF8C00\">#FF8C00</a></td> \n   <td bgcolor=\"#FF8C00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrchid\">DarkOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9932CC\">#9932CC</a></td> \n   <td bgcolor=\"#9932CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkRed\">DarkRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B0000\">#8B0000</a></td> \n   <td bgcolor=\"#8B0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSalmon\">DarkSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E9967A\">#E9967A</a></td> \n   <td bgcolor=\"#E9967A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSeaGreen\">DarkSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8FBC8F\">#8FBC8F</a></td> \n   <td bgcolor=\"#8FBC8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateBlue\">DarkSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=483D8B\">#483D8B</a></td> \n   <td bgcolor=\"#483D8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateGray\">DarkSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2F4F4F\">#2F4F4F</a></td> \n   <td bgcolor=\"#2F4F4F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkTurquoise\">DarkTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00CED1\">#00CED1</a></td> \n   <td bgcolor=\"#00CED1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkViolet\">DarkViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9400D3\">#9400D3</a></td> \n   <td bgcolor=\"#9400D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepPink\">DeepPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF1493\">#FF1493</a></td> \n   <td bgcolor=\"#FF1493\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepSkyBlue\">DeepSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00BFFF\">#00BFFF</a></td> \n   <td bgcolor=\"#00BFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DimGray\">DimGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=696969\">#696969</a></td> \n   <td bgcolor=\"#696969\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DodgerBlue\">DodgerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=1E90FF\">#1E90FF</a></td> \n   <td bgcolor=\"#1E90FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FireBrick\">FireBrick</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B22222\">#B22222</a></td> \n   <td bgcolor=\"#B22222\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FloralWhite\">FloralWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAF0\">#FFFAF0</a></td> \n   <td bgcolor=\"#FFFAF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=ForestGreen\">ForestGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=228B22\">#228B22</a></td> \n   <td bgcolor=\"#228B22\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Fuchsia\">Fuchsia</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gainsboro\">Gainsboro</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DCDCDC\">#DCDCDC</a></td> \n   <td bgcolor=\"#DCDCDC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GhostWhite\">GhostWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F8F8FF\">#F8F8FF</a></td> \n   <td bgcolor=\"#F8F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gold\">Gold</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFD700\">#FFD700</a></td> \n   <td bgcolor=\"#FFD700\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GoldenRod\">GoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DAA520\">#DAA520</a></td> \n   <td bgcolor=\"#DAA520\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gray\">Gray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808080\">#808080</a></td> \n   <td bgcolor=\"#808080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Green\">Green</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008000\">#008000</a></td> \n   <td bgcolor=\"#008000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GreenYellow\">GreenYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADFF2F\">#ADFF2F</a></td> \n   <td bgcolor=\"#ADFF2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HoneyDew\">HoneyDew</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFF0\">#F0FFF0</a></td> \n   <td bgcolor=\"#F0FFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HotPink\">HotPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF69B4\">#FF69B4</a></td> \n   <td bgcolor=\"#FF69B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=IndianRed \">IndianRed </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD5C5C\">#CD5C5C</a></td> \n   <td bgcolor=\"#CD5C5C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Indigo  \">Indigo </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4B0082\">#4B0082</a></td> \n   <td bgcolor=\"#4B0082\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Ivory\">Ivory</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFF0\">#FFFFF0</a></td> \n   <td bgcolor=\"#FFFFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Khaki\">Khaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0E68C\">#F0E68C</a></td> \n   <td bgcolor=\"#F0E68C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lavender\">Lavender</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E6E6FA\">#E6E6FA</a></td> \n   <td bgcolor=\"#E6E6FA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LavenderBlush\">LavenderBlush</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF0F5\">#FFF0F5</a></td> \n   <td bgcolor=\"#FFF0F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LawnGreen\">LawnGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7CFC00\">#7CFC00</a></td> \n   <td bgcolor=\"#7CFC00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LemonChiffon\">LemonChiffon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFACD\">#FFFACD</a></td> \n   <td bgcolor=\"#FFFACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightBlue\">LightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADD8E6\">#ADD8E6</a></td> \n   <td bgcolor=\"#ADD8E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCoral\">LightCoral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F08080\">#F08080</a></td> \n   <td bgcolor=\"#F08080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCyan\">LightCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E0FFFF\">#E0FFFF</a></td> \n   <td bgcolor=\"#E0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGoldenRodYellow\">LightGoldenRodYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAFAD2\">#FAFAD2</a></td> \n   <td bgcolor=\"#FAFAD2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGray\">LightGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D3D3D3\">#D3D3D3</a></td> \n   <td bgcolor=\"#D3D3D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGreen\">LightGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=90EE90\">#90EE90</a></td> \n   <td bgcolor=\"#90EE90\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightPink\">LightPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFB6C1\">#FFB6C1</a></td> \n   <td bgcolor=\"#FFB6C1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSalmon\">LightSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA07A\">#FFA07A</a></td> \n   <td bgcolor=\"#FFA07A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSeaGreen\">LightSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=20B2AA\">#20B2AA</a></td> \n   <td bgcolor=\"#20B2AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSkyBlue\">LightSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEFA\">#87CEFA</a></td> \n   <td bgcolor=\"#87CEFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSlateGray\">LightSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=778899\">#778899</a></td> \n   <td bgcolor=\"#778899\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSteelBlue\">LightSteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0C4DE\">#B0C4DE</a></td> \n   <td bgcolor=\"#B0C4DE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightYellow\">LightYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFE0\">#FFFFE0</a></td> \n   <td bgcolor=\"#FFFFE0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lime\">Lime</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF00\">#00FF00</a></td> \n   <td bgcolor=\"#00FF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LimeGreen\">LimeGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=32CD32\">#32CD32</a></td> \n   <td bgcolor=\"#32CD32\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Linen\">Linen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAF0E6\">#FAF0E6</a></td> \n   <td bgcolor=\"#FAF0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Magenta\">Magenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Maroon\">Maroon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800000\">#800000</a></td> \n   <td bgcolor=\"#800000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumAquaMarine\">MediumAquaMarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=66CDAA\">#66CDAA</a></td> \n   <td bgcolor=\"#66CDAA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumBlue\">MediumBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000CD\">#0000CD</a></td> \n   <td bgcolor=\"#0000CD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumOrchid\">MediumOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BA55D3\">#BA55D3</a></td> \n   <td bgcolor=\"#BA55D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumPurple\">MediumPurple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9370DB\">#9370DB</a></td> \n   <td bgcolor=\"#9370DB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSeaGreen\">MediumSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=3CB371\">#3CB371</a></td> \n   <td bgcolor=\"#3CB371\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSlateBlue\">MediumSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7B68EE\">#7B68EE</a></td> \n   <td bgcolor=\"#7B68EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSpringGreen\">MediumSpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FA9A\">#00FA9A</a></td> \n   <td bgcolor=\"#00FA9A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumTurquoise\">MediumTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=48D1CC\">#48D1CC</a></td> \n   <td bgcolor=\"#48D1CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumVioletRed\">MediumVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C71585\">#C71585</a></td> \n   <td bgcolor=\"#C71585\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MidnightBlue\">MidnightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=191970\">#191970</a></td> \n   <td bgcolor=\"#191970\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MintCream\">MintCream</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5FFFA\">#F5FFFA</a></td> \n   <td bgcolor=\"#F5FFFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MistyRose\">MistyRose</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4E1\">#FFE4E1</a></td> \n   <td bgcolor=\"#FFE4E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Moccasin\">Moccasin</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4B5\">#FFE4B5</a></td> \n   <td bgcolor=\"#FFE4B5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=NavajoWhite\">NavajoWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDEAD\">#FFDEAD</a></td> \n   <td bgcolor=\"#FFDEAD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Navy\">Navy</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000080\">#000080</a></td> \n   <td bgcolor=\"#000080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OldLace\">OldLace</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FDF5E6\">#FDF5E6</a></td> \n   <td bgcolor=\"#FDF5E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Olive\">Olive</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808000\">#808000</a></td> \n   <td bgcolor=\"#808000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OliveDrab\">OliveDrab</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6B8E23\">#6B8E23</a></td> \n   <td bgcolor=\"#6B8E23\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orange\">Orange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA500\">#FFA500</a></td> \n   <td bgcolor=\"#FFA500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OrangeRed\">OrangeRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF4500\">#FF4500</a></td> \n   <td bgcolor=\"#FF4500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orchid\">Orchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DA70D6\">#DA70D6</a></td> \n   <td bgcolor=\"#DA70D6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGoldenRod\">PaleGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EEE8AA\">#EEE8AA</a></td> \n   <td bgcolor=\"#EEE8AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGreen\">PaleGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=98FB98\">#98FB98</a></td> \n   <td bgcolor=\"#98FB98\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleTurquoise\">PaleTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=AFEEEE\">#AFEEEE</a></td> \n   <td bgcolor=\"#AFEEEE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleVioletRed\">PaleVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DB7093\">#DB7093</a></td> \n   <td bgcolor=\"#DB7093\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PapayaWhip\">PapayaWhip</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEFD5\">#FFEFD5</a></td> \n   <td bgcolor=\"#FFEFD5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PeachPuff\">PeachPuff</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDAB9\">#FFDAB9</a></td> \n   <td bgcolor=\"#FFDAB9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Peru\">Peru</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD853F\">#CD853F</a></td> \n   <td bgcolor=\"#CD853F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Pink\">Pink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFC0CB\">#FFC0CB</a></td> \n   <td bgcolor=\"#FFC0CB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Plum\">Plum</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DDA0DD\">#DDA0DD</a></td> \n   <td bgcolor=\"#DDA0DD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PowderBlue\">PowderBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0E0E6\">#B0E0E6</a></td> \n   <td bgcolor=\"#B0E0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Purple\">Purple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800080\">#800080</a></td> \n   <td bgcolor=\"#800080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Red\">Red</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF0000\">#FF0000</a></td> \n   <td bgcolor=\"#FF0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RosyBrown\">RosyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BC8F8F\">#BC8F8F</a></td> \n   <td bgcolor=\"#BC8F8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RoyalBlue\">RoyalBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4169E1\">#4169E1</a></td> \n   <td bgcolor=\"#4169E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SaddleBrown\">SaddleBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B4513\">#8B4513</a></td> \n   <td bgcolor=\"#8B4513\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Salmon\">Salmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FA8072\">#FA8072</a></td> \n   <td bgcolor=\"#FA8072\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SandyBrown\">SandyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F4A460\">#F4A460</a></td> \n   <td bgcolor=\"#F4A460\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaGreen\">SeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2E8B57\">#2E8B57</a></td> \n   <td bgcolor=\"#2E8B57\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaShell\">SeaShell</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF5EE\">#FFF5EE</a></td> \n   <td bgcolor=\"#FFF5EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Sienna\">Sienna</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A0522D\">#A0522D</a></td> \n   <td bgcolor=\"#A0522D\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Silver\">Silver</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C0C0C0\">#C0C0C0</a></td> \n   <td bgcolor=\"#C0C0C0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SkyBlue\">SkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEEB\">#87CEEB</a></td> \n   <td bgcolor=\"#87CEEB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateBlue\">SlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6A5ACD\">#6A5ACD</a></td> \n   <td bgcolor=\"#6A5ACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateGray\">SlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=708090\">#708090</a></td> \n   <td bgcolor=\"#708090\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Snow\">Snow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAFA\">#FFFAFA</a></td> \n   <td bgcolor=\"#FFFAFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SpringGreen\">SpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF7F\">#00FF7F</a></td> \n   <td bgcolor=\"#00FF7F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SteelBlue\">SteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4682B4\">#4682B4</a></td> \n   <td bgcolor=\"#4682B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tan\">Tan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2B48C\">#D2B48C</a></td> \n   <td bgcolor=\"#D2B48C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Teal\">Teal</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008080\">#008080</a></td> \n   <td bgcolor=\"#008080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Thistle\">Thistle</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D8BFD8\">#D8BFD8</a></td> \n   <td bgcolor=\"#D8BFD8\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tomato\">Tomato</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF6347\">#FF6347</a></td> \n   <td bgcolor=\"#FF6347\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Turquoise\">Turquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=40E0D0\">#40E0D0</a></td> \n   <td bgcolor=\"#40E0D0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Violet\">Violet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EE82EE\">#EE82EE</a></td> \n   <td bgcolor=\"#EE82EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Wheat\">Wheat</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5DEB3\">#F5DEB3</a></td> \n   <td bgcolor=\"#F5DEB3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=White\">White</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFFF\">#FFFFFF</a></td> \n   <td bgcolor=\"#FFFFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=WhiteSmoke\">WhiteSmoke</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5F5\">#F5F5F5</a></td> \n   <td bgcolor=\"#F5F5F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Yellow\">Yellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFF00\">#FFFF00</a></td> \n   <td bgcolor=\"#FFFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=YellowGreen\">YellowGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9ACD32\">#9ACD32</a></td> \n   <td bgcolor=\"#9ACD32\">&nbsp;</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 颜色名|目前所有浏览器都支持以下颜色名。|按颜色名排序|');
INSERT INTO `schoolcontent` VALUES ('62', '64', '<style>\r\n#selectedcolor {\r\n	border:1px solid #e3e3e3;\r\n	width:80%;\r\n	height:300px;\r\n	margin:auto;\r\n}\r\n#divpreview {\r\n	border:1px solid #e3e3e3;\r\n	width:80px;\r\n	height:20px;\r\n	margin:auto;\r\n	visibility:hidden;\r\n}\r\n.colorTable, #colorhexDIV, #colorrgbDIV, #colorhsvDIV, #colorhslDIV, #colornamDIV {\r\n	font-family:Consolas, \'Courier New\', Courier, monospace;\r\n}\r\n#colorhexDIV, #colorrgbDIV, #colorhslDIV, #colorhsvDIV, #colornamDIV {\r\n	font-size:18px;\r\n}\r\n#wronginputDIV {\r\n    text-align:left;\r\n    position:absolute;\r\n    margin:4px 10px;\r\n    color:#a94442;\r\n    display:none;\r\n}\r\n.has-error input{\r\n    border:1px solid red;\r\n}\r\n#entercolorDIV input,#entercolorDIV button{\r\n	height:28px;\r\n}\r\n#entercolorDIV input{\r\n	width:80%;\r\n	border:1px solid #d3d3d3;\r\n	border-right:none;\r\n}\r\n</style> \n<script src=\"http://static.runoob.com/assets/js/tinycolor.js\"></script> \n<script>\r\n<!--\r\nvar colorhex = \"FF0000\";\r\nfunction mouseOverColor(hex) {\r\n    document.getElementById(\"divpreview\").style.visibility = \"visible\";\r\n    document.getElementById(\"divpreview\").style.backgroundColor = hex;\r\n    document.body.style.cursor = \"pointer\";\r\n}\r\nfunction mouseOutMap() {\r\n    if (hh == 0) {\r\n        document.getElementById(\"divpreview\").style.visibility = \"hidden\";\r\n    } else {\r\n      hh = 0;\r\n    }\r\n    document.getElementById(\"divpreview\").style.backgroundColor = \"#\" + colorhex;\r\n    document.body.style.cursor = \"\";\r\n}\r\nvar hh = 0;\r\nfunction clickColor(hex, seltop, selleft, html5) {\r\n    var c;\r\n    if (html5 && html5 == 5)	{\r\n        c = document.getElementById(\"html5colorpicker\").value;\r\n    } else {\r\n        if (hex == 0)	{\r\n            c = document.getElementById(\"entercolor\").value;\r\n        } else {\r\n            c = hex;\r\n        }\r\n    }\r\n    colorhex = tinycolor(c).toHexString();\r\n    if (tinycolor(c).isValid()) {\r\n        clearWrongInput();\r\n    } else {\r\n        wrongInput();\r\n        return;\r\n    }\r\n    r = tinycolor(c).toRgb().r;\r\n    g = tinycolor(c).toRgb().g;\r\n    b = tinycolor(c).toRgb().b;\r\n    document.getElementById(\"colornamDIV\").innerHTML = (tinycolor(colorhex).toName() || \"\");\r\n    document.getElementById(\"colorhexDIV\").innerHTML = tinycolor(colorhex).toHexString();\r\n    document.getElementById(\"colorrgbDIV\").innerHTML = tinycolor(colorhex).toRgbString();\r\n    document.getElementById(\"colorhslDIV\").innerHTML = tinycolor(colorhex).toHslString();    \r\n    document.getElementById(\"colorhsvDIV\").innerHTML = tinycolor(colorhex).toHsvString();        \r\n    if ((seltop+200)>-1 && selleft>-1) {\r\n        document.getElementById(\"selectedhexagon\").style.top=seltop + \"px\";\r\n        document.getElementById(\"selectedhexagon\").style.left=selleft + \"px\";\r\n        document.getElementById(\"selectedhexagon\").style.visibility=\"visible\";\r\n	} else {\r\n        document.getElementById(\"divpreview\").style.backgroundColor = tinycolor(colorhex).toHexString();\r\n        document.getElementById(\"selectedhexagon\").style.visibility = \"hidden\";\r\n	}\r\n    document.getElementById(\"selectedcolor\").style.backgroundColor = tinycolor(colorhex).toHexString();\r\n    document.getElementById(\"html5colorpicker\").value = tinycolor(colorhex).toHexString();  \r\n  document.getElementById(\'slideRed\').value = r;\r\n  document.getElementById(\'slideGreen\').value = g;\r\n  document.getElementById(\'slideBlue\').value = b;\r\n  changeRed(r);changeGreen(g);changeBlue(b);\r\n  changeColor();\r\n  document.getElementById(\"fixed\").style.backgroundColor = tinycolor(colorhex).toHexString();\r\n}\r\nfunction wrongInput() {\r\n    document.getElementById(\"entercolorDIV\").className = \"has-error\";\r\n    document.getElementById(\"wronginputDIV\").style.display = \"block\";\r\n}\r\nfunction clearWrongInput() {\r\n    document.getElementById(\"entercolorDIV\").className = \"\";\r\n    document.getElementById(\"wronginputDIV\").style.display = \"none\";\r\n}\r\nfunction changeRed(value) {\r\n    document.getElementById(\'valRed\').innerHTML = value;\r\n    changeAll();\r\n}\r\nfunction changeGreen(value) {\r\n    document.getElementById(\'valGreen\').innerHTML = value;\r\n    changeAll();\r\n}\r\nfunction changeBlue(value) {\r\n    document.getElementById(\'valBlue\').innerHTML = value;\r\n    changeAll();\r\n}\r\nfunction changeAll() {\r\n    var r = document.getElementById(\'valRed\').innerHTML;\r\n    var g = document.getElementById(\'valGreen\').innerHTML;\r\n    var b = document.getElementById(\'valBlue\').innerHTML;\r\n    document.getElementById(\'change\').style.backgroundColor = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\r\n    document.getElementById(\'changetxt\').innerHTML = \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    document.getElementById(\'changetxthex\').innerHTML = tinycolor(\"rgb(\" + r + \",\" + g + \",\" + b + \")\").toHexString();\r\n}\r\n\r\nfunction hslLum_top() {\r\n  var i, a, match;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hslObj = tinycolor(color).toHsl();\r\n  var h = hslObj.h;\r\n  var s = hslObj.s;\r\n  var l = hslObj.l;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsl(\" + h + \",\" + s + \",\" + (i * 0.05) + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<h3 style=\'text-align: center !important;\'>淡 / 暗:</h3><table class=\'colorTable\' style=\'width:100%;\'>\";\r\n  //a += \"<tr>\";\r\n  //a += \"<td style=\'width:40px;\'></td>\";\r\n  //a += \"<td style=\'text-align:center;\'><h3>淡 / 暗</h3></td>\";\r\n  //a += \"<td style=\'width:80px;\'></td>\";\r\n  //a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(l * 100) == Math.round(tinycolor(arr[i]).toHsl().l * 100)) {\r\n      a += \"<tr><td></td><td></td><td></td></tr>\";\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(l * 100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'><br><br></td>\";\r\n      a += \"<td>&nbsp;<b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      a += \"<tr><td></td><td></td><td></td></tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && l > tinycolor(arr[i]).toHsl().l) {\r\n        a += \"<tr><td></td><td></td><td></td></tr>\";\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(l * 100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n        a += \"<td>&nbsp;<b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n        a += \"</tr>\";\r\n        a += \"<tr><td></td><td></td><td></td></tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'width:40px;text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsl().l * 100) + \"%&nbsp;</td>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'width:80px;\'>&nbsp;\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table>\";\r\n  document.getElementById(\"lumtopcontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hslHue_top() {\r\n  var i, a, match, loopH;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hslObj = tinycolor(color).toHsl();\r\n  var h = hslObj.h;\r\n  var s = hslObj.s;\r\n  var l = hslObj.l;\r\n  var arr = [];\r\n  for (i = 0; i <= 12; i++) {\r\n      arr.push(tinycolor(\"hsl(\" + (i * 30) + \",\" + s + \",\" + l + \")\"));\r\n  }\r\n  a = \"<table class=\'colorTable\' style=\'width:100%;line-height:1.95;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:40px;\'></td>\";\r\n  a += \"<td style=\'text-align:center;line-height:1.5\'><h3>Hue:</h3></td>\";\r\n  a += \"<td style=\'width:80px;\'></td>\";\r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    loopH = Math.round(tinycolor(arr[i]).toHsl().h)\r\n    if (i == arr.length - 1) {loopH = 360;}\r\n    if (match == 0 && Math.round(h) == loopH) {\r\n      a += \"<tr><td></td><td></td></tr>\";\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'width:40px;text-align:right;\'><b>\" + Math.round(h) + \"&nbsp;</b></td>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'><br><br></td>\";\r\n      a += \"<td style=\'width:80px;\'><b>&nbsp;\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      a += \"<tr><td></td><td></td></tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && Math.round(h) < loopH) {\r\n        a += \"<tr><td></td><td></td></tr>\";\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'width:40px;text-align:right;\'><b>\" + Math.round(h) + \"&nbsp;</b></td>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n        a += \"<td style=\'width:80px;\'><b>&nbsp;\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n        a += \"</tr>\";\r\n        a += \"<tr><td></td><td></td></tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'width:40px;text-align:right;\'>\" + loopH + \"&nbsp;</td>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'width:80px;\'>&nbsp;\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table>\";\r\n  document.getElementById(\"huetopcontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hslHue() {\r\n  var i, a, match, loopH;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hslObj = tinycolor(color).toHsl();\r\n  var h = hslObj.h;\r\n  var s = hslObj.s;\r\n  var l = hslObj.l;\r\n  var arr = [];\r\n  for (i = 0; i <= 24; i++) {\r\n      arr.push(tinycolor(\"hsl(\" + (i * 15) + \",\" + s + \",\" + l + \")\"));\r\n  }\r\n  a = \"<h3>Hue</h3>\";\r\n  a += \"<div class=\'table-responsive\'>\";\r\n  a += \"<table class=\'reference\' style=\'width:100%;white-space: nowrap;font-size:14px;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:150px;\'></td>\";\r\n  a += \"<td style=\'text-align:right;\'>Hue&nbsp;</td>\";\r\n  a += \"<td>Hex</td>\";\r\n  a += \"<td>Rgb</td>\";\r\n  a += \"<td>Hsl</td>\";\r\n  a += \"<td>Hsv</td>\";  \r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    loopH = Math.round(tinycolor(arr[i]).toHsl().h)\r\n    if (i == arr.length - 1) {loopH = 360;}\r\n    if (match == 0 && Math.round(h) == loopH) {\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(h) + \"&nbsp;</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toRgbString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHslString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHsvString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && Math.round(h) < loopH) {\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(h) + \"&nbsp;</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toRgbString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHslString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHsvString() + \"&nbsp;</b></td>\";\r\n        a += \"</tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'>\" + loopH + \"&nbsp;</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toRgbString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHslString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHsvString() + \"</td>\";                  \r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table></div>\";\r\n  document.getElementById(\"huecontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hslSat() {\r\n  var i, a, match, loopH;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hslObj = tinycolor(color).toHsl();\r\n  var h = hslObj.h;\r\n  var s = hslObj.s;\r\n  var l = hslObj.l;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsl(\" + h + \",\" + (i * 0.05) + \",\" + l + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<h3>HSL Saturation</h3>\";\r\n  a += \"<div class=\'table-responsive\'>\";\r\n  a += \"<table class=\'reference\' style=\'width:100%;white-space: nowrap;font-size:14px;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:150px;\'></td>\";\r\n  a += \"<td style=\'text-align:right;\'>Sat&nbsp;</td>\";\r\n  a += \"<td>Hex</td>\";\r\n  a += \"<td>Rgb</td>\";\r\n  a += \"<td>Hsl</td>\";\r\n  a += \"<td>Hsv</td>\";  \r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(s * 100) == Math.round(tinycolor(arr[i]).toHsl().s * 100)) {\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(tinycolor(hslObj).toHsl().s *100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toRgbString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHslString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHsvString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && s > tinycolor(arr[i]).toHsl().s) {\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(tinycolor(hslObj).toHsl().s *100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toRgbString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHslString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHsvString() + \"&nbsp;</b></td>\";\r\n        a += \"</tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsl().s *100) + \"%&nbsp;</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toRgbString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHslString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHsvString() + \"</td>\";                  \r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table></div>\";\r\n  document.getElementById(\"hslsatcontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hslLum() {\r\n  var i, a, match, loopH;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hslObj = tinycolor(color).toHsl();\r\n  var h = hslObj.h;\r\n  var s = hslObj.s;\r\n  var l = hslObj.l;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsl(\" + h + \",\" + s + \",\" + (i * 0.05) + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<h3>HSL 淡 / 暗</h3>\";\r\n  a += \"<div class=\'table-responsive\'>\";\r\n  a += \"<table class=\'reference\' style=\'width:100%;white-space: nowrap;font-size:14px;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:150px;\'></td>\";\r\n  a += \"<td style=\'text-align:right;\'>Lum&nbsp;</td>\";\r\n  a += \"<td>Hex</td>\";\r\n  a += \"<td>Rgb</td>\";\r\n  a += \"<td>Hsl</td>\";\r\n  a += \"<td>Hsv</td>\";  \r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(l * 100) == Math.round(tinycolor(arr[i]).toHsl().l * 100)) {\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(tinycolor(hslObj).toHsl().l *100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toRgbString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHslString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHsvString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && l > tinycolor(arr[i]).toHsl().l) {\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(tinycolor(hslObj).toHsl().l * 100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toRgbString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHslString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHsvString() + \"&nbsp;</b></td>\";\r\n        a += \"</tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsl().l *100) + \"%&nbsp;</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toRgbString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHslString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHsvString() + \"</td>\";                  \r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table></div>\";\r\n  document.getElementById(\"hsllumcontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hsvSat() {\r\n  var i, a, match, loopH;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hsvObj = tinycolor(color).toHsv();\r\n  var h = hsvObj.h;\r\n  var s = hsvObj.s;\r\n  var v = hsvObj.v;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsv(\" + h + \",\" + (i * 0.05) + \",\" + v + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<h3>HSV Saturation</h3>\";\r\n  a += \"<div class=\'table-responsive\'>\";\r\n  a += \"<table class=\'reference\' style=\'width:100%;white-space: nowrap;font-size:14px;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:150px;\'></td>\";\r\n  a += \"<td style=\'text-align:right;\'>Sat&nbsp;</td>\";\r\n  a += \"<td>Hex</td>\";\r\n  a += \"<td>Rgb</td>\";\r\n  a += \"<td>Hsl</td>\";\r\n  a += \"<td>Hsv</td>\";  \r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(s * 100) == Math.round(tinycolor(arr[i]).toHsv().s * 100)) {\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hsvObj).toHexString() + \"\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(tinycolor(hsvObj).toHsv().s * 100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toHexString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toRgbString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toHslString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toHsvString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && s > tinycolor(arr[i]).toHsv().s) {\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hsvObj).toHexString() + \"\'></td>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(tinycolor(hsvObj).toHsv().s * 100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toHexString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toRgbString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toHslString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toHsvString() + \"&nbsp;</b></td>\";\r\n        a += \"</tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsv().s * 100) + \"%&nbsp;</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toRgbString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHslString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHsvString() + \"</td>\";                  \r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table></div>\";\r\n  document.getElementById(\"hsvsatcontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hsvVal() {\r\n  var i, a, match, loopH;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hsvObj = tinycolor(color).toHsv();\r\n  var h = hsvObj.h;\r\n  var s = hsvObj.s;\r\n  var v = hsvObj.v;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsv(\" + h + \",\" + s + \",\" + (i * 0.05) + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<h3>HSV 亮 / 暗</h3>\";\r\n  a += \"<div class=\'table-responsive\'>\";\r\n  a += \"<table class=\'reference\' style=\'width:100%;white-space: nowrap;font-size:14px;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:150px;\'></td>\";\r\n  a += \"<td style=\'text-align:right;\'>Value&nbsp;</td>\";\r\n  a += \"<td>Hex</td>\";\r\n  a += \"<td>Rgb</td>\";\r\n  a += \"<td>Hsl</td>\";\r\n  a += \"<td>Hsv</td>\";  \r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(v * 100) == Math.round(tinycolor(arr[i]).toHsv().v * 100)) {\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hsvObj).toHexString() + \"\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(tinycolor(hsvObj).toHsv().v * 100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toHexString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toRgbString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toHslString() + \"</b></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toHsvString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && v > tinycolor(arr[i]).toHsv().v) {\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hsvObj).toHexString() + \"\'></td>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(tinycolor(hsvObj).toHsv().v * 100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toHexString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toRgbString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toHslString() + \"</b></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toHsvString() + \"&nbsp;</b></td>\";\r\n        a += \"</tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsv().v * 100) + \"%&nbsp;</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toRgbString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHslString() + \"</td>\";\r\n      a += \"<td>\" + tinycolor(arr[i]).toHsvString() + \"</td>\";                  \r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table></div>\";\r\n  document.getElementById(\"hsvvalcontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hsvBrighten() {\r\n  var i, a, match;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hsvObj = tinycolor(color).toHsv();\r\n  var h = hsvObj.h;\r\n  var s = hsvObj.s;\r\n  var v = hsvObj.v;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsv(\" + h + \",\" + s + \",\" + (i * 0.05) + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<table class=\'colorTable\' style=\'width:100%;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:40px;\'></td>\";\r\n  a += \"<td style=\'text-align:center;\'><h3>HSV<br>Brighten / Darken</h3></td>\";\r\n  a += \"<td style=\'width:80px;\'></td>\";\r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(v * 100) == Math.round(tinycolor(arr[i]).toHsv().v * 100)) {\r\n      a += \"<tr><td></td><td></td><td></td></tr>\";\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(v * 100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hsvObj).toHexString() + \"\'><br><br></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toHexString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      a += \"<tr><td></td><td></td><td></td></tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && v > tinycolor(arr[i]).toHsv().v) {\r\n        a += \"<tr><td></td><td></td><td></td></tr>\";\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(v * 100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hsvObj).toHexString() + \"\'></td>\";\r\n        a += \"<td><b>\" + tinycolor(hsvObj).toHexString() + \"</b></td>\";\r\n        a += \"</tr>\";\r\n        a += \"<tr><td></td><td></td><td></td></tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'width:40px;text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsv().v * 100) + \"%&nbsp;</td>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'width:80px;\'>\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table>\";\r\n  document.getElementById(\"hsvbrightencontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hsvSaturation() {\r\n  var i, a, match;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hsvObj = tinycolor(color).toHsv();\r\n  var h = hsvObj.h;\r\n  var s = hsvObj.s;\r\n  var v = hsvObj.v;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsv(\" + h + \",\" + (i * 0.05) + \",\" + v + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<table class=\'colorTable\' style=\'width:100%;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:40px;\'></td>\";\r\n  a += \"<td style=\'text-align:center;\'><h3>HSV<br>Saturation</h3></td>\";\r\n  a += \"<td style=\'width:80px;\'></td>\";\r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(s * 100) == Math.round(tinycolor(arr[i]).toHsv().s * 100)) {\r\n      a += \"<tr><td></td><td></td></tr>\";\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(s * 100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hsvObj).toHexString() + \"\'><br><br></td>\";\r\n      a += \"<td><b>\" + tinycolor(hsvObj).toHexString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      a += \"<tr><td></td><td></td></tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && s > tinycolor(arr[i]).toHsv().s) {\r\n        a += \"<tr><td></td><td></td></tr>\";\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(s * 100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hsvObj).toHexString() + \"\'></td>\";\r\n        a += \"<td><b>&nbsp;\" + tinycolor(hsvObj).toHexString() + \"</b></td>\";\r\n        a += \"</tr>\";\r\n        a += \"<tr><td></td><td></td></tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsv().s * 100) + \"%&nbsp;</td>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td>&nbsp;\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table>\";\r\n  document.getElementById(\"hsvsaturationcontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hslSaturation() {\r\n  var i, a, match;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hslObj = tinycolor(color).toHsl();\r\n  var h = hslObj.h;\r\n  var s = hslObj.s;\r\n  var l = hslObj.l;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsl(\" + h + \",\" + (i * 0.05) + \",\" + l + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<table class=\'colorTable\' style=\'width:100%;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:40px;\'></td>\";\r\n  a += \"<td style=\'text-align:center;\'><h3>HSL<br>Saturation</h3></td>\";\r\n  a += \"<td style=\'width:80px;\'></td>\";\r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(s * 100) == Math.round(tinycolor(arr[i]).toHsl().s * 100)) {\r\n      a += \"<tr><td></td><td></td></tr>\";\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(s * 100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'><br><br></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      a += \"<tr><td></td><td></td></tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && s > tinycolor(arr[i]).toHsl().s) {\r\n        a += \"<tr><td></td><td></td></tr>\";\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(s * 100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n        a += \"<td><b>&nbsp;\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n        a += \"</tr>\";\r\n        a += \"<tr><td></td><td></td></tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsl().s * 100) + \"%&nbsp;</td>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td>&nbsp;\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table>\";\r\n  document.getElementById(\"saturationcontainer\").innerHTML = a;\r\n}\r\n\r\nfunction hslLumen() {\r\n  var i, a, match;\r\n  var color = document.getElementById(\"colorhexDIV\").innerHTML;\r\n  var hslObj = tinycolor(color).toHsl();\r\n  var h = hslObj.h;\r\n  var s = hslObj.s;\r\n  var l = hslObj.l;\r\n  var arr = [];\r\n  for (i = 0; i <= 20; i++) {\r\n      arr.push(tinycolor(\"hsl(\" + h + \",\" + s + \",\" + (i * 0.05) + \")\"));\r\n  }\r\n  arr.reverse();\r\n  a = \"<table class=\'colorTable\' style=\'width:100%;\'>\";\r\n  a += \"<tr>\";\r\n  a += \"<td style=\'width:40px;\'></td>\";\r\n  a += \"<td style=\'text-align:center;\'><h3>HSL<br>淡 / 暗</h3></td>\";\r\n  a += \"<td style=\'width:80px;\'></td>\";\r\n  a += \"</tr>\";  \r\n  match = 0;\r\n  for (i = 0; i < arr.length; i++) {\r\n    if (match == 0 && Math.round(l * 100) == Math.round(tinycolor(arr[i]).toHsl().l * 100)) {\r\n      a += \"<tr><td></td><td></td><td></td></tr>\";\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'text-align:right;\'><b>\" + Math.round(l * 100) + \"%&nbsp;</b></td>\";\r\n      a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'><br><br></td>\";\r\n      a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n      a += \"</tr>\";\r\n      a += \"<tr><td></td><td></td><td></td></tr>\";\r\n      match = 1;      \r\n    } else {\r\n      if (match == 0 && l > tinycolor(arr[i]).toHsl().l) {\r\n        a += \"<tr><td></td><td></td><td></td></tr>\";\r\n        a += \"<tr>\";\r\n        a += \"<td style=\'text-align:right;\'><b>\" + Math.round(l * 100) + \"%&nbsp;</b></td>\";\r\n        a += \"<td style=\'background-color:\" + tinycolor(hslObj).toHexString() + \"\'></td>\";\r\n        a += \"<td><b>\" + tinycolor(hslObj).toHexString() + \"</b></td>\";\r\n        a += \"</tr>\";\r\n        a += \"<tr><td></td><td></td><td></td></tr>\";\r\n        match = 1;\r\n      }\r\n      a += \"<tr>\";\r\n      a += \"<td style=\'width:40px;text-align:right;\'>\" + Math.round(tinycolor(arr[i]).toHsl().l * 100) + \"%&nbsp;</td>\";\r\n      a += \"<td style=\'cursor:pointer;background-color:\" + tinycolor(arr[i]).toHexString() + \"\' onclick=\'clickColor(\\\"\" + tinycolor(arr[i]).toHexString() + \"\\\")\'></td>\";\r\n      a += \"<td style=\'width:80px;\'>\" + tinycolor(arr[i]).toHexString() + \"</td>\";\r\n      a += \"</tr>\";\r\n    }\r\n  }\r\n  a += \"</table>\";\r\n  document.getElementById(\"lumencontainer\").innerHTML = a;\r\n}\r\n\r\nfunction changeColor(value) {\r\n//hslHue_top();\r\n  hslLum_top();  \r\n  hslHue();  \r\n  hslSat();\r\n  hslLum();\r\n  hsvSat();\r\n  hsvVal();  \r\n  //hslSaturation();  \r\n  //hslLumen();\r\n  //hsvSaturation();\r\n  //hsvBrighten();  \r\n}\r\n\r\nwindow.onload = function() {\r\n    var x = document.createElement(\"input\");\r\n    x.setAttribute(\"type\", \"color\");\r\n    if (x.type == \"text\") {\r\n        document.getElementById(\"html5DIV\").style.visibility = \"hidden\";\r\n    }\r\n}\r\n\r\nfunction submitOnEnter(e) {\r\n    keyboardKey = e.which || e.keyCode;\r\n    if (keyboardKey == 13) {\r\n        clickColor(0,-1,-1);\r\n    }\r\n}\r\n//-->\r\n</script> \n<h1>HTML <span class=\"color_h1\">拾色器</span></h1> \n<table class=\"reference\" style=\"text-align: center;\"> \n <tbody>\n  <tr> \n   <td width=\"33%\"> <h3>选取颜色:</h3> \n    <div style=\"margin:auto;width:236px;\"> \n     <img style=\"margin-right:2px;\" src=\"http://www.runoob.com/wp-content/uploads/2016/02/img_colormap.gif\" usemap=\"#colormap\" alt=\"colormap\" />\n     <map id=\"colormap\" name=\"colormap\" onmouseout=\"mouseOutMap()\"><area style=\"cursor:pointer\" shape=\"poly\" coords=\"63,0,72,4,72,15,63,19,54,15,54,4\" onclick=\"clickColor(&quot;#003366&quot;,-200,54)\" onmouseover=\"mouseOverColor(&quot;#003366&quot;)\" alt=\"#003366\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"81,0,90,4,90,15,81,19,72,15,72,4\" onclick=\"clickColor(&quot;#336699&quot;,-200,72)\" onmouseover=\"mouseOverColor(&quot;#336699&quot;)\" alt=\"#336699\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"99,0,108,4,108,15,99,19,90,15,90,4\" onclick=\"clickColor(&quot;#3366CC&quot;,-200,90)\" onmouseover=\"mouseOverColor(&quot;#3366CC&quot;)\" alt=\"#3366CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"117,0,126,4,126,15,117,19,108,15,108,4\" onclick=\"clickColor(&quot;#003399&quot;,-200,108)\" onmouseover=\"mouseOverColor(&quot;#003399&quot;)\" alt=\"#003399\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"135,0,144,4,144,15,135,19,126,15,126,4\" onclick=\"clickColor(&quot;#000099&quot;,-200,126)\" onmouseover=\"mouseOverColor(&quot;#000099&quot;)\" alt=\"#000099\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"153,0,162,4,162,15,153,19,144,15,144,4\" onclick=\"clickColor(&quot;#0000CC&quot;,-200,144)\" onmouseover=\"mouseOverColor(&quot;#0000CC&quot;)\" alt=\"#0000CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"171,0,180,4,180,15,171,19,162,15,162,4\" onclick=\"clickColor(&quot;#000066&quot;,-200,162)\" onmouseover=\"mouseOverColor(&quot;#000066&quot;)\" alt=\"#000066\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"54,15,63,19,63,30,54,34,45,30,45,19\" onclick=\"clickColor(&quot;#006666&quot;,-185,45)\" onmouseover=\"mouseOverColor(&quot;#006666&quot;)\" alt=\"#006666\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"72,15,81,19,81,30,72,34,63,30,63,19\" onclick=\"clickColor(&quot;#006699&quot;,-185,63)\" onmouseover=\"mouseOverColor(&quot;#006699&quot;)\" alt=\"#006699\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"90,15,99,19,99,30,90,34,81,30,81,19\" onclick=\"clickColor(&quot;#0099CC&quot;,-185,81)\" onmouseover=\"mouseOverColor(&quot;#0099CC&quot;)\" alt=\"#0099CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"108,15,117,19,117,30,108,34,99,30,99,19\" onclick=\"clickColor(&quot;#0066CC&quot;,-185,99)\" onmouseover=\"mouseOverColor(&quot;#0066CC&quot;)\" alt=\"#0066CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"126,15,135,19,135,30,126,34,117,30,117,19\" onclick=\"clickColor(&quot;#0033CC&quot;,-185,117)\" onmouseover=\"mouseOverColor(&quot;#0033CC&quot;)\" alt=\"#0033CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"144,15,153,19,153,30,144,34,135,30,135,19\" onclick=\"clickColor(&quot;#0000FF&quot;,-185,135)\" onmouseover=\"mouseOverColor(&quot;#0000FF&quot;)\" alt=\"#0000FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"162,15,171,19,171,30,162,34,153,30,153,19\" onclick=\"clickColor(&quot;#3333FF&quot;,-185,153)\" onmouseover=\"mouseOverColor(&quot;#3333FF&quot;)\" alt=\"#3333FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"180,15,189,19,189,30,180,34,171,30,171,19\" onclick=\"clickColor(&quot;#333399&quot;,-185,171)\" onmouseover=\"mouseOverColor(&quot;#333399&quot;)\" alt=\"#333399\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"45,30,54,34,54,45,45,49,36,45,36,34\" onclick=\"clickColor(&quot;#669999&quot;,-170,36)\" onmouseover=\"mouseOverColor(&quot;#669999&quot;)\" alt=\"#669999\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"63,30,72,34,72,45,63,49,54,45,54,34\" onclick=\"clickColor(&quot;#009999&quot;,-170,54)\" onmouseover=\"mouseOverColor(&quot;#009999&quot;)\" alt=\"#009999\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"81,30,90,34,90,45,81,49,72,45,72,34\" onclick=\"clickColor(&quot;#33CCCC&quot;,-170,72)\" onmouseover=\"mouseOverColor(&quot;#33CCCC&quot;)\" alt=\"#33CCCC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"99,30,108,34,108,45,99,49,90,45,90,34\" onclick=\"clickColor(&quot;#00CCFF&quot;,-170,90)\" onmouseover=\"mouseOverColor(&quot;#00CCFF&quot;)\" alt=\"#00CCFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"117,30,126,34,126,45,117,49,108,45,108,34\" onclick=\"clickColor(&quot;#0099FF&quot;,-170,108)\" onmouseover=\"mouseOverColor(&quot;#0099FF&quot;)\" alt=\"#0099FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"135,30,144,34,144,45,135,49,126,45,126,34\" onclick=\"clickColor(&quot;#0066FF&quot;,-170,126)\" onmouseover=\"mouseOverColor(&quot;#0066FF&quot;)\" alt=\"#0066FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"153,30,162,34,162,45,153,49,144,45,144,34\" onclick=\"clickColor(&quot;#3366FF&quot;,-170,144)\" onmouseover=\"mouseOverColor(&quot;#3366FF&quot;)\" alt=\"#3366FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"171,30,180,34,180,45,171,49,162,45,162,34\" onclick=\"clickColor(&quot;#3333CC&quot;,-170,162)\" onmouseover=\"mouseOverColor(&quot;#3333CC&quot;)\" alt=\"#3333CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"189,30,198,34,198,45,189,49,180,45,180,34\" onclick=\"clickColor(&quot;#666699&quot;,-170,180)\" onmouseover=\"mouseOverColor(&quot;#666699&quot;)\" alt=\"#666699\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"36,45,45,49,45,60,36,64,27,60,27,49\" onclick=\"clickColor(&quot;#339966&quot;,-155,27)\" onmouseover=\"mouseOverColor(&quot;#339966&quot;)\" alt=\"#339966\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"54,45,63,49,63,60,54,64,45,60,45,49\" onclick=\"clickColor(&quot;#00CC99&quot;,-155,45)\" onmouseover=\"mouseOverColor(&quot;#00CC99&quot;)\" alt=\"#00CC99\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"72,45,81,49,81,60,72,64,63,60,63,49\" onclick=\"clickColor(&quot;#00FFCC&quot;,-155,63)\" onmouseover=\"mouseOverColor(&quot;#00FFCC&quot;)\" alt=\"#00FFCC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"90,45,99,49,99,60,90,64,81,60,81,49\" onclick=\"clickColor(&quot;#00FFFF&quot;,-155,81)\" onmouseover=\"mouseOverColor(&quot;#00FFFF&quot;)\" alt=\"#00FFFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"108,45,117,49,117,60,108,64,99,60,99,49\" onclick=\"clickColor(&quot;#33CCFF&quot;,-155,99)\" onmouseover=\"mouseOverColor(&quot;#33CCFF&quot;)\" alt=\"#33CCFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"126,45,135,49,135,60,126,64,117,60,117,49\" onclick=\"clickColor(&quot;#3399FF&quot;,-155,117)\" onmouseover=\"mouseOverColor(&quot;#3399FF&quot;)\" alt=\"#3399FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"144,45,153,49,153,60,144,64,135,60,135,49\" onclick=\"clickColor(&quot;#6699FF&quot;,-155,135)\" onmouseover=\"mouseOverColor(&quot;#6699FF&quot;)\" alt=\"#6699FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"162,45,171,49,171,60,162,64,153,60,153,49\" onclick=\"clickColor(&quot;#6666FF&quot;,-155,153)\" onmouseover=\"mouseOverColor(&quot;#6666FF&quot;)\" alt=\"#6666FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"180,45,189,49,189,60,180,64,171,60,171,49\" onclick=\"clickColor(&quot;#6600FF&quot;,-155,171)\" onmouseover=\"mouseOverColor(&quot;#6600FF&quot;)\" alt=\"#6600FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"198,45,207,49,207,60,198,64,189,60,189,49\" onclick=\"clickColor(&quot;#6600CC&quot;,-155,189)\" onmouseover=\"mouseOverColor(&quot;#6600CC&quot;)\" alt=\"#6600CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"27,60,36,64,36,75,27,79,18,75,18,64\" onclick=\"clickColor(&quot;#339933&quot;,-140,18)\" onmouseover=\"mouseOverColor(&quot;#339933&quot;)\" alt=\"#339933\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"45,60,54,64,54,75,45,79,36,75,36,64\" onclick=\"clickColor(&quot;#00CC66&quot;,-140,36)\" onmouseover=\"mouseOverColor(&quot;#00CC66&quot;)\" alt=\"#00CC66\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"63,60,72,64,72,75,63,79,54,75,54,64\" onclick=\"clickColor(&quot;#00FF99&quot;,-140,54)\" onmouseover=\"mouseOverColor(&quot;#00FF99&quot;)\" alt=\"#00FF99\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"81,60,90,64,90,75,81,79,72,75,72,64\" onclick=\"clickColor(&quot;#66FFCC&quot;,-140,72)\" onmouseover=\"mouseOverColor(&quot;#66FFCC&quot;)\" alt=\"#66FFCC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"99,60,108,64,108,75,99,79,90,75,90,64\" onclick=\"clickColor(&quot;#66FFFF&quot;,-140,90)\" onmouseover=\"mouseOverColor(&quot;#66FFFF&quot;)\" alt=\"#66FFFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"117,60,126,64,126,75,117,79,108,75,108,64\" onclick=\"clickColor(&quot;#66CCFF&quot;,-140,108)\" onmouseover=\"mouseOverColor(&quot;#66CCFF&quot;)\" alt=\"#66CCFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"135,60,144,64,144,75,135,79,126,75,126,64\" onclick=\"clickColor(&quot;#99CCFF&quot;,-140,126)\" onmouseover=\"mouseOverColor(&quot;#99CCFF&quot;)\" alt=\"#99CCFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"153,60,162,64,162,75,153,79,144,75,144,64\" onclick=\"clickColor(&quot;#9999FF&quot;,-140,144)\" onmouseover=\"mouseOverColor(&quot;#9999FF&quot;)\" alt=\"#9999FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"171,60,180,64,180,75,171,79,162,75,162,64\" onclick=\"clickColor(&quot;#9966FF&quot;,-140,162)\" onmouseover=\"mouseOverColor(&quot;#9966FF&quot;)\" alt=\"#9966FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"189,60,198,64,198,75,189,79,180,75,180,64\" onclick=\"clickColor(&quot;#9933FF&quot;,-140,180)\" onmouseover=\"mouseOverColor(&quot;#9933FF&quot;)\" alt=\"#9933FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"207,60,216,64,216,75,207,79,198,75,198,64\" onclick=\"clickColor(&quot;#9900FF&quot;,-140,198)\" onmouseover=\"mouseOverColor(&quot;#9900FF&quot;)\" alt=\"#9900FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"18,75,27,79,27,90,18,94,9,90,9,79\" onclick=\"clickColor(&quot;#006600&quot;,-125,9)\" onmouseover=\"mouseOverColor(&quot;#006600&quot;)\" alt=\"#006600\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"36,75,45,79,45,90,36,94,27,90,27,79\" onclick=\"clickColor(&quot;#00CC00&quot;,-125,27)\" onmouseover=\"mouseOverColor(&quot;#00CC00&quot;)\" alt=\"#00CC00\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"54,75,63,79,63,90,54,94,45,90,45,79\" onclick=\"clickColor(&quot;#00FF00&quot;,-125,45)\" onmouseover=\"mouseOverColor(&quot;#00FF00&quot;)\" alt=\"#00FF00\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"72,75,81,79,81,90,72,94,63,90,63,79\" onclick=\"clickColor(&quot;#66FF99&quot;,-125,63)\" onmouseover=\"mouseOverColor(&quot;#66FF99&quot;)\" alt=\"#66FF99\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"90,75,99,79,99,90,90,94,81,90,81,79\" onclick=\"clickColor(&quot;#99FFCC&quot;,-125,81)\" onmouseover=\"mouseOverColor(&quot;#99FFCC&quot;)\" alt=\"#99FFCC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"108,75,117,79,117,90,108,94,99,90,99,79\" onclick=\"clickColor(&quot;#CCFFFF&quot;,-125,99)\" onmouseover=\"mouseOverColor(&quot;#CCFFFF&quot;)\" alt=\"#CCFFFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"126,75,135,79,135,90,126,94,117,90,117,79\" onclick=\"clickColor(&quot;#CCCCFF&quot;,-125,117)\" onmouseover=\"mouseOverColor(&quot;#CCCCFF&quot;)\" alt=\"#CCCCFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"144,75,153,79,153,90,144,94,135,90,135,79\" onclick=\"clickColor(&quot;#CC99FF&quot;,-125,135)\" onmouseover=\"mouseOverColor(&quot;#CC99FF&quot;)\" alt=\"#CC99FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"162,75,171,79,171,90,162,94,153,90,153,79\" onclick=\"clickColor(&quot;#CC66FF&quot;,-125,153)\" onmouseover=\"mouseOverColor(&quot;#CC66FF&quot;)\" alt=\"#CC66FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"180,75,189,79,189,90,180,94,171,90,171,79\" onclick=\"clickColor(&quot;#CC33FF&quot;,-125,171)\" onmouseover=\"mouseOverColor(&quot;#CC33FF&quot;)\" alt=\"#CC33FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"198,75,207,79,207,90,198,94,189,90,189,79\" onclick=\"clickColor(&quot;#CC00FF&quot;,-125,189)\" onmouseover=\"mouseOverColor(&quot;#CC00FF&quot;)\" alt=\"#CC00FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"216,75,225,79,225,90,216,94,207,90,207,79\" onclick=\"clickColor(&quot;#9900CC&quot;,-125,207)\" onmouseover=\"mouseOverColor(&quot;#9900CC&quot;)\" alt=\"#9900CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"9,90,18,94,18,105,9,109,0,105,0,94\" onclick=\"clickColor(&quot;#003300&quot;,-110,0)\" onmouseover=\"mouseOverColor(&quot;#003300&quot;)\" alt=\"#003300\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"27,90,36,94,36,105,27,109,18,105,18,94\" onclick=\"clickColor(&quot;#009933&quot;,-110,18)\" onmouseover=\"mouseOverColor(&quot;#009933&quot;)\" alt=\"#009933\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"45,90,54,94,54,105,45,109,36,105,36,94\" onclick=\"clickColor(&quot;#33CC33&quot;,-110,36)\" onmouseover=\"mouseOverColor(&quot;#33CC33&quot;)\" alt=\"#33CC33\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"63,90,72,94,72,105,63,109,54,105,54,94\" onclick=\"clickColor(&quot;#66FF66&quot;,-110,54)\" onmouseover=\"mouseOverColor(&quot;#66FF66&quot;)\" alt=\"#66FF66\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"81,90,90,94,90,105,81,109,72,105,72,94\" onclick=\"clickColor(&quot;#99FF99&quot;,-110,72)\" onmouseover=\"mouseOverColor(&quot;#99FF99&quot;)\" alt=\"#99FF99\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"99,90,108,94,108,105,99,109,90,105,90,94\" onclick=\"clickColor(&quot;#CCFFCC&quot;,-110,90)\" onmouseover=\"mouseOverColor(&quot;#CCFFCC&quot;)\" alt=\"#CCFFCC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"117,90,126,94,126,105,117,109,108,105,108,94\" onclick=\"clickColor(&quot;#FFFFFF&quot;,-110,108)\" onmouseover=\"mouseOverColor(&quot;#FFFFFF&quot;)\" alt=\"#FFFFFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"135,90,144,94,144,105,135,109,126,105,126,94\" onclick=\"clickColor(&quot;#FFCCFF&quot;,-110,126)\" onmouseover=\"mouseOverColor(&quot;#FFCCFF&quot;)\" alt=\"#FFCCFF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"153,90,162,94,162,105,153,109,144,105,144,94\" onclick=\"clickColor(&quot;#FF99FF&quot;,-110,144)\" onmouseover=\"mouseOverColor(&quot;#FF99FF&quot;)\" alt=\"#FF99FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"171,90,180,94,180,105,171,109,162,105,162,94\" onclick=\"clickColor(&quot;#FF66FF&quot;,-110,162)\" onmouseover=\"mouseOverColor(&quot;#FF66FF&quot;)\" alt=\"#FF66FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"189,90,198,94,198,105,189,109,180,105,180,94\" onclick=\"clickColor(&quot;#FF00FF&quot;,-110,180)\" onmouseover=\"mouseOverColor(&quot;#FF00FF&quot;)\" alt=\"#FF00FF\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"207,90,216,94,216,105,207,109,198,105,198,94\" onclick=\"clickColor(&quot;#CC00CC&quot;,-110,198)\" onmouseover=\"mouseOverColor(&quot;#CC00CC&quot;)\" alt=\"#CC00CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"225,90,234,94,234,105,225,109,216,105,216,94\" onclick=\"clickColor(&quot;#660066&quot;,-110,216)\" onmouseover=\"mouseOverColor(&quot;#660066&quot;)\" alt=\"#660066\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"18,105,27,109,27,120,18,124,9,120,9,109\" onclick=\"clickColor(&quot;#336600&quot;,-95,9)\" onmouseover=\"mouseOverColor(&quot;#336600&quot;)\" alt=\"#336600\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"36,105,45,109,45,120,36,124,27,120,27,109\" onclick=\"clickColor(&quot;#009900&quot;,-95,27)\" onmouseover=\"mouseOverColor(&quot;#009900&quot;)\" alt=\"#009900\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"54,105,63,109,63,120,54,124,45,120,45,109\" onclick=\"clickColor(&quot;#66FF33&quot;,-95,45)\" onmouseover=\"mouseOverColor(&quot;#66FF33&quot;)\" alt=\"#66FF33\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"72,105,81,109,81,120,72,124,63,120,63,109\" onclick=\"clickColor(&quot;#99FF66&quot;,-95,63)\" onmouseover=\"mouseOverColor(&quot;#99FF66&quot;)\" alt=\"#99FF66\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"90,105,99,109,99,120,90,124,81,120,81,109\" onclick=\"clickColor(&quot;#CCFF99&quot;,-95,81)\" onmouseover=\"mouseOverColor(&quot;#CCFF99&quot;)\" alt=\"#CCFF99\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"108,105,117,109,117,120,108,124,99,120,99,109\" onclick=\"clickColor(&quot;#FFFFCC&quot;,-95,99)\" onmouseover=\"mouseOverColor(&quot;#FFFFCC&quot;)\" alt=\"#FFFFCC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"126,105,135,109,135,120,126,124,117,120,117,109\" onclick=\"clickColor(&quot;#FFCCCC&quot;,-95,117)\" onmouseover=\"mouseOverColor(&quot;#FFCCCC&quot;)\" alt=\"#FFCCCC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"144,105,153,109,153,120,144,124,135,120,135,109\" onclick=\"clickColor(&quot;#FF99CC&quot;,-95,135)\" onmouseover=\"mouseOverColor(&quot;#FF99CC&quot;)\" alt=\"#FF99CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"162,105,171,109,171,120,162,124,153,120,153,109\" onclick=\"clickColor(&quot;#FF66CC&quot;,-95,153)\" onmouseover=\"mouseOverColor(&quot;#FF66CC&quot;)\" alt=\"#FF66CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"180,105,189,109,189,120,180,124,171,120,171,109\" onclick=\"clickColor(&quot;#FF33CC&quot;,-95,171)\" onmouseover=\"mouseOverColor(&quot;#FF33CC&quot;)\" alt=\"#FF33CC\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"198,105,207,109,207,120,198,124,189,120,189,109\" onclick=\"clickColor(&quot;#CC0099&quot;,-95,189)\" onmouseover=\"mouseOverColor(&quot;#CC0099&quot;)\" alt=\"#CC0099\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"216,105,225,109,225,120,216,124,207,120,207,109\" onclick=\"clickColor(&quot;#993399&quot;,-95,207)\" onmouseover=\"mouseOverColor(&quot;#993399&quot;)\" alt=\"#993399\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"27,120,36,124,36,135,27,139,18,135,18,124\" onclick=\"clickColor(&quot;#333300&quot;,-80,18)\" onmouseover=\"mouseOverColor(&quot;#333300&quot;)\" alt=\"#333300\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"45,120,54,124,54,135,45,139,36,135,36,124\" onclick=\"clickColor(&quot;#669900&quot;,-80,36)\" onmouseover=\"mouseOverColor(&quot;#669900&quot;)\" alt=\"#669900\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"63,120,72,124,72,135,63,139,54,135,54,124\" onclick=\"clickColor(&quot;#99FF33&quot;,-80,54)\" onmouseover=\"mouseOverColor(&quot;#99FF33&quot;)\" alt=\"#99FF33\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"81,120,90,124,90,135,81,139,72,135,72,124\" onclick=\"clickColor(&quot;#CCFF66&quot;,-80,72)\" onmouseover=\"mouseOverColor(&quot;#CCFF66&quot;)\" alt=\"#CCFF66\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"99,120,108,124,108,135,99,139,90,135,90,124\" onclick=\"clickColor(&quot;#FFFF99&quot;,-80,90)\" onmouseover=\"mouseOverColor(&quot;#FFFF99&quot;)\" alt=\"#FFFF99\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"117,120,126,124,126,135,117,139,108,135,108,124\" onclick=\"clickColor(&quot;#FFCC99&quot;,-80,108)\" onmouseover=\"mouseOverColor(&quot;#FFCC99&quot;)\" alt=\"#FFCC99\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"135,120,144,124,144,135,135,139,126,135,126,124\" onclick=\"clickColor(&quot;#FF9999&quot;,-80,126)\" onmouseover=\"mouseOverColor(&quot;#FF9999&quot;)\" alt=\"#FF9999\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"153,120,162,124,162,135,153,139,144,135,144,124\" onclick=\"clickColor(&quot;#FF6699&quot;,-80,144)\" onmouseover=\"mouseOverColor(&quot;#FF6699&quot;)\" alt=\"#FF6699\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"171,120,180,124,180,135,171,139,162,135,162,124\" onclick=\"clickColor(&quot;#FF3399&quot;,-80,162)\" onmouseover=\"mouseOverColor(&quot;#FF3399&quot;)\" alt=\"#FF3399\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"189,120,198,124,198,135,189,139,180,135,180,124\" onclick=\"clickColor(&quot;#CC3399&quot;,-80,180)\" onmouseover=\"mouseOverColor(&quot;#CC3399&quot;)\" alt=\"#CC3399\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"207,120,216,124,216,135,207,139,198,135,198,124\" onclick=\"clickColor(&quot;#990099&quot;,-80,198)\" onmouseover=\"mouseOverColor(&quot;#990099&quot;)\" alt=\"#990099\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"36,135,45,139,45,150,36,154,27,150,27,139\" onclick=\"clickColor(&quot;#666633&quot;,-65,27)\" onmouseover=\"mouseOverColor(&quot;#666633&quot;)\" alt=\"#666633\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"54,135,63,139,63,150,54,154,45,150,45,139\" onclick=\"clickColor(&quot;#99CC00&quot;,-65,45)\" onmouseover=\"mouseOverColor(&quot;#99CC00&quot;)\" alt=\"#99CC00\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"72,135,81,139,81,150,72,154,63,150,63,139\" onclick=\"clickColor(&quot;#CCFF33&quot;,-65,63)\" onmouseover=\"mouseOverColor(&quot;#CCFF33&quot;)\" alt=\"#CCFF33\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"90,135,99,139,99,150,90,154,81,150,81,139\" onclick=\"clickColor(&quot;#FFFF66&quot;,-65,81)\" onmouseover=\"mouseOverColor(&quot;#FFFF66&quot;)\" alt=\"#FFFF66\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"108,135,117,139,117,150,108,154,99,150,99,139\" onclick=\"clickColor(&quot;#FFCC66&quot;,-65,99)\" onmouseover=\"mouseOverColor(&quot;#FFCC66&quot;)\" alt=\"#FFCC66\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"126,135,135,139,135,150,126,154,117,150,117,139\" onclick=\"clickColor(&quot;#FF9966&quot;,-65,117)\" onmouseover=\"mouseOverColor(&quot;#FF9966&quot;)\" alt=\"#FF9966\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"144,135,153,139,153,150,144,154,135,150,135,139\" onclick=\"clickColor(&quot;#FF6666&quot;,-65,135)\" onmouseover=\"mouseOverColor(&quot;#FF6666&quot;)\" alt=\"#FF6666\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"162,135,171,139,171,150,162,154,153,150,153,139\" onclick=\"clickColor(&quot;#FF0066&quot;,-65,153)\" onmouseover=\"mouseOverColor(&quot;#FF0066&quot;)\" alt=\"#FF0066\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"180,135,189,139,189,150,180,154,171,150,171,139\" onclick=\"clickColor(&quot;#CC6699&quot;,-65,171)\" onmouseover=\"mouseOverColor(&quot;#CC6699&quot;)\" alt=\"#CC6699\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"198,135,207,139,207,150,198,154,189,150,189,139\" onclick=\"clickColor(&quot;#993366&quot;,-65,189)\" onmouseover=\"mouseOverColor(&quot;#993366&quot;)\" alt=\"#993366\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"45,150,54,154,54,165,45,169,36,165,36,154\" onclick=\"clickColor(&quot;#999966&quot;,-50,36)\" onmouseover=\"mouseOverColor(&quot;#999966&quot;)\" alt=\"#999966\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"63,150,72,154,72,165,63,169,54,165,54,154\" onclick=\"clickColor(&quot;#CCCC00&quot;,-50,54)\" onmouseover=\"mouseOverColor(&quot;#CCCC00&quot;)\" alt=\"#CCCC00\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"81,150,90,154,90,165,81,169,72,165,72,154\" onclick=\"clickColor(&quot;#FFFF00&quot;,-50,72)\" onmouseover=\"mouseOverColor(&quot;#FFFF00&quot;)\" alt=\"#FFFF00\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"99,150,108,154,108,165,99,169,90,165,90,154\" onclick=\"clickColor(&quot;#FFCC00&quot;,-50,90)\" onmouseover=\"mouseOverColor(&quot;#FFCC00&quot;)\" alt=\"#FFCC00\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"117,150,126,154,126,165,117,169,108,165,108,154\" onclick=\"clickColor(&quot;#FF9933&quot;,-50,108)\" onmouseover=\"mouseOverColor(&quot;#FF9933&quot;)\" alt=\"#FF9933\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"135,150,144,154,144,165,135,169,126,165,126,154\" onclick=\"clickColor(&quot;#FF6600&quot;,-50,126)\" onmouseover=\"mouseOverColor(&quot;#FF6600&quot;)\" alt=\"#FF6600\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"153,150,162,154,162,165,153,169,144,165,144,154\" onclick=\"clickColor(&quot;#FF5050&quot;,-50,144)\" onmouseover=\"mouseOverColor(&quot;#FF5050&quot;)\" alt=\"#FF5050\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"171,150,180,154,180,165,171,169,162,165,162,154\" onclick=\"clickColor(&quot;#CC0066&quot;,-50,162)\" onmouseover=\"mouseOverColor(&quot;#CC0066&quot;)\" alt=\"#CC0066\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"189,150,198,154,198,165,189,169,180,165,180,154\" onclick=\"clickColor(&quot;#660033&quot;,-50,180)\" onmouseover=\"mouseOverColor(&quot;#660033&quot;)\" alt=\"#660033\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"54,165,63,169,63,180,54,184,45,180,45,169\" onclick=\"clickColor(&quot;#996633&quot;,-35,45)\" onmouseover=\"mouseOverColor(&quot;#996633&quot;)\" alt=\"#996633\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"72,165,81,169,81,180,72,184,63,180,63,169\" onclick=\"clickColor(&quot;#CC9900&quot;,-35,63)\" onmouseover=\"mouseOverColor(&quot;#CC9900&quot;)\" alt=\"#CC9900\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"90,165,99,169,99,180,90,184,81,180,81,169\" onclick=\"clickColor(&quot;#FF9900&quot;,-35,81)\" onmouseover=\"mouseOverColor(&quot;#FF9900&quot;)\" alt=\"#FF9900\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"108,165,117,169,117,180,108,184,99,180,99,169\" onclick=\"clickColor(&quot;#CC6600&quot;,-35,99)\" onmouseover=\"mouseOverColor(&quot;#CC6600&quot;)\" alt=\"#CC6600\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"126,165,135,169,135,180,126,184,117,180,117,169\" onclick=\"clickColor(&quot;#FF3300&quot;,-35,117)\" onmouseover=\"mouseOverColor(&quot;#FF3300&quot;)\" alt=\"#FF3300\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"144,165,153,169,153,180,144,184,135,180,135,169\" onclick=\"clickColor(&quot;#FF0000&quot;,-35,135)\" onmouseover=\"mouseOverColor(&quot;#FF0000&quot;)\" alt=\"#FF0000\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"162,165,171,169,171,180,162,184,153,180,153,169\" onclick=\"clickColor(&quot;#CC0000&quot;,-35,153)\" onmouseover=\"mouseOverColor(&quot;#CC0000&quot;)\" alt=\"#CC0000\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"180,165,189,169,189,180,180,184,171,180,171,169\" onclick=\"clickColor(&quot;#990033&quot;,-35,171)\" onmouseover=\"mouseOverColor(&quot;#990033&quot;)\" alt=\"#990033\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"63,180,72,184,72,195,63,199,54,195,54,184\" onclick=\"clickColor(&quot;#663300&quot;,-20,54)\" onmouseover=\"mouseOverColor(&quot;#663300&quot;)\" alt=\"#663300\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"81,180,90,184,90,195,81,199,72,195,72,184\" onclick=\"clickColor(&quot;#996600&quot;,-20,72)\" onmouseover=\"mouseOverColor(&quot;#996600&quot;)\" alt=\"#996600\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"99,180,108,184,108,195,99,199,90,195,90,184\" onclick=\"clickColor(&quot;#CC3300&quot;,-20,90)\" onmouseover=\"mouseOverColor(&quot;#CC3300&quot;)\" alt=\"#CC3300\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"117,180,126,184,126,195,117,199,108,195,108,184\" onclick=\"clickColor(&quot;#993300&quot;,-20,108)\" onmouseover=\"mouseOverColor(&quot;#993300&quot;)\" alt=\"#993300\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"135,180,144,184,144,195,135,199,126,195,126,184\" onclick=\"clickColor(&quot;#990000&quot;,-20,126)\" onmouseover=\"mouseOverColor(&quot;#990000&quot;)\" alt=\"#990000\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"153,180,162,184,162,195,153,199,144,195,144,184\" onclick=\"clickColor(&quot;#800000&quot;,-20,144)\" onmouseover=\"mouseOverColor(&quot;#800000&quot;)\" alt=\"#800000\"></area><area style=\"cursor:pointer\" shape=\"poly\" coords=\"171,180,180,184,180,195,171,199,162,195,162,184\" onclick=\"clickColor(&quot;#993333&quot;,-20,162)\" onmouseover=\"mouseOverColor(&quot;#993333&quot;)\" alt=\"#993333\"></area></map> \n     <script>\r\nvar thistop = \"\";\r\nvar thisleft = \"\";	\r\n</script> \n     <div id=\"selectedhexagon\" style=\"visibility:hidden;position:relative;width:21px;height:21px;background-image:url(&quot;http://www.runoob.com/wp-content/uploads/2016/02/img_selectedcolor.gif&quot;)\"></div> \n     <div id=\"divpreview\">\n      &nbsp;\n     </div> \n     <h3>或输入颜色值:</h3> \n     <div id=\"entercolorDIV\"> \n      <input type=\"text\" id=\"entercolor\" placeholder=\"颜色值\" onkeydown=\"submitOnEnter(event)\" onfocus=\"clearWrongInput();\" style=\"z-index:0;\" />\n      <button type=\"button\" onclick=\"clickColor(0,-1,-1)\" style=\"z-index:0;\">OK</button> \n     </div> \n     <div id=\"wronginputDIV\">\n      Wrong Input\n     </div> \n     <br /> \n     <div id=\"html5DIV\"> \n      <h3>或使用 HTML5:</h3> \n      <input type=\"color\" id=\"html5colorpicker\" onchange=\"clickColor(0, -1, -1, 5)\" value=\"#ff0000\" style=\"width:85%;\" /> \n     </div> \n     <br /> \n     <br /> \n    </div> </td> \n   <td width=\"33%\"><h3>选择的颜色:</h3> \n    <div id=\"selectedcolor\" style=\"font-size: 18px !important;\"> \n     <br />\n     <br /> \n     <span style=\"color: #000 !important;\">黑色文本</span>\n     <br />\n     <br /> \n     <span style=\"color: #000 !important;text-shadow: 1px 1px 0 #444;\">阴影</span>\n     <br />\n     <br /> \n     <span style=\"color: #fff !important;\">白色文本</span>\n     <br />\n     <br /> \n     <span style=\"color: #fff !important;text-shadow: 1px 1px 0 #444;\">阴影</span> \n    </div> \n    <div id=\"colornamDIV\" style=\"margin-top: 16px !important;\"></div> \n    <div>\n     <b><span id=\"colorhexDIV\"></span></b>\n    </div> \n    <div id=\"colorrgbDIV\"></div> \n    <div id=\"colorhslDIV\"></div> \n    <div id=\"colorhsvDIV\"></div> </td> \n   <td>\n    <div id=\"lumtopcontainer\"></div> </td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<div id=\"huecontainer\"></div> \n<hr /> \n<div id=\"hslsatcontainer\"></div> \n<hr /> \n<div id=\"hsllumcontainer\"></div> \n<hr /> \n<div id=\"hsvsatcontainer\"></div> \n<hr /> \n<div id=\"hsvvalcontainer\"></div> \n<hr /> \n<hr /> \n<h2>RGB (Red, Green, Blue)</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>Red</th> \n   <th>Green</th> \n   <th>Blue</th> \n  </tr> \n  <tr> \n   <td id=\"valRed\"></td> \n   <td id=\"valGreen\"></td> \n   <td id=\"valBlue\"></td> \n  </tr> \n  <tr> \n   <td id=\"red\" style=\"height:50px;background-color:red\"></td> \n   <td id=\"green\" style=\"background-color:green\"></td> \n   <td id=\"blue\" style=\"background-color:blue\"></td> \n  </tr> \n  <tr> \n   <td> <input onchange=\"changeRed(this.value)\" type=\"range\" id=\"slideRed\" name=\"slideRed\" min=\"0\" max=\"255\" /> </td> \n   <td> <input onchange=\"changeGreen(this.value)\" type=\"range\" id=\"slideGreen\" name=\"slideGreen\" min=\"0\" max=\"255\" /> </td> \n   <td> <input onchange=\"changeBlue(this.value)\" type=\"range\" id=\"slideBlue\" name=\"slideBlue\" min=\"0\" max=\"255\" /> </td> \n  </tr> \n </tbody>\n</table> \n<div id=\"change\" style=\"height:50px\"></div> \n<div id=\"fixed\" style=\"height:50px\"></div> \n<div style=\"text-align: center !important;\"> \n <span id=\"changetxt\"></span>&nbsp;&nbsp;\n <span id=\"changetxthex\"></span> \n</div> \n<script>\r\nif (\"FF0000\" == \"FF0000\") {\r\n    clickColor(\"FF0000\", -35, 135);\r\n} else {\r\n    clickColor(\"FF0000\", -1, -1);\r\n}\r\nif (thistop != \"\") {\r\n    document.getElementById(\"selectedhexagon\").style.top = thistop + \"px\";\r\n    document.getElementById(\"selectedhexagon\").style.left = thisleft + \"px\";\r\n    document.getElementById(\"selectedhexagon\").style.visibility = \"visible\";\r\n}\r\n</script>', null, 'HTML 拾色器|RGB (Red, Green, Blue)|');
INSERT INTO `schoolcontent` VALUES ('63', '65', '<h1>HTML <span class=\"color_h1\">字符集</span> </h1> \n<hr /> \n<p class=\"intro\">要正确显示一个 HTML 页面，浏览器必须知道要使用的字符集（字符编码）。</p> \n<hr /> \n<h2>HTML 字符集</h2> \n<p>在 HTML 中，正确的字符编码是什么？</p> \n<p><strong>HTML5 中默认的字符编码是 UTF-8。</strong></p> \n<p>这并非总是如此。早期网络的字符编码是 ASCII 码。</p> \n<p>后来，从 HTML 2.0 到 HTML 4.01，ISO-8859-1 被认定为标准。</p> \n<p>随着 XML 和 HTML5 的出现，UTF-8 也终于到来了，解决了大量的字符编码问题。</p> \n<p>下面是关于字符编码标准的简短概述。</p> \n<hr /> \n<h2>在开始的时候：ASCII</h2> \n<p>计算机信息（数字、文字、图片）在电子中是以二进制 1 和 0（01000101）进行存储的。</p> \n<p>为了规范字母数字字符的存储，创建了 ASCII（全称 American Standard Code for Information Interchange）。它为每个存储字符定义了一个独特的二元 7 位数字，支持 0-9 数字，大/小写英文字母（a-z、A-Z）和一些特殊的字符，比如 ! $ + - ( ) @ &lt; &gt; 。</p> \n<p>由于 ASCII 使用一个字节（7 位表示字符，1 位表示传输奇偶控制），所以它只能表示 128 个不同的字符。这些字符中有 32 个被保留作为其他控制目的使用。</p> \n<p>ASCII 的最大的缺点是，它排除了非英文字母。</p> \n<p>ASCII 今天仍然在广泛使用，尤其是在大型计算机系统中。</p> \n<p>如需深入了解 ASCII，请查看<a href=\"ref-html-ascii.html\">完整的 ASCII 参考手册</a>。</p> \n<hr /> \n<h2>在 Windows 中：ANSI</h2> \n<p>ANSI（也称为 Windows-1252），是 Windows 95 及其之前的 Windows 系统中默认的字符集。</p> \n<p>ANSI 是 ASCII 的扩展，它加入了国际字符。它使用一个完整的字节（8 位）来表示 256 个不同字符。</p> \n<p>自从 ANSI 成为 Windows 中默认的字符集，所有的浏览器都支持 ANSI。</p> \n<p>如需深入了解 ANSI，请查看<a href=\"ref-html-ansi.html\">完整的 ANSI 参考手册</a>。</p> \n<hr /> \n<h2>在 HTML 4 中：ISO-8859-1</h2> \n<p>由于大多数国家使用 ASCII 以外的字符，在 HTML 2.0 标准中，默认的字符编码更改为 ISO-8859-1。</p> \n<p>ISO-8859-1 是 ASCII 的扩展，它加入了国际字符。与 ANSI 一样，它使用一个完整的字节（8 位）来表示 256 个不同字符。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>当浏览器在网页中检测到 ISO-8859-1 时，通常默认为 ANSI，因为除了 ANSI 有 32 个额外的字符这一点，其他方面 ANSI 基本等同于 ISO-8859-1。</td> \n  </tr>\n </tbody>\n</table> \n<p>如果 HTML 4 网页使用了不同于 ISO-8859-1 的字符集，则需要在 &lt;meta&gt; 标签中指定，如下所示：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=ISO-8859-8&quot;&gt; \n </div> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> <p>HTML5 中默认的字符集是 UTF-8。<br />所有的 HTML 4 处理器都支持 UTF-8，所有的 HTML5 和 XML 处理器都支持 UTF-8 和 UTF-16。</p> </td> \n  </tr>\n </tbody>\n</table> \n<p>如需深入了解 ISO-8859-1，请查看<a href=\"ref-html-8859.html\">完整的 ISO-8859-1 参考手册</a>。</p> \n<hr /> \n<h2>在 HTML5 中：Unicode（UTF-8）</h2> \n<p>由于以上所列的字符集是有限的，在多语言环境中是不兼容的，所以 Unicode 联盟（Unicode Consortium）开发了 Unicode 标准（Unicode Standard）。</p> \n<p>Unicode 标准覆盖了（几乎）所有的字符、标点符号和符号。</p> \n<p>Unicode 使文本的处理、存储和运输，独立于平台和语言。</p> \n<p><strong>HTML5 中默认的字符编码是 UTF-8。</strong></p> \n<p>如需深入了解 Unicode（UTF-8），请查看<a href=\"ref-html-utf8.html\">完整的 Unicode 参考手册</a>。</p> \n<br />', null, 'HTML 字符集|HTML 字符集|在开始的时候：ASCII|在 Windows 中：ANSI|在 HTML 4 中：ISO-8859-1|实例|在 HTML5 中：Unicode（UTF-8）|');
INSERT INTO `schoolcontent` VALUES ('64', '66', '<h1>HTML <span class=\"color_h1\">ASCII</span> 参考手册</h1> \n<hr /> \n<p class=\"intro\">ASCII 字符集被用于因特网上不同计算机间传输信息。</p> \n<hr /> \n<h2>ASCII 字符集</h2> \n<p>ASCII ，它的全称是&quot;美国信息交换标准代码&quot;。它设计于60年代早期，是计算机和诸如打印机、磁带驱动器之类的硬件设备的标准字符集。</p> \n<p>ASCII 是 7 比特字符集，包含了 128 个不同的字符值。</p> \n<p>ASCII 支持 0-9 的数字，A-Z大写和小写英文字母，以及一些特殊字符。</p> \n<p>被广泛使用于现代计算机、HTML和因特网上的字符集都是基于 ASCII 。</p> \n<p>以下表格列举了128个 ASCII 字符以及对应的 HTML 实体编码。</p> \n<hr /> \n<h2>ASCII 可印刷字符</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:10%\">字符集</th> \n   <th style=\"width:10%\">编号</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>32</td> \n   <td>空格</td> \n  </tr> \n  <tr> \n   <td>!</td> \n   <td>33</td> \n   <td>exclamation mark</td> \n  </tr> \n  <tr> \n   <td>&quot;</td> \n   <td>34</td> \n   <td>quotation mark</td> \n  </tr> \n  <tr> \n   <td>#</td> \n   <td>35</td> \n   <td>number sign</td> \n  </tr> \n  <tr> \n   <td>$</td> \n   <td>36</td> \n   <td>dollar sign</td> \n  </tr> \n  <tr> \n   <td>%</td> \n   <td>37</td> \n   <td>percent sign</td> \n  </tr> \n  <tr> \n   <td>&amp;</td> \n   <td>38</td> \n   <td>ampersand</td> \n  </tr> \n  <tr> \n   <td>\'</td> \n   <td>39</td> \n   <td>apostrophe</td> \n  </tr> \n  <tr> \n   <td>(</td> \n   <td>40</td> \n   <td>left parenthesis</td> \n  </tr> \n  <tr> \n   <td>)</td> \n   <td>41</td> \n   <td>right parenthesis</td> \n  </tr> \n  <tr> \n   <td>*</td> \n   <td>42</td> \n   <td>asterisk</td> \n  </tr> \n  <tr> \n   <td>+</td> \n   <td>43</td> \n   <td>plus sign</td> \n  </tr> \n  <tr> \n   <td>,</td> \n   <td>44</td> \n   <td>comma</td> \n  </tr> \n  <tr> \n   <td>-</td> \n   <td>45</td> \n   <td>hyphen</td> \n  </tr> \n  <tr> \n   <td>.</td> \n   <td>46</td> \n   <td>period</td> \n  </tr> \n  <tr> \n   <td>/</td> \n   <td>47</td> \n   <td>slash</td> \n  </tr> \n  <tr> \n   <td>0</td> \n   <td>48</td> \n   <td>digit 0</td> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td>49</td> \n   <td>digit 1</td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td>50</td> \n   <td>digit 2</td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td>51</td> \n   <td>digit 3</td> \n  </tr> \n  <tr> \n   <td>4</td> \n   <td>52</td> \n   <td>digit 4</td> \n  </tr> \n  <tr> \n   <td>5</td> \n   <td>53</td> \n   <td>digit 5</td> \n  </tr> \n  <tr> \n   <td>6</td> \n   <td>54</td> \n   <td>digit 6</td> \n  </tr> \n  <tr> \n   <td>7</td> \n   <td>55</td> \n   <td>digit 7</td> \n  </tr> \n  <tr> \n   <td>8</td> \n   <td>56</td> \n   <td>digit 8</td> \n  </tr> \n  <tr> \n   <td>9</td> \n   <td>57</td> \n   <td>digit 9</td> \n  </tr> \n  <tr> \n   <td>:</td> \n   <td>58</td> \n   <td>colon</td> \n  </tr> \n  <tr> \n   <td></td> \n   <td>59</td> \n   <td>semicolon</td> \n  </tr> \n  <tr> \n   <td>&lt;</td> \n   <td>60</td> \n   <td>less-than</td> \n  </tr> \n  <tr> \n   <td>=</td> \n   <td>61</td> \n   <td>equals-to</td> \n  </tr> \n  <tr> \n   <td>&gt;</td> \n   <td>62</td> \n   <td>greater-than</td> \n  </tr> \n  <tr> \n   <td>?</td> \n   <td>63</td> \n   <td>question mark</td> \n  </tr> \n  <tr> \n   <td>@</td> \n   <td>64</td> \n   <td>at sign</td> \n  </tr> \n  <tr> \n   <td>A</td> \n   <td>65</td> \n   <td>uppercase A</td> \n  </tr> \n  <tr> \n   <td>B</td> \n   <td>66</td> \n   <td>uppercase B</td> \n  </tr> \n  <tr> \n   <td>C</td> \n   <td>67</td> \n   <td>uppercase C</td> \n  </tr> \n  <tr> \n   <td>D</td> \n   <td>68</td> \n   <td>uppercase D</td> \n  </tr> \n  <tr> \n   <td>E</td> \n   <td>69</td> \n   <td>uppercase E</td> \n  </tr> \n  <tr> \n   <td>F</td> \n   <td>70</td> \n   <td>uppercase F</td> \n  </tr> \n  <tr> \n   <td>G</td> \n   <td>71</td> \n   <td>uppercase G</td> \n  </tr> \n  <tr> \n   <td>H</td> \n   <td>72</td> \n   <td>uppercase H</td> \n  </tr> \n  <tr> \n   <td>I</td> \n   <td>73</td> \n   <td>uppercase I</td> \n  </tr> \n  <tr> \n   <td>J</td> \n   <td>74</td> \n   <td>uppercase J</td> \n  </tr> \n  <tr> \n   <td>K</td> \n   <td>75</td> \n   <td>uppercase K</td> \n  </tr> \n  <tr> \n   <td>L</td> \n   <td>76</td> \n   <td>uppercase L</td> \n  </tr> \n  <tr> \n   <td>M</td> \n   <td>77</td> \n   <td>uppercase M</td> \n  </tr> \n  <tr> \n   <td>N</td> \n   <td>78</td> \n   <td>uppercase N</td> \n  </tr> \n  <tr> \n   <td>O</td> \n   <td>79</td> \n   <td>uppercase O</td> \n  </tr> \n  <tr> \n   <td>P</td> \n   <td>80</td> \n   <td>uppercase P</td> \n  </tr> \n  <tr> \n   <td>Q</td> \n   <td>81</td> \n   <td>uppercase Q</td> \n  </tr> \n  <tr> \n   <td>R</td> \n   <td>82</td> \n   <td>uppercase R</td> \n  </tr> \n  <tr> \n   <td>S</td> \n   <td>83</td> \n   <td>uppercase S</td> \n  </tr> \n  <tr> \n   <td>T</td> \n   <td>84</td> \n   <td>uppercase T</td> \n  </tr> \n  <tr> \n   <td>U</td> \n   <td>85</td> \n   <td>uppercase U</td> \n  </tr> \n  <tr> \n   <td>V</td> \n   <td>86</td> \n   <td>uppercase V</td> \n  </tr> \n  <tr> \n   <td>W</td> \n   <td>87</td> \n   <td>uppercase W</td> \n  </tr> \n  <tr> \n   <td>X</td> \n   <td>88</td> \n   <td>uppercase X</td> \n  </tr> \n  <tr> \n   <td>Y</td> \n   <td>89</td> \n   <td>uppercase Y</td> \n  </tr> \n  <tr> \n   <td>Z</td> \n   <td>90</td> \n   <td>uppercase Z</td> \n  </tr> \n  <tr> \n   <td>[</td> \n   <td>91</td> \n   <td>left square bracket</td> \n  </tr> \n  <tr> \n   <td>\\</td> \n   <td>92</td> \n   <td>backslash</td> \n  </tr> \n  <tr> \n   <td>]</td> \n   <td>93</td> \n   <td>right square bracket</td> \n  </tr> \n  <tr> \n   <td>^</td> \n   <td>94</td> \n   <td>caret</td> \n  </tr> \n  <tr> \n   <td>_</td> \n   <td>95</td> \n   <td>underscore</td> \n  </tr> \n  <tr> \n   <td>`</td> \n   <td>96</td> \n   <td>grave accent</td> \n  </tr> \n  <tr> \n   <td>a</td> \n   <td>97</td> \n   <td>lowercase a</td> \n  </tr> \n  <tr> \n   <td>b</td> \n   <td>98</td> \n   <td>lowercase b</td> \n  </tr> \n  <tr> \n   <td>c</td> \n   <td>99</td> \n   <td>lowercase c</td> \n  </tr> \n  <tr> \n   <td>d</td> \n   <td>100</td> \n   <td>lowercase d</td> \n  </tr> \n  <tr> \n   <td>e</td> \n   <td>101</td> \n   <td>lowercase e</td> \n  </tr> \n  <tr> \n   <td>f</td> \n   <td>102</td> \n   <td>lowercase f</td> \n  </tr> \n  <tr> \n   <td>g</td> \n   <td>103</td> \n   <td>lowercase g</td> \n  </tr> \n  <tr> \n   <td>h</td> \n   <td>104</td> \n   <td>lowercase h</td> \n  </tr> \n  <tr> \n   <td>i</td> \n   <td>105</td> \n   <td>lowercase i</td> \n  </tr> \n  <tr> \n   <td>j</td> \n   <td>106</td> \n   <td>lowercase j</td> \n  </tr> \n  <tr> \n   <td>k</td> \n   <td>107</td> \n   <td>lowercase k</td> \n  </tr> \n  <tr> \n   <td>l</td> \n   <td>108</td> \n   <td>lowercase l</td> \n  </tr> \n  <tr> \n   <td>m</td> \n   <td>109</td> \n   <td>lowercase m</td> \n  </tr> \n  <tr> \n   <td>n</td> \n   <td>110</td> \n   <td>lowercase n</td> \n  </tr> \n  <tr> \n   <td>o</td> \n   <td>111</td> \n   <td>lowercase o</td> \n  </tr> \n  <tr> \n   <td>p</td> \n   <td>112</td> \n   <td>lowercase p</td> \n  </tr> \n  <tr> \n   <td>q</td> \n   <td>113</td> \n   <td>lowercase q</td> \n  </tr> \n  <tr> \n   <td>r</td> \n   <td>114</td> \n   <td>lowercase r</td> \n  </tr> \n  <tr> \n   <td>s</td> \n   <td>115</td> \n   <td>lowercase s</td> \n  </tr> \n  <tr> \n   <td>t</td> \n   <td>116</td> \n   <td>lowercase t</td> \n  </tr> \n  <tr> \n   <td>u</td> \n   <td>117</td> \n   <td>lowercase u</td> \n  </tr> \n  <tr> \n   <td>v</td> \n   <td>118</td> \n   <td>lowercase v</td> \n  </tr> \n  <tr> \n   <td>w</td> \n   <td>119</td> \n   <td>lowercase w</td> \n  </tr> \n  <tr> \n   <td>x</td> \n   <td>120</td> \n   <td>lowercase x</td> \n  </tr> \n  <tr> \n   <td>y</td> \n   <td>121</td> \n   <td>lowercase y</td> \n  </tr> \n  <tr> \n   <td>z</td> \n   <td>122</td> \n   <td>lowercase z</td> \n  </tr> \n  <tr> \n   <td>{</td> \n   <td>123</td> \n   <td>left curly brace</td> \n  </tr> \n  <tr> \n   <td>|</td> \n   <td>124</td> \n   <td>vertical bar</td> \n  </tr> \n  <tr> \n   <td>}</td> \n   <td>125</td> \n   <td>right curly brace</td> \n  </tr> \n  <tr> \n   <td>~</td> \n   <td>126</td> \n   <td>tilde</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>ASCII 设备控制字符</h2> \n<p>ASCII 设备控制字符最初被设计为用来控制诸如打印机和磁带驱动器之类的硬件设备。</p> \n<p>在HTML文档中这些代码不会起任何作用。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:10%\">&nbsp;字符</th> \n   <th style=\"width:10%\">编号</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>NUL</td> \n   <td>00</td> \n   <td>null character</td> \n  </tr> \n  <tr> \n   <td>SOH</td> \n   <td>01</td> \n   <td>start of header</td> \n  </tr> \n  <tr> \n   <td>STX</td> \n   <td>02</td> \n   <td>start of text</td> \n  </tr> \n  <tr> \n   <td>ETX</td> \n   <td>03</td> \n   <td>end of text</td> \n  </tr> \n  <tr> \n   <td>EOT</td> \n   <td>04</td> \n   <td>end of transmission</td> \n  </tr> \n  <tr> \n   <td>ENQ</td> \n   <td>05</td> \n   <td>enquiry</td> \n  </tr> \n  <tr> \n   <td>ACK</td> \n   <td>06</td> \n   <td>acknowledge</td> \n  </tr> \n  <tr> \n   <td>BEL</td> \n   <td>07</td> \n   <td>bell (ring)</td> \n  </tr> \n  <tr> \n   <td>BS</td> \n   <td>08</td> \n   <td>backspace</td> \n  </tr> \n  <tr> \n   <td>HT</td> \n   <td>09</td> \n   <td>horizontal tab</td> \n  </tr> \n  <tr> \n   <td>LF</td> \n   <td>10</td> \n   <td>line feed</td> \n  </tr> \n  <tr> \n   <td>VT</td> \n   <td>11</td> \n   <td>vertical tab</td> \n  </tr> \n  <tr> \n   <td>FF</td> \n   <td>12</td> \n   <td>form feed</td> \n  </tr> \n  <tr> \n   <td>CR</td> \n   <td>13</td> \n   <td>carriage return</td> \n  </tr> \n  <tr> \n   <td>SO</td> \n   <td>14</td> \n   <td>shift out</td> \n  </tr> \n  <tr> \n   <td>SI</td> \n   <td>15</td> \n   <td>shift in</td> \n  </tr> \n  <tr> \n   <td>DLE</td> \n   <td>16</td> \n   <td>data link escape</td> \n  </tr> \n  <tr> \n   <td>DC1</td> \n   <td>17</td> \n   <td>device control 1</td> \n  </tr> \n  <tr> \n   <td>DC2</td> \n   <td>18</td> \n   <td>device control 2</td> \n  </tr> \n  <tr> \n   <td>DC3</td> \n   <td>19</td> \n   <td>device control 3</td> \n  </tr> \n  <tr> \n   <td>DC4</td> \n   <td>20</td> \n   <td>device control 4</td> \n  </tr> \n  <tr> \n   <td>NAK</td> \n   <td>21</td> \n   <td>negative acknowledge</td> \n  </tr> \n  <tr> \n   <td>SYN</td> \n   <td>22</td> \n   <td>synchronize</td> \n  </tr> \n  <tr> \n   <td>ETB</td> \n   <td>23</td> \n   <td>end transmission block</td> \n  </tr> \n  <tr> \n   <td>CAN</td> \n   <td>24</td> \n   <td>cancel</td> \n  </tr> \n  <tr> \n   <td>EM</td> \n   <td>25</td> \n   <td>end of medium</td> \n  </tr> \n  <tr> \n   <td>SUB</td> \n   <td>26</td> \n   <td>substitute</td> \n  </tr> \n  <tr> \n   <td>ESC</td> \n   <td>27</td> \n   <td>escape</td> \n  </tr> \n  <tr> \n   <td>FS</td> \n   <td>28</td> \n   <td>file separator</td> \n  </tr> \n  <tr> \n   <td>GS</td> \n   <td>29</td> \n   <td>group separator</td> \n  </tr> \n  <tr> \n   <td>RS</td> \n   <td>30</td> \n   <td>record separator</td> \n  </tr> \n  <tr> \n   <td>US</td> \n   <td>31</td> \n   <td>unit separator</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>DEL</td> \n   <td>127</td> \n   <td>delete (rubout)</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML ASCII 参考手册|ASCII 字符集|ASCII 可印刷字符|ASCII 设备控制字符|');
INSERT INTO `schoolcontent` VALUES ('65', '67', '<h1>HTML <span class=\"color_h1\">ISO-8859-1</span> 参考手册 </h1> \n<hr /> \n<p>现代的浏览器支持的字符集：</p> \n<ul> \n <li><a href=\"http://www.runoob.com/tags/ref-ascii.html\">ASCII 字符集</a></li> \n <li><a href=\"http://www.runoob.com/tags/ref-charactersets.html\">标准 ISO 字符集</a></li> \n <li><a href=\"http://www.runoob.com/tags/ref-symbols.html\">数学符号、希腊字母、其他符号</a></li> \n</ul> \n<hr /> \n<h2>ISO-8859-1</h2> \n<p>ISO-8859-1 是大多数浏览器默认的字符集。</p> \n<p>ISO-8859-1 的较低部分（从 1 到 127 之间的代码）是最初的 ASCII 字符集（0-9 的数字，大写和小写英文字母表，以及一些特殊字符）。</p> \n<p>ISO-8859-1 的较高部分（从 160 到 255 之间的代码）包含了一些西欧国家使用的字符和一些被广泛使用的特殊字符，它们全都有实体名称。 </p> \n<p>这些符号中的大多数都可以在不进行实体引用的情况下使用，但是实体名称或实体编号为那些不容易通过键盘键入的符号提供了表达的方法。</p> \n<hr /> \n<h2>HTML 预留字符</h2> \n<p>HTML and XHTML 预留了一些字符。比如，您不能使用包含这些字符的文本，因为浏览器可能会误以为是 HTML 标签。</p> \n<p>HTML and XHTML 中央处理器必须识别以下表格所列举的五种特殊字符：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">字符</th> \n   <th align=\"left\">实体编号</th> \n   <th align=\"left\">实体名称</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td>&quot;</td> \n   <td>&amp;#34;</td> \n   <td>&amp;quot;</td> \n   <td>quotation mark</td> \n  </tr> \n  <tr> \n   <td>\'</td> \n   <td>&amp;#39;</td> \n   <td>&amp;apos;</td> \n   <td>apostrophe&nbsp;</td> \n  </tr> \n  <tr> \n   <td>&amp;</td> \n   <td>&amp;#38;</td> \n   <td>&amp;amp;</td> \n   <td>ampersand</td> \n  </tr> \n  <tr> \n   <td>&lt;</td> \n   <td>&amp;#60;</td> \n   <td>&amp;lt;</td> \n   <td>less-than</td> \n  </tr> \n  <tr> \n   <td>&gt;</td> \n   <td>&amp;#62;</td> \n   <td>&amp;gt;</td> \n   <td>greater-than</td> \n  </tr> \n </tbody>\n</table> \n<p> <b>注释：</b> 实体名称对大小写敏感！<br /> </p> \n<hr /> \n<h2>ISO 8859-1 符号实体</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">字符</th> \n   <th align=\"left\">实体编号</th> \n   <th align=\"left\">实体名称</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&amp;#160;</td> \n   <td>&amp;nbsp;</td> \n   <td>non-breaking space</td> \n  </tr> \n  <tr> \n   <td>&iexcl;</td> \n   <td>&amp;#161;</td> \n   <td>&amp;iexcl;</td> \n   <td>inverted exclamation mark</td> \n  </tr> \n  <tr> \n   <td>&cent;</td> \n   <td>&amp;#162;</td> \n   <td>&amp;cent;</td> \n   <td>cent</td> \n  </tr> \n  <tr> \n   <td>&pound;</td> \n   <td>&amp;#163;</td> \n   <td>&amp;pound;</td> \n   <td>pound</td> \n  </tr> \n  <tr> \n   <td>&curren;</td> \n   <td>&amp;#164;</td> \n   <td>&amp;curren;</td> \n   <td>currency</td> \n  </tr> \n  <tr> \n   <td>&yen;</td> \n   <td>&amp;#165;</td> \n   <td>&amp;yen;</td> \n   <td>yen</td> \n  </tr> \n  <tr> \n   <td>&brvbar;</td> \n   <td>&amp;#166;</td> \n   <td>&amp;brvbar;</td> \n   <td>broken vertical bar</td> \n  </tr> \n  <tr> \n   <td>&sect;</td> \n   <td>&amp;#167;</td> \n   <td>&amp;sect;</td> \n   <td>section</td> \n  </tr> \n  <tr> \n   <td>&uml;</td> \n   <td>&amp;#168;</td> \n   <td>&amp;uml;</td> \n   <td>spacing diaeresis</td> \n  </tr> \n  <tr> \n   <td>&copy;</td> \n   <td>&amp;#169;</td> \n   <td>&amp;copy;</td> \n   <td>copyright</td> \n  </tr> \n  <tr> \n   <td>&ordf;</td> \n   <td>&amp;#170;</td> \n   <td>&amp;ordf;</td> \n   <td>feminine ordinal indicator</td> \n  </tr> \n  <tr> \n   <td>&laquo;</td> \n   <td>&amp;#171;</td> \n   <td>&amp;laquo;</td> \n   <td>angle quotation mark (left)</td> \n  </tr> \n  <tr> \n   <td>&not;</td> \n   <td>&amp;#172;</td> \n   <td>&amp;not;</td> \n   <td>negation</td> \n  </tr> \n  <tr> \n   <td>&shy;&shy;</td> \n   <td>&amp;#173;</td> \n   <td>&amp;shy;</td> \n   <td>soft hyphen</td> \n  </tr> \n  <tr> \n   <td>&reg;</td> \n   <td>&amp;#174;</td> \n   <td>&amp;reg;</td> \n   <td>registered trademark</td> \n  </tr> \n  <tr> \n   <td>&macr;</td> \n   <td>&amp;#175;</td> \n   <td>&amp;macr;</td> \n   <td>spacing macron</td> \n  </tr> \n  <tr> \n   <td>&deg;</td> \n   <td>&amp;#176;</td> \n   <td>&amp;deg;</td> \n   <td>degree</td> \n  </tr> \n  <tr> \n   <td>&plusmn;</td> \n   <td>&amp;#177;</td> \n   <td>&amp;plusmn;</td> \n   <td>plus-or-minus&nbsp;</td> \n  </tr> \n  <tr> \n   <td>&sup2;</td> \n   <td>&amp;#178;</td> \n   <td>&amp;sup2;</td> \n   <td>superscript 2</td> \n  </tr> \n  <tr> \n   <td>&sup3;</td> \n   <td>&amp;#179;</td> \n   <td>&amp;sup3;</td> \n   <td>superscript 3</td> \n  </tr> \n  <tr> \n   <td>&acute;</td> \n   <td>&amp;#180;</td> \n   <td>&amp;acute;</td> \n   <td>spacing acute</td> \n  </tr> \n  <tr> \n   <td>&micro;</td> \n   <td>&amp;#181;</td> \n   <td>&amp;micro;</td> \n   <td>micro</td> \n  </tr> \n  <tr> \n   <td>&para;</td> \n   <td>&amp;#182;</td> \n   <td>&amp;para;</td> \n   <td>paragraph</td> \n  </tr> \n  <tr> \n   <td>&middot;</td> \n   <td>&amp;#183;</td> \n   <td>&amp;middot;</td> \n   <td>middle dot</td> \n  </tr> \n  <tr> \n   <td>&cedil;</td> \n   <td>&amp;#184;</td> \n   <td>&amp;cedil;</td> \n   <td>spacing cedilla</td> \n  </tr> \n  <tr> \n   <td>&sup1;</td> \n   <td>&amp;#185;</td> \n   <td>&amp;sup1;</td> \n   <td>superscript 1</td> \n  </tr> \n  <tr> \n   <td>&ordm;</td> \n   <td>&amp;#186;</td> \n   <td>&amp;ordm;</td> \n   <td>masculine ordinal indicator</td> \n  </tr> \n  <tr> \n   <td>&raquo;</td> \n   <td>&amp;#187;</td> \n   <td>&amp;raquo;</td> \n   <td>angle quotation mark (right)</td> \n  </tr> \n  <tr> \n   <td>&frac14;</td> \n   <td>&amp;#188;</td> \n   <td>&amp;frac14;</td> \n   <td>fraction 1/4</td> \n  </tr> \n  <tr> \n   <td>&frac12;</td> \n   <td>&amp;#189;</td> \n   <td>&amp;frac12;</td> \n   <td>fraction 1/2</td> \n  </tr> \n  <tr> \n   <td>&frac34;</td> \n   <td>&amp;#190;</td> \n   <td>&amp;frac34;</td> \n   <td>fraction 3/4</td> \n  </tr> \n  <tr> \n   <td>&iquest;</td> \n   <td>&amp;#191;</td> \n   <td>&amp;iquest;</td> \n   <td>inverted question mark</td> \n  </tr> \n  <tr> \n   <td>&times;</td> \n   <td>&amp;#215;</td> \n   <td>&amp;times;</td> \n   <td>multiplication</td> \n  </tr> \n  <tr> \n   <td>&divide;</td> \n   <td>&amp;#247;</td> \n   <td>&amp;divide;</td> \n   <td>division</td> \n  </tr> \n </tbody>\n</table> \n<h2>ISO 8859-1 字符实体</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">字符</th> \n   <th align=\"left\">实体编号</th> \n   <th align=\"left\">实体名称</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td>&Agrave;</td> \n   <td>&amp;#192;</td> \n   <td>&amp;Agrave;</td> \n   <td>capital a, grave accent</td> \n  </tr> \n  <tr> \n   <td>&Aacute;</td> \n   <td>&amp;#193;</td> \n   <td>&amp;Aacute;</td> \n   <td>capital a, acute accent</td> \n  </tr> \n  <tr> \n   <td>&Acirc;</td> \n   <td>&amp;#194;</td> \n   <td>&amp;Acirc;</td> \n   <td>capital a, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&Atilde;</td> \n   <td>&amp;#195;</td> \n   <td>&amp;Atilde;</td> \n   <td>capital a, tilde</td> \n  </tr> \n  <tr> \n   <td>&Auml;</td> \n   <td>&amp;#196;</td> \n   <td>&amp;Auml;</td> \n   <td>capital a, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&Aring;</td> \n   <td>&amp;#197;</td> \n   <td>&amp;Aring;</td> \n   <td>capital a, ring</td> \n  </tr> \n  <tr> \n   <td>&AElig;</td> \n   <td>&amp;#198;</td> \n   <td>&amp;AElig;</td> \n   <td>capital ae</td> \n  </tr> \n  <tr> \n   <td>&Ccedil;</td> \n   <td>&amp;#199;</td> \n   <td>&amp;Ccedil;</td> \n   <td>capital c, cedilla</td> \n  </tr> \n  <tr> \n   <td>&Egrave;</td> \n   <td>&amp;#200;</td> \n   <td>&amp;Egrave;</td> \n   <td>capital e, grave accent</td> \n  </tr> \n  <tr> \n   <td>&Eacute;</td> \n   <td>&amp;#201;</td> \n   <td>&amp;Eacute;</td> \n   <td>capital e, acute accent</td> \n  </tr> \n  <tr> \n   <td>&Ecirc;</td> \n   <td>&amp;#202;</td> \n   <td>&amp;Ecirc;</td> \n   <td>capital e, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&Euml;</td> \n   <td>&amp;#203;</td> \n   <td>&amp;Euml;</td> \n   <td>capital e, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&Igrave;</td> \n   <td>&amp;#204;</td> \n   <td>&amp;Igrave;</td> \n   <td>capital i, grave accent</td> \n  </tr> \n  <tr> \n   <td>&Iacute;</td> \n   <td>&amp;#205;</td> \n   <td>&amp;Iacute;</td> \n   <td>capital i, acute accent</td> \n  </tr> \n  <tr> \n   <td>&Icirc;</td> \n   <td>&amp;#206;</td> \n   <td>&amp;Icirc;</td> \n   <td>capital i, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&Iuml;</td> \n   <td>&amp;#207;</td> \n   <td>&amp;Iuml;</td> \n   <td>capital i, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&ETH;</td> \n   <td>&amp;#208;</td> \n   <td>&amp;ETH;</td> \n   <td>capital eth, Icelandic</td> \n  </tr> \n  <tr> \n   <td>&Ntilde;</td> \n   <td>&amp;#209;</td> \n   <td>&amp;Ntilde;</td> \n   <td>capital n, tilde</td> \n  </tr> \n  <tr> \n   <td>&Ograve;</td> \n   <td>&amp;#210;</td> \n   <td>&amp;Ograve;</td> \n   <td>capital o, grave accent</td> \n  </tr> \n  <tr> \n   <td>&Oacute;</td> \n   <td>&amp;#211;</td> \n   <td>&amp;Oacute;</td> \n   <td>capital o, acute accent</td> \n  </tr> \n  <tr> \n   <td>&Ocirc;</td> \n   <td>&amp;#212;</td> \n   <td>&amp;Ocirc;</td> \n   <td>capital o, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&Otilde;</td> \n   <td>&amp;#213;</td> \n   <td>&amp;Otilde;</td> \n   <td>capital o, tilde</td> \n  </tr> \n  <tr> \n   <td>&Ouml;</td> \n   <td>&amp;#214;</td> \n   <td>&amp;Ouml;</td> \n   <td>capital o, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&Oslash;</td> \n   <td>&amp;#216;</td> \n   <td>&amp;Oslash;</td> \n   <td>capital o, slash</td> \n  </tr> \n  <tr> \n   <td>&Ugrave;</td> \n   <td>&amp;#217;</td> \n   <td>&amp;Ugrave;</td> \n   <td>capital u, grave accent</td> \n  </tr> \n  <tr> \n   <td>&Uacute;</td> \n   <td>&amp;#218;</td> \n   <td>&amp;Uacute;</td> \n   <td>capital u, acute accent</td> \n  </tr> \n  <tr> \n   <td>&Ucirc;</td> \n   <td>&amp;#219;</td> \n   <td>&amp;Ucirc;</td> \n   <td>capital u, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&Uuml;</td> \n   <td>&amp;#220;</td> \n   <td>&amp;Uuml;</td> \n   <td>capital u, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&Yacute;</td> \n   <td>&amp;#221;</td> \n   <td>&amp;Yacute;</td> \n   <td>capital y, acute accent</td> \n  </tr> \n  <tr> \n   <td>&THORN;</td> \n   <td>&amp;#222;</td> \n   <td>&amp;THORN;</td> \n   <td>capital THORN, Icelandic</td> \n  </tr> \n  <tr> \n   <td>&szlig;</td> \n   <td>&amp;#223;</td> \n   <td>&amp;szlig;</td> \n   <td>small sharp s, German</td> \n  </tr> \n  <tr> \n   <td>&agrave;</td> \n   <td>&amp;#224;</td> \n   <td>&amp;agrave;</td> \n   <td>small a, grave accent</td> \n  </tr> \n  <tr> \n   <td>&aacute;</td> \n   <td>&amp;#225;</td> \n   <td>&amp;aacute;</td> \n   <td>small a, acute accent</td> \n  </tr> \n  <tr> \n   <td>&acirc;</td> \n   <td>&amp;#226;</td> \n   <td>&amp;acirc;</td> \n   <td>small a, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&atilde;</td> \n   <td>&amp;#227;</td> \n   <td>&amp;atilde;</td> \n   <td>small a, tilde</td> \n  </tr> \n  <tr> \n   <td>&auml;</td> \n   <td>&amp;#228;</td> \n   <td>&amp;auml;</td> \n   <td>small a, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&aring;</td> \n   <td>&amp;#229;</td> \n   <td>&amp;aring;</td> \n   <td>small a, ring</td> \n  </tr> \n  <tr> \n   <td>&aelig;</td> \n   <td>&amp;#230;</td> \n   <td>&amp;aelig;</td> \n   <td>small ae</td> \n  </tr> \n  <tr> \n   <td>&ccedil;</td> \n   <td>&amp;#231;</td> \n   <td>&amp;ccedil;</td> \n   <td>small c, cedilla</td> \n  </tr> \n  <tr> \n   <td>&egrave;</td> \n   <td>&amp;#232;</td> \n   <td>&amp;egrave;</td> \n   <td>small e, grave accent</td> \n  </tr> \n  <tr> \n   <td>&eacute;</td> \n   <td>&amp;#233;</td> \n   <td>&amp;eacute;</td> \n   <td>small e, acute accent</td> \n  </tr> \n  <tr> \n   <td>&ecirc;</td> \n   <td>&amp;#234;</td> \n   <td>&amp;ecirc;</td> \n   <td>small e, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&euml;</td> \n   <td>&amp;#235;</td> \n   <td>&amp;euml;</td> \n   <td>small e, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&igrave;</td> \n   <td>&amp;#236;</td> \n   <td>&amp;igrave;</td> \n   <td>small i, grave accent</td> \n  </tr> \n  <tr> \n   <td>&iacute;</td> \n   <td>&amp;#237;</td> \n   <td>&amp;iacute;</td> \n   <td>small i, acute accent</td> \n  </tr> \n  <tr> \n   <td>&icirc;</td> \n   <td>&amp;#238;</td> \n   <td>&amp;icirc;</td> \n   <td>small i, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&iuml;</td> \n   <td>&amp;#239;</td> \n   <td>&amp;iuml;</td> \n   <td>small i, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&eth;</td> \n   <td>&amp;#240;</td> \n   <td>&amp;eth;</td> \n   <td>small eth, Icelandic</td> \n  </tr> \n  <tr> \n   <td>&ntilde;</td> \n   <td>&amp;#241;</td> \n   <td>&amp;ntilde;</td> \n   <td>small n, tilde</td> \n  </tr> \n  <tr> \n   <td>&ograve;</td> \n   <td>&amp;#242;</td> \n   <td>&amp;ograve;</td> \n   <td>small o, grave accent</td> \n  </tr> \n  <tr> \n   <td>&oacute;</td> \n   <td>&amp;#243;</td> \n   <td>&amp;oacute;</td> \n   <td>small o, acute accent</td> \n  </tr> \n  <tr> \n   <td>&ocirc;</td> \n   <td>&amp;#244;</td> \n   <td>&amp;ocirc;</td> \n   <td>small o, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&otilde;</td> \n   <td>&amp;#245;</td> \n   <td>&amp;otilde;</td> \n   <td>small o, tilde</td> \n  </tr> \n  <tr> \n   <td>&ouml;</td> \n   <td>&amp;#246;</td> \n   <td>&amp;ouml;</td> \n   <td>small o, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&oslash;</td> \n   <td>&amp;#248;</td> \n   <td>&amp;oslash;</td> \n   <td>small o, slash</td> \n  </tr> \n  <tr> \n   <td>&ugrave;</td> \n   <td>&amp;#249;</td> \n   <td>&amp;ugrave;</td> \n   <td>small u, grave accent</td> \n  </tr> \n  <tr> \n   <td>&uacute;</td> \n   <td>&amp;#250;</td> \n   <td>&amp;uacute;</td> \n   <td>small u, acute accent</td> \n  </tr> \n  <tr> \n   <td>&ucirc;</td> \n   <td>&amp;#251;</td> \n   <td>&amp;ucirc;</td> \n   <td>small u, circumflex accent</td> \n  </tr> \n  <tr> \n   <td>&uuml;</td> \n   <td>&amp;#252;</td> \n   <td>&amp;uuml;</td> \n   <td>small u, umlaut mark</td> \n  </tr> \n  <tr> \n   <td>&yacute;</td> \n   <td>&amp;#253;</td> \n   <td>&amp;yacute;</td> \n   <td>small y, acute accent</td> \n  </tr> \n  <tr> \n   <td>&thorn;</td> \n   <td>&amp;#254;</td> \n   <td>&amp;thorn;</td> \n   <td>small thorn, Icelandic</td> \n  </tr> \n  <tr> \n   <td>&yuml;</td> \n   <td>&amp;#255;</td> \n   <td>&amp;yuml;</td> \n   <td>small y, umlaut mark</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML ISO-8859-1 参考手册|ISO-8859-1|HTML 预留字符|ISO 8859-1 符号实体|ISO 8859-1 字符实体|');
INSERT INTO `schoolcontent` VALUES ('66', '68', '<h1>HTML <span class=\"color_h1\">符号实体</span>参考手册</h1> \n<hr /> \n<h2>HTML 符号实体</h2> \n<p>本字符实体参考手册包括了数学符号、希腊字符、各种箭头记号、科技符号以及形状。</p> \n<p><b>注释：</b> 实体名称对大小写敏感。</p> \n<hr /> \n<h2>HTML 支持的数学符号</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">字符</th> \n   <th width=\"20%\" align=\"left\">实体编号</th> \n   <th width=\"20%\" align=\"left\">实体名称</th> \n   <th width=\"40%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td>∀</td> \n   <td>&amp;#8704;</td> \n   <td>&amp;forall;</td> \n   <td>for all</td> \n  </tr> \n  <tr> \n   <td>∂</td> \n   <td>&amp;#8706;</td> \n   <td>&amp;part;</td> \n   <td>part</td> \n  </tr> \n  <tr> \n   <td>∃</td> \n   <td>&amp;#8707;</td> \n   <td>&amp;exist;</td> \n   <td>exists</td> \n  </tr> \n  <tr> \n   <td>∅</td> \n   <td>&amp;#8709;</td> \n   <td>&amp;empty;</td> \n   <td>empty</td> \n  </tr> \n  <tr> \n   <td>∇</td> \n   <td>&amp;#8711;</td> \n   <td>&amp;nabla;</td> \n   <td>nabla</td> \n  </tr> \n  <tr> \n   <td>∈</td> \n   <td>&amp;#8712;</td> \n   <td>&amp;isin;</td> \n   <td>isin</td> \n  </tr> \n  <tr> \n   <td>∉</td> \n   <td>&amp;#8713;</td> \n   <td>&amp;notin;</td> \n   <td>notin</td> \n  </tr> \n  <tr> \n   <td>∋</td> \n   <td>&amp;#8715;</td> \n   <td>&amp;ni;</td> \n   <td>ni</td> \n  </tr> \n  <tr> \n   <td>∏</td> \n   <td>&amp;#8719;</td> \n   <td>&amp;prod;</td> \n   <td>prod</td> \n  </tr> \n  <tr> \n   <td>∑</td> \n   <td>&amp;#8721;</td> \n   <td>&amp;sum;</td> \n   <td>sum</td> \n  </tr> \n  <tr> \n   <td>−</td> \n   <td>&amp;#8722;</td> \n   <td>&amp;minus;</td> \n   <td>minus</td> \n  </tr> \n  <tr> \n   <td>∗</td> \n   <td>&amp;#8727;</td> \n   <td>&amp;lowast;</td> \n   <td>lowast</td> \n  </tr> \n  <tr> \n   <td>√</td> \n   <td>&amp;#8730;</td> \n   <td>&amp;radic;</td> \n   <td>square root</td> \n  </tr> \n  <tr> \n   <td>∝</td> \n   <td>&amp;#8733;</td> \n   <td>&amp;prop;</td> \n   <td>proportional to</td> \n  </tr> \n  <tr> \n   <td>∞</td> \n   <td>&amp;#8734;</td> \n   <td>&amp;infin;</td> \n   <td>infinity</td> \n  </tr> \n  <tr> \n   <td>∠</td> \n   <td>&amp;#8736;</td> \n   <td>&amp;ang;</td> \n   <td>angle</td> \n  </tr> \n  <tr> \n   <td>∧</td> \n   <td>&amp;#8743;</td> \n   <td>&amp;and;</td> \n   <td>and</td> \n  </tr> \n  <tr> \n   <td>∨</td> \n   <td>&amp;#8744;</td> \n   <td>&amp;or;</td> \n   <td>or</td> \n  </tr> \n  <tr> \n   <td>∩</td> \n   <td>&amp;#8745;</td> \n   <td>&amp;cap;</td> \n   <td>cap</td> \n  </tr> \n  <tr> \n   <td>∪</td> \n   <td>&amp;#8746;</td> \n   <td>&amp;cup;</td> \n   <td>cup</td> \n  </tr> \n  <tr> \n   <td>∫</td> \n   <td>&amp;#8747;</td> \n   <td>&amp;int;</td> \n   <td>integral</td> \n  </tr> \n  <tr> \n   <td>∴</td> \n   <td>&amp;#8756;</td> \n   <td>&amp;there4;</td> \n   <td>therefore</td> \n  </tr> \n  <tr> \n   <td>∼</td> \n   <td>&amp;#8764;</td> \n   <td>&amp;sim;</td> \n   <td>similar to</td> \n  </tr> \n  <tr> \n   <td>≅</td> \n   <td>&amp;#8773;</td> \n   <td>&amp;cong;</td> \n   <td>congruent to</td> \n  </tr> \n  <tr> \n   <td>≈</td> \n   <td>&amp;#8776;</td> \n   <td>&amp;asymp;</td> \n   <td>almost equal</td> \n  </tr> \n  <tr> \n   <td>≠</td> \n   <td>&amp;#8800;</td> \n   <td>&amp;ne;</td> \n   <td>not equal</td> \n  </tr> \n  <tr> \n   <td>≡</td> \n   <td>&amp;#8801;</td> \n   <td>&amp;equiv;</td> \n   <td>equivalent</td> \n  </tr> \n  <tr> \n   <td>≤</td> \n   <td>&amp;#8804;</td> \n   <td>&amp;le;</td> \n   <td>less or equal</td> \n  </tr> \n  <tr> \n   <td>≥</td> \n   <td>&amp;#8805;</td> \n   <td>&amp;ge;</td> \n   <td>greater or equal</td> \n  </tr> \n  <tr> \n   <td>⊂</td> \n   <td>&amp;#8834;</td> \n   <td>&amp;sub;</td> \n   <td>subset of</td> \n  </tr> \n  <tr> \n   <td>⊃</td> \n   <td>&amp;#8835;</td> \n   <td>&amp;sup;</td> \n   <td>superset of</td> \n  </tr> \n  <tr> \n   <td>⊄</td> \n   <td>&amp;#8836;</td> \n   <td>&amp;nsub;</td> \n   <td>not subset of</td> \n  </tr> \n  <tr> \n   <td>⊆</td> \n   <td>&amp;#8838;</td> \n   <td>&amp;sube;</td> \n   <td>subset or equal</td> \n  </tr> \n  <tr> \n   <td>⊇</td> \n   <td>&amp;#8839;</td> \n   <td>&amp;supe;</td> \n   <td>superset or equal</td> \n  </tr> \n  <tr> \n   <td>⊕</td> \n   <td>&amp;#8853;</td> \n   <td>&amp;oplus;</td> \n   <td>circled plus</td> \n  </tr> \n  <tr> \n   <td>⊗</td> \n   <td>&amp;#8855;</td> \n   <td>&amp;otimes;</td> \n   <td>circled times</td> \n  </tr> \n  <tr> \n   <td>⊥</td> \n   <td>&amp;#8869;</td> \n   <td>&amp;perp;</td> \n   <td>perpendicular</td> \n  </tr> \n  <tr> \n   <td>⋅</td> \n   <td>&amp;#8901;</td> \n   <td>&amp;sdot;</td> \n   <td>dot operator</td> \n  </tr> \n </tbody>\n</table> \n<h2>HTML 支持的希腊字母</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">字符</th> \n   <th width=\"20%\" align=\"left\">实体编号</th> \n   <th width=\"20%\" align=\"left\">实体名称</th> \n   <th width=\"40%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td>Α</td> \n   <td>&amp;#913;</td> \n   <td>&amp;Alpha;</td> \n   <td>Alpha</td> \n  </tr> \n  <tr> \n   <td>Β</td> \n   <td>&amp;#914;</td> \n   <td>&amp;Beta;</td> \n   <td>Beta</td> \n  </tr> \n  <tr> \n   <td>Γ</td> \n   <td>&amp;#915;</td> \n   <td>&amp;Gamma;</td> \n   <td>Gamma</td> \n  </tr> \n  <tr> \n   <td>Δ</td> \n   <td>&amp;#916;</td> \n   <td>&amp;Delta;</td> \n   <td>Delta</td> \n  </tr> \n  <tr> \n   <td>Ε</td> \n   <td>&amp;#917;</td> \n   <td>&amp;Epsilon;</td> \n   <td>Epsilon</td> \n  </tr> \n  <tr> \n   <td>Ζ</td> \n   <td>&amp;#918;</td> \n   <td>&amp;Zeta;</td> \n   <td>Zeta</td> \n  </tr> \n  <tr> \n   <td>Η</td> \n   <td>&amp;#919;</td> \n   <td>&amp;Eta;</td> \n   <td>Eta</td> \n  </tr> \n  <tr> \n   <td>Θ</td> \n   <td>&amp;#920;</td> \n   <td>&amp;Theta;</td> \n   <td>Theta</td> \n  </tr> \n  <tr> \n   <td>Ι</td> \n   <td>&amp;#921;</td> \n   <td>&amp;Iota;</td> \n   <td>Iota</td> \n  </tr> \n  <tr> \n   <td>Κ</td> \n   <td>&amp;#922;</td> \n   <td>&amp;Kappa;</td> \n   <td>Kappa</td> \n  </tr> \n  <tr> \n   <td>Λ</td> \n   <td>&amp;#923;</td> \n   <td>&amp;Lambda;</td> \n   <td>Lambda</td> \n  </tr> \n  <tr> \n   <td>Μ</td> \n   <td>&amp;#924;</td> \n   <td>&amp;Mu;</td> \n   <td>Mu</td> \n  </tr> \n  <tr> \n   <td>Ν</td> \n   <td>&amp;#925;</td> \n   <td>&amp;Nu;</td> \n   <td>Nu</td> \n  </tr> \n  <tr> \n   <td>Ξ</td> \n   <td>&amp;#926;</td> \n   <td>&amp;Xi;</td> \n   <td>Xi</td> \n  </tr> \n  <tr> \n   <td>Ο</td> \n   <td>&amp;#927;</td> \n   <td>&amp;Omicron;</td> \n   <td>Omicron</td> \n  </tr> \n  <tr> \n   <td>Π</td> \n   <td>&amp;#928;</td> \n   <td>&amp;Pi;</td> \n   <td>Pi</td> \n  </tr> \n  <tr> \n   <td>Ρ</td> \n   <td>&amp;#929;</td> \n   <td>&amp;Rho;</td> \n   <td>Rho</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>undefined</td> \n   <td>&nbsp;</td> \n   <td>Sigmaf</td> \n  </tr> \n  <tr> \n   <td>Σ</td> \n   <td>&amp;#931;</td> \n   <td>&amp;Sigma;</td> \n   <td>Sigma</td> \n  </tr> \n  <tr> \n   <td>Τ</td> \n   <td>&amp;#932;</td> \n   <td>&amp;Tau;</td> \n   <td>Tau</td> \n  </tr> \n  <tr> \n   <td>Υ</td> \n   <td>&amp;#933;</td> \n   <td>&amp;Upsilon;</td> \n   <td>Upsilon</td> \n  </tr> \n  <tr> \n   <td>Φ</td> \n   <td>&amp;#934;</td> \n   <td>&amp;Phi;</td> \n   <td>Phi</td> \n  </tr> \n  <tr> \n   <td>Χ</td> \n   <td>&amp;#935;</td> \n   <td>&amp;Chi;</td> \n   <td>Chi</td> \n  </tr> \n  <tr> \n   <td>Ψ</td> \n   <td>&amp;#936;</td> \n   <td>&amp;Psi;</td> \n   <td>Psi</td> \n  </tr> \n  <tr> \n   <td>Ω</td> \n   <td>&amp;#937;</td> \n   <td>&amp;Omega;</td> \n   <td>Omega</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>α</td> \n   <td>&amp;#945;</td> \n   <td>&amp;alpha;</td> \n   <td>alpha</td> \n  </tr> \n  <tr> \n   <td>β</td> \n   <td>&amp;#946;</td> \n   <td>&amp;beta;</td> \n   <td>beta</td> \n  </tr> \n  <tr> \n   <td>γ</td> \n   <td>&amp;#947;</td> \n   <td>&amp;gamma;</td> \n   <td>gamma</td> \n  </tr> \n  <tr> \n   <td>δ</td> \n   <td>&amp;#948;</td> \n   <td>&amp;delta;</td> \n   <td>delta</td> \n  </tr> \n  <tr> \n   <td>ε</td> \n   <td>&amp;#949;</td> \n   <td>&amp;epsilon;</td> \n   <td>epsilon</td> \n  </tr> \n  <tr> \n   <td>ζ</td> \n   <td>&amp;#950;</td> \n   <td>&amp;zeta;</td> \n   <td>zeta</td> \n  </tr> \n  <tr> \n   <td>η</td> \n   <td>&amp;#951;</td> \n   <td>&amp;eta;</td> \n   <td>eta</td> \n  </tr> \n  <tr> \n   <td>θ</td> \n   <td>&amp;#952;</td> \n   <td>&amp;theta;</td> \n   <td>theta</td> \n  </tr> \n  <tr> \n   <td>ι</td> \n   <td>&amp;#953;</td> \n   <td>&amp;iota;</td> \n   <td>iota</td> \n  </tr> \n  <tr> \n   <td>κ</td> \n   <td>&amp;#954;</td> \n   <td>&amp;kappa;</td> \n   <td>kappa</td> \n  </tr> \n  <tr> \n   <td>λ</td> \n   <td>&amp;#955;</td> \n   <td>&amp;lambda;</td> \n   <td>lambda</td> \n  </tr> \n  <tr> \n   <td>μ</td> \n   <td>&amp;#956;</td> \n   <td>&amp;mu;</td> \n   <td>mu</td> \n  </tr> \n  <tr> \n   <td>ν</td> \n   <td>&amp;#957;</td> \n   <td>&amp;nu;</td> \n   <td>nu</td> \n  </tr> \n  <tr> \n   <td>ξ</td> \n   <td>&amp;#958;</td> \n   <td>&amp;xi;</td> \n   <td>xi</td> \n  </tr> \n  <tr> \n   <td>ο</td> \n   <td>&amp;#959;</td> \n   <td>&amp;omicron;</td> \n   <td>omicron</td> \n  </tr> \n  <tr> \n   <td>π</td> \n   <td>&amp;#960;</td> \n   <td>&amp;pi;</td> \n   <td>pi</td> \n  </tr> \n  <tr> \n   <td>ρ</td> \n   <td>&amp;#961;</td> \n   <td>&amp;rho;</td> \n   <td>rho</td> \n  </tr> \n  <tr> \n   <td>ς</td> \n   <td>&amp;#962;</td> \n   <td>&amp;sigmaf;</td> \n   <td>sigmaf</td> \n  </tr> \n  <tr> \n   <td>σ</td> \n   <td>&amp;#963;</td> \n   <td>&amp;sigma;</td> \n   <td>sigma</td> \n  </tr> \n  <tr> \n   <td>τ</td> \n   <td>&amp;#964;</td> \n   <td>&amp;tau;</td> \n   <td>tau</td> \n  </tr> \n  <tr> \n   <td>υ</td> \n   <td>&amp;#965;</td> \n   <td>&amp;upsilon;</td> \n   <td>upsilon</td> \n  </tr> \n  <tr> \n   <td>φ</td> \n   <td>&amp;#966;</td> \n   <td>&amp;phi;</td> \n   <td>phi</td> \n  </tr> \n  <tr> \n   <td>χ</td> \n   <td>&amp;#967;</td> \n   <td>&amp;chi;</td> \n   <td>chi</td> \n  </tr> \n  <tr> \n   <td>ψ</td> \n   <td>&amp;#968;</td> \n   <td>&amp;psi;</td> \n   <td>psi</td> \n  </tr> \n  <tr> \n   <td>ω</td> \n   <td>&amp;#969;</td> \n   <td>&amp;omega;</td> \n   <td>omega</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>ϑ</td> \n   <td>&amp;#977;</td> \n   <td>&amp;thetasym;</td> \n   <td>theta symbol</td> \n  </tr> \n  <tr> \n   <td>ϒ</td> \n   <td>&amp;#978;</td> \n   <td>&amp;upsih;</td> \n   <td>upsilon symbol</td> \n  </tr> \n  <tr> \n   <td>ϖ</td> \n   <td>&amp;#982;</td> \n   <td>&amp;piv;</td> \n   <td>pi symbol</td> \n  </tr> \n </tbody>\n</table> \n<h2>HTML 支持的其他实体</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">字符</th> \n   <th width=\"20%\" align=\"left\">实体编号</th> \n   <th width=\"20%\" align=\"left\">实体名称</th> \n   <th width=\"40%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td>Œ</td> \n   <td>&amp;#338;</td> \n   <td>&amp;OElig;</td> \n   <td>capital ligature OE</td> \n  </tr> \n  <tr> \n   <td>œ</td> \n   <td>&amp;#339;</td> \n   <td>&amp;oelig;</td> \n   <td>small ligature oe</td> \n  </tr> \n  <tr> \n   <td>Š</td> \n   <td>&amp;#352;</td> \n   <td>&amp;Scaron;</td> \n   <td>capital S with caron</td> \n  </tr> \n  <tr> \n   <td>š</td> \n   <td>&amp;#353;</td> \n   <td>&amp;scaron;</td> \n   <td>small S with caron</td> \n  </tr> \n  <tr> \n   <td>Ÿ</td> \n   <td>&amp;#376;</td> \n   <td>&amp;Yuml;</td> \n   <td>capital Y with diaeres</td> \n  </tr> \n  <tr> \n   <td>ƒ</td> \n   <td>&amp;#402;</td> \n   <td>&amp;fnof;</td> \n   <td>f with hook</td> \n  </tr> \n  <tr> \n   <td>ˆ</td> \n   <td>&amp;#710;</td> \n   <td>&amp;circ;</td> \n   <td>modifier letter circumflex accent</td> \n  </tr> \n  <tr> \n   <td>˜</td> \n   <td>&amp;#732;</td> \n   <td>&amp;tilde;</td> \n   <td>small tilde</td> \n  </tr> \n  <tr> \n   <td> </td> \n   <td>&amp;#8194;</td> \n   <td>&amp;ensp;</td> \n   <td>en space</td> \n  </tr> \n  <tr> \n   <td> </td> \n   <td>&amp;#8195;</td> \n   <td>&amp;emsp;</td> \n   <td>em space</td> \n  </tr> \n  <tr> \n   <td> </td> \n   <td>&amp;#8201;</td> \n   <td>&amp;thinsp;</td> \n   <td>thin space</td> \n  </tr> \n  <tr> \n   <td>‌</td> \n   <td>&amp;#8204;</td> \n   <td>&amp;zwnj;</td> \n   <td>zero width non-joiner</td> \n  </tr> \n  <tr> \n   <td>‍</td> \n   <td>&amp;#8205;</td> \n   <td>&amp;zwj;</td> \n   <td>zero width joiner</td> \n  </tr> \n  <tr> \n   <td>‎</td> \n   <td>&amp;#8206;</td> \n   <td>&amp;lrm;</td> \n   <td>left-to-right mark</td> \n  </tr> \n  <tr> \n   <td>‏</td> \n   <td>&amp;#8207;</td> \n   <td>&amp;rlm;</td> \n   <td>right-to-left mark</td> \n  </tr> \n  <tr> \n   <td>–</td> \n   <td>&amp;#8211;</td> \n   <td>&amp;ndash;</td> \n   <td>en dash</td> \n  </tr> \n  <tr> \n   <td>—</td> \n   <td>&amp;#8212;</td> \n   <td>&amp;mdash;</td> \n   <td>em dash</td> \n  </tr> \n  <tr> \n   <td>\'</td> \n   <td>&amp;#8216;</td> \n   <td>&amp;lsquo;</td> \n   <td>left single quotation mark</td> \n  </tr> \n  <tr> \n   <td>\'</td> \n   <td>&amp;#8217;</td> \n   <td>&amp;rsquo;</td> \n   <td>right single quotation mark</td> \n  </tr> \n  <tr> \n   <td>‚</td> \n   <td>&amp;#8218;</td> \n   <td>&amp;sbquo;</td> \n   <td>single low-9 quotation mark</td> \n  </tr> \n  <tr> \n   <td>&quot;</td> \n   <td>&amp;#8220;</td> \n   <td>&amp;ldquo;</td> \n   <td>left double quotation mark</td> \n  </tr> \n  <tr> \n   <td>&quot;</td> \n   <td>&amp;#8221;</td> \n   <td>&amp;rdquo;</td> \n   <td>right double quotation mark</td> \n  </tr> \n  <tr> \n   <td>„</td> \n   <td>&amp;#8222;</td> \n   <td>&amp;bdquo;</td> \n   <td>double low-9 quotation mark</td> \n  </tr> \n  <tr> \n   <td>†</td> \n   <td>&amp;#8224;</td> \n   <td>&amp;dagger;</td> \n   <td>dagger</td> \n  </tr> \n  <tr> \n   <td>‡</td> \n   <td>&amp;#8225;</td> \n   <td>&amp;Dagger;</td> \n   <td>double dagger</td> \n  </tr> \n  <tr> \n   <td>•</td> \n   <td>&amp;#8226;</td> \n   <td>&amp;bull;</td> \n   <td>bullet</td> \n  </tr> \n  <tr> \n   <td>…</td> \n   <td>&amp;#8230;</td> \n   <td>&amp;hellip;</td> \n   <td>horizontal ellipsis</td> \n  </tr> \n  <tr> \n   <td>‰</td> \n   <td>&amp;#8240;</td> \n   <td>&amp;permil;</td> \n   <td>per mille&nbsp;</td> \n  </tr> \n  <tr> \n   <td>′</td> \n   <td>&amp;#8242;</td> \n   <td>&amp;prime;</td> \n   <td>minutes</td> \n  </tr> \n  <tr> \n   <td>″</td> \n   <td>&amp;#8243;</td> \n   <td>&amp;Prime;</td> \n   <td>seconds</td> \n  </tr> \n  <tr> \n   <td>‹</td> \n   <td>&amp;#8249;</td> \n   <td>&amp;lsaquo;</td> \n   <td>single left angle quotation</td> \n  </tr> \n  <tr> \n   <td>›</td> \n   <td>&amp;#8250;</td> \n   <td>&amp;rsaquo;</td> \n   <td>single right angle quotation</td> \n  </tr> \n  <tr> \n   <td>‾</td> \n   <td>&amp;#8254;</td> \n   <td>&amp;oline;</td> \n   <td>overline</td> \n  </tr> \n  <tr> \n   <td>€</td> \n   <td>&amp;#8364;</td> \n   <td>&amp;euro;</td> \n   <td>euro</td> \n  </tr> \n  <tr> \n   <td>™</td> \n   <td>&amp;#8482; or &amp;#153;</td> \n   <td>&amp;trade;</td> \n   <td>trademark</td> \n  </tr> \n  <tr> \n   <td>←</td> \n   <td>&amp;#8592;</td> \n   <td>&amp;larr;</td> \n   <td>left arrow</td> \n  </tr> \n  <tr> \n   <td>↑</td> \n   <td>&amp;#8593;</td> \n   <td>&amp;uarr;</td> \n   <td>up arrow</td> \n  </tr> \n  <tr> \n   <td>→</td> \n   <td>&amp;#8594;</td> \n   <td>&amp;rarr;</td> \n   <td>right arrow</td> \n  </tr> \n  <tr> \n   <td>↓</td> \n   <td>&amp;#8595;</td> \n   <td>&amp;darr;</td> \n   <td>down arrow</td> \n  </tr> \n  <tr> \n   <td>↔</td> \n   <td>&amp;#8596;</td> \n   <td>&amp;harr;</td> \n   <td>left right arrow</td> \n  </tr> \n  <tr> \n   <td>↵</td> \n   <td>&amp;#8629;</td> \n   <td>&amp;crarr;</td> \n   <td>carriage return arrow</td> \n  </tr> \n  <tr> \n   <td>⌈</td> \n   <td>&amp;#8968;</td> \n   <td>&amp;lceil;</td> \n   <td>left ceiling</td> \n  </tr> \n  <tr> \n   <td>⌉</td> \n   <td>&amp;#8969;</td> \n   <td>&amp;rceil;</td> \n   <td>right ceiling</td> \n  </tr> \n  <tr> \n   <td>⌊</td> \n   <td>&amp;#8970;</td> \n   <td>&amp;lfloor;</td> \n   <td>left floor</td> \n  </tr> \n  <tr> \n   <td>⌋</td> \n   <td>&amp;#8971;</td> \n   <td>&amp;rfloor;</td> \n   <td>right floor</td> \n  </tr> \n  <tr> \n   <td>◊</td> \n   <td>&amp;#9674;</td> \n   <td>&amp;loz;</td> \n   <td>lozenge</td> \n  </tr> \n  <tr> \n   <td>♠</td> \n   <td>&amp;#9824;</td> \n   <td>&amp;spades;</td> \n   <td>spade</td> \n  </tr> \n  <tr> \n   <td>♣</td> \n   <td>&amp;#9827;</td> \n   <td>&amp;clubs;</td> \n   <td>club</td> \n  </tr> \n  <tr> \n   <td>♥</td> \n   <td>&amp;#9829;</td> \n   <td>&amp;hearts;</td> \n   <td>heart</td> \n  </tr> \n  <tr> \n   <td>♦</td> \n   <td>&amp;#9830;</td> \n   <td>&amp;diams;</td> \n   <td>diamond</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 符号实体参考手册|HTML 符号实体|HTML 支持的数学符号|HTML 支持的希腊字母|HTML 支持的其他实体|');
INSERT INTO `schoolcontent` VALUES ('67', '69', '<h1>HTML <span class=\"color_h1\">URL 编码</span> 参考手册</h1> \n<script>\r\n<!--\r\nfunction urlencode()\r\n{\r\nvar txt=document.getElementById(\"txt\").value;\r\n//var encodetxt=encodeURI(txt);\r\nvar encodetxt=encodeURIComponent(txt);\r\ndocument.getElementById(\"encodingresult\").innerHTML=encodetxt;\r\n}\r\n-->\r\n</script> \n<hr /> \n<p class=\"intro\">URL 编码会将字符转换为可通过因特网传输的格式。</p> \n<hr /> \n<h2>URL - 统一资源定位器</h2> \n<p>Web 浏览器通过 URL 从 web 服务器请求页面。</p> \n<p>URL 是网页的地址，比如： <b>http://www.runoob.com</b>。</p> \n<hr /> \n<h2>URL 编码</h2> \n<p>URL 只能使用 <a href=\"ref-ascii.html\">ASCII 字符集</a>来通过因特网进行发送。</p> \n<p>由于 URL 常常会包含 ASCII 集合之外的字符，URL 必须转换为有效的 ASCII 格式。</p> \n<p>URL 编码使用 &quot;%&quot; 其后跟随两位的十六进制数来替换非 ASCII 字符。<br /> </p> \n<p>URL 不能包含空格。URL 编码通常使用 + 来替换空格。</p> \n<hr /> \n<h2>尝试一下</h2> \n<p> 如果您点击下面的&quot;提交&quot;按钮，浏览器会在发送输入之前对其进行 URL 编码。服务器上的页面会显示出接收到的输入。</p> \n<form name=\"input\" target=\"_blank\" action=\"http://www.w3cschool.cc/try/html_form_submit.php\" method=\"get\"> \n <input type=\"text\" value=\"Hello G&uuml;nter\" name=\"text\" size=\"30\" /> \n <input type=\"submit\" value=\"提交\" /> \n</form> \n<p> 试着输入一些其他字符，然后再次点击提交按钮。</p> \n<hr /> \n<h2>URL 编码函数</h2> \n<p>JavaScript、PHP、ASP 都提供了对字符串进行URL编码的函数。</p> \n<p>JavaScript 中使用 encodeURI() 函数，PHP 中使用 rawurlencode() 函数，ASP 中使用 Server.URLEncode() 函数。</p> \n<p>点击&quot;URL 编码&quot;按钮，看看 JavaScript 函数是怎么对文本进行编码的。</p> \n<form name=\"changeform\" action=\"http://www.w3cschool.cc/try/html_form_submit.php\" target=\"_blank\" method=\"post\"> \n <input type=\"text\" name=\"txt\" id=\"txt\" value=\"Hello G&uuml;nter\" size=\"30\" /> \n <input name=\"submit\" type=\"button\" value=\"URL 编码\" onclick=\"urlencode()\" /> \n</form> \n<span id=\"encodingresult\"></span> \n<p><b>注释：</b>JavaScript 函数将空格编码成 %20 。</p> \n<hr /> \n<h2>URL 编码参考手册</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">ASCII 字符</th> \n   <th align=\"left\">URL-编码</th> \n  </tr> \n  <tr> \n   <td>space</td> \n   <td>%20</td> \n  </tr> \n  <tr> \n   <td>!</td> \n   <td>%21</td> \n  </tr> \n  <tr> \n   <td>&quot;</td> \n   <td>%22</td> \n  </tr> \n  <tr> \n   <td>#</td> \n   <td>%23</td> \n  </tr> \n  <tr> \n   <td>$</td> \n   <td>%24</td> \n  </tr> \n  <tr> \n   <td>%</td> \n   <td>%25</td> \n  </tr> \n  <tr> \n   <td>&amp;</td> \n   <td>%26</td> \n  </tr> \n  <tr> \n   <td>\'</td> \n   <td>%27</td> \n  </tr> \n  <tr> \n   <td>(</td> \n   <td>%28</td> \n  </tr> \n  <tr> \n   <td>)</td> \n   <td>%29</td> \n  </tr> \n  <tr> \n   <td>*</td> \n   <td>%2A</td> \n  </tr> \n  <tr> \n   <td>+</td> \n   <td>%2B</td> \n  </tr> \n  <tr> \n   <td>,</td> \n   <td>%2C</td> \n  </tr> \n  <tr> \n   <td>-</td> \n   <td>%2D</td> \n  </tr> \n  <tr> \n   <td>.</td> \n   <td>%2E</td> \n  </tr> \n  <tr> \n   <td>/</td> \n   <td>%2F</td> \n  </tr> \n  <tr> \n   <td>0</td> \n   <td>%30</td> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td>%31</td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td>%32</td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td>%33</td> \n  </tr> \n  <tr> \n   <td>4</td> \n   <td>%34</td> \n  </tr> \n  <tr> \n   <td>5</td> \n   <td>%35</td> \n  </tr> \n  <tr> \n   <td>6</td> \n   <td>%36</td> \n  </tr> \n  <tr> \n   <td>7</td> \n   <td>%37</td> \n  </tr> \n  <tr> \n   <td>8</td> \n   <td>%38</td> \n  </tr> \n  <tr> \n   <td>9</td> \n   <td>%39</td> \n  </tr> \n  <tr> \n   <td>:</td> \n   <td>%3A</td> \n  </tr> \n  <tr> \n   <td>;</td> \n   <td>%3B</td> \n  </tr> \n  <tr> \n   <td>&lt;</td> \n   <td>%3C</td> \n  </tr> \n  <tr> \n   <td>=</td> \n   <td>%3D</td> \n  </tr> \n  <tr> \n   <td>&gt;</td> \n   <td>%3E</td> \n  </tr> \n  <tr> \n   <td>?</td> \n   <td>%3F</td> \n  </tr> \n  <tr> \n   <td>@</td> \n   <td>%40</td> \n  </tr> \n  <tr> \n   <td>A</td> \n   <td>%41</td> \n  </tr> \n  <tr> \n   <td>B</td> \n   <td>%42</td> \n  </tr> \n  <tr> \n   <td>C</td> \n   <td>%43</td> \n  </tr> \n  <tr> \n   <td>D</td> \n   <td>%44</td> \n  </tr> \n  <tr> \n   <td>E</td> \n   <td>%45</td> \n  </tr> \n  <tr> \n   <td>F</td> \n   <td>%46</td> \n  </tr> \n  <tr> \n   <td>G</td> \n   <td>%47</td> \n  </tr> \n  <tr> \n   <td>H</td> \n   <td>%48</td> \n  </tr> \n  <tr> \n   <td>I</td> \n   <td>%49</td> \n  </tr> \n  <tr> \n   <td>J</td> \n   <td>%4A</td> \n  </tr> \n  <tr> \n   <td>K</td> \n   <td>%4B</td> \n  </tr> \n  <tr> \n   <td>L</td> \n   <td>%4C</td> \n  </tr> \n  <tr> \n   <td>M</td> \n   <td>%4D</td> \n  </tr> \n  <tr> \n   <td>N</td> \n   <td>%4E</td> \n  </tr> \n  <tr> \n   <td>O</td> \n   <td>%4F</td> \n  </tr> \n  <tr> \n   <td>P</td> \n   <td>%50</td> \n  </tr> \n  <tr> \n   <td>Q</td> \n   <td>%51</td> \n  </tr> \n  <tr> \n   <td>R</td> \n   <td>%52</td> \n  </tr> \n  <tr> \n   <td>S</td> \n   <td>%53</td> \n  </tr> \n  <tr> \n   <td>T</td> \n   <td>%54</td> \n  </tr> \n  <tr> \n   <td>U</td> \n   <td>%55</td> \n  </tr> \n  <tr> \n   <td>V</td> \n   <td>%56</td> \n  </tr> \n  <tr> \n   <td>W</td> \n   <td>%57</td> \n  </tr> \n  <tr> \n   <td>X</td> \n   <td>%58</td> \n  </tr> \n  <tr> \n   <td>Y</td> \n   <td>%59</td> \n  </tr> \n  <tr> \n   <td>Z</td> \n   <td>%5A</td> \n  </tr> \n  <tr> \n   <td>[</td> \n   <td>%5B</td> \n  </tr> \n  <tr> \n   <td>\\</td> \n   <td>%5C</td> \n  </tr> \n  <tr> \n   <td>]</td> \n   <td>%5D</td> \n  </tr> \n  <tr> \n   <td>^</td> \n   <td>%5E</td> \n  </tr> \n  <tr> \n   <td>_</td> \n   <td>%5F</td> \n  </tr> \n  <tr> \n   <td>`</td> \n   <td>%60</td> \n  </tr> \n  <tr> \n   <td>a</td> \n   <td>%61</td> \n  </tr> \n  <tr> \n   <td>b</td> \n   <td>%62</td> \n  </tr> \n  <tr> \n   <td>c</td> \n   <td>%63</td> \n  </tr> \n  <tr> \n   <td>d</td> \n   <td>%64</td> \n  </tr> \n  <tr> \n   <td>e</td> \n   <td>%65</td> \n  </tr> \n  <tr> \n   <td>f</td> \n   <td>%66</td> \n  </tr> \n  <tr> \n   <td>g</td> \n   <td>%67</td> \n  </tr> \n  <tr> \n   <td>h</td> \n   <td>%68</td> \n  </tr> \n  <tr> \n   <td>i</td> \n   <td>%69</td> \n  </tr> \n  <tr> \n   <td>j</td> \n   <td>%6A</td> \n  </tr> \n  <tr> \n   <td>k</td> \n   <td>%6B</td> \n  </tr> \n  <tr> \n   <td>l</td> \n   <td>%6C</td> \n  </tr> \n  <tr> \n   <td>m</td> \n   <td>%6D</td> \n  </tr> \n  <tr> \n   <td>n</td> \n   <td>%6E</td> \n  </tr> \n  <tr> \n   <td>o</td> \n   <td>%6F</td> \n  </tr> \n  <tr> \n   <td>p</td> \n   <td>%70</td> \n  </tr> \n  <tr> \n   <td>q</td> \n   <td>%71</td> \n  </tr> \n  <tr> \n   <td>r</td> \n   <td>%72</td> \n  </tr> \n  <tr> \n   <td>s</td> \n   <td>%73</td> \n  </tr> \n  <tr> \n   <td>t</td> \n   <td>%74</td> \n  </tr> \n  <tr> \n   <td>u</td> \n   <td>%75</td> \n  </tr> \n  <tr> \n   <td>v</td> \n   <td>%76</td> \n  </tr> \n  <tr> \n   <td>w</td> \n   <td>%77</td> \n  </tr> \n  <tr> \n   <td>x</td> \n   <td>%78</td> \n  </tr> \n  <tr> \n   <td>y</td> \n   <td>%79</td> \n  </tr> \n  <tr> \n   <td>z</td> \n   <td>%7A</td> \n  </tr> \n  <tr> \n   <td>{</td> \n   <td>%7B</td> \n  </tr> \n  <tr> \n   <td>|</td> \n   <td>%7C</td> \n  </tr> \n  <tr> \n   <td>}</td> \n   <td>%7D</td> \n  </tr> \n  <tr> \n   <td>~</td> \n   <td>%7E</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>%7F</td> \n  </tr> \n  <tr> \n   <td>`</td> \n   <td>%80</td> \n  </tr> \n  <tr> \n   <td></td> \n   <td>%81</td> \n  </tr> \n  <tr> \n   <td>‚</td> \n   <td>%82</td> \n  </tr> \n  <tr> \n   <td>ƒ</td> \n   <td>%83</td> \n  </tr> \n  <tr> \n   <td>„</td> \n   <td>%84</td> \n  </tr> \n  <tr> \n   <td>…</td> \n   <td>%85</td> \n  </tr> \n  <tr> \n   <td>†</td> \n   <td>%86</td> \n  </tr> \n  <tr> \n   <td>‡</td> \n   <td>%87</td> \n  </tr> \n  <tr> \n   <td>ˆ</td> \n   <td>%88</td> \n  </tr> \n  <tr> \n   <td>‰</td> \n   <td>%89</td> \n  </tr> \n  <tr> \n   <td>Š</td> \n   <td>%8A</td> \n  </tr> \n  <tr> \n   <td>‹</td> \n   <td>%8B</td> \n  </tr> \n  <tr> \n   <td>Œ</td> \n   <td>%8C</td> \n  </tr> \n  <tr> \n   <td></td> \n   <td>%8D</td> \n  </tr> \n  <tr> \n   <td>Ž</td> \n   <td>%8E</td> \n  </tr> \n  <tr> \n   <td></td> \n   <td>%8F</td> \n  </tr> \n  <tr> \n   <td></td> \n   <td>%90</td> \n  </tr> \n  <tr> \n   <td>\'</td> \n   <td>%91</td> \n  </tr> \n  <tr> \n   <td>\'</td> \n   <td>%92</td> \n  </tr> \n  <tr> \n   <td>&quot;</td> \n   <td>%93</td> \n  </tr> \n  <tr> \n   <td>&quot;</td> \n   <td>%94</td> \n  </tr> \n  <tr> \n   <td>•</td> \n   <td>%95</td> \n  </tr> \n  <tr> \n   <td>–</td> \n   <td>%96</td> \n  </tr> \n  <tr> \n   <td>—</td> \n   <td>%97</td> \n  </tr> \n  <tr> \n   <td>˜</td> \n   <td>%98</td> \n  </tr> \n  <tr> \n   <td>™</td> \n   <td>%99</td> \n  </tr> \n  <tr> \n   <td>š</td> \n   <td>%9A</td> \n  </tr> \n  <tr> \n   <td>›</td> \n   <td>%9B</td> \n  </tr> \n  <tr> \n   <td>œ</td> \n   <td>%9C</td> \n  </tr> \n  <tr> \n   <td></td> \n   <td>%9D</td> \n  </tr> \n  <tr> \n   <td>ž</td> \n   <td>%9E</td> \n  </tr> \n  <tr> \n   <td>Ÿ</td> \n   <td>%9F</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>%A0</td> \n  </tr> \n  <tr> \n   <td>&iexcl;</td> \n   <td>%A1</td> \n  </tr> \n  <tr> \n   <td>&cent;</td> \n   <td>%A2</td> \n  </tr> \n  <tr> \n   <td>&pound;</td> \n   <td>%A3</td> \n  </tr> \n  <tr> \n   <td>&curren;</td> \n   <td>%A4</td> \n  </tr> \n  <tr> \n   <td>&yen;</td> \n   <td>%A5</td> \n  </tr> \n  <tr> \n   <td>&brvbar;</td> \n   <td>%A6</td> \n  </tr> \n  <tr> \n   <td>&sect;</td> \n   <td>%A7</td> \n  </tr> \n  <tr> \n   <td>&uml;</td> \n   <td>%A8</td> \n  </tr> \n  <tr> \n   <td>&copy;</td> \n   <td>%A9</td> \n  </tr> \n  <tr> \n   <td>&ordf;</td> \n   <td>%AA</td> \n  </tr> \n  <tr> \n   <td>&laquo;</td> \n   <td>%AB</td> \n  </tr> \n  <tr> \n   <td>&not;</td> \n   <td>%AC</td> \n  </tr> \n  <tr> \n   <td>&shy;</td> \n   <td>%AD</td> \n  </tr> \n  <tr> \n   <td>&reg;</td> \n   <td>%AE</td> \n  </tr> \n  <tr> \n   <td>&macr;</td> \n   <td>%AF</td> \n  </tr> \n  <tr> \n   <td>&deg;</td> \n   <td>%B0</td> \n  </tr> \n  <tr> \n   <td>&plusmn;</td> \n   <td>%B1</td> \n  </tr> \n  <tr> \n   <td>&sup2;</td> \n   <td>%B2</td> \n  </tr> \n  <tr> \n   <td>&sup3;</td> \n   <td>%B3</td> \n  </tr> \n  <tr> \n   <td>&acute;</td> \n   <td>%B4</td> \n  </tr> \n  <tr> \n   <td>&micro;</td> \n   <td>%B5</td> \n  </tr> \n  <tr> \n   <td>&para;</td> \n   <td>%B6</td> \n  </tr> \n  <tr> \n   <td>&middot;</td> \n   <td>%B7</td> \n  </tr> \n  <tr> \n   <td>&cedil;</td> \n   <td>%B8</td> \n  </tr> \n  <tr> \n   <td>&sup1;</td> \n   <td>%B9</td> \n  </tr> \n  <tr> \n   <td>&ordm;</td> \n   <td>%BA</td> \n  </tr> \n  <tr> \n   <td>&raquo;</td> \n   <td>%BB</td> \n  </tr> \n  <tr> \n   <td>&frac14;</td> \n   <td>%BC</td> \n  </tr> \n  <tr> \n   <td>&frac12;</td> \n   <td>%BD</td> \n  </tr> \n  <tr> \n   <td>&frac34;</td> \n   <td>%BE</td> \n  </tr> \n  <tr> \n   <td>&iquest;</td> \n   <td>%BF</td> \n  </tr> \n  <tr> \n   <td>&Agrave;</td> \n   <td>%C0</td> \n  </tr> \n  <tr> \n   <td>&Aacute;</td> \n   <td>%C1</td> \n  </tr> \n  <tr> \n   <td>&Acirc;</td> \n   <td>%C2</td> \n  </tr> \n  <tr> \n   <td>&Atilde;</td> \n   <td>%C3</td> \n  </tr> \n  <tr> \n   <td>&Auml;</td> \n   <td>%C4</td> \n  </tr> \n  <tr> \n   <td>&Aring;</td> \n   <td>%C5</td> \n  </tr> \n  <tr> \n   <td>&AElig;</td> \n   <td>%C6</td> \n  </tr> \n  <tr> \n   <td>&Ccedil;</td> \n   <td>%C7</td> \n  </tr> \n  <tr> \n   <td>&Egrave;</td> \n   <td>%C8</td> \n  </tr> \n  <tr> \n   <td>&Eacute;</td> \n   <td>%C9</td> \n  </tr> \n  <tr> \n   <td>&Ecirc;</td> \n   <td>%CA</td> \n  </tr> \n  <tr> \n   <td>&Euml;</td> \n   <td>%CB</td> \n  </tr> \n  <tr> \n   <td>&Igrave;</td> \n   <td>%CC</td> \n  </tr> \n  <tr> \n   <td>&Iacute;</td> \n   <td>%CD</td> \n  </tr> \n  <tr> \n   <td>&Icirc;</td> \n   <td>%CE</td> \n  </tr> \n  <tr> \n   <td>&Iuml;</td> \n   <td>%CF</td> \n  </tr> \n  <tr> \n   <td>&ETH;</td> \n   <td>%D0</td> \n  </tr> \n  <tr> \n   <td>&Ntilde;</td> \n   <td>%D1</td> \n  </tr> \n  <tr> \n   <td>&Ograve;</td> \n   <td>%D2</td> \n  </tr> \n  <tr> \n   <td>&Oacute;</td> \n   <td>%D3</td> \n  </tr> \n  <tr> \n   <td>&Ocirc;</td> \n   <td>%D4</td> \n  </tr> \n  <tr> \n   <td>&Otilde;</td> \n   <td>%D5</td> \n  </tr> \n  <tr> \n   <td>&Ouml;</td> \n   <td>%D6</td> \n  </tr> \n  <tr> \n   <td>&times;</td> \n   <td>%D7</td> \n  </tr> \n  <tr> \n   <td>&Oslash;</td> \n   <td>%D8</td> \n  </tr> \n  <tr> \n   <td>&Ugrave;</td> \n   <td>%D9</td> \n  </tr> \n  <tr> \n   <td>&Uacute;</td> \n   <td>%DA</td> \n  </tr> \n  <tr> \n   <td>&Ucirc;</td> \n   <td>%DB</td> \n  </tr> \n  <tr> \n   <td>&Uuml;</td> \n   <td>%DC</td> \n  </tr> \n  <tr> \n   <td>&Yacute;</td> \n   <td>%DD</td> \n  </tr> \n  <tr> \n   <td>&THORN;</td> \n   <td>%DE</td> \n  </tr> \n  <tr> \n   <td>&szlig;</td> \n   <td>%DF</td> \n  </tr> \n  <tr> \n   <td>&agrave;</td> \n   <td>%E0</td> \n  </tr> \n  <tr> \n   <td>&aacute;</td> \n   <td>%E1</td> \n  </tr> \n  <tr> \n   <td>&acirc;</td> \n   <td>%E2</td> \n  </tr> \n  <tr> \n   <td>&atilde;</td> \n   <td>%E3</td> \n  </tr> \n  <tr> \n   <td>&auml;</td> \n   <td>%E4</td> \n  </tr> \n  <tr> \n   <td>&aring;</td> \n   <td>%E5</td> \n  </tr> \n  <tr> \n   <td>&aelig;</td> \n   <td>%E6</td> \n  </tr> \n  <tr> \n   <td>&ccedil;</td> \n   <td>%E7</td> \n  </tr> \n  <tr> \n   <td>&egrave;</td> \n   <td>%E8</td> \n  </tr> \n  <tr> \n   <td>&eacute;</td> \n   <td>%E9</td> \n  </tr> \n  <tr> \n   <td>&ecirc;</td> \n   <td>%EA</td> \n  </tr> \n  <tr> \n   <td>&euml;</td> \n   <td>%EB</td> \n  </tr> \n  <tr> \n   <td>&igrave;</td> \n   <td>%EC</td> \n  </tr> \n  <tr> \n   <td>&iacute;</td> \n   <td>%ED</td> \n  </tr> \n  <tr> \n   <td>&icirc;</td> \n   <td>%EE</td> \n  </tr> \n  <tr> \n   <td>&iuml;</td> \n   <td>%EF</td> \n  </tr> \n  <tr> \n   <td>&eth;</td> \n   <td>%F0</td> \n  </tr> \n  <tr> \n   <td>&ntilde;</td> \n   <td>%F1</td> \n  </tr> \n  <tr> \n   <td>&ograve;</td> \n   <td>%F2</td> \n  </tr> \n  <tr> \n   <td>&oacute;</td> \n   <td>%F3</td> \n  </tr> \n  <tr> \n   <td>&ocirc;</td> \n   <td>%F4</td> \n  </tr> \n  <tr> \n   <td>&otilde;</td> \n   <td>%F5</td> \n  </tr> \n  <tr> \n   <td>&ouml;</td> \n   <td>%F6</td> \n  </tr> \n  <tr> \n   <td>&divide;</td> \n   <td>%F7</td> \n  </tr> \n  <tr> \n   <td>&oslash;</td> \n   <td>%F8</td> \n  </tr> \n  <tr> \n   <td>&ugrave;</td> \n   <td>%F9</td> \n  </tr> \n  <tr> \n   <td>&uacute;</td> \n   <td>%FA</td> \n  </tr> \n  <tr> \n   <td>&ucirc;</td> \n   <td>%FB</td> \n  </tr> \n  <tr> \n   <td>&uuml;</td> \n   <td>%FC</td> \n  </tr> \n  <tr> \n   <td>&yacute;</td> \n   <td>%FD</td> \n  </tr> \n  <tr> \n   <td>&thorn;</td> \n   <td>%FE</td> \n  </tr> \n  <tr> \n   <td>&yuml;</td> \n   <td>%FF</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>URL 编码参考手册</h2> \n<p>ASCII 设备控制字符最初被设计为用来控制诸如打印机和磁带驱动器之类的硬件设备。在URL中这些字符不会起任何作用。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">ASCII 字符</th> \n   <th align=\"left\">描述</th> \n   <th align=\"left\">URL-编码</th> \n  </tr> \n  <tr> \n   <td>NUL</td> \n   <td>null character</td> \n   <td>%00</td> \n  </tr> \n  <tr> \n   <td>SOH</td> \n   <td>start of header</td> \n   <td>%01</td> \n  </tr> \n  <tr> \n   <td>STX</td> \n   <td>start of text</td> \n   <td>%02</td> \n  </tr> \n  <tr> \n   <td>ETX</td> \n   <td>end of text</td> \n   <td>%03</td> \n  </tr> \n  <tr> \n   <td>EOT</td> \n   <td>end of transmission</td> \n   <td>%04</td> \n  </tr> \n  <tr> \n   <td>ENQ</td> \n   <td>enquiry</td> \n   <td>%05</td> \n  </tr> \n  <tr> \n   <td>ACK</td> \n   <td>acknowledge</td> \n   <td>%06</td> \n  </tr> \n  <tr> \n   <td>BEL</td> \n   <td>bell (ring)</td> \n   <td>%07</td> \n  </tr> \n  <tr> \n   <td>BS</td> \n   <td>backspace</td> \n   <td>%08</td> \n  </tr> \n  <tr> \n   <td>HT</td> \n   <td>horizontal tab</td> \n   <td>%09</td> \n  </tr> \n  <tr> \n   <td>LF</td> \n   <td>line feed</td> \n   <td>%0A</td> \n  </tr> \n  <tr> \n   <td>VT</td> \n   <td>vertical tab</td> \n   <td>%0B</td> \n  </tr> \n  <tr> \n   <td>FF</td> \n   <td>form feed</td> \n   <td>%0C</td> \n  </tr> \n  <tr> \n   <td>CR</td> \n   <td>carriage return</td> \n   <td>%0D</td> \n  </tr> \n  <tr> \n   <td>SO</td> \n   <td>shift out</td> \n   <td>%0E</td> \n  </tr> \n  <tr> \n   <td>SI</td> \n   <td>shift in</td> \n   <td>%0F</td> \n  </tr> \n  <tr> \n   <td>DLE</td> \n   <td>data link escape</td> \n   <td>%10</td> \n  </tr> \n  <tr> \n   <td>DC1</td> \n   <td>device control 1</td> \n   <td>%11</td> \n  </tr> \n  <tr> \n   <td>DC2</td> \n   <td>device control 2</td> \n   <td>%12</td> \n  </tr> \n  <tr> \n   <td>DC3</td> \n   <td>device control 3</td> \n   <td>%13</td> \n  </tr> \n  <tr> \n   <td>DC4</td> \n   <td>device control 4</td> \n   <td>%14</td> \n  </tr> \n  <tr> \n   <td>NAK</td> \n   <td>negative acknowledge</td> \n   <td>%15</td> \n  </tr> \n  <tr> \n   <td>SYN</td> \n   <td>synchronize</td> \n   <td>%16</td> \n  </tr> \n  <tr> \n   <td>ETB</td> \n   <td>end transmission block</td> \n   <td>%17</td> \n  </tr> \n  <tr> \n   <td>CAN</td> \n   <td>cancel</td> \n   <td>%18</td> \n  </tr> \n  <tr> \n   <td>EM</td> \n   <td>end of medium</td> \n   <td>%19</td> \n  </tr> \n  <tr> \n   <td>SUB</td> \n   <td>substitute</td> \n   <td>%1A</td> \n  </tr> \n  <tr> \n   <td>ESC</td> \n   <td>escape</td> \n   <td>%1B</td> \n  </tr> \n  <tr> \n   <td>FS</td> \n   <td>file separator</td> \n   <td>%1C</td> \n  </tr> \n  <tr> \n   <td>GS</td> \n   <td>group separator</td> \n   <td>%1D</td> \n  </tr> \n  <tr> \n   <td>RS</td> \n   <td>record separator</td> \n   <td>%1E</td> \n  </tr> \n  <tr> \n   <td>US</td> \n   <td>unit separator</td> \n   <td>%1F</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML URL 编码 参考手册|URL - 统一资源定位器|URL 编码|尝试一下|URL 编码函数|URL 编码参考手册|URL 编码参考手册|');
INSERT INTO `schoolcontent` VALUES ('68', '70', '<h1>HTML <span class=\"color_h1\">语言代码</span> 参考手册</h1> \n<hr /> \n<h2>ISO 语言代码</h2> \n<p>HTML 的 lang 属性可用于声明网页或部分网页的语言。这对搜索引擎和浏览器是有帮助的。</p> \n<p>根据 W3C 推荐标准，您应该通过 &lt;html&gt; 标签中的 lang 属性对每张页面中的主要语言进行声明，比如：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;html lang=&quot;en&quot;&gt;\n  <br /> ...\n  <br /> &lt;/html&gt; \n </div>\n</div> \n<p>在 XHTML 中，采用如下方式在 &lt;html&gt; 标签中对语言进行声明：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; lang=&quot;en&quot; xml:lang=&quot;en&quot;&gt;\n  <br /> ...\n  <br /> &lt;/html&gt; \n </div>\n</div> \n<br /> \n<hr /> \n<h2>ISO 639-1 语言代码</h2> \n<p>ISO 639-1 为各种语言定义了缩略词。您可以在 HTML 和 XHTML 中的 lang 和 xml:lang 属性中使用它们。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\">语言</th> \n   <th align=\"left\">ISO 代码</th> \n  </tr> \n  <tr> \n   <td>Abkhazian</td> \n   <td>ab</td> \n  </tr> \n  <tr> \n   <td>Afar</td> \n   <td>aa</td> \n  </tr> \n  <tr> \n   <td>Afrikaans</td> \n   <td>af</td> \n  </tr> \n  <tr> \n   <td>Albanian</td> \n   <td>sq</td> \n  </tr> \n  <tr> \n   <td>Amharic</td> \n   <td>am</td> \n  </tr> \n  <tr> \n   <td>Arabic</td> \n   <td>ar</td> \n  </tr> \n  <tr> \n   <td>Aragonese</td> \n   <td>an</td> \n  </tr> \n  <tr> \n   <td>Armenian</td> \n   <td>hy</td> \n  </tr> \n  <tr> \n   <td>Assamese</td> \n   <td>as</td> \n  </tr> \n  <tr> \n   <td>Aymara</td> \n   <td>ay</td> \n  </tr> \n  <tr> \n   <td>Azerbaijani</td> \n   <td>az</td> \n  </tr> \n  <tr> \n   <td>Bashkir</td> \n   <td>ba</td> \n  </tr> \n  <tr> \n   <td>Basque</td> \n   <td>eu</td> \n  </tr> \n  <tr> \n   <td>Bengali (Bangla)</td> \n   <td>bn</td> \n  </tr> \n  <tr> \n   <td>Bhutani</td> \n   <td>dz</td> \n  </tr> \n  <tr> \n   <td>Bihari</td> \n   <td>bh</td> \n  </tr> \n  <tr> \n   <td>Bislama</td> \n   <td>bi</td> \n  </tr> \n  <tr> \n   <td>Breton</td> \n   <td>br</td> \n  </tr> \n  <tr> \n   <td>Bulgarian</td> \n   <td>bg</td> \n  </tr> \n  <tr> \n   <td>Burmese</td> \n   <td>my</td> \n  </tr> \n  <tr> \n   <td>Byelorussian (Belarusian)</td> \n   <td>be</td> \n  </tr> \n  <tr> \n   <td>Cambodian</td> \n   <td>km</td> \n  </tr> \n  <tr> \n   <td>Catalan</td> \n   <td>ca</td> \n  </tr> \n  <tr> \n   <td>Cherokee</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Chewa</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Chinese (简体)</td> \n   <td>zh</td> \n  </tr> \n  <tr> \n   <td>Chinese (繁体)</td> \n   <td>zh</td> \n  </tr> \n  <tr> \n   <td>Corsican</td> \n   <td>co</td> \n  </tr> \n  <tr> \n   <td>Croatian</td> \n   <td>hr</td> \n  </tr> \n  <tr> \n   <td>Czech</td> \n   <td>cs</td> \n  </tr> \n  <tr> \n   <td>Danish</td> \n   <td>da</td> \n  </tr> \n  <tr> \n   <td>Divehi</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Dutch</td> \n   <td>nl</td> \n  </tr> \n  <tr> \n   <td>Edo</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>English</td> \n   <td>en</td> \n  </tr> \n  <tr> \n   <td>Esperanto</td> \n   <td>eo</td> \n  </tr> \n  <tr> \n   <td>Estonian</td> \n   <td>et</td> \n  </tr> \n  <tr> \n   <td>Faeroese</td> \n   <td>fo</td> \n  </tr> \n  <tr> \n   <td>Farsi</td> \n   <td>fa</td> \n  </tr> \n  <tr> \n   <td>Fiji</td> \n   <td>fj</td> \n  </tr> \n  <tr> \n   <td>Finnish</td> \n   <td>fi</td> \n  </tr> \n  <tr> \n   <td>Flemish</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>French</td> \n   <td>fr</td> \n  </tr> \n  <tr> \n   <td>Frisian</td> \n   <td>fy</td> \n  </tr> \n  <tr> \n   <td>Fulfulde</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Galician</td> \n   <td>gl</td> \n  </tr> \n  <tr> \n   <td>Gaelic (Scottish)</td> \n   <td>gd</td> \n  </tr> \n  <tr> \n   <td>Gaelic (Manx)</td> \n   <td>gv</td> \n  </tr> \n  <tr> \n   <td>Georgian</td> \n   <td>ka</td> \n  </tr> \n  <tr> \n   <td>German</td> \n   <td>de</td> \n  </tr> \n  <tr> \n   <td>Greek</td> \n   <td>el</td> \n  </tr> \n  <tr> \n   <td>Greenlandic</td> \n   <td>kl</td> \n  </tr> \n  <tr> \n   <td>Guarani</td> \n   <td>gn</td> \n  </tr> \n  <tr> \n   <td>Gujarati</td> \n   <td>gu</td> \n  </tr> \n  <tr> \n   <td>Haitian Creole</td> \n   <td>ht</td> \n  </tr> \n  <tr> \n   <td>Hausa</td> \n   <td>ha</td> \n  </tr> \n  <tr> \n   <td>Hawaiian</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Hebrew</td> \n   <td>he, iw</td> \n  </tr> \n  <tr> \n   <td>Hindi</td> \n   <td>hi</td> \n  </tr> \n  <tr> \n   <td>Hungarian</td> \n   <td>hu</td> \n  </tr> \n  <tr> \n   <td>Ibibio</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Icelandic</td> \n   <td>is</td> \n  </tr> \n  <tr> \n   <td>Ido</td> \n   <td>io</td> \n  </tr> \n  <tr> \n   <td>Igbo</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Indonesian</td> \n   <td>id, in</td> \n  </tr> \n  <tr> \n   <td>Interlingua</td> \n   <td>ia</td> \n  </tr> \n  <tr> \n   <td>Interlingue</td> \n   <td>ie</td> \n  </tr> \n  <tr> \n   <td>Inuktitut</td> \n   <td>iu</td> \n  </tr> \n  <tr> \n   <td>Inupiak</td> \n   <td>ik</td> \n  </tr> \n  <tr> \n   <td>Irish</td> \n   <td>ga</td> \n  </tr> \n  <tr> \n   <td>Italian</td> \n   <td>it</td> \n  </tr> \n  <tr> \n   <td>Japanese</td> \n   <td>ja</td> \n  </tr> \n  <tr> \n   <td>Javanese</td> \n   <td>jv</td> \n  </tr> \n  <tr> \n   <td>Kannada</td> \n   <td>kn</td> \n  </tr> \n  <tr> \n   <td>Kanuri</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Kashmiri</td> \n   <td>ks</td> \n  </tr> \n  <tr> \n   <td>Kazakh</td> \n   <td>kk</td> \n  </tr> \n  <tr> \n   <td>Kinyarwanda (Ruanda)</td> \n   <td>rw</td> \n  </tr> \n  <tr> \n   <td>Kirghiz</td> \n   <td>ky</td> \n  </tr> \n  <tr> \n   <td>Kirundi (Rundi)</td> \n   <td>rn</td> \n  </tr> \n  <tr> \n   <td>Konkani</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Korean</td> \n   <td>ko</td> \n  </tr> \n  <tr> \n   <td>Kurdish</td> \n   <td>ku</td> \n  </tr> \n  <tr> \n   <td>Laothian</td> \n   <td>lo</td> \n  </tr> \n  <tr> \n   <td>Latin</td> \n   <td>la</td> \n  </tr> \n  <tr> \n   <td>Latvian (Lettish)</td> \n   <td>lv</td> \n  </tr> \n  <tr> \n   <td>Limburgish ( Limburger)</td> \n   <td>li</td> \n  </tr> \n  <tr> \n   <td>Lingala</td> \n   <td>ln</td> \n  </tr> \n  <tr> \n   <td>Lithuanian</td> \n   <td>lt</td> \n  </tr> \n  <tr> \n   <td>Macedonian</td> \n   <td>mk</td> \n  </tr> \n  <tr> \n   <td>Malagasy</td> \n   <td>mg</td> \n  </tr> \n  <tr> \n   <td>Malay</td> \n   <td>ms</td> \n  </tr> \n  <tr> \n   <td>Malayalam</td> \n   <td>ml</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Maltese</td> \n   <td>mt</td> \n  </tr> \n  <tr> \n   <td>Maori</td> \n   <td>mi</td> \n  </tr> \n  <tr> \n   <td>Marathi</td> \n   <td>mr</td> \n  </tr> \n  <tr> \n   <td>Moldavian</td> \n   <td>mo</td> \n  </tr> \n  <tr> \n   <td>Mongolian</td> \n   <td>mn</td> \n  </tr> \n  <tr> \n   <td>Nauru</td> \n   <td>na</td> \n  </tr> \n  <tr> \n   <td>Nepali</td> \n   <td>ne</td> \n  </tr> \n  <tr> \n   <td>Norwegian</td> \n   <td>no</td> \n  </tr> \n  <tr> \n   <td>Occitan</td> \n   <td>oc</td> \n  </tr> \n  <tr> \n   <td>Oriya</td> \n   <td>or</td> \n  </tr> \n  <tr> \n   <td>Oromo (Afaan Oromo)</td> \n   <td>om</td> \n  </tr> \n  <tr> \n   <td>Papiamentu</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Pashto (Pushto)</td> \n   <td>ps</td> \n  </tr> \n  <tr> \n   <td>Polish</td> \n   <td>pl</td> \n  </tr> \n  <tr> \n   <td>Portuguese</td> \n   <td>pt</td> \n  </tr> \n  <tr> \n   <td>Punjabi</td> \n   <td>pa</td> \n  </tr> \n  <tr> \n   <td>Quechua</td> \n   <td>qu</td> \n  </tr> \n  <tr> \n   <td>Rhaeto-Romance</td> \n   <td>rm</td> \n  </tr> \n  <tr> \n   <td>Romanian</td> \n   <td>ro</td> \n  </tr> \n  <tr> \n   <td>Russian</td> \n   <td>ru</td> \n  </tr> \n  <tr> \n   <td>Sami (Lappish)</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Samoan</td> \n   <td>sm</td> \n  </tr> \n  <tr> \n   <td>Sangro</td> \n   <td>sg</td> \n  </tr> \n  <tr> \n   <td>Sanskrit</td> \n   <td>sa</td> \n  </tr> \n  <tr> \n   <td>Serbian</td> \n   <td>sr</td> \n  </tr> \n  <tr> \n   <td>Serbo-Croatian</td> \n   <td>sh</td> \n  </tr> \n  <tr> \n   <td>Sesotho</td> \n   <td>st</td> \n  </tr> \n  <tr> \n   <td>Setswana</td> \n   <td>tn</td> \n  </tr> \n  <tr> \n   <td>Shona</td> \n   <td>sn</td> \n  </tr> \n  <tr> \n   <td>Sichuan Yi</td> \n   <td>ii</td> \n  </tr> \n  <tr> \n   <td>Sindhi</td> \n   <td>sd</td> \n  </tr> \n  <tr> \n   <td>Sinhalese</td> \n   <td>si</td> \n  </tr> \n  <tr> \n   <td>Siswati</td> \n   <td>ss</td> \n  </tr> \n  <tr> \n   <td>Slovak</td> \n   <td>sk</td> \n  </tr> \n  <tr> \n   <td>Slovenian</td> \n   <td>sl</td> \n  </tr> \n  <tr> \n   <td>Somali</td> \n   <td>so</td> \n  </tr> \n  <tr> \n   <td>Spanish</td> \n   <td>es</td> \n  </tr> \n  <tr> \n   <td>Sundanese</td> \n   <td>su</td> \n  </tr> \n  <tr> \n   <td>Swahili (Kiswahili)</td> \n   <td>sw</td> \n  </tr> \n  <tr> \n   <td>Swedish</td> \n   <td>sv</td> \n  </tr> \n  <tr> \n   <td>Syriac</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Tagalog</td> \n   <td>tl</td> \n  </tr> \n  <tr> \n   <td>Tajik</td> \n   <td>tg</td> \n  </tr> \n  <tr> \n   <td>Tamazight</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Tamil</td> \n   <td>ta</td> \n  </tr> \n  <tr> \n   <td>Tatar</td> \n   <td>tt</td> \n  </tr> \n  <tr> \n   <td>Telugu</td> \n   <td>te</td> \n  </tr> \n  <tr> \n   <td>Thai</td> \n   <td>th</td> \n  </tr> \n  <tr> \n   <td>Tibetan</td> \n   <td>bo</td> \n  </tr> \n  <tr> \n   <td>Tigrinya</td> \n   <td>ti</td> \n  </tr> \n  <tr> \n   <td>Tonga</td> \n   <td>to</td> \n  </tr> \n  <tr> \n   <td>Tsonga</td> \n   <td>ts</td> \n  </tr> \n  <tr> \n   <td>Turkish</td> \n   <td>tr</td> \n  </tr> \n  <tr> \n   <td>Turkmen</td> \n   <td>tk</td> \n  </tr> \n  <tr> \n   <td>Twi</td> \n   <td>tw</td> \n  </tr> \n  <tr> \n   <td>Uighur</td> \n   <td>ug</td> \n  </tr> \n  <tr> \n   <td>Ukrainian</td> \n   <td>uk</td> \n  </tr> \n  <tr> \n   <td>Urdu</td> \n   <td>ur</td> \n  </tr> \n  <tr> \n   <td>Uzbek</td> \n   <td>uz</td> \n  </tr> \n  <tr> \n   <td>Venda</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Vietnamese</td> \n   <td>vi</td> \n  </tr> \n  <tr> \n   <td>Volap&uuml;k</td> \n   <td>vo</td> \n  </tr> \n  <tr> \n   <td>Wallon</td> \n   <td>wa</td> \n  </tr> \n  <tr> \n   <td>Welsh</td> \n   <td>cy</td> \n  </tr> \n  <tr> \n   <td>Wolof</td> \n   <td>wo</td> \n  </tr> \n  <tr> \n   <td>Xhosa</td> \n   <td>xh</td> \n  </tr> \n  <tr> \n   <td>Yi</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>Yiddish</td> \n   <td>yi, ji</td> \n  </tr> \n  <tr> \n   <td>Yoruba</td> \n   <td>yo</td> \n  </tr> \n  <tr> \n   <td>Zulu</td> \n   <td>zu</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML 语言代码 参考手册|ISO 语言代码|ISO 639-1 语言代码|');
INSERT INTO `schoolcontent` VALUES ('69', '71', '<h1>HTTP <span class=\"color_h1\">状态消息</span></h1> \n<hr /> \n<p class=\"intro\">当浏览器从 web 服务器请求服务时，可能会发生错误。</p> \n<p class=\"intro\">以下列举了有可能会返回的一系列 HTTP 状态消息：</p> \n<hr /> \n<h2>1xx: 信息</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"40%\">消息：</th> \n   <th align=\"left\" width=\"60%\">描述：</th> \n  </tr> \n  <tr> \n   <td>100 Continue</td> \n   <td>服务器仅接收到部分请求，但是一旦服务器并没有拒绝该请求，客户端应该继续发送其余的请求。</td> \n  </tr> \n  <tr> \n   <td>101 Switching Protocols</td> \n   <td>服务器转换协议：服务器将遵从客户的请求转换到另外一种协议。</td> \n  </tr> \n  <tr> \n   <td>103 Checkpoint</td> \n   <td>用于 PUT 或者 POST 请求恢复失败时的恢复请求建议。</td> \n  </tr> \n </tbody>\n</table> \n<h2>2xx: 成功</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"40%\">消息：</th> \n   <th align=\"left\" width=\"60%\">描述：</th> \n  </tr> \n  <tr> \n   <td>200 OK</td> \n   <td>请求成功（这是对HTTP请求成功的标准应答。）</td> \n  </tr> \n  <tr> \n   <td>201 Created</td> \n   <td>请求被创建完成，同时新的资源被创建。 </td> \n  </tr> \n  <tr> \n   <td>202 Accepted</td> \n   <td>供处理的请求已被接受，但是处理未完成。 </td> \n  </tr> \n  <tr> \n   <td>203 Non-Authoritative Information</td> \n   <td>请求已经被成功处理，但是一些应答头可能不正确，因为使用的是其他文档的拷贝。</td> \n  </tr> \n  <tr> \n   <td>204 No Content</td> \n   <td>请求已经被成功处理，但是没有返回新文档。浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。</td> \n  </tr> \n  <tr> \n   <td>205 Reset Content</td> \n   <td>请求已经被成功处理，但是没有返回新文档。但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容。</td> \n  </tr> \n  <tr> \n   <td>206 Partial Content</td> \n   <td>客户发送了一个带有Range头的GET请求，服务器完成了它。</td> \n  </tr> \n </tbody>\n</table> \n<h2>3xx: 重定向</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"40%\">消息：</th> \n   <th align=\"left\" width=\"60%\">描述：</th> \n  </tr> \n  <tr> \n   <td>300 Multiple Choices</td> \n   <td>多重选择。链接列表。用户可以选择某链接到达目的地。最多允许五个地址。</td> \n  </tr> \n  <tr> \n   <td>301 Moved Permanently</td> \n   <td>所请求的页面已经转移至新的 URL 。 </td> \n  </tr> \n  <tr> \n   <td>302 Found</td> \n   <td>所请求的页面已经临时转移至新的 URL 。 </td> \n  </tr> \n  <tr> \n   <td>303 See Other</td> \n   <td>所请求的页面可在别的 URL 下被找到。</td> \n  </tr> \n  <tr> \n   <td>304 Not Modified</td> \n   <td>未按预期修改文档。客户端有缓冲的文档并发出了一个条件性的请求（一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档）。服务器告诉客户，原来缓冲的文档还可以继续使用。</td> \n  </tr> \n  <tr> \n   <td>305 Use Proxy</td> \n   <td>客户请求的文档应该通过Location头所指明的代理服务器提取。</td> \n  </tr> \n  <tr> \n   <td>306 Switch Proxy</td> \n   <td><i>目前已不再使用，但是代码依然被保留。</i></td> \n  </tr> \n  <tr> \n   <td>307 Temporary Redirect</td> \n   <td>被请求的页面已经临时移至新的 URL 。</td> \n  </tr> \n  <tr> \n   <td>308 Resume Incomplete</td> \n   <td>用于 PUT 或者 POST 请求恢复失败时的恢复请求建议。</td> \n  </tr> \n </tbody>\n</table> \n<h2>4xx: 客户端错误</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"40%\">消息：</th> \n   <th align=\"left\" width=\"60%\">描述：</th> \n  </tr> \n  <tr> \n   <td>400&nbsp;Bad Request</td> \n   <td>因为语法错误，服务器未能理解请求。</td> \n  </tr> \n  <tr> \n   <td>401 Unauthorized</td> \n   <td>合法请求，但对被请求页面的访问被禁止。因为被请求的页面需要身份验证，客户端没有提供或者身份验证失败。</td> \n  </tr> \n  <tr> \n   <td>402 Payment Required</td> \n   <td><i>此代码尚无法使用。</i> </td> \n  </tr> \n  <tr> \n   <td>403 Forbidden</td> \n   <td>合法请求，但对被请求页面的访问被禁止。</td> \n  </tr> \n  <tr> \n   <td>404 Not Found</td> \n   <td>服务器无法找到被请求的页面。</td> \n  </tr> \n  <tr> \n   <td>405 Method Not Allowed</td> \n   <td>请求中指定的方法不被允许。</td> \n  </tr> \n  <tr> \n   <td>406 Not Acceptable</td> \n   <td>服务器生成的响应无法被客户端所接受。 </td> \n  </tr> \n  <tr> \n   <td>407 Proxy Authentication Required</td> \n   <td>用户必须首先使用代理服务器进行验证，这样请求才会被处理。 </td> \n  </tr> \n  <tr> \n   <td>408 Request Timeout</td> \n   <td>请求超出了服务器的等待时间。 </td> \n  </tr> \n  <tr> \n   <td>409 Conflict</td> \n   <td>由于冲突，请求无法被完成。</td> \n  </tr> \n  <tr> \n   <td>410 Gone</td> \n   <td>被请求的页面不可用。</td> \n  </tr> \n  <tr> \n   <td>411 Length Required</td> \n   <td>&quot;Content-Length&quot; 未被定义。如果无此内容，服务器不会接受请求。 </td> \n  </tr> \n  <tr> \n   <td>412 Precondition Failed</td> \n   <td>请求中的前提条件被服务器评估为失败。 </td> \n  </tr> \n  <tr> \n   <td>413 Request Entity Too Large</td> \n   <td>由于所请求的实体太大，服务器不会接受请求。 </td> \n  </tr> \n  <tr> \n   <td>414 Request-URI Too Long</td> \n   <td>由于 URL 太长，服务器不会接受请求。当 POST 请求被转换为带有很长的查询信息的 GET 请求时，就会发生这种情况。 </td> \n  </tr> \n  <tr> \n   <td>415 Unsupported Media Type</td> \n   <td>由于媒介类型不被支持，服务器不会接受请求。 </td> \n  </tr> \n  <tr> \n   <td>416 Requested Range Not Satisfiable</td> \n   <td>客户端请求部分文档，但是服务器不能提供被请求的部分。</td> \n  </tr> \n  <tr> \n   <td>417 Expectation Failed</td> \n   <td>服务器不能满足客户在请求中指定的请求头。</td> \n  </tr> \n </tbody>\n</table> \n<h2>5xx: 服务器错误</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"40%\">消息：</th> \n   <th align=\"left\" width=\"60%\">描述：</th> \n  </tr> \n  <tr> \n   <td>500 Internal Server Error</td> \n   <td>请求未完成。服务器遇到不可预知的情况。</td> \n  </tr> \n  <tr> \n   <td>501 Not Implemented</td> \n   <td>请求未完成。服务器不支持所请求的功能，或者服务器无法完成请求。</td> \n  </tr> \n  <tr> \n   <td>502 Bad Gateway</td> \n   <td>请求未完成。服务器充当网关或者代理的角色时，从上游服务器收到一个无效的响应。</td> \n  </tr> \n  <tr> \n   <td>503 Service Unavailable</td> \n   <td>服务器当前不可用（过载或者当机）。 </td> \n  </tr> \n  <tr> \n   <td>504 Gateway Timeout</td> \n   <td>网关超时。服务器充当网关或者代理的角色时，未能从上游服务器收到一个及时的响应。</td> \n  </tr> \n  <tr> \n   <td>505 HTTP Version Not Supported</td> \n   <td>服务器不支持请求中指明的HTTP协议版本。 </td> \n  </tr> \n  <tr> \n   <td>511 Network Authentication Required</td> \n   <td>用户需要提供身份验证来获取网络访问入口。</td> \n  </tr> \n </tbody>\n</table>', null, 'HTTP 状态消息|1xx: 信息|2xx: 成功|3xx: 重定向|4xx: 客户端错误|5xx: 服务器错误|');
INSERT INTO `schoolcontent` VALUES ('70', '72', '<h1>HTTP <span class=\"color_h1\">方法：GET 对比 POST</span></h1> \n<hr /> \n<p class=\"intro\">两种最常用的 HTTP 方法是：GET 和 POST。</p> \n<hr /> \n<h2>什么是 HTTP ？</h2> \n<p>超文本传输协议（HTTP）的设计目的是保证客户端与服务器之间的通信。</p> \n<p>HTTP 的工作方式是客户端与服务器之间的请求-应答协议。</p> \n<p>web 浏览器可能是客户端，而计算机上的网络应用程序也可能作为服务器端。</p> \n<p>举例：客户端（浏览器）向服务器提交 HTTP 请求；服务器向客户端返回响应。响应包含关于请求的状态信息以及可能被请求的内容。</p> \n<hr /> \n<h2>两种 HTTP 请求方法：GET 和 POST</h2> \n<p>在客户机和服务器之间进行请求-响应时，两种最常被用到的方法是：GET 和 POST。</p> \n<ul> \n <li><b>GET</b> - 从指定的资源请求数据。</li> \n <li><b>POST</b> - 向指定的资源提交要被处理的数据。</li> \n</ul> \n<hr /> \n<h2>GET 方法</h2> \n<p><b>请注意，查询字符串（名称/值对）是在 GET 请求的 URL 中发送的：</b></p> \n<div class=\"code notranslate\"> \n <div>\n   /test/demo_form.php\n  <b>?name1=value1&amp;name2=value2</b> \n </div>\n</div> \n<p><b>有关 GET 请求的其他一些注释：</b></p> \n<ul> \n <li>GET 请求可被缓存</li> \n <li>GET 请求保留在浏览器历史记录中</li> \n <li>GET 请求可被收藏为书签</li> \n <li>GET 请求不应在处理敏感数据时使用</li> \n <li>GET 请求有长度限制</li> \n <li>GET 请求只应当用于取回数据</li> \n</ul> \n<hr /> \n<h2>POST 方法</h2> \n<p><b>请注意，查询字符串（名称/值对）是在 POST 请求的 HTTP 消息主体中发送的：</b></p> \n<div class=\"code notranslate\"> \n <div>\n   POST /test/demo_form.php HTTP/1.1\n  <br /> Host: w3cschool.cc\n  <br /> \n  <b>name1=value1&amp;name2=value2</b> \n </div>\n</div> \n<p><b>有关 POST 请求的其他一些注释：</b></p> \n<ul> \n <li>POST 请求不会被缓存</li> \n <li>POST 请求不会保留在浏览器历史记录中</li> \n <li>POST 不能被收藏为书签</li> \n <li>POST 请求对数据长度没有要求</li> \n</ul> \n<hr /> \n<h2>比较 GET 与 POST</h2> \n<p>下面的表格比较了两种 HTTP 方法：GET 和 POST。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"30%\">&nbsp;</th> \n   <th align=\"left\" width=\"35%\">GET</th> \n   <th align=\"left\" width=\"35%\">POST</th> \n  </tr> \n  <tr> \n   <td>后退按钮/刷新</td> \n   <td>无害</td> \n   <td>数据会被重新提交（浏览器应该告知用户数据会被重新提交）。</td> \n  </tr> \n  <tr> \n   <td>书签</td> \n   <td>可收藏为书签</td> \n   <td>不可收藏为书签</td> \n  </tr> \n  <tr> \n   <td>缓存</td> \n   <td>能被缓存</td> \n   <td>不能缓存</td> \n  </tr> \n  <tr> \n   <td>编码类型</td> \n   <td>application/x-www-form-urlencoded</td> \n   <td>application/x-www-form-urlencoded or multipart/form-data。为二进制数据使用多重编码。</td> \n  </tr> \n  <tr> \n   <td>历史</td> \n   <td>参数保留在浏览器历史中。</td> \n   <td>参数不会保存在浏览器历史中。</td> \n  </tr> \n  <tr> \n   <td>对数据长度的限制</td> \n   <td>是的。当发送数据时，GET 方法向 URL 添加数据；URL 的长度是受限制的（URL 的最大长度是 2048 个字符）。</td> \n   <td>无限制。</td> \n  </tr> \n  <tr> \n   <td>对数据类型的限制</td> \n   <td>只允许 ASCII 字符。</td> \n   <td>没有限制。也允许二进制数据。</td> \n  </tr> \n  <tr> \n   <td>安全性</td> \n   <td>与 POST 相比，GET 的安全性较差，因为所发送的数据是 URL 的一部分。<br /> <br /> 在发送密码或其他敏感信息时绝不要使用 GET ！</td> \n   <td>POST 比 GET 更安全，因为参数不会被保存在浏览器历史或 web 服务器日志中。</td> \n  </tr> \n  <tr> \n   <td>可见性</td> \n   <td>数据在 URL 中对所有人都是可见的。</td> \n   <td>数据不会显示在 URL 中。</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>其他 HTTP 请求方法</h2> \n<p>下面的表格列出了其他一些 HTTP 请求方法：</p> \n<table class=\"reference notranslate\" id=\"table1\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"15%\">方法</th> \n   <th align=\"left\" width=\"85%\">描述</th> \n  </tr> \n  <tr> \n   <td>HEAD</td> \n   <td>与 GET 相同，但只返回 HTTP 报头，不返回文档主体。</td> \n  </tr> \n  <tr> \n   <td>PUT</td> \n   <td>上传指定的 URI 表示。</td> \n  </tr> \n  <tr> \n   <td>DELETE</td> \n   <td>删除指定资源。</td> \n  </tr> \n  <tr> \n   <td>OPTIONS</td> \n   <td>返回服务器支持的 HTTP 方法。</td> \n  </tr> \n  <tr> \n   <td>CONNECT</td> \n   <td>把请求连接转换到透明的 TCP/IP 通道。</td> \n  </tr> \n </tbody>\n</table>', null, 'HTTP 方法：GET 对比 POST|什么是 HTTP ？|两种 HTTP 请求方法：GET 和 POST|GET 方法|POST 方法|比较 GET 与 POST|其他 HTTP 请求方法|');
INSERT INTO `schoolcontent` VALUES ('71', '73', '<h1>键盘<span class=\"color_h1\">快捷键</span></h1> \n<hr /> \n<p class=\"intro\">通过使用键盘快捷键可以节省时间。</p> \n<hr /> \n<h2>Windows 和 Mac 的键盘快捷键</h2> \n<p>在现代操作系统中和计算机软件程序中，键盘快捷键经常被使用。</p> \n<p>使用键盘快捷键能帮您节省很多时间。</p> \n<hr /> \n<h2>基本的快捷键</h2> \n<br /> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"44%\">描述</th> \n   <th width=\"28%\">Windows</th> \n   <th width=\"28%\">Mac OS</th> \n  </tr> \n  <tr> \n   <td>编辑菜单</td> \n   <td>Alt + E</td> \n   <td>Ctrl + F2 + F</td> \n  </tr> \n  <tr> \n   <td>文件菜单</td> \n   <td>Alt + F</td> \n   <td>Ctrl + F2 + E</td> \n  </tr> \n  <tr> \n   <td>视图菜单</td> \n   <td>Alt + V</td> \n   <td>Ctrl + F2 + V</td> \n  </tr> \n  <tr> \n   <td>全选文本</td> \n   <td>Ctrl + A</td> \n   <td>Cmd + A</td> \n  </tr> \n  <tr> \n   <td>复制文本</td> \n   <td>Ctrl + C</td> \n   <td>Cmd + C</td> \n  </tr> \n  <tr> \n   <td>查找文本</td> \n   <td>Ctrl + F</td> \n   <td>Cmd + F</td> \n  </tr> \n  <tr> \n   <td>查找替换文本</td> \n   <td>Ctrl + H</td> \n   <td>Cmd + F</td> \n  </tr> \n  <tr> \n   <td>新建文档</td> \n   <td>Ctrl + N</td> \n   <td>Cmd + N</td> \n  </tr> \n  <tr> \n   <td>打开文件</td> \n   <td>Ctrl + O</td> \n   <td>Cmd + O</td> \n  </tr> \n  <tr> \n   <td>打印选项</td> \n   <td>Ctrl + P</td> \n   <td>Cmd + P</td> \n  </tr> \n  <tr> \n   <td>保存文件</td> \n   <td>Ctrl + S</td> \n   <td>Cmd + S</td> \n  </tr> \n  <tr> \n   <td>粘贴文本</td> \n   <td>Ctrl + V</td> \n   <td>Cmd + V</td> \n  </tr> \n  <tr> \n   <td>剪切文本</td> \n   <td>Ctrl + X</td> \n   <td>Cmd + X</td> \n  </tr> \n  <tr> \n   <td>重做文本</td> \n   <td>Ctrl + Y</td> \n   <td>Shift + Cmd + Z </td> \n  </tr> \n  <tr> \n   <td>撤销文本</td> \n   <td>Ctrl + Z</td> \n   <td>Cmd + Z</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<br /> \n<hr /> \n<h2>文本编辑</h2> \n<br /> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"52%\">描述</th> \n   <th width=\"24%\">Windows</th> \n   <th width=\"24%\">Mac OS</th> \n  </tr> \n  <tr> \n   <td style=\"height:25px\"><strong>光标移动</strong></td> \n   <td style=\"height:25px\"></td> \n   <td style=\"height:25px\"></td> \n  </tr> \n  <tr> \n   <td>将文本插入光标向右移动或者移动到下一行行首</td> \n   <td>Right Arrow</td> \n   <td>Right Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标向左移动或者移动到上一行行尾</td> \n   <td>Left Arrow</td> \n   <td>Left Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标向上移动一行</td> \n   <td>Up Arrow</td> \n   <td>Up Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标向下移动一行</td> \n   <td>Down Arrow</td> \n   <td>Down Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标移动到当前行的行首</td> \n   <td>Home</td> \n   <td>Cmd + Left Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标移动到当前行的行尾</td> \n   <td>End</td> \n   <td>Cmd + Right Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标移动到文档的开头</td> \n   <td>Ctrl + Home</td> \n   <td>Cmd + Up Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标移动到文档的结尾</td> \n   <td>Ctrl + End</td> \n   <td>Cmd + Down Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标移动到上一个文本框</td> \n   <td>Page Up</td> \n   <td>Fn + Up Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标移动到下一个文本框</td> \n   <td>Page Down</td> \n   <td>Fn + Down Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标向左移动到前一个词的开头</td> \n   <td>Ctrl + Left Arrow</td> \n   <td>Option + Left Arrow </td> \n  </tr> \n  <tr> \n   <td>将文本插入光标向右移动到后一个词的开头</td> \n   <td>Ctrl + Right Arrow</td> \n   <td>Option + Right Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标移动到行首</td> \n   <td>Ctrl + Up Arrow</td> \n   <td>Cmd + Left Arrow</td> \n  </tr> \n  <tr> \n   <td>将文本插入光标移动到行尾</td> \n   <td>Ctrl + Down Arrow</td> \n   <td>Cmd + Right Arrow</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td style=\"height:25px;\"><strong>文本选择</strong></td> \n   <td style=\"height:25px;\"></td> \n   <td style=\"height:25px;\"></td> \n  </tr> \n  <tr> \n   <td>选择文本插入光标左边的字符</td> \n   <td>Shift + Left Arrow</td> \n   <td>Shift + Left Arrow</td> \n  </tr> \n  <tr> \n   <td>选择文本插入光标右边的字符</td> \n   <td>Shift + Right Arrow</td> \n   <td>Shift + Right Arrow</td> \n  </tr> \n  <tr> \n   <td>向上选择一行文本</td> \n   <td>Shift + Up Arrow</td> \n   <td>Shift + Up Arrow</td> \n  </tr> \n  <tr> \n   <td>向下选择一行文本</td> \n   <td>Shift + Down Arrow</td> \n   <td>Shift + Down Arrow</td> \n  </tr> \n  <tr> \n   <td>选择文本插入光标左边的字</td> \n   <td>Shift + Ctrl + Left</td> \n   <td>Shift + Opt + Left</td> \n  </tr> \n  <tr> \n   <td>选择文本插入光标右边的字</td> \n   <td>Shift + Ctrl + Right</td> \n   <td>Shift + Opt + Right</td> \n  </tr> \n  <tr> \n   <td>向左选择一段文本</td> \n   <td>Shift + Ctrl + Up</td> \n   <td>Shift + Opt + Up</td> \n  </tr> \n  <tr> \n   <td>向右选择一段文本</td> \n   <td>Shift + Ctrl + Down</td> \n   <td>Shift + Opt + Down</td> \n  </tr> \n  <tr> \n   <td>选择文本插入光标与当前行行首之间的文本</td> \n   <td>Shift + Home</td> \n   <td>Cmd + Shift + Left Arrow</td> \n  </tr> \n  <tr> \n   <td>选择文本插入光标与当前行行尾之间的文本</td> \n   <td>Shift + End</td> \n   <td>Cmd + Shift + Right Arrow</td> \n  </tr> \n  <tr> \n   <td>选择文本插入光标与文档开头之间的文本</td> \n   <td>Shift + Ctrl + Home</td> \n   <td>Cmd + Shift + Up Arrow or Cmd + Shift + Fn + Left Arrow</td> \n  </tr> \n  <tr> \n   <td>选择文本插入光标与文档结尾之间的文本</td> \n   <td>Shift + Ctrl + End</td> \n   <td>Cmd + Shift + Down Arrow or Cmd + Shift + Fn + Right Arrow</td> \n  </tr> \n  <tr> \n   <td>向上选择一个文本框</td> \n   <td>Shift + Page Up</td> \n   <td>Shift + Fn + Up Arrow</td> \n  </tr> \n  <tr> \n   <td>向下选择一个文本框</td> \n   <td>Shift + Page Down</td> \n   <td>Shift + Fn + Down Arrow</td> \n  </tr> \n  <tr> \n   <td>全选文本</td> \n   <td>Ctrl + A</td> \n   <td>Cmd + A</td> \n  </tr> \n  <tr> \n   <td>查找文本</td> \n   <td>Ctrl + F</td> \n   <td>Cmd + F</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td style=\"height:25px;\"><strong>文本排版</strong></td> \n   <td style=\"height:25px;\"></td> \n   <td style=\"height:25px;\"></td> \n  </tr> \n  <tr> \n   <td>将所选文本设置为粗体</td> \n   <td>Ctrl + B</td> \n   <td>Cmd + B</td> \n  </tr> \n  <tr> \n   <td>将所选文本设置为斜体</td> \n   <td>Ctrl + I</td> \n   <td>Cmd + I</td> \n  </tr> \n  <tr> \n   <td>将所选文本加下划线</td> \n   <td>Ctrl + U</td> \n   <td>Cmd + U</td> \n  </tr> \n  <tr> \n   <td>将所选文本设置为上标</td> \n   <td>Ctrl + Shift + =</td> \n   <td>Cmd + Shift + =</td> \n  </tr> \n  <tr> \n   <td>将所选文本设置为下标</td> \n   <td>Ctrl + =</td> \n   <td>Cmd + =</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td style=\"height:25px;\"><strong>文本编辑</strong></td> \n   <td style=\"height:25px;\"></td> \n   <td style=\"height:25px;\"></td> \n  </tr> \n  <tr> \n   <td>删除文本插入光标左边的字符</td> \n   <td>Backspace</td> \n   <td>Backspace</td> \n  </tr> \n  <tr> \n   <td>删除文本插入光标右边的字符</td> \n   <td>Delete</td> \n   <td>Fn + Backspace</td> \n  </tr> \n  <tr> \n   <td>删除文本插入光标右边的字</td> \n   <td>Ctrl + Del</td> \n   <td>Cmd + Backspace</td> \n  </tr> \n  <tr> \n   <td>删除文本插入光标左边的字</td> \n   <td>Ctrl + Backspace</td> \n   <td>Cmd + Fn + Backspace</td> \n  </tr> \n  <tr> \n   <td>增加缩进量</td> \n   <td>Tab</td> \n   <td>Tab</td> \n  </tr> \n  <tr> \n   <td>减少缩进量</td> \n   <td>Shift + Tab</td> \n   <td>Shift + Tab</td> \n  </tr> \n  <tr> \n   <td>复制文本</td> \n   <td>Ctrl + C</td> \n   <td>Cmd + C</td> \n  </tr> \n  <tr> \n   <td>查找替换文本</td> \n   <td>Ctrl + H</td> \n   <td>Cmd + F</td> \n  </tr> \n  <tr> \n   <td>粘贴文本</td> \n   <td>Ctrl + V</td> \n   <td>Cmd + V</td> \n  </tr> \n  <tr> \n   <td>剪切文本</td> \n   <td>Ctrl + X</td> \n   <td>Cmd + X</td> \n  </tr> \n  <tr> \n   <td>重做文本</td> \n   <td>Ctrl + Y</td> \n   <td>Shift + Cmd + Z </td> \n  </tr> \n  <tr> \n   <td>撤销文本</td> \n   <td>Ctrl + Z</td> \n   <td>Cmd + Z</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<br /> \n<hr /> \n<h2>Web 浏览器</h2> \n<br /> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"52%\">描述</th> \n   <th width=\"24%\">Windows</th> \n   <th width=\"24%\">Mac OS</th> \n  </tr> \n  <tr> \n   <td style=\"height:25px;\"><strong>Navigation</strong></td> \n   <td style=\"height:25px;\"></td> \n   <td style=\"height:25px;\"></td> \n  </tr> \n  <tr> \n   <td>向下滚动框</td> \n   <td>Space or Page Down</td> \n   <td>Space or Fn + Down Arrow</td> \n  </tr> \n  <tr> \n   <td>向上滚动框</td> \n   <td>Shift + Space or Page Up</td> \n   <td>Shift + Space or Fn + Up Arrow</td> \n  </tr> \n  <tr> \n   <td>定位到页面底部</td> \n   <td>End</td> \n   <td>Cmd + Down Arrow</td> \n  </tr> \n  <tr> \n   <td>定位到页面头部</td> \n   <td>Home</td> \n   <td>Cmd + Up Arrow</td> \n  </tr> \n  <tr> \n   <td>回退</td> \n   <td>Alt + Left Arrow or Backspace</td> \n   <td>Cmd + Left Arrow</td> \n  </tr> \n  <tr> \n   <td>前进</td> \n   <td>Alt + Right Arrow or Shift + Backspace</td> \n   <td>Cmd + Right Arrow</td> \n  </tr> \n  <tr> \n   <td>刷新网页</td> \n   <td>F5</td> \n   <td>Cmd + R</td> \n  </tr> \n  <tr> \n   <td>刷新网页（无缓存）</td> \n   <td>Ctrl + F5</td> \n   <td>Cmd + Shift + R</td> \n  </tr> \n  <tr> \n   <td>停止</td> \n   <td>Esc</td> \n   <td>Esc</td> \n  </tr> \n  <tr> \n   <td>全屏切换</td> \n   <td>F11</td> \n   <td>Cmd + Shift + F</td> \n  </tr> \n  <tr> \n   <td>放大</td> \n   <td>Ctrl + +</td> \n   <td>Cmd + +</td> \n  </tr> \n  <tr> \n   <td>缩小</td> \n   <td>Ctrl + -</td> \n   <td>Cmd + -</td> \n  </tr> \n  <tr> \n   <td>重置 100% （默认）</td> \n   <td>Ctrl + 0</td> \n   <td>Cmd + 0</td> \n  </tr> \n  <tr> \n   <td>打开主页</td> \n   <td>Alt + Home</td> \n   <td>Option + Home or Option + Fn + Left Arrow</td> \n  </tr> \n  <tr> \n   <td>查找文本</td> \n   <td>Ctrl + F</td> \n   <td>Cmd + F </td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td style=\"height:25px;\"><strong>标签/窗口管理</strong></td> \n   <td style=\"height:25px;\"></td> \n   <td style=\"height:25px;\"></td> \n  </tr> \n  <tr> \n   <td>打开一个新的标签页</td> \n   <td>Ctrl + T</td> \n   <td>Cmd + T</td> \n  </tr> \n  <tr> \n   <td>关闭当前标签页</td> \n   <td>Ctrl + W</td> \n   <td>Cmd + W</td> \n  </tr> \n  <tr> \n   <td>关闭所有标签页</td> \n   <td>Ctrl + Shift + W</td> \n   <td>Cmd + Q</td> \n  </tr> \n  <tr> \n   <td>关闭除当前标签页以外的其它标签页</td> \n   <td>Ctrl + Alt + F4 </td> \n   <td>Cmd + Opt + W</td> \n  </tr> \n  <tr> \n   <td>定位到下一个标签页</td> \n   <td>Ctrl + Tab</td> \n   <td>Control + Tab or Cmd + Shift + Right Arrow</td> \n  </tr> \n  <tr> \n   <td>定位到上一个标签页</td> \n   <td>Ctrl + Shift + Tab</td> \n   <td>Shift + Control + Tab or Cmd + Shift + Left Arrow</td> \n  </tr> \n  <tr> \n   <td>定位到指定编号的标签页</td> \n   <td>Ctrl + 1-8</td> \n   <td>Cmd + 1-8 </td> \n  </tr> \n  <tr> \n   <td>定位到最后一个标签页</td> \n   <td>Ctrl + 9</td> \n   <td>Cmd + 9</td> \n  </tr> \n  <tr> \n   <td>重新打开最后一个关闭的标签页</td> \n   <td>Ctrl + Shift + T</td> \n   <td>Cmd + Shift + T </td> \n  </tr> \n  <tr> \n   <td>打开一个新窗口</td> \n   <td>Ctrl + N</td> \n   <td>Cmd + N</td> \n  </tr> \n  <tr> \n   <td>关闭当前窗口</td> \n   <td>Alt + F4</td> \n   <td>Cmd + W</td> \n  </tr> \n  <tr> \n   <td>定位到下一个窗口</td> \n   <td>Alt + Tab</td> \n   <td>Cmd + Tab</td> \n  </tr> \n  <tr> \n   <td>定位到上一个窗口</td> \n   <td>Alt + Shift + Tab</td> \n   <td>Cmd + Shift + Tab</td> \n  </tr> \n  <tr> \n   <td>重新打开最后一个关闭的窗口</td> \n   <td>Ctrl + Shift + N</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>在背景的标签页中打开链接</td> \n   <td>Ctrl + Click</td> \n   <td>Cmd + Click</td> \n  </tr> \n  <tr> \n   <td>在前景的标签页中打开链接</td> \n   <td>Ctrl + Shift + Click</td> \n   <td>Cmd + Shift + Click</td> \n  </tr> \n  <tr> \n   <td>打印当前网页</td> \n   <td>Ctrl + P</td> \n   <td>Cmd + P</td> \n  </tr> \n  <tr> \n   <td>保存当前网页</td> \n   <td>Ctrl + S</td> \n   <td>Cmd + S</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td style=\"height:25px;\"><strong>地址栏</strong></td> \n   <td style=\"height:25px;\"></td> \n   <td style=\"height:25px;\"></td> \n  </tr> \n  <tr> \n   <td>在工具栏、搜索栏和页面元素间进行循环定位</td> \n   <td>Tab</td> \n   <td>Tab</td> \n  </tr> \n  <tr> \n   <td>定位到浏览器的地址栏</td> \n   <td>Ctrl + L or Alt + D</td> \n   <td>Cmd + L</td> \n  </tr> \n  <tr> \n   <td>聚焦并选中浏览器的搜索栏</td> \n   <td>Ctrl + E</td> \n   <td>Cmd + E / Cmd + K</td> \n  </tr> \n  <tr> \n   <td>在新的标签页打开地址栏位置</td> \n   <td>Alt + Enter</td> \n   <td>Opt + Enter</td> \n  </tr> \n  <tr> \n   <td>显示一系列之前访问过的地址</td> \n   <td>F4</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td>在地址栏输入文本的开头增加&quot;www.&quot;，结尾增加&quot;.com&quot;。（比如，地址栏输入&quot;baidu&quot;，然后按下 Ctrl + Enter 键，即打开&quot;www.baidu.com&quot;。）</td> \n   <td>Ctrl + Enter</td> \n   <td>Cmd + Enter or Control + Enter</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td style=\"height:25px;\"><strong>书签</strong></td> \n   <td style=\"height:25px;\"></td> \n   <td style=\"height:25px;\"></td> \n  </tr> \n  <tr> \n   <td>打开书签菜单</td> \n   <td>Ctrl + B</td> \n   <td>Cmd + B </td> \n  </tr> \n  <tr> \n   <td>将当前页加为书签</td> \n   <td>Ctrl + D</td> \n   <td>Cmd + Opt + B or Cmd + Shift + B</td> \n  </tr> \n  <tr> \n   <td>打开浏览历史记录</td> \n   <td>Ctrl + H</td> \n   <td>Cmd + Shift + H or Cmd + Y</td> \n  </tr> \n  <tr> \n   <td>打开下载历史记录</td> \n   <td>Ctrl + J</td> \n   <td>Cmd + J or Cmd + Shift + J </td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<br /> \n<hr /> \n<h2>屏幕截图</h2> \n<br /> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"52%\">描述</th> \n   <th width=\"24%\">Windows</th> \n   <th width=\"24%\">Mac OS</th> \n  </tr> \n  <tr> \n   <td>将整个屏幕的截图保存为文件</td> \n   <td>&nbsp;</td> \n   <td>Cmd + Shift + 3</td> \n  </tr> \n  <tr> \n   <td>复制整个屏幕的截图到剪贴板</td> \n   <td>PrtScr (Print Screen) or Ctrl + PrtScr</td> \n   <td>Cmd + Ctrl + Shift + 3</td> \n  </tr> \n  <tr> \n   <td>将窗口截图保存为文件</td> \n   <td>&nbsp;</td> \n   <td>Cmd + Shift + 4, then Space</td> \n  </tr> \n  <tr> \n   <td>复制窗口截图到剪贴板</td> \n   <td>Alt + PrtScr</td> \n   <td>Cmd + Ctrl + Shift + 4, then Space</td> \n  </tr> \n  <tr> \n   <td style=\"height: 31px\">复制选定区域截图到剪贴板</td> \n   <td style=\"height: 31px\"></td> \n   <td style=\"height: 31px\">Cmd + Ctrl + Shift + 4</td> \n  </tr> \n  <tr> \n   <td>将选定区域截图保存为文件</td> \n   <td>&nbsp;</td> \n   <td>Cmd + Shift + 4</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<p><b>注释：</b>由于不同的键盘设置，一些快捷键可能并不适用于所有用户。</p>', null, '键盘快捷键|Windows 和 Mac 的键盘快捷键|基本的快捷键|文本编辑|Web 浏览器|屏幕截图|');
INSERT INTO `schoolcontent` VALUES ('72', '74', '<h1>CSS <span class=\"color_h1\"> 教程</span> </h1> \n<p>通过使用 CSS 我们可以大大提升网页开发的工作效率！</p> \n<p>在我们的 CSS 教程中，您会学到如何使用 CSS 同时控制多重网页的样式和布局。</p> \n<h2 class=\"tutheader\">各章节实例</h2> \n<p>本 CSS 教程包含了数百个CSS在线实例</p> \n<p>通过本站的在线编辑器，你可以在线编辑CSS,并且可以在线查看修改后的效果。</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">CSS 实例</h2> \n <div class=\"example_code\">\n   body\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;background-color:#d0e4fe;\n  <br /> }\n  <br /> h1\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;color:orange;\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;text-align:center;\n  <br /> }\n  <br /> p\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;font-family:&quot;Times New Roman&quot;;\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;font-size:20px;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_default\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>点击 &quot;尝试一下&quot; 按钮查看css是如何工作的。</b></p> \n<h2 class=\"tutheader\">CSS 实例</h2> \n<p>css 在线150个实例，通过本站编辑器，你可以学习在线查看修改后css的运行效果。</p> \n<p><a href=\"http://www.runoob.com/css/css-examples.html\" target=\"_blank\">尝试一下!</a></p> \n<h2 class=\"tutheader\">CSS 参考手册</h2> \n<p>在W3CSchool中你可以找到更完整的CSS属性、选择器的语法，浏览器支持等资料.</p> \n<p><a href=\"http://www.runoob.com/cssref/css-reference.html\" target=\"_blank\">CSS 属性</a> </p> \n<p><a href=\"http://www.runoob.com/cssref/css-selectors.html\" target=\"_blank\">CSS 选择器参考手册</a></p> \n<p><a href=\"http://www.runoob.com/cssref/css-ref-aural.html\" target=\"_blank\">CSS 声音参考手册</a></p> \n<p><a href=\"http://www.runoob.com/cssref/css-units.html\" target=\"_blank\">CSS 单位</a></p> \n<p><a href=\"http://www.runoob.com/cssref/css-colors.html\" target=\"_blank\">CSS 颜色参考手册</a></p>', null, 'CSS 教程|各章节实例|CSS 实例|CSS 实例|CSS 参考手册|');
INSERT INTO `schoolcontent` VALUES ('73', '75', '<h1>CSS <span class=\"color_h1\">简介</span> </h1> \n<hr /> \n<h2>你需要具备的知识</h2> \n<p>在继续学习之前，你需要对下面的知识有基本的了解：</p> \n<ul> \n <li>HTML / XHTML</li> \n</ul> \n<p>如果你希望首先学习这些项目，请在 <a href=\"http://www.w3cschool.cc/\" target=\"_blank\">首页</a> 访问相关教程。.</p> \n<hr /> \n<h2>什么是 CSS?</h2> \n<ul> \n <li>CSS 指层叠样式表 (<strong>C</strong>ascading <strong>S</strong>tyle <strong>S</strong>heets)</li> \n <li>样式定义<strong>如何显示</strong> HTML 元素</li> \n <li>样式通常存储在<strong>样式表</strong>中</li> \n <li>把样式添加到 HTML 4.0 中，是为了<strong>解决内容与表现分离的问题</strong></li> \n <li><strong>外部样式表</strong>可以极大提高工作效率</li> \n <li>外部样式表通常存储在 <strong>CSS 文件</strong>中</li> \n <li>多个样式定义可<strong>层叠</strong>为一</li> \n</ul> \n<hr /> \n<h2>CSS 实例</h2> \n<p>一个HTML文档可以显示不同的样式: <a href=\"http://www.runoob.com/try/demo_source/demo_default.htm\" target=\"_blank\">查看CSS是如何工作的</a></p> \n<hr /> \n<h2>样式解决了一个很大的问题</h2> \n<p>HTML 标签原本被设计为用于定义文档内容，如下实例：</p> \n<p>&lt;h1&gt;这是一个标题&lt;/h1&gt;</p> \n<p>&lt;p&gt;这是一个段落.&lt;/p&gt;</p> \n<p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p> \n<p>为了解决这个问题，万维网联盟（W3C），这个非营利的标准化联盟，肩负起了 HTML 标准化的使命，并在 HTML 4.0 之外创造出样式（Style）。</p> \n<p>当代浏览器都支持 CSS .</p> \n<hr /> \n<h2>CSS 样式表极大地提高了工作效率</h2> \n<p>样式表定义如何显示 HTML 元素</p> \n<p>样式表定义如何显示 HTML 元素，就像 HTML 3.2 的字体标签和颜色属性所起的作用那样。样式通常保存在外部的 .css 文件中。通过仅仅编辑一个简单的 CSS 文档，外部样式表使你有能力同时改变站点中所有页面的布局和外观。</p>', null, 'CSS 简介|你需要具备的知识|什么是 CSS?|CSS 实例|样式解决了一个很大的问题|CSS 样式表极大地提高了工作效率|');
INSERT INTO `schoolcontent` VALUES ('74', '76', '<h1>CSS <span class=\"color_h1\">语法</span> </h1> \n<hr /> \n<h2>实例</h2> \n<ul> \n <li>查看 <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=ex1\">实例 1</a> </li> \n <li>查看 <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=ex2\">实例 2</a> </li> \n</ul> \n<hr /> \n<h2>CSS 实例</h2> \n<p>CSS 规则由两个主要的部分构成：选择器，以及一条或多条声明:</p> \n<p><img src=\"http://www.runoob.com/images/selector.gif\" style=\"margin:0px\" /></p> \n<p>选择器通常是您需要改变样式的 HTML 元素。</p> \n<p>每条声明由一个属性和一个值组成。</p> \n<p>属性（property）是您希望设置的样式属性（style attribute）。每个属性有一个值。属性和值被冒号分开。</p> \n<hr /> \n<h2>CSS 实例</h2> \n<p>CSS声明总是以分号(;)结束，声明组以大括号({})括起来:</p> \n<div class=\"code notranslate\">\n <div>\n   p {color:red;text-align:center;}\n </div>\n</div> \n<p>为了让CSS可读性更强，你可以每行只描述一个属性:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p\n  <br /> {\n  <br /> color:red;\n  <br /> text-align:center;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_syntax1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS 注释</h2> \n<p>注释是用来解释你的代码，并且可以随意编辑它，浏览器会忽略它。</p> \n<p>CSS注释以 &quot;/*&quot; 开始, 以 &quot;*/&quot; 结束, 实例如下:</p> \n<div class=\"code notranslate\">\n <div>\n   /*这是个注释*/\n  <br /> p\n  <br /> {\n  <br /> text-align:center;\n  <br /> /*这是另一个注释*/\n  <br /> color:black;\n  <br /> font-family:arial;\n  <br /> }\n </div>\n</div>', null, 'CSS 语法|实例|CSS 实例|CSS 实例|实例|CSS 注释|');
INSERT INTO `schoolcontent` VALUES ('75', '77', '<h1>CSS <span class=\"color_h1\">Id</span> 和 <span class=\"color_h1\">Class</span> </h1> \n<hr /> \n<h2>id 和 class 选择器</h2> \n<p>如果你要在HTML元素中设置CSS样式，你需要在元素中设置&quot;id&quot; 和 &quot;class&quot;选择器。</p> \n<hr /> \n<h2>id 选择器</h2> \n<p>id 选择器可以为标有特定 id 的 HTML 元素指定特定的样式。</p> \n<p>HTML元素以id属性来设置id选择器,CSS 中 id 选择器以 &quot;#&quot; 来定义。</p> \n<p>以下的样式规则应用于元素属性 id=&quot;para1&quot;:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   #para1\n  <br /> {\n  <br /> text-align:center;\n  <br /> color:red;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_syntax_id\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> ID属性不要以数字开头，数字开头的ID在 Mozilla/Firefox 浏览器中不起作用。</p> \n<hr /> \n<h2>class 选择器</h2> \n<p>class 选择器用于描述一组元素的样式，class 选择器有别于id选择器，class可以在多个元素中使用。 </p> \n<p>class 选择器在HTML中以class属性表示, 在 CSS 中，类选择器以一个点&quot;.&quot;号显示：</p> \n<p>在以下的例子中，所有拥有 center 类的 HTML 元素均为居中。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   .center {text-align:center;} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_syntax_class\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>你也可以指定特定的HTML元素使用class。</p> \n<p>在以下实例中, 所有的 p 元素使用 class=&quot;center&quot; 让该元素的文本居中:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p.center {text-align:center;} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_syntax_element_class\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> 类名的第一个字符不能使用数字！它无法在 Mozilla 或 Firefox 中起作用。</p>', null, 'CSS Id 和 Class|id 和 class 选择器|id 选择器|实例|class 选择器|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('76', '78', '<h1>CSS <span class=\"color_h1\">创建</span> </h1> \n<hr /> \n<p class=\"intro\">当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。</p> \n<hr /> \n<h2>如何插入样式表</h2> \n<p>插入样式表的方法有三种:</p> \n<ul> \n <li>外部样式表</li> \n <li>内部样式表</li> \n <li>内联样式</li> \n</ul> \n<hr /> \n<h2>外部样式表</h2> \n<p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 &lt;link&gt; 标签链接到样式表。 &lt;link&gt; 标签在（文档的）头部：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;head&gt;\n  <br /> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt;\n  <br /> &lt;/head&gt;\n </div>\n</div> \n<p>浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p> \n<p>外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。下面是一个样式表文件的例子：</p> \n<div class=\"code notranslate\">\n <div>\n   hr {color:sienna;}\n  <br /> p {margin-left:20px;}\n  <br /> body {background-image:url(&quot;/images/back40.gif&quot;);}\n </div>\n</div> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> 不要在属性值与单位之间留有空格。假如你使用 &quot;margin-left: 20 px&quot; 而不是 &quot;margin-left: 20px&quot; ，它仅在 IE 6 中有效，但是在 Mozilla/Firefox 或 Netscape 中却无法正常工作。</p> \n<hr /> \n<h2>内部样式表</h2> \n<p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 &lt;style&gt; 标签在文档头部定义内部样式表，就像这样:</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;head&gt;\n  <br /> &lt;style&gt;\n  <br /> hr {color:sienna;}\n  <br /> p {margin-left:20px;}\n  <br /> body {background-image:url(&quot;images/back40.gif&quot;);}\n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>内联样式</h2> \n<p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。</p> \n<p>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;This is a paragraph.&lt;/p&gt;\n </div>\n</div> \n<br />\n<hr /> \n<h2>多重样式</h2> \n<p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。&nbsp;</p> \n<p>例如，外部样式表拥有针对 h3 选择器的三个属性：</p> \n<div class=\"code notranslate\">\n <div>\n   h3\n  <br /> {\n  <br /> color:red;\n  <br /> text-align:left;\n  <br /> font-size:8pt;\n  <br /> }\n </div>\n</div> \n<p>而内部样式表拥有针对 h3 选择器的两个属性：</p> \n<div class=\"code notranslate\">\n <div>\n   h3\n  <br /> {\n  <br /> text-align:right;\n  <br /> font-size:20pt;\n  <br /> }\n </div>\n</div> \n<p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么 h3 得到的样式是：</p> \n<div class=\"code notranslate\">\n <div>\n   color:red;\n  <br /> text-align:right;\n  <br /> font-size:20pt;\n </div>\n</div> \n<p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。</p> \n<hr /> \n<h2>多重样式将层叠为一个</h2> \n<p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p> \n<h3>层叠次序</h3> \n<p>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</p> \n<p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p> \n<ol> \n <li>浏览器缺省设置</li> \n <li>外部样式表</li> \n <li>内部样式表（位于 &lt;head&gt; 标签内部）</li> \n <li>内联样式（在 HTML 元素内部）</li> \n</ol> \n<p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明： 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /><b>提示:</b>如果你使用了外部文件的样式在 &lt;head&gt;中也定义了该样式，则内部样式表会取代外部文件的样式。</p>', '<h1>CSS <span class=\"color_h1\">创建</span> </h1><hr/><p class=\"intro\">当读到一个样式表时，浏览器会根据它来格式化 HTML 文档。</p><hr/><h2>如何插入样式表</h2><p>插入样式表的方法有三种:</p><ul class=\" list-paddingleft-2\"><li><p>外部样式表</p></li><li><p>内部样式表</p></li><li><p>内联样式</p></li></ul><hr/><h2>外部样式表</h2><p>当样式需要应用于很多页面时，外部样式表将是理想的选择。在使用外部样式表的情况下，你可以通过改变一个文件来改变整个站点的外观。每个页面使用 &lt;link&gt; 标签链接到样式表。 &lt;link&gt; 标签在（文档的）头部：</p><p>&lt;head&gt; &nbsp;<br/> &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;mystyle.css&quot;&gt; &nbsp;<br/> &lt;/head&gt;</p><p>浏览器会从文件 mystyle.css 中读到样式声明，并根据它来格式文档。</p><p>外部样式表可以在任何文本编辑器中进行编辑。文件不能包含任何的 html 标签。样式表应该以 .css 扩展名进行保存。下面是一个样式表文件的例子：</p><p>hr {color:sienna;} &nbsp;<br/> p {margin-left:20px;} &nbsp;<br/> body {background-image:url(&quot;/images/back40.gif&quot;);}</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/> 不要在属性值与单位之间留有空格。假如你使用 &quot;margin-left: 20 px&quot; 而不是 &quot;margin-left: 20px&quot; ，它仅在 IE 6 中有效，但是在 Mozilla/Firefox 或 Netscape 中却无法正常工作。</p><hr/><h2>内部样式表</h2><p>当单个文档需要特殊的样式时，就应该使用内部样式表。你可以使用 &lt;style&gt; 标签在文档头部定义内部样式表，就像这样:</p><p>&lt;head&gt; &nbsp;<br/> &lt;style&gt; &nbsp;<br/> hr {color:sienna;} &nbsp;<br/> p {margin-left:20px;} &nbsp;<br/> body {background-image:url(&quot;images/back40.gif&quot;);} &nbsp;<br/> &lt;/style&gt; &nbsp;<br/> &lt;/head&gt;</p><p><br/></p><hr/><h2>内联样式</h2><p>由于要将表现和内容混杂在一起，内联样式会损失掉样式表的许多优势。请慎用这种方法，例如当样式仅需要在一个元素上应用一次时。</p><p>要使用内联样式，你需要在相关的标签内使用样式（style）属性。Style 属性可以包含任何 CSS 属性。本例展示如何改变段落的颜色和左外边距：</p><p>&lt;p style=&quot;color:sienna;margin-left:20px&quot;&gt;This is a paragraph.&lt;/p&gt;</p><p><br/></p><hr/><h2>多重样式</h2><p>如果某些属性在不同的样式表中被同样的选择器定义，那么属性值将从更具体的样式表中被继承过来。&nbsp;</p><p>例如，外部样式表拥有针对 h3 选择器的三个属性：</p><p>h3 &nbsp;<br/> { &nbsp;<br/> color:red; &nbsp;<br/> text-align:left; &nbsp;<br/> font-size:8pt; &nbsp;<br/> }</p><p>而内部样式表拥有针对 h3 选择器的两个属性：</p><p>h3 &nbsp;<br/> { &nbsp;<br/> text-align:right; &nbsp;<br/> font-size:20pt; &nbsp;<br/> }</p><p>假如拥有内部样式表的这个页面同时与外部样式表链接，那么 h3 得到的样式是：</p><p>color:red; &nbsp;<br/> text-align:right; &nbsp;<br/> font-size:20pt;</p><p>即颜色属性将被继承于外部样式表，而文字排列（text-alignment）和字体尺寸（font-size）会被内部样式表中的规则取代。</p><hr/><h2>多重样式将层叠为一个</h2><p>样式表允许以多种方式规定样式信息。样式可以规定在单个的 HTML 元素中，在 HTML 页的头元素中，或在一个外部的 CSS 文件中。甚至可以在同一个 HTML 文档内部引用多个外部样式表。</p><h3>层叠次序</h3><p>当同一个 HTML 元素被不止一个样式定义时，会使用哪个样式呢？</p><p>一般而言，所有的样式会根据下面的规则层叠于一个新的虚拟样式表中，其中数字 4 拥有最高的优先权。</p><ol class=\" list-paddingleft-2\"><li><p>浏览器缺省设置</p></li><li><p>外部样式表</p></li><li><p>内部样式表（位于 &lt;head&gt; 标签内部）</p></li><li><p>内联样式（在 HTML 元素内部）</p></li></ol><p>因此，内联样式（在 HTML 元素内部）拥有最高的优先权，这意味着它将优先于以下的样式声明： 标签中的样式声明，外部样式表中的样式声明，或者浏览器中的样式声明（缺省值）。</p><p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\"/><strong>提示:</strong>如果你使用了外部文件的样式在 &lt;head&gt;中也定义了该样式，则内部样式表会取代外部文件的样式。</p>', 'CSS 创建|如何插入样式表|外部样式表|内部样式表|内联样式|多重样式|多重样式将层叠为一个|');
INSERT INTO `schoolcontent` VALUES ('77', '79', '<h1>CSS <span class=\"color_h1\">背景</span> </h1> \n<br /> \n<p>CSS 背景属性用于定义HTML元素的背景。</p> \n<p>CSS 属性定义背景效果:</p> \n<ul> \n <li>background-color</li> \n <li>background-image</li> \n <li>background-repeat</li> \n <li>background-attachment</li> \n <li>background-position</li> \n</ul> \n<h2>背景颜色</h2> \n<p>background-color 属性定义了元素的背景颜色.</p> \n<p>页面的背景颜色使用在body的选择器中:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body {background-color:#b0c4de;} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-color_body\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>CSS中，颜色值通常以以下方式定义:</p> \n<ul> \n <li>十六进制 - 如：&quot;#ff0000&quot;</li> \n <li>RGB - 如：&quot;rgb(255,0,0)&quot;</li> \n <li>颜色名称 - 如：&quot;red&quot;</li> \n</ul> \n<p>以下实例中, h1, p, 和 div 元素拥有不同的背景颜色:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1 {background-color:#6495ed;}\n  <br /> p {background-color:#e0ffff;}\n  <br /> div {background-color:#b0c4de;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-color_elements\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>背景图像</h2> \n<p>background-image 属性描述了元素的背景图像.</p> \n<p>默认情况下，背景图像进行平铺重复显示，以覆盖整个元素实体.</p> \n<p>页面背景图片设置实例:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body {background-image:url(\'paper.gif\');} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>下面是一个例子是一个糟糕的文字和背景图像组合。文本可读性差:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body {background-image:url(\'bgdesert.jpg\');} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image_bad\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>背景图像 - 水平或垂直平铺</h2> \n<p>默认情况下 background-image 属性会在页面的水平或者垂直方向平铺。</p> \n<p>一些图像如果在水平方向与垂直方向平铺，这样看起来很不协调，如下所示:&nbsp; </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body\n  <br /> {\n  <br /> background-image:url(\'gradient2.png\');\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image_gradient1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>如果图像只在水平方向平铺 (repeat-x), 页面背景会更好些:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body\n  <br /> {\n  <br /> background-image:url(\'gradient2.png\');\n  <br /> background-repeat:repeat-x;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image_gradient2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>背景图像- 设置定位与不平铺</h2> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> 让背景图像不影响文本的排版</p> \n<p>如果你不想让图像平铺，你可以使用 background-repeat 属性:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body\n  <br /> {\n  <br /> background-image:url(\'img_tree.png\');\n  <br /> background-repeat:no-repeat;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image_norepeat\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>以上实例中，背景图像与文本显示在同一个位置，为了让页面排版更加合理，不影响文本的阅读，我们可以改变图像的位置。</p> \n<p>可以利用 background-position 属性改变图像在背景中的位置:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body\n  <br /> {\n  <br /> background-image:url(\'img_tree.png\');\n  <br /> background-repeat:no-repeat;\n  <br /> background-position:right top;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image_position\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>背景- 简写属性</h2> \n<p>在以上实例中我们可以看到页面的背景颜色通过了很多的属性来控制。</p> \n<p>为了简化这些属性的代码，我们可以将这些属性合并在同一个属性中.</p> \n<p>背景颜色的简写属性为 &quot;background&quot;:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body {background:#ffffff url(\'img_tree.png\') no-repeat right top;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background_shorthand\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p> 当使用简写属性时，属性值的顺序为：:</p> \n<ul> \n <li>background-color</li> \n <li>background-image</li> \n <li>background-repeat</li> \n <li>background-attachment</li> \n <li>background-position</li> \n</ul> \n<p>以上属性无需全部使用，你可以按照页面的实际需要使用.</p> \n<p>这个实例使用了先前介绍的CSS，你可以查看相应实例: <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background_shorthand2\"> CSS 实例</a></p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_background-attachment\">如何设置固定的背景图像</a><br /> 本例演示如何设置固定的背景图像。图像不会随着页面的其他部分滚动。</p> \n<hr /> \n<h2>CSS 背景属性</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"30%\" align=\"left\">Property</th> \n   <th width=\"70%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-background.html\">background</a></td> \n   <td>简写属性，作用是将背景属性设置在一个声明中。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-background-attachment.html\">background-attachment</a></td> \n   <td>背景图像是否固定或者随着页面的其余部分滚动。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-background-color.html\">background-color</a></td> \n   <td>设置元素的背景颜色。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-background-image.html\">background-image</a></td> \n   <td>把图像设置为背景。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-background-position.html\">background-position</a></td> \n   <td>设置背景图像的起始位置。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-background-repeat.html\">background-repeat</a></td> \n   <td>设置背景图像是否及如何重复。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 背景|背景颜色|实例|实例|背景图像|实例|实例|背景图像 - 水平或垂直平铺|实例|实例|背景图像- 设置定位与不平铺|实例|实例|背景- 简写属性|实例|更多实例|CSS 背景属性|');
INSERT INTO `schoolcontent` VALUES ('78', '80', '<h1>CSS <span class=\"color_h1\">Text</span>文本格式</h1> \n<br />\n<div style=\"width:96.5%;border:1px solid gray;padding:8px\"> \n <h1 style=\"text-align:center;color:#A7C942\">text formatting</h1> \n <p style=\"text-indent:50px;text-align:justify;letter-spacing:3px\">This text is styled with some of the text formatting properties. The heading uses the text-align, text-transform, and color properties. The paragraph is indented, aligned, and the space between characters is specified. The underline is removed from the <a style=\"text-decoration:none\" target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text\">&quot;尝试一下&quot;</a> link.</p> \n</div> \n<h2>Text Color</h2> \n<p>颜色属性被用来设置文字的颜色。</p> \n<p>颜色是通过CSS最经常的指定：</p> \n<ul> \n <li>十六进制值 - 如&quot;＃FF0000&quot;</li> \n <li>一个RGB值 - &quot;RGB（255,0,0）&quot;</li> \n <li>颜色的名称 - 如&quot;红&quot;</li> \n</ul> \n<p>参阅 <a href=\"http://www.runoob.com/cssref/css-colors-legal.html\">CSS 颜色值</a> 查看完整的颜色值。</p> \n<p>一个网页的背景颜色是指在主体内的选择：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body {color:blue;}\n  <br /> h1 {color:#00ff00;}\n  <br /> h2 {color:rgb(255,0,0);}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_color\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> 对于W3C标准的CSS：如果你定义了颜色属性，你还必须定义背景色属性。 </p> \n<hr /> \n<h2>文本的对齐方式</h2> \n<p>文本排列属性是用来设置文本的水平对齐方式。</p> \n<p>文本可居中或对齐到左或右,两端对齐.</p> \n<p>当text-align设置为&quot;justify&quot;，每一行被展开为宽度相等，左，右外边距是对齐（如杂志和报纸）。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1 {text-align:center;}\n  <br /> p.date {text-align:right;}\n  <br /> p.main {text-align:justify;} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-align_all\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>文本修饰</h2> \n<p>text-decoration 属性用来设置或删除文本的装饰。</p> \n<p>从设计的角度看 text-decoration属性主要是用来删除链接的下划线：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   a {text-decoration:none;} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-decoration_link\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>也可以这样装饰文字：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1 {text-decoration:overline;}\n  <br /> h2 {text-decoration:line-through;}\n  <br /> h3 {text-decoration:underline;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-decoration\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> 我们不建议强调指出不是链接的文本，因为这常常混淆用户。</p> \n<hr /> \n<h2>文本转换</h2>\n<p>文本转换属性是用来指定在一个文本中的大写和小写字母。</p> \n<p>可用于所有字句变成大写或小写字母，或每个单词的首字母大写。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p.uppercase {text-transform:uppercase;}\n  <br /> p.lowercase {text-transform:lowercase;}\n  <br /> p.capitalize {text-transform:capitalize;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-transform\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>文本缩进</h2> \n<p>文本缩进属性是用来指定文本的第一行的缩进。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p {text-indent:50px;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-indent\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_letter-spacing\">指定字符之间的空间</a><br /> 这个例子演示了如何增加或减少字符之间的空间。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_line-height\">指定行与行之间的空间</a><br /> 这个例子演示了如何指定在一个段落中行之间的空间</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-direction\">设置元素的文本方向</a><br /> 这个例子演示了如何改变元素的文本方向。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-word-spacing\"> 增加单词之间的空白空间</a><br /> 这个例子演示了如何增加一个段落中的单词之间的空白空间。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-white-space\">在元素内禁用文字环绕</a><br /> 这个例子演示了如何禁用一个元素内的文字环绕。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_vertical-align\">垂直对齐图像</a><br /> 这个例子演示了如何设置文本的垂直对齐图像。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_text-shadow\">添加文本阴影</a><br /> 这个例子演示了如何设置文本阴影。</p> \n<hr /> \n<h2>所有CSS文本属性。</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">属性</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-color.html\">color</a></td> \n   <td>设置文本颜色</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-direction.html\">direction</a></td> \n   <td>设置文本方向。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-letter-spacing.html\">letter-spacing</a></td> \n   <td>设置字符间距</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-dim-line-height.html\">line-height</a></td> \n   <td>设置行高</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-text-align.html\">text-align</a></td> \n   <td>对齐元素中的文本</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-text-decoration.html\">text-decoration</a></td> \n   <td>向文本添加修饰</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-text-indent.html\">text-indent</a></td> \n   <td>缩进元素中文本的首行</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-text-shadow.html\">text-shadow</a></td> \n   <td>设置文本阴影</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-text-transform.html\">text-transform</a></td> \n   <td>控制元素中的字母</td> \n  </tr> \n  <tr> \n   <td>unicode-bidi</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-pos-vertical-align.html\">vertical-align</a></td> \n   <td>设置元素的垂直对齐</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-white-space.html\">white-space</a></td> \n   <td>设置元素中空白的处理方式</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-text-word-spacing.html\">word-spacing</a></td> \n   <td>设置字间距</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS Text文本格式|text formatting|Text Color|实例|文本的对齐方式|实例|文本修饰|实例|实例|文本转换|实例|文本缩进|实例|更多实例|所有CSS文本属性。|');
INSERT INTO `schoolcontent` VALUES ('79', '81', '<h1>CSS <span class=\"color_h1\">字体</span> </h1> \n<hr /> \n<p class=\"intro\">CSS字体属性定义字体，加粗，大小，文字样式。</p> \n<hr /> \n<h2>serif和sans-serif字体之间的区别</h2> \n<img alt=\"Serif vs. Sans-serif\" src=\"http://www.runoob.com/images/serif.gif\" width=\"398\" height=\"142\" />\n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> 在计算机屏幕上，sans-serif字体被认为是比serif字体容易阅读</p> \n<hr /> \n<h2>CSS字型</h2> \n<p>在CSS中，有两种类型的字体系列名称：</p> \n<ul> \n <li> <b>通用字体系列</b> - 拥有相似外观的字体系统组合（如 &quot;Serif&quot; 或 &quot;Monospace&quot;）</li> \n <li> <b>特定字体系列</b> - 一个特定的字体系列（如 &quot;Times&quot; 或 &quot;Courier&quot;）</li> \n</ul> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"22%\" align=\"left\">Generic family</th> \n   <th width=\"31%\" align=\"left\">字体系列</th> \n   <th width=\"47%\" align=\"left\">说明</th> \n  </tr> \n  <tr> \n   <td>Serif</td> \n   <td><span style=\"font-size:150%;font-family:Times New Roman\">Times New Roman</span><br /> <span style=\"font-size:150%;font-family:Georgia\">Georgia</span></td> \n   <td>Serif字体中字符在行的末端拥有额外的装饰</td> \n  </tr> \n  <tr> \n   <td>Sans-serif</td> \n   <td><span style=\"font-size:150%;font-family:Arial\">Arial</span><br /> <span style=\"font-size:150%;font-family:Verdana\">Verdana</span></td> \n   <td>&quot;Sans&quot;是指无 - 这些字体在末端没有额外的装饰</td> \n  </tr> \n  <tr> \n   <td>Monospace</td> \n   <td><span style=\"font-size:150%;font-family:Courier New\">Courier New</span><br /> <span style=\"font-size:150%;font-family:Lucida Console\">Lucida Console</span></td> \n   <td>所有的等宽字符具有相同的宽度</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>字体系列</h2> \n<p> font-family 属性设置文本的字体系列。</p> \n<p> font-family 属性应该设置几个字体名称作为一种&quot;后备&quot;机制，如果浏览器不支持第一种字体，他将尝试下一种字体。</p> \n<p><b>注意</b>: 如果字体系列的名称超过一个字，它必须用引号，如Font Family：&quot;宋体&quot;。</p> \n<p>多个字体系列是用一个逗号分隔指明：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p{font-family:&quot;Times New Roman&quot;, Times, serif;} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font-family\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>对于较常用的字体组合，看看我们的 <a href=\"http://www.runoob.com/cssref/css-websafe-fonts.html\">Web安全字体组合</a>。</p> \n<hr /> \n<h2>字体样式</h2> \n<p>主要是用于指定斜体文字的字体样式属性。</p> \n<p>这个属性有三个值：</p> \n<ul> \n <li>正常 - 正常显示文本</li> \n <li>斜体 - 以斜体字显示的文字</li> \n <li>倾斜的文字 - 文字向一边倾斜（和斜体非常类似，但不太支持）</li> \n</ul> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p.normal {font-style:normal;}\n  <br /> p.italic {font-style:italic;}\n  <br /> p.oblique {font-style:oblique;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font-style\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>字体大小</h2> \n<p>font-size 属性设置文本的大小。</p> \n<p>能否管理文字的大小，在网页设计中是非常重要的。但是，你不能通过调整字体大小使段落看上去像标题，或者使标题看上去像段落。</p> \n<p>请务必使用正确的HTML标签，就&lt;h1&gt; - &lt;h6&gt;表示标题和&lt;p&gt;表示段落： </p> \n<p>字体大小的值可以是绝对或相对的大小。</p> \n<p>绝对大小：</p> \n<ul> \n <li>设置一个指定大小的文本</li> \n <li>不允许用户在所有浏览器中改变文本大小</li> \n <li>确定了输出的物理尺寸时绝对大小很有用</li> \n</ul> \n<p>相对大小：</p> \n<ul> \n <li>相对于周围的元素来设置大小</li> \n <li>允许用户在浏览器中改变文字大小</li> \n</ul> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> 如果你不指定一个字体的大小，默认大小和普通文本段落一样，是16像素（16px=1em）。</p> \n<hr /> \n<h2>设置字体大小像素</h2> \n<p>设置文字的大小与像素，让您完全控制文字大小：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1 {font-size:40px;}\n  <br /> h2 {font-size:30px;}\n  <br /> p {font-size:14px;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font-size_px\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>上面的例子可以在 Internet Explorer 9, Firefox, Chrome, Opera, 和 Safari 中通过缩放浏览器调整文本大小。</p> \n<p>虽然可以通过浏览器的缩放工具调整文本大小，但是，这种调整是整个页面，而不仅仅是文本</p> \n<hr /> \n<h2>用em来设置字体大小</h2> \n<p>为了避免Internet Explorer 中无法调整文本的问题，许多开发者使用 em 单位代替像素。</p> \n<p>em的尺寸单位由W3C建议。</p> \n<p>1em和当前字体大小相等。在浏览器中默认的文字大小是16px。</p> \n<p>因此，1em的默认大小是16px。可以通过下面这个公式将像素转换为em：px/16=em</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1 {font-size:2.5em;} /* 40px/16=2.5em */\n  <br /> h2 {font-size:1.875em;} /* 30px/16=1.875em */\n  <br /> p {font-size:0.875em;} /* 14px/16=0.875em */\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font-size_em\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>在上面的例子，em的文字大小是与前面的例子中像素一样。不过，如果使用 em 单位，则可以在所有浏览器中调整文本大小。</p> \n<p>不幸的是，仍然是IE浏览器的问题。调整文本的大小时，会比正常的尺寸更大或更小。</p> \n<hr /> \n<h2>使用百分比和EM组合</h2> \n<p>在所有浏览器的解决方案中，设置 &lt;body&gt;元素的默认字体大小的是百分比： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body {font-size:100%;}\n  <br /> h1 {font-size:2.5em;}\n  <br /> h2 {font-size:1.875em;}\n  <br /> p {font-size:0.875em;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font-size_percent_em\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>我们的代码非常有效。在所有浏览器中，可以显示相同的文本大小，并允许所有浏览器缩放文本的大小。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font-weight\">设置字体加粗</a><br /> 这个例子演示了如何设置字体的加粗。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font-variant\">可以设置字体的转变</a><br /> 这个例子演示了如何设置字体的转变。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font\">在一个声明中的所有字体属性</a><br /> 本例演示如何使用简写属性将字体属性设置在一个声明之内。</p> \n<hr /> \n<h2>所有CSS字体属性</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"25%\" align=\"left\">Property</th> \n   <th width=\"75%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-font-font.html\">font</a></td> \n   <td>在一个声明中设置所有的字体属性</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-font-font-family.html\">font-family</a></td> \n   <td>指定文本的字体系列</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-font-font-size.html\">font-size</a></td> \n   <td>指定文本的字体大小</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-font-font-style.html\">font-style</a></td> \n   <td>指定文本的字体样式</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-font-font-variant.html\">font-variant</a></td> \n   <td>以小型大写字体或者正常字体显示文本。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-font-weight.html\">font-weight</a></td> \n   <td>指定字体的粗细。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 字体|serif和sans-serif字体之间的区别|CSS字型|字体系列|实例|字体样式|实例|字体大小|设置字体大小像素|实例|用em来设置字体大小|实例|使用百分比和EM组合|实例|更多实例|所有CSS字体属性|');
INSERT INTO `schoolcontent` VALUES ('80', '82', '<h1>CSS <span class=\"color_h1\">链接</span> </h1> \n<hr /> \n<p class=\"intro\">不同的链接可以有不同的样式。</p> \n<hr /> \n<h2>链接样式</h2> \n<p>链接的样式，可以用任何CSS属性（如颜色，字体，背景等）。</p> \n<p>特别的链接，可以有不同的样式，这取决于他们是什么状态。</p> \n<p>这四个链接状态是： </p> \n<ul> \n <li>a:link - 正常，未访问过的链接</li> \n <li>a:visited - 用户已访问过的链接</li> \n <li>a:hover - 当用户鼠标放在链接上时</li> \n <li>a:active - 链接被点击的那一刻</li> \n</ul> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   a:link {color:#FF0000;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* unvisited link */\n  <br /> a:visited {color:#00FF00;}&nbsp; /* visited link */\n  <br /> a:hover {color:#FF00FF;}&nbsp; /* mouse over link */\n  <br /> a:active {color:#0000FF;}&nbsp; /* selected link */ \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_link\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>当设置为若干链路状态的样式，也有一些顺序规则：</p> \n<ul> \n <li>a:hover 必须跟在 a:link 和 a:visited后面</li> \n <li>a:active 必须跟在 a:hover后面</li> \n</ul> \n<hr /> \n<h2>常见的链接样式</h2> \n<p>根据上述链接的颜色变化的例子，看它是在什么状态。</p> \n<p>让我们通过一些其他常见的方式转到链接样式：</p> \n<h2>文本修饰</h2> \n<p>text-decoration 属性主要用于删除链接中的下划线：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   a:link {text-decoration:none;}\n  <br /> a:visited {text-decoration:none;}\n  <br /> a:hover {text-decoration:underline;}\n  <br /> a:active {text-decoration:underline;}\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_link_decoration\">尝试一下 &raquo;</a> \n</div> \n<h2>背景颜色</h2> \n<p>背景颜色属性指定链接背景色：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   a:link {background-color:#B2FF99;}\n  <br /> a:visited {background-color:#FFFF85;}\n  <br /> a:hover {background-color:#FF704D;}\n  <br /> a:active {background-color:#FF704D;} \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_link_background\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>More Examples</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_link2\">添加不同样式的超链接</a><br /> 这个例子演示了如何为超链接添加其他样式。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_link_advanced\">高级 - 创建链接框</a><br /> 这个例子演示了一个更高级的例子，我们结合若干CSS属性显示为方框。</p>', null, 'CSS 链接|链接样式|实例|常见的链接样式|文本修饰|实例|背景颜色|实例|More Examples|');
INSERT INTO `schoolcontent` VALUES ('81', '83', '<h1>CSS <span class=\"color_h1\">列表</span> </h1> \n<hr /> \n<p class=\"intro\">CSS列表属性作用如下：</p> \n<ul> \n <li>设置不同的列表项标记为有序列表</li> \n <li>设置不同的列表项标记为无序列表</li> \n <li>设置列表项标记为图像</li> \n</ul> \n<br />\n<hr /> \n<h2>列表</h2> \n<p>在HTML中，有两种类型的列表：</p> \n<ul> \n <li>无序列表 - 列表项标记用特殊图形（如小黑点、小方框等）</li> \n <li>有序列表 - 列表项的标记有数字或字母</li> \n</ul> \n<p>使用CSS，可以列出进一步的样式，并可用图像作列表项标记。</p> \n<hr /> \n<h2>不同的列表项标记</h2> \n<p>list-style-type属性指定列表项标记的类型是：:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   ul.a {list-style-type: circle;}\n  <br /> ul.b {list-style-type: square;}\n  <br />\n  <br /> ol.c {list-style-type: upper-roman;}\n  <br /> ol.d {list-style-type: lower-alpha;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style-type_ex\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>一些值是无序列表，以及有些是有序列表。</p> \n<hr /> \n<h2>作为列表项标记的图像</h2> \n<p>要指定列表项标记的图像，使用列表样式图像属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   ul\n  <br /> {\n  <br /> list-style-image: url(\'sqpurple.gif\');\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style-image\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>上面的例子在所有浏览器中显示并不相同，IE和Opera显示图像标记比火狐，Chrome和Safari更高一点点。</p> \n<p>如果你想在所有的浏览器放置同样的形象标志，就应使用浏览器兼容性解决方案，过程如下</p> \n<h2>浏览器兼容性解决方案</h2> \n<p>同样在所有的浏览器，下面的例子会显示的图像标记：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   ul\n  <br /> {\n  <br /> list-style-type: none;\n  <br /> padding: 0px;\n  <br /> margin: 0px;\n  <br /> }\n  <br /> ul li\n  <br /> {\n  <br /> background-image: url(sqpurple.gif);\n  <br /> background-repeat: no-repeat;\n  <br /> background-position: 0px 5px; \n  <br /> padding-left: 14px; \n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style-image_crossbrow\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>例子解释：</p> \n<ul> \n <li>ul: \n  <ul> \n   <li>设置列表样式类型为没有删除列表项标记 </li> \n   <li>设置填充和边距0px（浏览器兼容性）</li> \n  </ul> </li> \n <li>ul中所有li: \n  <ul> \n   <li>设置图像的URL，并设置它只显示一次（无重复） </li> \n   <li>您需要的定位图像位置（左0px和上下5px）</li> \n   <li>用padding-left属性把文本置于列表中</li> \n  </ul> </li> \n</ul> \n<hr /> \n<h2>列表 -缩写属性</h2> \n<p>在单个属性中可以指定所有的列表属性。这就是所谓的缩写属性。</p> \n<p>为列表使用缩写属性，列表样式属性设置如下：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   ul\n  <br /> {\n  <br /> list-style: square url(&quot;sqpurple.gif&quot;);\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>如果使用缩写属性值的顺序是： </p> \n<ul> \n <li>list-style-type</li> \n <li>list-style-position (有关说明，请参见下面的CSS属性表)</li> \n <li>list-style-image</li> \n</ul> \n<p>如果上述值丢失一个，其余仍在指定的顺序，就没关系。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style-type_all\">所有不同的列表项标记</a><br /> 这个例子演示了所有不同的CSS列表项标记。</p> \n<hr /> \n<h2>所有的CSS列表属性</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">属性</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-list-style.html\">list-style</a></td> \n   <td>简写属性。用于把所有用于列表的属性设置于一个声明中</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-list-style-image.html\">list-style-image</a></td> \n   <td>将图象设置为列表项标志。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-list-style-position.html\">list-style-position</a></td> \n   <td>设置列表中列表项标志的位置。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-list-style-type.html\">list-style-type</a></td> \n   <td>设置列表项标志的类型。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 列表|列表|不同的列表项标记|实例|作为列表项标记的图像|实例|浏览器兼容性解决方案|实例|列表 -缩写属性|实例|更多实例|所有的CSS列表属性|');
INSERT INTO `schoolcontent` VALUES ('82', '84', '<h1>CSS <span class=\"color_h1\">表格</span></h1> \n<hr /> \n<p class=\"intro\">使用CSS可以大大提高HTML表格的外观。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>Company</th> \n   <th>Contact</th> \n   <th>Country</th> \n  </tr> \n  <tr> \n   <td>Alfreds Futterkiste</td> \n   <td>Maria Anders</td> \n   <td>Germany</td> \n  </tr> \n  <tr class=\"alt\"> \n   <td>Berglunds snabbk&ouml;p</td> \n   <td>Christina Berglund</td> \n   <td>Sweden</td> \n  </tr> \n  <tr> \n   <td>Centro comercial Moctezuma</td> \n   <td>Francisco Chang</td> \n   <td>Mexico</td> \n  </tr> \n  <tr class=\"alt\"> \n   <td>Ernst Handel</td> \n   <td>Roland Mendel</td> \n   <td>Austria</td> \n  </tr> \n  <tr> \n   <td>Island Trading</td> \n   <td>Helen Bennett</td> \n   <td>UK</td> \n  </tr> \n  <tr class=\"alt\"> \n   <td>K&ouml;niglich Essen</td> \n   <td>Philip Cramer</td> \n   <td>Germany</td> \n  </tr> \n  <tr> \n   <td>Laughing Bacchus Winecellars</td> \n   <td>Yoshi Tannamuri</td> \n   <td>Canada</td> \n  </tr> \n  <tr class=\"alt\"> \n   <td>Magazzini Alimentari Riuniti</td> \n   <td>Giovanni Rovelli</td> \n   <td>Italy</td> \n  </tr> \n  <tr> \n   <td>North/South</td> \n   <td>Simon Crowther</td> \n   <td>UK</td> \n  </tr> \n  <tr class=\"alt\"> \n   <td>Paris sp&eacute;cialit&eacute;s</td> \n   <td>Marie Bertrand</td> \n   <td>France</td> \n  </tr> \n  <tr> \n   <td>The Big Cheese</td> \n   <td>Liz Nixon</td> \n   <td>USA</td> \n  </tr> \n  <tr class=\"alt\"> \n   <td>Vaffeljernet</td> \n   <td>Palle Ibsen</td> \n   <td>Denmark</td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>表格边框</h2> \n<p>指定CSS表格边框，使用border属性。</p> \n<p>下面的例子指定了一个表格的Th和TD元素的黑色边框：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   table, th, td\n  <br /> {\n  <br /> border: 1px solid black;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_border\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>请注意，在上面的例子中的表格有双边框。这是因为表和th/ td元素有独立的边界。</p> \n<p>为了显示一个表的单个边框，使用 border-collapse属性。</p> \n<h2>折叠边框</h2> \n<p>border-collapse 属性设置表格的边框是否被折叠成一个单一的边框或隔开：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   table\n  <br /> {\n  <br /> border-collapse:collapse;\n  <br /> }\n  <br /> table,th, td\n  <br /> {\n  <br /> border: 1px solid black;\n  <br /> }\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_border-collapse\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>表格宽度和高度</h2> \n<p>Width和height属性定义表格的宽度和高度。</p> \n<p>下面的例子是设置100％的宽度，50像素的th元素的高度的表格：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   table \n  <br /> {\n  <br /> width:100%;\n  <br /> }\n  <br /> th\n  <br /> {\n  <br /> height:50px;\n  <br /> } \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_width\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>表格文字对齐</h2> \n<p>表格中的文本对齐和垂直对齐属性。</p> \n<p>text-align属性设置水平对齐方式，像左，右，或中心：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   td\n  <br /> {\n  <br /> text-align:right;\n  <br /> }\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_align\">尝试一下 &raquo;</a> \n</div> \n<p>垂直对齐属性设置垂直对齐，比如顶部，底部或中间：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   td\n  <br /> {\n  <br /> height:50px;\n  <br /> vertical-align:bottom;\n  <br /> }\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_vertical-align\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>表格填充</h2> \n<p>如果在表的内容中控制空格之间的边框，应使用td和th元素的填充属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   td\n  <br /> {\n  <br /> padding:15px;\n  <br /> }\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_padding\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>表格颜色</h2> \n<p>下面的例子指定边框的颜色，和th元素的文本和背景颜色：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   table, td, th\n  <br /> {\n  <br /> border:1px solid green;\n  <br /> }\n  <br /> th\n  <br /> {\n  <br /> background-color:green;\n  <br /> color:white;\n  <br /> }\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_color\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" /> \n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_fancy\">制作一个个性表格</a><br /> 这个例子演示了如何创建一个个性的表格。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_table_caption-side\">设置表格标题的位置</a><br /> 这个例子演示了如何定位表格标题。</p>', null, 'CSS 表格|表格边框|实例|折叠边框|实例|表格宽度和高度|实例|表格文字对齐|实例|实例|表格填充|实例|表格颜色|实例|更多实例|');
INSERT INTO `schoolcontent` VALUES ('83', '85', '<h1>CSS <span class=\"color_h1\">盒子模型</span> </h1> \n<hr /> \n<h2>CSS 盒子模型(Box Model)</h2> \n<p>所有HTML元素可以看作盒子，在CSS中，&quot;box model&quot;这一术语是用来设计和布局时使用。</p> \n<p>CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。</p> \n<p>盒模型允许我们在其它元素和周围元素边框之间的空间放置元素。</p> \n<p>下面的图片说明了盒子模型(Box Model)：</p> \n<br />\n<img src=\"http://www.runoob.com/images/box-model.gif\" alt=\"CSS box-model\" width=\"536\" height=\"289\" />\n<p>不同部分的说明：</p> \n<ul> \n <li><b>Margin(外边距)</b> - 清除边框外的区域，外边距是透明的。</li> \n <li><b>Border(边框)</b> - 围绕在内边距和内容外的边框。</li> \n <li><b>Padding(内边距)</b> - 清除内容周围的区域，内边距是透明的。</li> \n <li><b>Content(内容)</b> - 盒子的内容，显示文本和图像。</li> \n</ul> \n<p>为了在所有浏览器中的元素的宽度和高度设置正确的话，你需要知道的盒模型是如何工作的。</p> \n<hr /> \n<h2>元素的宽度和高度</h2> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /><b>重要:</b> 当您指定一个CSS元素的宽度和高度属性时，你只是设置内容区域的宽度和高度。要知道，完全大小的元素，你还必须添加填充，边框和边距。.</p> \n<p>下面的例子中的元素的总宽度为300px：</p> \n<div class=\"code notranslate\">\n <div>\n   width:250px;\n  <br /> padding:10px;\n  <br /> border:5px solid gray;\n  <br /> margin:10px; \n </div>\n</div> \n<p>让我们自己算算：<br /> 250px (宽)<br /> + 20px (left + 右填充)<br /> + 10px (left + 右边框)<br /> + 20px (left + 右边距)<br /> = 300px</p> \n<p>试想一下，你只有250像素的空间。让我们设置总宽度为250像素的元素:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   width:220px;\n  <br /> padding:10px;\n  <br /> border:5px solid gray;\n  <br /> margin:0px; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_boxmodel_width\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>最终元素的总宽度计算公式是这样的：</p> \n<p>总元素的宽度=宽度+左填充+右填充+左边框+右边框+左边距+右边距</p> \n<p>元素的总高度最终计算公式是这样的：</p> \n<p>总元素的高度=高度+顶部填充+底部填充+上边框+下边框+上边距+下边距</p> \n<hr /> \n<h2>浏览器的兼容性问题</h2> \n<p>一旦为页面设置了恰当的 DTD，大多数浏览器都会按照上面的图示来呈现内容。然而 IE 5 和 6 的呈现却是不正确的。根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。</p>\n<p> 虽然有方法解决这个问题。但是目前最好的解决方案是回避这个问题。也就是，不要给元素添加具有指定宽度的内边距，而是尝试将内边距或外边距添加到元素的父元素和子元素。</p> \n<p>IE8 及更早IE版本不支持 填充的宽度和边框的宽度属性设。</p> \n<p>解决IE8及更早版本不兼容问题可以在HTML页面声明 &lt;!DOCTYPE html&gt;即可。</p>', null, 'CSS 盒子模型|CSS 盒子模型(Box Model)|元素的宽度和高度|实例|浏览器的兼容性问题|');
INSERT INTO `schoolcontent` VALUES ('84', '86', '<h1>CSS <span class=\"color_h1\">边框</span> </h1> \n<br />\n<div style=\"width:93%;border:10px groove #98bf21;padding:8px\"> \n <h2>CSS 边框属性</h2> \n <p>CSS边框属性允许你指定一个元素边框的样式和颜色。</p> \n</div> \n<h2>边框样式</h2> \n<p>边框样式属性指定要显示什么样的边界。</p> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> <b>border-style</b>属性用来定义边框的样式</p> \n<h2>border-style 值:</h2> \n<p style=\"border: 1px none #000000;padding:3px\">none: 默认无边框</p> \n<p style=\"border: 1px dotted #000000;padding:3px\">dotted: dotted:定义一个点线框</p> \n<p style=\"border: 1px dashed #000000;padding:3px\">dashed: 定义一个虚线框</p> \n<p style=\"border: 1px solid #000000;padding:3px\">solid: 定义实线边界</p> \n<p style=\"border: 3px double #000000;padding:3px\">double: 定义两个边界。 两个边界的宽度和border-width的值相同</p> \n<p style=\"border: 5px groove #98bf21;padding:3px\">groove: 定义3D沟槽边界。效果取决于边界的颜色值</p> \n<p style=\"border: 5px ridge #98bf21;padding:3px\">ridge: 定义3D脊边界。效果取决于边界的颜色值</p> \n<p style=\"border: 5px inset #98bf21;padding:3px\">inset:定义一个3D的嵌入边框。效果取决于边界的颜色值</p> \n<p style=\"border: 5px outset #98bf21;padding:3px\">outset: 定义一个3D突出边框。 效果取决于边界的颜色值</p> \n<p>尝试一下: <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-style\">设置边框样式</a></p> \n<hr /> \n<h2>边框宽度</h2> \n<p>您可以通过 border-width 属性为边框指定宽度。</p> \n<p>为边框指定宽度有两种方法：可以指定长度值，比如 2px 或 0.1em；或者使用 3 个关键字之一，它们分别是 thin 、medium（默认值） 和 thick。</p> \n<p><b>注意：</b>CSS 没有定义 3 个关键字的具体宽度，所以一个用户代理可能把 thin 、medium 和 thick 分别设置为等于 5px、3px 和 2px，而另一个用户代理则分别设置为 3px、2px 和 1px。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p.one\n  <br /> {\n  <br /> border-style:solid;\n  <br /> border-width:5px;\n  <br /> }\n  <br /> p.two\n  <br /> {\n  <br /> border-style:solid;\n  <br /> border-width:medium;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-width\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>边框颜色</h2> \n<p>border-color属性用于设置边框的颜色。可以设置的颜色：</p> \n<ul> \n <li>name - 指定颜色的名称，如 &quot;red&quot;</li> \n <li>RGB - 指定 RGB 值, 如 &quot;rgb(255,0,0)&quot;</li> \n <li>Hex - 指定16进制值, 如 &quot;#ff0000&quot;</li> \n</ul> \n<p>您还可以设置边框的颜色为&quot;transparent&quot;。</p> \n<p><b>注意：</b> border-color单独使用是不起作用的，必须得先使用border-style来设置边框样式。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   p.one\n  <br /> {\n  <br /> border-style:solid;\n  <br /> border-color:red;\n  <br /> }\n  <br /> p.two\n  <br /> {\n  <br /> border-style:solid;\n  <br /> border-color:#98bf21;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-color1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>边框-单独设置各边</h2> \n<p>在CSS中，可以指定不同的侧面不同的边框：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p\n  <br /> {\n  <br /> border-top-style:dotted;\n  <br /> border-right-style:solid;\n  <br /> border-bottom-style:dotted;\n  <br /> border-left-style:solid;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-side\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>上面的例子也可以设置一个单一属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   border-style:dotted solid;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-side2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>border-style属性可以有1-4个值：</p> \n<ul> \n <li> <b>border-style:dotted solid double dashed; </b> \n  <ul> \n   <li>上边框是 dotted</li> \n   <li>右边框是 solid</li> \n   <li>底边框是 double</li> \n   <li>左边框是 dashed</li> \n  </ul> <br /> </li> \n <li> <b>border-style:dotted solid double;</b> \n  <ul> \n   <li>上边框是 dotted</li> \n   <li>左、右边框是 solid</li> \n   <li>底边框是 double</li> \n  </ul> <br /> </li> \n <li> <b>border-style:dotted solid;</b> \n  <ul> \n   <li>上、底边框是 dotted</li> \n   <li>右、左边框是 solid</li> \n  </ul> <br /> </li> \n <li> <b>border-style:dotted;</b>\n  <ul>\n   <li>四面边框是 dotted</li>\n  </ul> </li> \n</ul> \n<p>上面的例子用了border-style。然而，它也可以和border-width 、 border-color一起使用。</p> \n<hr /> \n<h2>边框-简写属性</h2> \n<p>上面的例子用了很多属性来设置边框。</p> \n<p>T你也可以在一个属性中设置边框。</p> \n<p> 你可以在&quot;border&quot;属性中设置：</p> \n<ul> \n <li>border-width</li> \n <li>border-style (required)</li> \n <li>border-color</li> \n</ul> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   border:5px solid red;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-top\">所有边框属性在一个声明之中</a><br /> 本例演示用简写属性来将所有四个边框属性设置于同一声明中。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-bottom-style\">设置下边框的样式</a><br /> 本例演示如何设置下边框的样式。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-left-width\">设置左边框的宽度</a><br /> 本例演示如何设置左边框的宽度。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-color\">设置四个边框的颜色</a><br /> 本例演示如何设置四个边框的颜色。可以设置一到四个颜色。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_border-right-color\">设置右边框的颜色</a><br /> 本例演示如何设置右边框的颜色。</p> \n<hr /> \n<h2>CSS 边框属性</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>属性</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border 属性\" href=\"http://www.runoob.com/cssref/pr-border.html\">border</a></td> \n   <td>简写属性，用于把针对四个边的属性设置在一个声明。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-style 属性\" href=\"http://www.runoob.com/cssref/pr-border-style.html\">border-style</a></td> \n   <td>用于设置元素所有边框的样式，或者单独地为各边设置边框样式。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-width 属性\" href=\"http://www.runoob.com/cssref/pr-border-width.html\">border-width</a></td> \n   <td>简写属性，用于为元素的所有边框设置宽度，或者单独地为各边边框设置宽度。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-color 属性\" href=\"http://www.runoob.com/cssref/pr-border-color.html\">border-color</a></td> \n   <td>简写属性，设置元素的所有边框中可见部分的颜色，或为 4 个边分别设置颜色。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-bottom 属性\" href=\"http://www.runoob.com/cssref/pr-border-bottom.html\">border-bottom</a></td> \n   <td>简写属性，用于把下边框的所有属性设置到一个声明中。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-bottom-color 属性\" href=\"http://www.runoob.com/cssref/pr-border-bottom-color.html\">border-bottom-color</a></td> \n   <td>设置元素的下边框的颜色。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-bottom-style 属性\" href=\"http://www.runoob.com/cssref/pr-border-bottom-style.html\">border-bottom-style</a></td> \n   <td>设置元素的下边框的样式。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-bottom-width 属性\" href=\"http://www.runoob.com/cssref/pr-border-bottom-width.html\">border-bottom-width</a></td> \n   <td>设置元素的下边框的宽度。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-left 属性\" href=\"http://www.runoob.com/cssref/pr-border-left.html\">border-left</a></td> \n   <td>简写属性，用于把左边框的所有属性设置到一个声明中。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-left-color 属性\" href=\"http://www.runoob.com/cssref/pr-border-left-color.html\">border-left-color</a></td> \n   <td>设置元素的左边框的颜色。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-left-style 属性\" href=\"http://www.runoob.com/cssref/pr-border-left-style.html\">border-left-style</a></td> \n   <td>设置元素的左边框的样式。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-left-width 属性\" href=\"http://www.runoob.com/cssref/pr-border-left-width.html\">border-left-width</a></td> \n   <td>设置元素的左边框的宽度。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-right 属性\" href=\"http://www.runoob.com/cssref/pr-border-right.html\">border-right</a></td> \n   <td>简写属性，用于把右边框的所有属性设置到一个声明中。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-right-color 属性\" href=\"http://www.runoob.com/cssref/pr-border-right-color.html\">border-right-color</a></td> \n   <td>设置元素的右边框的颜色。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-right-style 属性\" href=\"http://www.runoob.com/cssref/pr-border-right-style.html\">border-right-style</a></td> \n   <td>设置元素的右边框的样式。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-right-width 属性\" href=\"http://www.runoob.com/cssref/pr-border-right-width.html\">border-right-width</a></td> \n   <td>设置元素的右边框的宽度。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-top 属性\" href=\"http://www.runoob.com/cssref/pr-border-top.html\">border-top</a></td> \n   <td>简写属性，用于把上边框的所有属性设置到一个声明中。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-top-color 属性\" href=\"http://www.runoob.com/cssref/pr-border-top-color.html\">border-top-color</a></td> \n   <td>设置元素的上边框的颜色。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-top-style 属性\" href=\"http://www.runoob.com/cssref/pr-border-top-style.html\">border-top-style</a></td> \n   <td>设置元素的上边框的样式。</td> \n  </tr> \n  <tr> \n   <td><a title=\"CSS border-top-width 属性\" href=\"http://www.runoob.com/cssref/pr-border-top-width.html\">border-top-width</a></td> \n   <td>设置元素的上边框的宽度。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 边框|CSS 边框属性|边框样式|border-style 值:|边框宽度|实例|边框颜色|实例|边框-单独设置各边|实例|实例|边框-简写属性|实例|更多实例|CSS 边框属性|');
INSERT INTO `schoolcontent` VALUES ('85', '87', '<h1>CSS <span class=\"color_h1\">Outlines</span> </h1> \n<hr /> \n<p class=\"intro\">轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p> \n<p class=\"intro\">轮廓（outline）属性指定了样式，颜色和外边框的宽度。</p> \n<hr /> \n<h2>轮廓（outline）实例</h2> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_outline\">在元素周围画线</a><br /> 本例演示使用outline属性在元素周围画一条线。.</p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_outline-style\">设置轮廓的样式</a><br /> 本例演示如何设置轮廓的样式。</p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_outline-color\">设置轮廓的颜色</a><br /> 本例演示如何设置轮廓的颜色。</p> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_outline-width\">设置轮廓的宽度</a><br /> 本例演示如何设置轮廓的宽度。</p> \n<hr /> \n<h2>CSS 轮廓（outline）</h2> \n<p>轮廓（outline）是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p> \n<p>CSS outline 属性规定元素轮廓的样式、颜色和宽度。</p> \n<img src=\"http://www.runoob.com/images/box_outline.gif\" alt=\"Outline\" width=\"536\" height=\"289\" />\n<br />\n<hr /> \n<h2>所有CSS 轮廓（outline）属性</h2> \n<p>&quot;CSS&quot; 列中的数字表示哪个CSS版本定义了该属性(CSS1 或者CSS2)。 </p> \n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">属性</th> \n   <th width=\"53%\" align=\"left\">说明</th> \n   <th width=\"20%\" align=\"left\">值</th> \n   <th width=\"7%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-outline.html\">outline</a> </td> \n   <td>在一个声明中设置所有的外边框属性</td> \n   <td><i>outline-color<br /> outline-style<br /> outline-width<br /> </i>inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/cssref/pr-outline-color.html\"> outline-color</a> </td> \n   <td>设置外边框的颜色</td> \n   <td><i>color-name<br /> hex-number<br /> rgb-number<br /> </i>invert<br /> inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/cssref/pr-outline-style.html\"> outline-style</a> </td> \n   <td>设置外边框的样式</td> \n   <td>none<br /> dotted<br /> dashed<br /> solid<br /> double<br /> groove<br /> ridge<br /> inset<br /> outset<br /> inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td> <a href=\"http://www.runoob.com/cssref/pr-outline-width.html\"> outline-width</a> </td> \n   <td>设置外边框的宽度</td> \n   <td>thin<br /> medium<br /> thick<br /> <i>length<br /> </i>inherit</td> \n   <td>2</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS Outlines|轮廓（outline）实例|CSS 轮廓（outline）|所有CSS 轮廓（outline）属性|');
INSERT INTO `schoolcontent` VALUES ('86', '88', '<h1>CSS <span class=\"color_h1\">Margin(外边距)</span> </h1> \n<hr /> \n<p class=\"intro\">CSS Margin(外边距)属性定义元素周围的空间。</p> \n<hr /> \n<h2>Margin</h2> \n<p>margin清除周围的元素（外边框）的区域。margin没有背景颜色，是完全透明的</p> \n<p>margin可以单独改变元素的上，下，左，右边距。也可以一次改变所有的属性。</p> \n<h2>可能的值</h2> \n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" class=\"reference\"> \n <tbody>\n  <tr> \n   <th align=\"left\">值</th> \n   <th align=\"left\">说明</th> \n  </tr> \n  <tr> \n   <td>auto</td> \n   <td>设置浏览器边距。<br />这样做的结果会依赖于浏览器</td> \n  </tr> \n  <tr> \n   <td><i>length</i></td> \n   <td>定义一个固定的margin（使用像素，pt，em等） </td> \n  </tr> \n  <tr> \n   <td><i>%</i></td> \n   <td>定义一个使用百分比的边距</td> \n  </tr> \n </tbody>\n</table> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /> Margin可以使用负值，重叠的内容。</p> \n<hr /> &lt;h2Margin - 单边外边距属性 \n<p>在CSS中，它可以指定不同的侧面不同的边距：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   margin-top:100px;\n  <br /> margin-bottom:100px;\n  <br /> margin-right:50px;\n  <br /> margin-left:50px;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_margin_sides\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>Margin - 简写属性</h2> &lt;p为了缩短代码，有可能使用一个属性中margin指定的所有边距属性。这就是所谓的缩写属性。\n<p></p> \n<p>所有边距属性的缩写属性是&quot;margin&quot;:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   margin:100px 50px;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_margin_shorthand\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>margin属性可以有一到四个值。/p&gt; </p>\n<ul> \n <li> <b>margin:25px 50px 75px 100px; </b> \n  <ul> \n   <li>上边距为25px</li> \n   <li>右边距为50px</li> \n   <li>下边距为75px</li> \n   <li>左边距为100px</li> \n  </ul> <br /> </li> \n <li> <b>margin:25px 50px 75px;</b>\n  <ul> \n   <li>上边距为25px</li> \n   <li>左右边距为50px</li> \n   <li>下边距为75px</li> \n  </ul> <br /> </li> \n <li> <b>margin:25px 50px;</b>\n  <ul> \n   <li>上下边距为25px</li> \n   <li>左右边距为50px</li> \n  </ul> <br /> </li> \n <li> <b>margin:25px;</b>\n  <ul>\n   <li>所有的4个边距都是25px</li>\n  </ul> </li> \n</ul> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_margin-top\">文本的上边距设置使用厘米值</a><br /> 这个例子演示了如何设置一个使用厘米值的文本的顶部margin。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_margin-bottom_percent\">Set 使用百分比值设置文本的下边距</a><br /> 这个例子演示了如何设置使用百分比值的下边距，相对于包含的元素的宽度。</p> \n<hr /> \n<h2>所有的CSS边距属性</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>属性</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-margin.html\" title=\"CSS margin 属性\">margin</a></td> \n   <td>简写属性。在一个声明中设置所有外边距属性。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-margin-bottom.html\" title=\"CSS margin-bottom 属性\">margin-bottom</a></td> \n   <td>设置元素的下外边距。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-margin-left.html\" title=\"CSS margin-left 属性\">margin-left</a></td> \n   <td>设置元素的左外边距。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-margin-right.html\" title=\"CSS margin-right 属性\">margin-right</a></td> \n   <td>设置元素的右外边距。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-margin-top.html\" title=\"CSS margin-top 属性\">margin-top</a></td> \n   <td>设置元素的上外边距。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS Margin(外边距)|Margin|可能的值|实例|Margin - 简写属性|实例|更多实例|所有的CSS边距属性|');
INSERT INTO `schoolcontent` VALUES ('87', '89', '<h1>CSS <span class=\"color_h1\">Padding（填充）</span> </h1> \n<hr /> \n<p class=\"intro\">CSS Padding（填充）属性定义元素边框与元素内容之间的空间。</p> \n<hr /> \n<h2>Padding（填充）</h2> \n<p>当元素的 Padding（填充）（内边距）被清除时，所&quot;释放&quot;的区域将会受到元素背景颜色的填充。</p> \n<p>单独使用填充属性可以改变上下左右的填充。缩写填充属性也可以使用，一旦改变一切都改变。</p> \n<h2>可能的值</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th align=\"left\">值</th> \n   <th align=\"left\">说明</th> \n  </tr> \n  <tr> \n   <td><i>length</i></td> \n   <td>定义一个固定的填充(像素, pt, em,等)</td> \n  </tr> \n  <tr> \n   <td><i>%</i></td> \n   <td>使用百分比值定义一个填充</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>填充- 单边内边距属性</h2> \n<p>在CSS中，它可以指定不同的侧面不同的填充：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   padding-top:25px;\n  <br /> padding-bottom:25px;\n  <br /> padding-right:50px;\n  <br /> padding-left:50px;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_padding_sides\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>填充 - 简写属性</h2> \n<p>为了缩短代码，它可以在一个属性中指定的所有填充属性。</p> \n<p>这就是所谓的缩写属性。所有的填充属性的缩写属性是&quot;padding&quot;:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   padding:25px 50px;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_padding_shorthand\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>Padding属性，可以有一到四个值。</p> \n<ul> \n <li>上填充为25px</li> \n <li>右填充为50px</li> \n <li>下填充为75px</li> \n <li>左填充为100px</li> \n</ul> \n<p><b>&nbsp;&nbsp;padding:25px 50px 75px;</b></p> \n<ul> \n <li>上填充为25px</li> \n <li>左右填充为50px</li> \n <li>下填充为75px</li> \n</ul> \n<p><b>&nbsp;&nbsp;padding:25px 50px;</b></p> \n<ul> \n <li>上下填充为25px</li> \n <li>左右填充为50px</li> \n</ul> \n<p><b>&nbsp;&nbsp;padding:25px;</b></p> \n<ul> \n <li>所有的填充都是25px</li> \n</ul> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_padding\">在一个声明中的所有填充属性</a><br /> 这个例子演示了使用缩写属性设置在一个声明中的所有填充属性，可以有一到四个值。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_padding-left\">设置左部填充</a><br /> 这个例子演示了如何设置元素左填充。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_padding-right\">设置右部填充</a><br /> 这个例子演示了如何设置元素右填充。.</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_padding-top\">设置上部填充</a><br /> 这个例子演示了如何设置元素上填充。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_padding-bottom\">设置下部填充</a><br /> 这个例子演示了如何设置元素下填充。</p> \n<hr /> \n<h2>所有的CSS填充属性</h2> \n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">属性</th> \n   <th width=\"80%\" align=\"left\">说明</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-padding.html\">padding</a></td> \n   <td>使用缩写属性设置在一个声明中的所有填充属性</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-padding-bottom.html\">padding-bottom</a></td> \n   <td>设置元素的底部填充</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-padding-left.html\">padding-left</a></td> \n   <td>设置元素的左部填充</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-padding-right.html\">padding-right</a></td> \n   <td>设置元素的右部填充</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-padding-top.html\">padding-top</a></td> \n   <td>设置元素的顶部填充</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS Padding（填充）|Padding（填充）|可能的值|填充- 单边内边距属性|实例|填充 - 简写属性|实例|更多实例|所有的CSS填充属性|');
INSERT INTO `schoolcontent` VALUES ('88', '90', '<h1>CSS <span class=\"color_h1\">分组</span> 和 <span class=\"color_h1\">嵌套</span> 选择器</h1> \n<hr /> \n<h2>Grouping Selectors</h2> \n<p>在样式表中有很多具有相同样式的元素。</p> \n<div class=\"code\">\n <div>\n   h1\n  <br /> {\n  <br /> color:green;\n  <br /> }\n  <br /> h2\n  <br /> {\n  <br /> color:green;\n  <br /> }\n  <br /> p\n  <br /> {\n  <br /> color:green;\n  <br /> }\n </div>\n</div> \n<p>为了尽量减少代码，你可以使用分组选择器。</p> \n<p>每个选择器用逗号分隔.</p> \n<p>在下面的例子中，我们对以上代码使用分组选择器：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1,h2,p\n  <br /> {\n  <br /> color:green;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_grouping\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>嵌套选择器</h2> \n<p>它可能适用于选择器内部的选择器的样式。</p> \n<p>在下面的例子设置了三个样式：</p> \n<ul>\n <li>为所有p元素指定一个样式</li> \n <li>为所有class=&quot;marked&quot;的元素指定一个样式</li> \n <li>为所有class=&quot;marked&quot;元素内的p元素指定一个样式</li> \n</ul> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   p\n  <br /> {\n  <br /> color:blue;\n  <br /> text-align:center;\n  <br /> }\n  <br /> .marked\n  <br /> {\n  <br /> background-color:red;\n  <br /> }\n  <br /> .marked p\n  <br /> {\n  <br /> color:white;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_nesting\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />', null, 'CSS 分组 和 嵌套 选择器|Grouping Selectors|实例|嵌套选择器|实例|');
INSERT INTO `schoolcontent` VALUES ('89', '91', '<h1>CSS <span class=\"color_h1\">尺寸 (Dimension)</span> </h1> \n<hr /> \n<p class=\"intro\">CSS 尺寸 (Dimension) 属性允许你控制元素的高度和宽度。同样，它允许你增加行间距。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_height\" target=\"_blank\">设置元素的高度</a></p> \n<p>这个例子演示了如何设置不同元素的高度。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_height_percent\" target=\"_blank\">使用百分比设置图像的高度</a></p> \n<p>这个例子演示了如何使用百分比值设置元素的高度。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_width\" target=\"_blank\">使用像素值来设置元素的宽度</a></p> \n<p>本例演示如何使用像素值来设置元素的宽度。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_max_height\" target=\"_blank\">设置元素的最大高度</a></p> \n<p>此示例演示如何设置元素的最大高度。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_max-width_percent\" target=\"_blank\">使用百分比来设置元素的最大宽度</a></p> \n<p>本例演示如何使用百分比值来设置元素的最大宽度。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_min-height\" target=\"_blank\">设置元素的最低高度</a></p> \n<p>此示例演示如何设置元素的最小高度。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_min-width\" target=\"_blank\">使用像素值设置元素的最小宽度</a></p> \n<p>这个例子演示了如何使用像素值设置元素的最小宽度。</p> \n<hr /> \n<h2>所有CSS 尺寸 (Dimension)属性</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>属性</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-dim-height.html\">height</a></td> \n   <td>设置元素的高度。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-dim-line-height.html\">line-height</a></td> \n   <td>设置行高。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-dim-max-height.html\">max-height</a></td> \n   <td>设置元素的最大高度。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-dim-max-width.html\">max-width</a></td> \n   <td>设置元素的最大宽度。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-dim-min-height.html\">min-height</a></td> \n   <td>设置元素的最小高度。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-dim-min-width.html\">min-width</a></td> \n   <td>设置元素的最小宽度。</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-dim-width.html\">width</a></td> \n   <td>设置元素的宽度。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 尺寸 (Dimension)|更多实例|所有CSS 尺寸 (Dimension)属性|');
INSERT INTO `schoolcontent` VALUES ('90', '92', '<style>\r\n.imgbox\r\n{\r\nfloat:left;\r\ntext-align:center;\r\nwidth:120px;\r\nheight:135px;\r\nborder:1px solid gray;\r\nmargin:4px;\r\npadding:0px;\r\n}\r\n.thumbnail \r\n{\r\nwidth:110px;\r\nheight:90px;\r\nmargin:3px;\r\n}\r\n.box\r\n{\r\nwidth:110px;\r\npadding:0px;\r\n}\r\n</style> \n<script>\r\nfunction removeElement()\r\n{\r\ndocument.getElementById(\"imgbox1\").style.display=\"none\";\r\n}\r\nfunction changeVisibility()\r\n{\r\ndocument.getElementById(\"imgbox2\").style.visibility=\"hidden\";\r\n}\r\nfunction resetElement()\r\n{\r\ndocument.getElementById(\"imgbox1\").style.display=\"block\";\r\ndocument.getElementById(\"imgbox2\").style.visibility=\"visible\";\r\n}\r\n</script> \n<h1>CSS <span class=\"color_h1\">Display(显示)</span> 与 <span class=\"color_h1\">Visibility（可见性）</span> </h1> \n<hr /> \n<p class=\"intro\">display属性设置一个元素应如何显示，visibility属性指定一个元素应可见还是隐藏。</p> \n<div style=\"text-align:center\"> \n <div style=\"width:394px;height:150px;margin-left:auto;margin-right:auto;text-align:left;border:1px solid gray\"> \n  <div class=\"imgbox\" id=\"imgbox1\">\n    Box 1\n   <br /> \n   <img class=\"thumbnail\" src=\"http://www.runoob.com/images/klematis_small.jpg\" width=\"107\" height=\"90\" />\n   <br /> \n  </div> \n  <div class=\"imgbox\" id=\"imgbox2\">\n    Box 2\n   <br /> \n   <img class=\"thumbnail\" src=\"http://www.runoob.com/images/klematis2_small.jpg\" width=\"107\" height=\"80\" /> \n  </div> \n  <div class=\"imgbox\">\n    Box 3\n   <br /> \n   <img class=\"thumbnail\" src=\"http://www.runoob.com/images/klematis3_small.jpg\" width=\"116\" height=\"90\" /> \n  </div> \n </div> \n</div> \n<hr /> \n<h2>隐藏元素 - display:none或visibility:hidden</h2> \n<p>隐藏一个元素可以通过把display属性设置为&quot;none&quot;，或把visibility属性设置为&quot;hidden&quot;。但是请注意，这两种方法会产生不同的结果。</p> \n<p>visibility:hidden可以隐藏某个元素，但隐藏的元素仍需占用与未隐藏之前一样的空间。也就是说，该元素虽然被隐藏了，但仍然会影响布局。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1.hidden {visibility:hidden;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_visibility_hidden\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>display:none可以隐藏某个元素，且隐藏的元素不会占用任何空间。也就是说，该元素不但被隐藏了，而且该元素原本占用的空间也会从页面布局中消失。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1.hidden {display:none;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_display_none\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS Display - 块和内联元素</h2> \n<p>块元素是一个元素，占用了全部宽度，在前后都是换行符。</p> \n<p>块元素的例子：</p> \n<ul> \n <li>&lt;h1&gt;</li> \n <li>&lt;p&gt;</li> \n <li>&lt;div&gt;</li> \n</ul> \n<p class=\"elem_d11\">内联元素只需要必要的宽度，不强制换行。</p> \n<p>内联元素的例子：</p> \n<ul class=\"dd\"> \n <li>&lt;span&gt;</li> \n <li>&lt;a&gt;</li> \n</ul> \n<hr /> \n<h2>如何改变一个元素显示</h2> \n<p>可以更改内联元素和块元素，反之亦然，可以使页面看起来是以一种特定的方式组合，并仍然遵循web标准。</p> \n<p>下面的示例把列表项显示为内联元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   li {display:inline;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_display_inline_list\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>下面的示例把span元素作为块元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   span {display:block;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_display_block2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意：</b>变更元素的显示类型看该元素是如何显示，它是什么样的元素。例如：一个内联元素设置为display:block是不允许有它内部的嵌套块元素。<br /></p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_display\" target=\"_blank\">如何显示元素的内联元素。</a></p> \n<p>这个例子演示了如何显示一个元素的内联元素。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_display_block\" target=\"_blank\">如何显示元素的块元素。</a></p> \n<p>这个例子演示了如何显示一个元素的块元素。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_visibility_collapse\" target=\"_blank\">如何使用一个表的collapse属性。</a></p> \n<p>这个例子演示了如何使用表的collapse属性。</p>', null, 'CSS Display(显示) 与 Visibility（可见性）|隐藏元素 - display:none或visibility:hidden|实例|实例|CSS Display - 块和内联元素|如何改变一个元素显示|实例|实例|更多实例|');
INSERT INTO `schoolcontent` VALUES ('91', '93', '<h1>CSS <span class=\"color_h1\">Positioning(定位)</span> </h1> \n<hr /> \n<div style=\"width:98%;height:100px\"> \n <p>定位有时很棘手！</p> \n <div style=\"width:55%;height:60%;border:1px solid #c3c3c3;background-color:#e5eecc;padding:0px 10px\"> \n  <h2>决定显示在前面的元素！</h2>\n </div> \n <div style=\"width:55%;height:60%;border:1px solid #c3c3c3;background-color:#e5eecc;padding:0px 10px\"> \n  <h2 style=\"margin-top:25px\">元素可以重叠！</h2>\n </div> \n</div> \n<hr /> \n<h2>Positioning(定位)</h2> \n<p>CSS定位属性允许你为一个元素定位。它也可以将一个元素放在另一个元素后面，并指定一个元素的内容太大时，应该发生什么。</p> \n<p>元素可以使用的顶部，底部，左侧和右侧属性定位。然而，这些属性无法工作，除非是先设定position属性。他们也有不同的工作方式，这取决于定位方法.</p> \n<p>有四种不同的定位方法。</p> \n<hr /> \n<h2>Static 定位</h2> \n<p>HTML元素的默认值，即没有定位，元素出现在正常的流中。</p> \n<p>静态定位的元素不会受到top, bottom, left, right影响。</p> \n<hr /> \n<h2>Fixed 定位</h2> \n<p>元素的位置相对于浏览器窗口是固定位置。</p> \n<p>即使窗口是滚动的它也不会移动：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p.pos_fixed\n  <br /> {\n  <br /> position:fixed;\n  <br /> top:30px;\n  <br /> right:5px;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_position_fixed\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意：</b> Fixed 定位在 IE7 和 IE8 下需要描述 !DOCTYPE 才能支持.</p> \n<p>Fixed定位使元素的位置与文档流无关，因此不占据空间。</p> \n<p>Fixed定位的元素和其他元素重叠。</p> \n<hr /> \n<h2>Relative 定位</h2> \n<p>相对定位元素的定位是相对其正常位置。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h2.pos_left\n  <br /> {\n  <br /> position:relative;\n  <br /> left:-20px;\n  <br /> }\n  <br /> h2.pos_right\n  <br /> {\n  <br /> position:relative;\n  <br /> left:20px;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_position_relative\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>可以移动的相对定位元素的内容和相互重叠的元素，它原本所占的空间不会改变。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h2.pos_top\n  <br /> {\n  <br /> position:relative;\n  <br /> top:-50px;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_position_relative2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>相对定位元素经常被用来作为绝对定位元素的容器块。</p> \n<hr /> \n<h2>Absolute 定位</h2> \n<p>绝对定位的元素的位置相对于最近的已定位父元素，如果元素没有已定位的父元素，那么它的位置相对于&lt;html&gt;:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h2\n  <br /> {\n  <br /> position:absolute;\n  <br /> left:100px;\n  <br /> top:150px;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_position_absolute\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>Absolutely定位使元素的位置与文档流无关，因此不占据空间。</p> \n<p>Absolutely定位的元素和其他元素重叠。</p> \n<hr /> \n<h2>重叠的元素</h2> \n<p>元素的定位与文档流无关，所以它们可以覆盖页面上的其它元素</p> \n<p>z-index属性指定了一个元素的堆叠顺序（哪个元素应该放在前面，或后面）</p> \n<p>一个元素可以有正数或负数的堆叠顺序：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   img\n  <br /> {\n  <br /> position:absolute;\n  <br /> left:0px;\n  <br /> top:0px;\n  <br /> z-index:-1;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_zindex\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>具有更高堆叠顺序的元素总是在较低的堆叠顺序元素的前面。</p> \n<p><strong>注意：</strong> 如果两个定位元素重叠，没有指定z - index，最后定位在HTML代码中的元素将被显示在最前面。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_clip\" target=\"_blank\">裁剪元素的外形</a></p> \n<p>此示例演示如何设置元素的外形。该元素被剪裁成这种形状，并显示出来。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_overflow\" target=\"_blank\">如何使用滚动条来显示元素内溢出的内容</a></p> \n<p>这个例子演示了overflow属性创建一个滚动条，当一个元素的内容在指定的区域过大时如何设置以适应。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_pos_overflow_auto\" target=\"_blank\">如何设置浏览器自动溢出处理</a></p> \n<p>这个例子演示了如何设置浏览器来自动处理溢出。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_cursor\" target=\"_blank\">更改光标</a></p> \n<p>这个例子演示了如何改变光标。</p> \n<hr /> \n<h2>所有的CSS定位属性</h2> \n<p>&quot;CSS&quot; 列中的数字表示哪个CSS(CSS1 或者CSS2)版本定义了该属性。 </p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"25%\" align=\"left\">属性</th> \n   <th width=\"43%\" align=\"left\">说明</th> \n   <th width=\"27%\" align=\"left\">值</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-pos-bottom.html\">bottom</a></td> \n   <td>定义了定位元素下外边距边界与其包含块下边界之间的偏移。</td> \n   <td>auto<br /> <i>length<br /> %<br /> </i>inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-pos-clip.html\">clip</a></td> \n   <td>剪辑一个绝对定位的元素</td> \n   <td><i>shape<br /> </i>auto<br /> inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-class-cursor.html\">cursor</a></td> \n   <td>显示光标移动到指定的类型</td> \n   <td><span class=\"value-inst-uri noxref\"><i>url</i><br /> </span>auto<br /> crosshair<br /> default<br /> pointer<br /> move<br /> e-resize<br /> ne-resize<br /> nw-resize<br /> n-resize<br /> se-resize<br /> sw-resize<br /> s-resize<br /> w-resize<br /> text<br /> wait<br /> help</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-pos-left.html\">left</a></td> \n   <td>定义了定位元素左外边距边界与其包含块左边界之间的偏移。</td> \n   <td>auto<br /> <i>length<br /> %<br /> </i>inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-pos-overflow.html\">overflow</a><br /> </td> \n   <td>设置当元素的内容溢出其区域时发生的事情。</td> \n   <td>auto<br /> hidden<br /> scroll<br /> visible<br /> inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-class-position.html\">position</a></td> \n   <td>指定元素的定位类型</td> \n   <td>absolute<br /> fixed<br /> relative<br /> static<br /> inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-pos-right.html\">right</a></td> \n   <td>定义了定位元素右外边距边界与其包含块右边界之间的偏移。</td> \n   <td>auto<br /> <i>length<br /> %<br /> </i>inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-pos-top.html\">top</a></td> \n   <td>定义了一个定位元素的上外边距边界与其包含块上边界之间的偏移。</td> \n   <td>auto<br /> <i>length<br /> %<br /> </i>inherit</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-pos-z-index.html\">z-index</a></td> \n   <td>设置元素的堆叠顺序</td> \n   <td> <i>number<br /> </i>auto<br /> inherit</td> \n   <td>2</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS Positioning(定位)|决定显示在前面的元素！|元素可以重叠！|Positioning(定位)|Static 定位|Fixed 定位|实例|Relative 定位|实例|实例|Absolute 定位|实例|重叠的元素|实例|更多实例|所有的CSS定位属性|');
INSERT INTO `schoolcontent` VALUES ('92', '94', '<script>\r\nfunction removeElement(numId)\r\n{\r\ndocument.getElementById(numId).style.display=\"none\";\r\n}\r\n</script> \n<style>\r\n.imgbox\r\n{\r\nfloat:left;\r\ntext-align:center;\r\nwidth:120px;\r\nheight:120px;\r\nborder:1px solid gray;\r\nmargin:4px;\r\nmargin-bottom:8px;\r\npadding:0px;\r\n}\r\n.thumbnail \r\n{\r\nwidth:110px;\r\nheight:90px;\r\nmargin:3px;\r\n}\r\n.box\r\n{\r\nwidth:110px;\r\npadding:0px;\r\n}\r\n</style> \n<h1>CSS <span class=\"color_h1\">Float(浮动)</span> </h1> \n<hr /> \n<h2>什么是 CSS Float（浮动）？</h2> \n<div class=\"imgbox\" id=\"imgbox1\"> \n <img class=\"thumbnail\" src=\"http://www.runoob.com/images/klematis_small.jpg\" width=\"107\" height=\"90\" />\n <br /> \n</div> \n<div class=\"imgbox\" id=\"imgbox2\"> \n <img class=\"thumbnail\" src=\"http://www.runoob.com/images/klematis2_small.jpg\" width=\"107\" height=\"80\" /> \n</div> \n<div class=\"imgbox\" id=\"imgbox3\"> \n <img class=\"thumbnail\" src=\"http://www.runoob.com/images/klematis3_small.jpg\" width=\"116\" height=\"90\" /> \n</div> \n<div class=\"imgbox\" id=\"imgbox4\"> \n <img class=\"thumbnail\" src=\"http://www.runoob.com/images/klematis4_small.jpg\" width=\"107\" height=\"90\" />\n <br /> \n</div> \n<p style=\"clear:both\">CSS 的 Float（浮动），会使元素向左或向右移动，其周围的元素也会重新排列。</p> \n<p>Float（浮动），往往是用于图像，但它在布局时一样非常有用。</p> \n<hr /> \n<h2>元素怎样浮动</h2> \n<p>元素的水平方向浮动，意味着元素只能左右移动而不能上下移动。</p> \n<p>一个浮动元素会尽量向左或向右移动，直到它的外边缘碰到包含框或另一个浮动框的边框为止。</p> \n<p>浮动元素之后的元素将围绕它。</p> \n<p>浮动元素之前的元素将不会受到影响。</p> \n<p>如果图像是右浮动，下面的文本流将环绕在它左边：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   img\n  <br /> {\n  <br /> float:right;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_float\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>彼此相邻的浮动元素</h2> \n<p>如果你把几个浮动的元素放到一起，如果有空间的话，它们将彼此相邻。</p> \n<p>在这里，我们对图片廊使用 float 属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   .thumbnail \n  <br /> {\n  <br /> float:left;\n  <br /> width:110px;\n  <br /> height:90px;\n  <br /> margin:5px;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_float_elements\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>清除浮动 - 使用 clear</h2> \n<p>元素浮动之后，周围的元素会重新排列，为了避免这种情况，使用 clear 属性。</p> \n<p>clear 属性指定元素两侧不能出现浮动元素。</p> \n<p>使用 clear 属性往文本中添加图片廊：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   .text_line\n  <br /> {\n  <br /> clear:both;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try2.php?filename=trycss_float_clear\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float2\" target=\"_blank\">为图像添加边框和边距并浮动到段落的左侧</a></p> \n<p>让我们为图像添加边框和边距并浮动到段落的左侧</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float3\" target=\"_blank\">标题和图片向右侧浮动</a></p> \n<p>让标题和图片向右侧浮动。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float4\" target=\"_blank\">让段落的第一个字母浮动到左侧</a></p> \n<p>改变样式，让段落的第一个字母浮动到左侧。</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float6\" target=\"_blank\">创建一个没有表格的网页</a></p> \n<p>使用 float 创建一个网页页眉、页脚、左边的内容和主要内容。</p> \n<hr /> \n<h2>CSS 中所有的浮动属性</h2> \n<p>&quot;CSS&quot; 列中的数字表示不同的 CSS 版本（CSS1 或 CSS2）定义了该属性。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"25%\" align=\"left\">属性</th> \n   <th width=\"43%\" align=\"left\">描述</th> \n   <th width=\"27%\" align=\"left\">值</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-class-clear.html\">clear</a></td> \n   <td>指定不允许元素周围有浮动元素。</td> \n   <td>left<br /> right<br /> both<br /> none<br /> inherit</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/pr-class-float.html\">float</a></td> \n   <td>指定一个盒子（元素）是否可以浮动。</td> \n   <td>left<br /> right<br /> none<br /> inherit</td> \n   <td>1</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS Float(浮动)|什么是 CSS Float（浮动）？|元素怎样浮动|实例|彼此相邻的浮动元素|实例|清除浮动 - 使用 clear|实例|更多实例|CSS 中所有的浮动属性|');
INSERT INTO `schoolcontent` VALUES ('93', '95', '<h1>CSS <span class=\"color_h1\">水平对齐(Horizontal Align)</span> </h1> \n<hr /> \n<div style=\"text-align:center\"> \n <div style=\"border:1px solid gray;padding:2px 14px;margin-left:auto;margin-right:auto;width:45%;background-color:#e5eecc;text-align:left\"> \n  <h2>在CSS中，有几个属性用于元素水平对齐。</h2> \n </div> \n</div> \n<hr /> \n<h2>块元素对齐</h2> \n<p>块元素是一个元素，占用了全宽，前后都是换行符。</p> \n<p>块元素的例子：</p> \n<ul> \n <li>&lt;h1&gt;</li> \n <li>&lt;p&gt;</li> \n <li>&lt;div&gt;</li> \n</ul> \n<p>文本对齐，请参阅 <a href=\"css-text.html\"> CSS文本</a> 章节。.</p> \n<p>在这一章中，我们会告诉你块元素如何水平对齐布局。</p> \n<hr /> \n<h2>中心对齐,使用margin属性</h2> \n<p>块元素可以把左，右页边距设置为&quot;自动&quot;对齐。</p> \n<p><b>Note: </b>在IE8中使用margin:auto属性无法正常工作，除非声明 <b> !DOCTYPE </b></p> \n<p>margin属性可任意拆分为左，右页边距设置自动指定，结果都是出现居中元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   .center\n  <br /> {\n  <br /> margin-left:auto;\n  <br /> margin-right:auto;\n  <br /> width:70%;\n  <br /> background-color:#b0e0e6;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_align_container\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>提示:</b> 如果宽度是100％，对齐是没有效果的。</p> \n<p><b>注意：</b>IE5中块元素有一个margin处理BUG。为了使上述例子能工作，在IE5中，需要添加一些额外的代码。 <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_align_container_ie5\">实例</a></p> \n<hr /> \n<h2>使用position属性设置左，右对齐</h2> \n<p>元素对齐的方法之一是使用绝对定位：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   .right\n  <br /> {\n  <br /> position:absolute;\n  <br /> right:0px;\n  <br /> width:300px;\n  <br /> background-color:#b0e0e6;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_align_pos\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意：</b>绝对定位与文档流无关，所以它们可以覆盖页面上的其它元素。</p> \n<hr /> \n<h2>Crossbrowser 兼容性问题</h2> &lt;p类似这样的元素对齐时，预先确定margin和元素的填充，始终是一个好主意。这是为了避免在不同的浏览器中的可视化差异。\n<p></p> \n<p>IE8和早期有一个问题，当使用position属性时。如果一个容器元素（在本例中&lt;div class=&quot;container&quot;&gt;）指定的宽度，!DOCTYPE声明是缺失，IE8和早期版本会在右边增添17px的margin。这似乎是一个滚动的预留空间。使用position属性时始终设置在DOCTYPE声明中！</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body\n  <br /> {\n  <br /> margin:0;\n  <br /> padding:0;\n  <br /> }\n  <br /> .container\n  <br /> {\n  <br /> position:relative;\n  <br /> width:100%;\n  <br /> }\n  <br /> .right\n  <br /> {\n  <br /> position:absolute;\n  <br /> right:0px;\n  <br /> width:300px;\n  <br /> background-color:#b0e0e6;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_align_pos_crossbrowser\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>使用float属性设置左，右对齐</h2> \n<p>使用float属性是对齐元素的方法之一：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   .right\n  <br /> {\n  <br /> float:right;\n  <br /> width:300px;\n  <br /> background-color:#b0e0e6;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_align_float\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>Crossbrowser兼容性问题</h2> \n<p>类似这样的元素对齐时，预先确定margin和元素的填充，始终是一个好主意。这是为了避免在不同的浏览器中的可视化差异。</p> \n<p>IE8和早期有一个问题，当使用float属性时。如果一个容器元素（在本例中&lt;div class=&quot;container&quot;&gt;）指定的宽度，!DOCTYPE声明是缺失，IE8和早期版本会在右边增添17px的margin。这似乎是一个滚动的预留空间。使用float属性时始终设置在DOCTYPE声明中！</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   body\n  <br /> {\n  <br /> margin:0;\n  <br /> padding:0;\n  <br /> }\n  <br /> .right\n  <br /> {\n  <br /> float:right;\n  <br /> width:300px;\n  <br /> background-color:#b0e0e6;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_align_float_crossbrowser\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'CSS 水平对齐(Horizontal Align)|在CSS中，有几个属性用于元素水平对齐。|块元素对齐|中心对齐,使用margin属性|实例|使用position属性设置左，右对齐|实例|Crossbrowser 兼容性问题|实例|使用float属性设置左，右对齐|实例|Crossbrowser兼容性问题|实例|');
INSERT INTO `schoolcontent` VALUES ('94', '96', '<h1>CSS <span class=\"color_h1\">组合选择符</span> </h1> \n<hr /> \n<h2>CSS 组合选择符</h2> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>组合选择符说明了两个选择器直接的关系。</td> \n  </tr>\n </tbody>\n</table> \n<p>CSS组合选择符包括各种简单选择符的组合方式。</p> \n<p>在 CSS3 中包含了四种组合方式:</p> \n<ul> \n <li>后代选取器(以空格分隔)</li> \n <li>子元素选择器(以大于号分隔）</li> \n <li>相邻兄弟选择器（以加号分隔）</li> \n <li>普通兄弟选择器（以破折号分隔）</li> \n</ul> \n<hr /> \n<h2>后代选取器</h2> \n<p>后代选取器匹配所有值得元素的后代元素。</p> \n<p>以下实例选取所有 &lt;p&gt; 元素插入到 &lt;div&gt; 元素中:&nbsp;</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div p\n  <br />{\n  <br />background-color:yellow;\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_sel_element_element\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>子元素选择器</h2> \n<p>与后代选择器相比，子元素选择器（Child selectors）只能选择作为某元素子元素的元素。</p> \n<p>以下实例选择了&lt;div&gt;元素中所有直接子元素 &lt;p&gt; ：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div&gt;p\n  <br />{\n  <br />background-color:yellow;\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_sel_element_gt\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>相邻兄弟选择器</h2> \n<p>相邻兄弟选择器（Adjacent sibling selector）可选择紧接在另一元素后的元素，且二者有相同父元素。</p> \n<p>如果需要选择紧接在另一个元素后的元素，而且二者有相同的父元素，可以使用相邻兄弟选择器（Adjacent sibling selector）。</p> \n<p>以下实例选取了所有位于 &lt;div&gt; 元素后的第一个 &lt;p&gt; 元素:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div+p\n  <br />{\n  <br />background-color:yellow;\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_sel_element_pluss\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>普通相邻兄弟选择器</h2> \n<p>普通兄弟选择器选取所有指定元素的相邻兄弟元素。</p> \n<p>以下实例选取了所有 &lt;div&gt; 元素的所有相邻兄弟元素 &lt;p&gt; :&nbsp;</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div~p\n  <br />{\n  <br />background-color:yellow;\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_sel_element_tilde\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'CSS 组合选择符|CSS 组合选择符|后代选取器|实例|子元素选择器|实例|相邻兄弟选择器|实例|普通相邻兄弟选择器|实例|');
INSERT INTO `schoolcontent` VALUES ('95', '97', '<h1>CSS <span class=\"color_h1\">伪类(Pseudo-classes)</span> </h1> \n<hr /> \n<p class=\"intro\">CSS伪类是用来添加一些选择器的特殊效果。</p> \n<hr /> \n<h2>语法</h2> \n<p>伪类的语法：</p> \n<div class=\"code notranslate\">\n <div>\n   selector:pseudo-class {property:value;}\n </div>\n</div> \n<p>CSS类也可以使用伪类：</p> \n<div class=\"code notranslate\">\n <div>\n   selector.class:pseudo-class {property:value;}\n </div>\n</div> \n<br />\n<hr /> \n<h2>anchor伪类</h2> \n<p>在支持 CSS 的浏览器中，链接的不同状态都可以以不同的方式显示</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   a:link {color:#FF0000;} /* 未访问的链接 */\n  <br /> a:visited {color:#00FF00;} /* 已访问的链接 */\n  <br /> a:hover {color:#FF00FF;} /* 鼠标划过链接 */\n  <br /> a:active {color:#0000FF;} /* 已选中的链接 */ \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_link\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n <br /> \n</div> \n<p><b>注意：</b> 在CSS定义中，a:hover 必须被置于 a:link 和 a:visited 之后，才是有效的。</p> \n<p><b>注意：</b> 在 CSS 定义中，a:active 必须被置于 a:hover 之后，才是有效的。</p> \n<p><b>注意：</b>伪类的名称不区分大小写。</p> \n<hr /> \n<h2>伪类和CSS类</h2> \n<p>伪类可以与 CSS 类配合使用：</p> \n<div class=\"code\">\n <div>\n   a.red:visited {color:#FF0000;}\n  <br />\n  <br /> &lt;a class=&quot;red&quot; href=&quot;css-syntax.html&quot;&gt;CSS Syntax&lt;/a&gt;\n </div>\n</div> \n<p>如果在上面的例子的链接已被访问，它会显示为红色。</p> \n<hr /> \n<h2>CSS - :first - child伪类</h2> \n<p>您可以使用 :first-child 伪类来选择元素的第一个子元素</p> \n<p><b>注意：</b>在IE8的之前版本必须声明<a href=\"http://www.runoob.com/tags/tag-doctype.html\">&lt;!DOCTYPE&gt;</a> ，这样 :first-child 才能生效。</p> \n<h2>匹配第一个 &lt;p&gt; 元素</h2> \n<p>在下面的例子中，选择器匹配作为任何元素的第一个子元素的 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;style&gt;\n  <br /> p:first-child\n  <br /> {\n  <br /> color:blue;\n  <br /> } \n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br /> &lt;p&gt;I am a strong man.&lt;/p&gt;\n  <br /> &lt;p&gt;I am a strong man.&lt;/p&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_first-child1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>匹配所有&lt;p&gt; 元素中的第一个 &lt;i&gt; 元素</h2> \n<p>在下面的例子中，选择相匹配的所有&lt;p&gt;元素的第一 &lt;i&gt;元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;style&gt;\n  <br /> p &gt; i:first-child\n  <br /> {\n  <br /> color:blue;\n  <br /> } \n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br /> &lt;p&gt;I am a &lt;i&gt;strong&lt;/i&gt; man. I am a &lt;i&gt;strong&lt;/i&gt; man.&lt;/p&gt;\n  <br /> &lt;p&gt;I am a &lt;i&gt;strong&lt;/i&gt; man. I am a &lt;i&gt;strong&lt;/i&gt; man.&lt;/p&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_first-child2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> &lt;h2匹配所有作为第一个子元素的&lt;p&gt;元素中的所有&lt;i&gt;元素 :\n<p></p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;style&gt;\n  <br /> p:first-child i\n  <br /> {\n  <br /> color:blue;\n  <br /> } \n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br /> &lt;p&gt;I am a &lt;i&gt;strong&lt;/i&gt; man. I am a &lt;i&gt;strong&lt;/i&gt; man.&lt;/p&gt;\n  <br /> &lt;p&gt;I am a &lt;i&gt;strong&lt;/i&gt; man. I am a &lt;i&gt;strong&lt;/i&gt; man.&lt;/p&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_first-child3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>CSS - :lang 伪类</h2> \n<p>:lang 伪类使你有能力为不同的语言定义特殊的规则</p> \n<p><b>注意：</b>IE8必须声明<a href=\"http://www.runoob.com/tags/tag-doctype.html\">&lt;!DOCTYPE&gt;</a>才能支持;lang伪类。</p> \n<p>在下面的例子中，:lang 类为属性值为 no 的q元素定义引号的类型：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;style&gt;\n  <br /> q:lang(no) {quotes: &quot;~&quot; &quot;~&quot;;}\n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br /> &lt;p&gt;Some text &lt;q lang=&quot;no&quot;&gt;A quote in a paragraph&lt;/q&gt; Some text.&lt;/p&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_lang\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_link2\">为超链接添加不同样式</a><br /> 这个例子演示了如何为超链接添加其他样式。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_link_focus\">使用 :focus</a><br /> 这个例子演示了如何使用 :focus伪类。 </p> \n<hr /> \n<h2>所有CSS伪类/元素</h2> \n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" id=\"table13\" class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">选择器</th> \n   <th width=\"17%\" align=\"left\">示例</th> \n   <th width=\"63%\" align=\"left\">示例说明</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-link.html\">:link</a></td> \n   <td class=\"notranslate\">a:link</td> \n   <td>选择所有未访问链接</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-visited.html\">:visited</a></td> \n   <td class=\"notranslate\">a:visited</td> \n   <td>选择所有访问过的链接</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-active.html\">:active</a></td> \n   <td class=\"notranslate\">a:active</td> \n   <td>选择正在活动链接</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-hover.html\">:hover</a></td> \n   <td class=\"notranslate\">a:hover</td> \n   <td>把鼠标放在链接上的状态</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-focus.html\">:focus</a></td> \n   <td class=\"notranslate\">input:focus</td> \n   <td>选择元素输入后具有焦点</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-firstletter.html\">:first-letter</a></td> \n   <td class=\"notranslate\">p:first-letter</td> \n   <td>选择每个&lt;p&gt; 元素的第一个字母</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-firstline.html\">:first-line</a></td> \n   <td class=\"notranslate\">p:first-line</td> \n   <td>选择每个&lt;p&gt; 元素的第一行</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-firstchild.html\">:first-child</a></td> \n   <td class=\"notranslate\">p:first-child</td> \n   <td>选择器匹配属于任意元素的第一个子元素的 &lt;]p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-before.html\">:before</a></td> \n   <td class=\"notranslate\">p:before</td> \n   <td>在每个&lt;p&gt;元素之前插入内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-after.html\">:after</a></td> \n   <td class=\"notranslate\">p:after</td> \n   <td>在每个&lt;p&gt;元素之后插入内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-lang.html\">:lang(<i>language</i>)</a></td> \n   <td class=\"notranslate\">p:lang(it)</td> \n   <td>为&lt;p&gt;元素的lang属性选择一个开始值</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 伪类(Pseudo-classes)|语法|anchor伪类|实例|伪类和CSS类|CSS - :first - child伪类|匹配第一个 <p> 元素|实例|匹配所有<p> 元素中的第一个 <i> 元素|实例|实例|CSS - :lang 伪类|实例|更多实例|所有CSS伪类/元素|');
INSERT INTO `schoolcontent` VALUES ('96', '98', '<h1>CSS <span class=\"color_h1\"> 伪元素</span> </h1> \n<hr /> \n<p class=\"intro\">CSS伪元素是用来添加一些选择器的特殊效果。</p> \n<hr /> \n<h2>语法</h2> \n<p>伪元素的语法：</p> \n<div class=\"code notranslate\">\n <div>\n   selector:pseudo-element {property:value;}\n </div>\n</div> \n<p>CSS类也可以使用伪元素：</p> \n<div class=\"code notranslate\">\n <div>\n   selector.class:pseudo-element {property:value;}\n </div>\n</div> \n<br />\n<hr /> \n<h2>:first-line 伪元素</h2> \n<p>&quot;first-line&quot; 伪元素用于向文本的首行设置特殊样式。</p> \n<p>在下面的例子中，浏览器会根据 &quot;first-line&quot; 伪元素中的样式对 p 元素的第一行文本进行格式化：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p:first-line \n  <br /> {\n  <br /> color:#ff0000;\n  <br /> font-variant:small-caps;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_firstline\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意：</b>&quot;first-line&quot; 伪元素只能用于块级元素。</p> \n<p><b>注意：</b> 下面的属性可应用于 &quot;first-line&quot; 伪元素：</p> \n<ul> \n <li> font properties</li> \n <li>color properties&nbsp;</li> \n <li> background properties</li> \n <li>word-spacing</li> \n <li>letter-spacing</li> \n <li>text-decoration</li> \n <li>vertical-align</li> \n <li>text-transform</li> \n <li>line-height</li> \n <li>clear</li> \n</ul> \n<hr /> \n<h2>:first-letter 伪元素</h2> \n<p>&quot;first-letter&quot; 伪元素用于向文本的首字母设置特殊样式：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p:first-letter \n  <br /> {\n  <br /> color:#ff0000;\n  <br /> font-size:xx-large;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_firstletter\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意：</b> &quot;first-letter&quot; 伪元素只能用于块级元素。</p> \n<p><b>注意：</b> 下面的属性可应用于 &quot;first-letter&quot; 伪元素：&nbsp;</p> \n<ul> \n <li> font properties</li> \n <li> color properties&nbsp;</li> \n <li> background properties</li> \n <li>margin properties</li> \n <li>padding properties</li> \n <li>border properties</li> \n <li>text-decoration</li> \n <li>vertical-align (only if &quot;float&quot; is &quot;none&quot;)</li> \n <li>text-transform</li> \n <li>line-height</li> \n <li>float</li> \n <li>clear</li> \n</ul> \n<hr /> \n<h2>伪元素和CSS类</h2> \n<p>伪元素可以结合CSS类：&nbsp;</p> \n<div class=\"code notranslate\">\n <div>\n   p.article:first-letter {color:#ff0000;}\n  <br />\n  <br /> &lt;p class=&quot;article&quot;&gt;A paragraph in an article&lt;/p&gt;\n </div>\n</div> \n<p>上面的例子会使所有 class 为 article 的段落的首字母变为红色。</p> \n<hr /> \n<h2>Multiple Pseudo-elements</h2> \n<p>可以结合多个伪元素来使用。</p> \n<p>在下面的例子中，段落的第一个字母将显示为红色，其字体大小为 xx-large。第一行中的其余文本将为蓝色，并以小型大写字母显示。</p> \n<p>段落中的其余文本将以默认字体大小和颜色来显示：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p:first-letter\n  <br /> {\n  <br /> color:#ff0000;\n  <br /> font-size:xx-large;\n  <br /> }\n  <br /> p:first-line \n  <br /> {\n  <br /> color:#0000ff;\n  <br /> font-variant:small-caps;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_firstline_letter\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS - :before 伪元素</h2> \n<p>&quot;:before&quot; 伪元素可以在元素的内容前面插入新内容。</p> \n<p>下面的例子在每个 &lt;h1&gt;元素前面插入一幅图片：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1:before \n  <br /> {\n  <br /> content:url(smiley.gif);\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_before\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS - :after 伪元素</h2> \n<p>&quot;:after&quot; 伪元素可以在元素的内容之后插入新内容。</p> \n<p>下面的例子在每个 &lt;h1&gt; 元素后面插入一幅图片：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   h1:after\n  <br /> {\n  <br /> content:url(smiley.gif);\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_after\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>所有CSS伪类/元素</h2> \n<table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"1\" id=\"table13\" class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">选择器</th> \n   <th width=\"17%\" align=\"left\">示例</th> \n   <th width=\"63%\" align=\"left\">示例说明</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-link.html\">:link</a></td> \n   <td class=\"notranslate\">a:link</td> \n   <td>选择所有未访问链接</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-visited.html\">:visited</a></td> \n   <td class=\"notranslate\">a:visited</td> \n   <td>选择所有访问过的链接</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-active.html\">:active</a></td> \n   <td class=\"notranslate\">a:active</td> \n   <td>选择正在活动链接</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-hover.html\">:hover</a></td> \n   <td class=\"notranslate\">a:hover</td> \n   <td>把鼠标放在链接上的状态</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-focus.html\">:focus</a></td> \n   <td class=\"notranslate\">input:focus</td> \n   <td>选择元素输入后具有焦点</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-firstletter.html\">:first-letter</a></td> \n   <td class=\"notranslate\">p:first-letter</td> \n   <td>选择每个&lt;p&gt; 元素的第一个字母</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-firstline.html\">:first-line</a></td> \n   <td class=\"notranslate\">p:first-line</td> \n   <td>选择每个&lt;p&gt; 元素的第一行</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-firstchild.html\">:first-child</a></td> \n   <td class=\"notranslate\">p:first-child</td> \n   <td>选择器匹配属于任意元素的第一个子元素的 &lt;]p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-before.html\">:before</a></td> \n   <td class=\"notranslate\">p:before</td> \n   <td>在每个&lt;p&gt;元素之前插入内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-after.html\">:after</a></td> \n   <td class=\"notranslate\">p:after</td> \n   <td>在每个&lt;p&gt;元素之后插入内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/sel-lang.html\">:lang(<i>language</i>)</a></td> \n   <td class=\"notranslate\">p:lang(it)</td> \n   <td>为&lt;p&gt;元素的lang属性选择一个开始值</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 伪元素|语法|:first-line 伪元素|实例|:first-letter 伪元素|实例|伪元素和CSS类|Multiple Pseudo-elements|实例|CSS - :before 伪元素|实例|CSS - :after 伪元素|实例|所有CSS伪类/元素|');
INSERT INTO `schoolcontent` VALUES ('97', '99', '<h1>CSS <span class=\"color_h1\">导航栏</span> </h1> \n<hr /> \n<div class=\"horizontal\"> \n <h2 style=\"text-align:center\">实例: 导航栏</h2> \n <ul> \n  <li><a href=\"#\">Home</a></li> \n  <li><a href=\"#\">News</a></li> \n  <li><a href=\"#\">Articles</a></li> \n  <li><a href=\"#\">Forum</a></li> \n  <li><a href=\"#\">Contact</a></li> \n  <li><a href=\"#\">About</a></li> \n </ul> \n</div> \n<hr /> \n<h2>导航栏</h2> \n<p>熟练使用导航栏，对于任何网站都非常重要。</p> \n<p>使用CSS你可以转换成好看的导航栏而不是枯燥的HTML菜单。</p> \n<hr /> \n<h2>导航栏=链接列表</h2> \n<p>作为标准的HTML基础一个导航栏是必须的</p> \n<p>。在我们的例子中我们将建立一个标准的HTML列表导航栏。</p> \n<p>导航条基本上是一个链接列表，所以使用 &lt;ul&gt; 和 &lt;li&gt;元素非常有意义：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;ul&gt;\n  <br /> &lt;li&gt;&lt;a href=&quot;default.asp&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;\n  <br /> &lt;li&gt;&lt;a href=&quot;news.asp&quot;&gt;News&lt;/a&gt;&lt;/li&gt;\n  <br /> &lt;li&gt;&lt;a href=&quot;contact.asp&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;\n  <br /> &lt;li&gt;&lt;a href=&quot;about.asp&quot;&gt;About&lt;/a&gt;&lt;/li&gt;\n  <br /> &lt;/ul&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_basic_html\">尝试一下 &raquo;</a> \n</div> \n<p>现在，让我们从列表中删除边距和填充：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   ul\n  <br /> {\n  <br /> list-style-type:none;\n  <br /> margin:0;\n  <br /> padding:0;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_basic_css\">尝试一下 &raquo;</a> \n</div> \n<p>例子解析：</p> \n<ul> \n <li>list-style-type:none - 移除列表前小标志。一个导航栏并不需要列表标记 </li> \n <li>移除浏览器的默认设置将边距和填充设置为0</li> \n</ul> \n<p>上面的例子中的代码是垂直和水平导航栏使用的标准代码。</p> \n<hr /> \n<h2>垂直导航栏</h2> \n<p>上面的代码，我们只需要 &lt;a&gt;元素的样式，建立一个垂直的导航栏：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   a\n  <br /> {\n  <br /> display:block;\n  <br /> width:60px;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_vertical\">尝试一下 &raquo;</a> \n</div> \n<p>示例说明：</p> \n<ul> \n <li>display:block - 显示块元素的链接，让整体变为可点击链接区域（不只是文本），它允许我们指定宽度 </li> \n <li>width:60px - 块元素默认情况下是最大宽度。我们要指定一个60像素的宽度</li> \n</ul> \n<p><b>提示：</b>查看 <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_vertical_advanced\">完全样式的垂直导航栏的示例</a>.</p> \n<p><b>注意：</b> 请务必指定 &lt;a&gt;元素在垂直导航栏的的宽度。如果省略宽度，IE6可能产生意想不到的效果。</p> \n<hr /> \n<h2>水平导航栏</h2> \n<p>有两种方法创建横向导航栏。使用<b>内联</b>或<b>浮动</b>的列表项。</p> \n<p>这两种方法都很好，但如果你想链接到具有相同的大小，你必须使用浮动的方法。</p> \n<h2>内嵌列表项</h2> \n<p>建立一个横向导航栏的方法之一是指定</p>\n<li>元素， 上述代码是标准的内嵌:<p></p> \n <div class=\"example\"> \n  <h2 class=\"example\">实例</h2> \n  <div class=\"example_code notranslate\">\n    li\n   <br /> {\n   <br /> display:inline;\n   <br /> }\n  </div> \n  <br />\n  <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_horizontal\">尝试一下 &raquo;</a> \n </div> <p>实例解析：</p> \n <ul> \n  <li>display:inline; -默认情况下，&lt;li&gt;元素是块元素。在这里，我们删除换行符之前和之后每个列表项，以显示一行 。</li> \n </ul> <p><b>提示:</b> 查看 <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_horizontal_advanced\"> 完全样式的水平导航栏的示例</a>.</p> <h2>浮动列表项</h2> <p>在上面的例子中链接有不同的宽度。</p> <p>对于所有的链接宽度相等，浮动 &lt;li&amp;gt元素，并指定为 &lt;a&gt;元素的宽度：</p> \n <div class=\"example\"> \n  <h2 class=\"example\">实例</h2> \n  <div class=\"example_code notranslate\">\n    li\n   <br /> {\n   <br /> float:left;\n   <br /> }\n   <br /> a\n   <br /> {\n   <br /> display:block;\n   <br /> width:60px;\n   <br /> }\n  </div> \n  <br />\n  <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_horizontal_float\">尝试一下 &raquo;</a> \n </div> <p>实例解析：</p> \n <ul> \n  <li>float:left - 使用浮动块元素的幻灯片彼此相邻</li> \n  <li>display:block - 显示块元素的链接，让整体变为可点击链接区域（不只是文本），它允许我们指定宽度</li> \n  <li>width:60px - 块元素默认情况下是最大宽度。我们要指定一个60像素的宽度</li> \n </ul> <p><b>Tip:</b>查看 <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_horizontal_float_advanced\"> 完全样式的横向导航栏的示例.</a>.</p> </li>', null, 'CSS 导航栏|实例: 导航栏|导航栏|导航栏=链接列表|实例|实例|垂直导航栏|实例|水平导航栏|内嵌列表项|实例|浮动列表项|实例|');
INSERT INTO `schoolcontent` VALUES ('98', '100', '<style>\r\n.dropbtn {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    padding: 16px;\r\n    font-size: 16px;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\n.dropdown {\r\n    position: relative;\r\n    display: inline-block;\r\n}\r\n\r\n.dropdown:hover .dropbtn {\r\n    background-color:#3e8e41;\r\n}\r\n\r\n.dropdown-content {\r\n    display: none;\r\n    position: absolute;\r\n    background-color: #f9f9f9;\r\n    min-width: 100%;\r\n    overflow: auto;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n    z-index: 1;\r\n}\r\n\r\n.dropdown-content a {\r\n    color: black;\r\n    padding: 12px 16px;\r\n    text-decoration: none;\r\n    display: block;\r\n}\r\n\r\n.dropdown-content a:hover {background-color: #f1f1f1}\r\n\r\n.dropdown2:hover .dropdown-content {\r\n    display: block;\r\n}\r\n\r\n.right {\r\n	right:0;\r\n}\r\n@media only screen and (max-width: 600px) {\r\n.dropdown {\r\n	display:inline;\r\n}\r\n  .dropbtn {\r\n   width: 100%;\r\n   margin-top:55px;\r\n  }\r\n  .dropbtn2 {\r\n   margin-top:5px;\r\n  }\r\n    .dropspan {\r\n   width: 100%;\r\n   margin-top:5px;\r\n  }\r\n\r\n  .dropimg {\r\n   margin-top:55px;\r\n  }\r\n  .right {\r\n	left:0;\r\n	min-width:300px;\r\n}\r\n\r\n}\r\n\r\n@media only screen and (max-width: 346px) {\r\n.right {\r\n	left:0;\r\n	min-width:252px;\r\n}\r\n\r\n}\r\n.show {display:block;}\r\n</style> \n<h1>CSS 下拉菜单</h1> \n<p>使用 CSS 创建一个鼠标移动上去后显示下拉菜单的效果。</p> \n<hr /> \n<h2>下拉菜单实例</h2> \n<h3>实例演示 1</h3> \n<div class=\"dropdown dropdown2\"> \n <span class=\"dropspan\">文本下拉菜单</span> \n <div class=\"dropdown-content\" style=\"padding:8px 16px;min-width:150px;text-align:center\"> \n  <p>菜鸟教程</p> \n  <p>www.runoob.com</p> \n </div> \n</div> \n<p style=\"clear:both\"></p> \n<p style=\"margin-top:30px\"></p> \n<h3>实例演示 2</h3> \n<div class=\"dropdown dropdown2\"> \n <button class=\"dropbtn\">下拉菜单</button> \n <div class=\"dropdown-content\"> \n  <a href=\"void(0)\">菜鸟教程 1</a> \n  <a href=\"void(0)\">菜鸟教程 2</a> \n  <a href=\"void(0)\">菜鸟教程 3</a> \n </div> \n</div>\n<p style=\"clear:both\"></p> \n<p style=\"margin-top:30px\"></p>\n<h3>实例演示 3</h3> \n<div class=\"dropdown dropdown2\"> \n <span></span>\n <img class=\"dropimg\" src=\"http://www.runoob.com/wp-content/uploads/2015/09/banner.jpg\" alt=\"Trolltunga Norway\" width=\"100\" height=\"50\" /> \n <div class=\"dropdown-content right\"> \n  <div class=\"img\"> \n   <img src=\"http://www.runoob.com/wp-content/uploads/2015/09/banner.jpg\" alt=\"Trolltunga Norway\" width=\"400\" height=\"200\" /> \n   <div style=\"padding:15px;text-align:center\">\n    学的不仅是技术，更是梦想！\n   </div> \n  </div> \n </div> \n</div>\n<p style=\"clear:both\"></p> \n<hr /> \n<h2>基本下拉菜单</h2> \n<p>当鼠标移动到指定元素上时，会出现下拉菜单。</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">&lt;style&gt;<br />.dropdown </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">position:</span>\n  <span class=\"highVAL\"> relative;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">display:</span>\n  <span class=\"highVAL\"> inline-block;</span>\n  <br />}\n  <br />\n  <br />\n  <span class=\"highELE\">.dropdown-content </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">display:</span>\n  <span class=\"highVAL\"> none;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">position:</span>\n  <span class=\"highVAL\"> absolute;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-color:</span>\n  <span class=\"highVAL\"> #f9f9f9;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">min-width:</span>\n  <span class=\"highVAL\"> 160px;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">box-shadow:</span>\n  <span class=\"highVAL\"> 0px 8px 16px 0px rgba(0,0,0,0.2);</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">padding:</span>\n  <span class=\"highVAL\"> 12px 16px;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">z-index:</span>\n  <span class=\"highVAL\"> 1;</span>\n  <br />}\n  <br />\n  <br />\n  <span class=\"highELE\">.dropdown:hover .dropdown-content </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">display:</span>\n  <span class=\"highVAL\"> block;</span>\n  <br />}\n  <br />\n  <span class=\"highELE\">&lt;/style&gt;<br /><br /><span class=\"htmlHigh\"><span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span> <span class=\"highATT\">class=</span><span class=\"highVAL\">&quot;dropdown&quot;</span><span class=\"highGT\">&gt;</span><br /> &nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">span</span><span class=\"highGT\">&gt;</span><span style=\"color:black\">Mouse over me</span><span class=\"highLT\">&lt;</span><span class=\"highELE\">/span</span><span class=\"highGT\">&gt;</span><br />&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span> <span class=\"highATT\">class=</span><span class=\"highVAL\">&quot;dropdown-content&quot;</span><span class=\"highGT\">&gt;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">p</span><span class=\"highGT\">&gt;</span><span style=\"color:black\">Hello World!</span><span class=\"highLT\">&lt;</span><span class=\"highELE\">/p</span><span class=\"highGT\">&gt;</span><br />&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span><br /><span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span></span></span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_dropdown_text\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<h3>实例解析</h3> \n<p><b>HTML 部分：</b></p> \n<p>我们可以使用任何的 HTM，元素来打开下拉菜单，如：&lt;span&gt;, 或 a &lt;button&gt; 元素。</p> \n<p>使用容器元素 (如： &lt;div&gt;) 来创建下拉菜单的内容，并放在任何你想放的位置上。</p> \n<p>使用 &lt;div&gt; 元素来包裹这些元素，并使用 CSS 来设置下拉内容的样式。</p> \n<p><b>CSS 部分：</b></p> \n<p> <code>.dropdown</code> 类使用 <code>position:relative</code>, 这将设置下拉菜单的内容放置在下拉按钮 (使用 <code>position:absolute</code>) 的右下角位置。</p> \n<p> <code>.dropdown-content</code> 类中是实际的下拉菜单。默认是隐藏的，在鼠标移动到指定元素后会显示。 注意 <code>min-width</code> 的值设置为 160px。你可以随意修改它。 <strong>注意:</strong> 如果你想设置下拉内容与下拉按钮的宽带一致，可设置 <code>width</code> 为 100% ( <code>overflow:auto</code> 设置可以在小尺寸屏幕上滚动)。</p> \n<p>我们使用 <code>box-shadow</code> 属性让下拉菜单看起来像一个&quot;卡片&quot;。</p> \n<p> <code>:hover</code> 选择器用于在用户将鼠标移动到下拉按钮上时显示下拉菜单。</p> \n<hr /> \n<h2>下拉菜单</h2> \n<p>创建下拉菜单，并允许用户选取列表中的某一项：</p> \n<div class=\"dropdown dropdown2\"> \n <button class=\"dropbtn dropbtn2\">下拉菜单</button> \n <div class=\"dropdown-content\"> \n  <a href=\"void(0)\">菜鸟教程 1</a> \n  <a href=\"void(0)\">菜鸟教程 2</a> \n  <a href=\"void(0)\">菜鸟教程 3</a> \n </div> \n</div> \n<p>这个实例类似前面的实例，当我们在下拉列表中添加了链接，并设置了样式：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">&lt;style&gt;<br /><span class=\"highCOM\">/* 下拉按钮样式 */</span><br />.dropbtn {<br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">background-color:</span><span class=\"highVAL\"> #4CAF50;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">color:</span><span class=\"highVAL\"> white;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">padding:</span><span class=\"highVAL\"> 16px;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">font-size:</span><span class=\"highVAL\"> 16px;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">border:</span><span class=\"highVAL\"> none;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">cursor:</span><span class=\"highVAL\"> pointer;</span><br />}<br /><br /><span class=\"highCOM\">/* 容器 &lt;div&gt; - 需要定位下拉内容 */</span><br /><span class=\"highELE\">.dropdown </span>{<br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">position:</span><span class=\"highVAL\"> relative;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">display:</span><span class=\"highVAL\"> inline-block;</span><br />}<br /><br /><span class=\"highCOM\">/* 下拉内容 (默认隐藏) */</span><br /> <span class=\"highELE\">.dropdown-content </span>{<br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">display:</span><span class=\"highVAL\"> none;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">position:</span><span class=\"highVAL\"> absolute;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">background-color:</span><span class=\"highVAL\"> #f9f9f9;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">min-width:</span><span class=\"highVAL\"> 160px;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">box-shadow:</span><span class=\"highVAL\"> 0px 8px 16px 0px rgba(0,0,0,0.2);</span><br />}<br /><br /><span class=\"highCOM\">/* 下拉菜单的链接 */</span><br /> <span class=\"highELE\">.dropdown-content a </span>{<br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">color:</span><span class=\"highVAL\"> black;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">padding:</span><span class=\"highVAL\"> 12px 16px;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">text-decoration:</span><span class=\"highVAL\"> none;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">display:</span><span class=\"highVAL\"> block;</span><br />}<br /><br /><span class=\"highCOM\">/* 鼠标移上去后修改下拉菜单链接颜色 */</span><br /> <span class=\"highELE\">.dropdown-content a:hover </span>{<span class=\"highATT\">background-color:</span><span class=\"highVAL\"> #f1f1f1</span>}<br /><br /><span class=\"highCOM\">/* 在鼠标移上去后显示下拉菜单 */</span><br /><span class=\"highELE\">.dropdown:hover .dropdown-content </span>{<br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">display:</span><span class=\"highVAL\"> block;</span><br />}<br /><br /><span class=\"highCOM\">/* 当下拉内容显示后修改下拉按钮的背景颜色 */</span><br /><span class=\"highELE\">.dropdown:hover .dropbtn </span>{<br />&nbsp;&nbsp;&nbsp; <span class=\"highATT\">background-color:</span><span class=\"highVAL\"> #3e8e41;</span><br />}<br /><span class=\"highELE\">&lt;/style&gt;<br /><br /><span class=\"htmlHigh\"><span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span> <span class=\"highATT\">class=</span><span class=\"highVAL\">&quot;dropdown&quot;</span><span class=\"highGT\">&gt;</span><br />&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">button</span> <span class=\"highATT\">class=</span><span class=\"highVAL\">&quot;dropbtn&quot;</span><span class=\"highGT\">&gt;</span><span style=\"color:black\">下拉菜单</span><span class=\"highLT\">&lt;</span><span class=\"highELE\">/button</span><span class=\"highGT\">&gt;</span><br />&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">div</span> <span class=\"highATT\">class=</span><span class=\"highVAL\">&quot;dropdown-content&quot;</span><span class=\"highGT\">&gt;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">a</span> <span class=\"highATT\">href=</span><span class=\"highVAL\">&quot;#&quot;</span><span class=\"highGT\">&gt;</span><span style=\"color:black\">菜鸟教程 1</span><span class=\"highLT\">&lt;</span><span class=\"highELE\">/a</span><span class=\"highGT\">&gt;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">a</span> <span class=\"highATT\">href=</span><span class=\"highVAL\">&quot;#&quot;</span><span class=\"highGT\">&gt;</span><span style=\"color:black\">菜鸟教程 2</span><span class=\"highLT\">&lt;</span><span class=\"highELE\">/a</span><span class=\"highGT\">&gt;</span><br />&nbsp;&nbsp;&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">a</span> <span class=\"highATT\">href=</span><span class=\"highVAL\">&quot;#&quot;</span><span class=\"highGT\">&gt;</span><span style=\"color:black\">菜鸟教程 3</span><span class=\"highLT\">&lt;</span><span class=\"highELE\">/a</span><span class=\"highGT\">&gt;</span><br />&nbsp; <span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span><br /><span class=\"highLT\">&lt;</span><span class=\"highELE\">/div</span><span class=\"highGT\">&gt;</span></span></span></span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_dropdown_button\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>下拉内容对齐方式</h2> \n<h3>float:left;</h3> \n<div class=\"dropdown dropdown2\" style=\"float:left\"> \n <button class=\"dropbtn dropbtn2\">左</button> \n <div class=\"dropdown-content\" style=\"min-width:160px\"> \n  <a href=\"void(0)\">菜鸟教程 1</a> \n  <a href=\"void(0)\">菜鸟教程 2</a> \n  <a href=\"void(0)\">菜鸟教程 3</a> \n </div> \n</div> \n<p style=\"clear:both\"></p> \n<p style=\"margin-top:30px\"></p> \n<h3>float:right;</h3> \n<div class=\"dropdown dropdown2\" style=\"float:right\"> \n <button class=\"dropbtn dropbtn2\">右</button> \n <div class=\"dropdown-content\" style=\"min-width:160px\"> \n  <a href=\"void(0)\">菜鸟教程 1</a> \n  <a href=\"void(0)\">菜鸟教程 2</a> \n  <a href=\"void(0)\">菜鸟教程 3</a> \n </div> \n</div> \n<p style=\"clear:both\"></p> \n<p style=\"margin-top:30px\">如果你想设置右浮动的下拉菜单内容方向是从右到左，而不是从左到右，可以添加以下代码 <code>right: 0;</code></p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">.dropdown-content </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">right:</span>\n  <span class=\"highVAL\"> 0;</span>\n  <br />}\n  <br />\n </div> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_dropdown_right\" class=\"tryitbtn\">尝试一下 &raquo;</a>\n <br /> \n</div> \n<hr />\n<h2>更多实例</h2> \n<p><a href=\"http://www.runoob.com/try/tryit.php?filename=trycss_dropdown_image\" target=\"_blank\">图片下拉</a><br /> 该实例演示了如何如何在下拉菜单中添加图片。</p> \n<p><a href=\"http://www.runoob.com/try/tryit.php?filename=trycss_dropdown_navbar\" target=\"_blank\">导航条下拉</a><br /> 该实例演示了如何在导航条上添加下拉菜单。</p>', null, 'CSS 下拉菜单|下拉菜单实例|基本下拉菜单|下拉菜单|下拉内容对齐方式|更多实例|');
INSERT INTO `schoolcontent` VALUES ('99', '101', '<style>\r\ndiv.img\r\n{\r\n  margin: 2px;\r\n  border: 1px solid #0000ff;\r\n  height: auto;\r\n  width: auto;\r\n  float: left;\r\n  text-align: center;\r\n}	\r\ndiv.img img\r\n{\r\n  display: inline;\r\n  margin: 3px;\r\n  border: 1px solid #ffffff;\r\n}\r\ndiv.img a:hover img {border: 1px solid #0000ff;}\r\ndiv.desc\r\n{\r\n  text-align: center;\r\n  font-weight: normal;\r\n  width: 120px;\r\n  margin: 2px;\r\n}\r\n</style> \n<h1>CSS <span class=\"color_h1\">图片廊</span> </h1> \n<hr /> \n<p class=\"intro\">以下是使用CSS创建图片廊：</p> \n<div class=\"img\"> \n <a target=\"_blank\" href=\"klematis_big.htm\"><img src=\"http://www.runoob.com/images/klematis_small.jpg\" alt=\"Klematis\" width=\"110\" height=\"90\" /></a> \n <div class=\"desc\">\n  添加图片描述\n </div> \n</div> \n<div class=\"img\"> \n <a target=\"_blank\" href=\"klematis2_big.htm\"><img src=\"http://www.runoob.com/images/klematis2_small.jpg\" alt=\"Klematis\" width=\"110\" height=\"90\" /></a> \n <div class=\"desc\">\n  添加图片描述\n </div> \n</div> \n<div class=\"img\"> \n <a target=\"_blank\" href=\"klematis3_big.htm\"><img src=\"http://www.runoob.com/images/klematis3_small.jpg\" alt=\"Klematis\" width=\"110\" height=\"90\" /></a> \n <div class=\"desc\">\n  添加图片描述\n </div> \n</div> \n<div class=\"img\"> \n <a target=\"_blank\" href=\"klematis4_big.htm\"><img src=\"http://www.runoob.com/images/klematis4_small.jpg\" alt=\"Klematis\" width=\"110\" height=\"90\" /></a> \n <div class=\"desc\">\n  添加图片描述\n </div> \n</div> \n<hr /> \n<h2>图片廊</h2> \n<p>T以下是使用CSS创建图片廊：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;style&gt;\n  <br /> div.img\n  <br /> &nbsp; {\n  <br /> &nbsp; margin:2px;\n  <br /> &nbsp; border:1px solid #0000ff;\n  <br /> &nbsp; height:auto;\n  <br /> &nbsp; width:auto;\n  <br /> &nbsp; float:left;\n  <br /> &nbsp; text-align:center;\n  <br /> &nbsp; }\n  <br /> div.img img\n  <br /> &nbsp; {\n  <br /> &nbsp; display:inline;\n  <br /> &nbsp; margin:3px;\n  <br /> &nbsp; border:1px solid #ffffff;\n  <br /> &nbsp; }\n  <br /> div.img a:hover img\n  <br /> &nbsp; {\n  <br /> &nbsp; border:1px solid #0000ff;\n  <br /> &nbsp; }\n  <br /> div.desc\n  <br /> &nbsp; {\n  <br /> &nbsp; text-align:center;\n  <br /> &nbsp; font-weight:normal;\n  <br /> &nbsp; width:120px;\n  <br /> &nbsp; margin:2px;\n  <br /> &nbsp; }\n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;div class=&quot;img&quot;&gt;\n  <br /> &nbsp; &lt;a target=&quot;_blank&quot; href=&quot;klematis_big.htm&quot;&gt;\n  <br /> &nbsp; &lt;img src=&quot;klematis_small.jpg&quot; alt=&quot;Klematis&quot; width=&quot;110&quot; height=&quot;90&quot;&gt;\n  <br /> &nbsp; &lt;/a&gt;\n  <br /> &nbsp; &lt;div class=&quot;desc&quot;&gt;Add a description of the image here&lt;/div&gt;\n  <br /> &lt;/div&gt;\n  <br /> &lt;div class=&quot;img&quot;&gt;\n  <br /> &nbsp; &lt;a target=&quot;_blank&quot; href=&quot;klematis2_big.htm&quot;&gt;\n  <br /> &nbsp; &lt;img src=&quot;klematis2_small.jpg&quot; alt=&quot;Klematis&quot; width=&quot;110&quot; height=&quot;90&quot;&gt;\n  <br /> &nbsp; &lt;/a&gt;\n  <br /> &nbsp; &lt;div class=&quot;desc&quot;&gt;Add a description of the image here&lt;/div&gt;\n  <br /> &lt;/div&gt;\n  <br /> &lt;div class=&quot;img&quot;&gt;\n  <br /> &nbsp; &lt;a target=&quot;_blank&quot; href=&quot;klematis3_big.htm&quot;&gt;\n  <br /> &nbsp; &lt;img src=&quot;klematis3_small.jpg&quot; alt=&quot;Klematis&quot; width=&quot;110&quot; height=&quot;90&quot;&gt;\n  <br /> &nbsp; &lt;/a&gt;\n  <br /> &nbsp; &lt;div class=&quot;desc&quot;&gt;Add a description of the image here&lt;/div&gt;\n  <br /> &lt;/div&gt;\n  <br /> &lt;div class=&quot;img&quot;&gt;\n  <br /> &nbsp; &lt;a target=&quot;_blank&quot; href=&quot;klematis4_big.htm&quot;&gt;\n  <br /> &nbsp; &lt;img src=&quot;klematis4_small.jpg&quot; alt=&quot;Klematis&quot; width=&quot;110&quot; height=&quot;90&quot;&gt;\n  <br /> &nbsp; &lt;/a&gt;\n  <br /> &nbsp; &lt;div class=&quot;desc&quot;&gt;Add a description of the image here&lt;/div&gt;\n  <br /> &lt;/div&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_image_gallery\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'CSS 图片廊|图片廊|实例|');
INSERT INTO `schoolcontent` VALUES ('100', '102', '<style>\r\n#klem1,#klem2\r\n{\r\nopacity:0.4;\r\nfilter:alpha(opacity=40); /* For IE8 and earlier */\r\n}\r\n#klem1:hover,#klem2:hover\r\n{\r\nopacity:1.0;\r\nfilter:alpha(opacity=100); /* For IE8 and earlier */\r\n}\r\ndiv.background\r\n  {\r\n  width: 500px;\r\n  height: 250px;\r\n  background: url(klematis.jpg) repeat;\r\n  border: 2px solid black;\r\n  }\r\ndiv.transbox\r\n  {\r\n  width: 400px;\r\n  height: 180px;\r\n  margin: 30px 50px;\r\n  background-color: #ffffff;\r\n  border: 1px solid black;\r\n  /* for IE */\r\n  filter:alpha(opacity=60);\r\n  /* CSS3 standard */\r\n  opacity:0.6;\r\n  }\r\ndiv.transbox p\r\n  {\r\n  margin: 30px 40px;\r\n  font-weight: bold;\r\n  color: #000000;\r\n  }\r\n</style> \n<h1>CSS 图像<span class=\"color_h1\">透明/不透明</span> </h1> \n<hr /> \n<p class=\"intro\">使用CSS很容易创建透明的图像。</p> \n<p class=\"intro\"><b>注意：</b>CSS Opacity属性是W3C的CSS3建议的一部分。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_image_transparency\"> 创建透明图像 - 悬停效果</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_transparency\">创建一个具有文本的拥有背景图像的透明框</a></p> \n<hr /> \n<h2>实例1 - 创建一个透明图像</h2> \n<p>CSS3中属性的透明度是 <b>opacity</b>.</p> \n<p>首先，我们将向您展示如何用CSS创建一个透明图像。</p> \n<p>正常的图像</p> \n<img src=\"http://www.runoob.com/images/klematis.jpg\" alt=\"klematis\" width=\"150\" height=\"113\" />\n<p>相同的图像带有透明度：</p> \n<img src=\"http://www.runoob.com/images/klematis.jpg\" alt=\"klematis\" width=\"150\" height=\"113\" />\n<p>看看下面的CSS：</p> \n<div class=\"code notranslate\">\n <div>\n   img\n  <br /> {\n  <br /> opacity:0.4;\n  <br /> filter:alpha(opacity=40); /* For IE8 and earlier */\n  <br /> }\n </div>\n</div> \n<p>IE9，Firefox，Chrome，Opera，和Safari浏览器使用透明度属性可以将图像变的不透明。 Opacity属性值从0.0 - 1.0。值越小，使得元素更加透明。</p> \n<p>IE8和早期版本使用滤镜：alpha（opacity= x）。 x可以采取的值是从0 - 100。较低的值，使得元素更加透明。</p> \n<hr /> \n<h2>实例2 - 图像的透明度 - 悬停效果</h2> \n<p>将鼠标移到图像上：</p> \n<img id=\"klem1\" src=\"http://www.runoob.com/images/klematis.jpg\" alt=\"klematis\" width=\"150\" height=\"113\" />\n<img id=\"klem2\" src=\"http://www.runoob.com/images/klematis2.jpg\" alt=\"klematis\" width=\"150\" height=\"113\" />\n<p>CSS样式：</p> \n<div class=\"code notranslate\">\n <div>\n   img\n  <br /> {\n  <br /> opacity:0.4;\n  <br /> filter:alpha(opacity=40); /* For IE8 and earlier */\n  <br /> }\n  <br /> img:hover\n  <br /> {\n  <br /> opacity:1.0;\n  <br /> filter:alpha(opacity=100); /* For IE8 and earlier */\n  <br /> }\n </div>\n</div> \n<p>第一个CSS块是和例1中的代码类似。此外，我们还增加了当用户将鼠标悬停在其中一个图像上时发生什么。在这种情况下，当用户将鼠标悬停在图像上时，我们希望图片是清晰的。</p> \n<p>此CSS是：<b>opacity=1</b>.</p> \n<p>IE8和更早版本使用： <b>filter:alpha(opacity=100)</b>.</p> \n<p>当鼠标指针远离图像时，图像将重新具有透明度。</p> \n<hr /> \n<h2>实例3 - 透明的盒子中的文字</h2> \n<div class=\"background\"> \n <div class=\"transbox\"> \n  <p>这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。这些文本在透明框里。 </p> \n </div> \n</div> \n<p>源代码如下：</p> \n<div class=\"code notranslate\">\n <div>\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;style&gt;\n  <br /> div.background\n  <br /> &nbsp; {\n  <br /> &nbsp; width:500px;\n  <br /> &nbsp; height:250px;\n  <br /> &nbsp; background:url(klematis.jpg) repeat;\n  <br /> &nbsp; border:2px solid black;\n  <br /> &nbsp; }\n  <br /> div.transbox\n  <br /> &nbsp; {\n  <br /> &nbsp; width:400px;\n  <br /> &nbsp; height:180px;\n  <br /> &nbsp; margin:30px 50px;\n  <br /> &nbsp; background-color:#ffffff;\n  <br /> &nbsp; border:1px solid black;\n  <br /> &nbsp; opacity:0.6;\n  <br /> &nbsp; filter:alpha(opacity=60);&nbsp;/* For IE8 and earlier */\n  <br /> &nbsp; }\n  <br /> div.transbox p\n  <br /> &nbsp; {\n  <br /> &nbsp; margin:30px 40px;\n  <br /> &nbsp; font-weight:bold;\n  <br /> &nbsp; color:#000000;\n  <br /> &nbsp; }\n  <br /> &lt;/style&gt;\n  <br /> &lt;/head&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;div class=&quot;background&quot;&gt;\n  <br /> &lt;div class=&quot;transbox&quot;&gt;\n  <br /> &lt;p&gt;This is some text that is placed in the transparent box.\n  <br /> This is some text that is placed in the transparent box.\n  <br /> This is some text that is placed in the transparent box.\n  <br /> This is some text that is placed in the transparent box.\n  <br /> This is some text that is placed in the transparent box.\n  <br /> &lt;/p&gt;\n  <br /> &lt;/div&gt;\n  <br /> &lt;/div&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div>\n</div> \n<p>首先，我们创建一个固定的高度和宽度的div元素，带有一个背景图片和边框。然后我们在第一个div内部创建一个较小的div元素。 这个div也有一个固定的宽度，背景颜色，边框 - 而且它是透明的。透明的div里面，我们在P元素内部添加一些文本。</p>', null, 'CSS 图像透明/不透明|更多实例|实例1 - 创建一个透明图像|实例2 - 图像的透明度 - 悬停效果|实例3 - 透明的盒子中的文字|');
INSERT INTO `schoolcontent` VALUES ('101', '103', '<h1>CSS <span class=\"color_h1\">图像拼合技术</span> </h1> \n<hr /> \n<h2>图像拼合</h2> \n<p>图像拼合就是单个图像的集合。</p> \n<p>有许多图像的网页可能需要很长的时间来加载和生成多个服务器的请求。</p> \n<p>使用图像拼合会降低服务器的请求数量，并节省带宽。</p> \n<hr /> \n<h2>图像拼合 - 简单实例</h2> \n<p>与其使用三个独立的图像，不如我们使用这种单个图像（&quot;img_navsprites.gif&quot;）：</p> \n<p><img src=\"http://www.runoob.com/images/img_navsprites.gif\" alt=\"navigation images\" /></p> \n<p>有了CSS，我们可以只显示我们需要的图像的一部分。</p> \n<p>在下面的例子CSS指定显示 &quot;img_navsprites.gif&quot; 的图像的一部分： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   img.home\n  <br /> {\n  <br /> width:46px;\n  <br /> height:44px;\n  <br /> background:url(img_navsprites.gif) 0 0;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_sprites_img\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><b>实例解析：</b></p> \n<ul> \n <li>&lt;img class=&quot;home&quot; src=&quot;img_trans.gif&quot; /&gt; -因为不能为空,src属性只定义了一个小的透明图像。显示的图像将是我们在CSS中指定的背景图像</li> \n <li>宽度：46px;高度：44px; - 定义我们使用的那部分图像</li> \n <li>background:url(img_navsprites.gif) 0 0; - 定义背景图像和它的位置（左0px，顶部0px）</li> \n</ul> \n<p>这是使用图像拼合最简单的方法，现在我们使用链接和悬停效果。</p> \n<hr /> \n<h2>图像拼合 - 创建一个导航列表</h2> \n<p>我们想使用拼合图像 (&quot;img_navsprites.gif&quot;)，以创建一个导航列表。</p> \n<p>我们将使用一个HTML列表，因为它可以链接，同时还支持背景图像：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   #navlist{position:relative;}\n  <br /> #navlist li{margin:0;padding:0;list-style:none;position:absolute;top:0;}\n  <br /> #navlist li, #navlist a{height:44px;display:block;}\n  <br />\n  <br /> #home{left:0px;width:46px;}\n  <br /> #home{background:url(\'img_navsprites.gif\') 0 0;}\n  <br />\n  <br /> #prev{left:63px;width:43px;}\n  <br /> #prev{background:url(\'img_navsprites.gif\') -47px 0;}\n  <br />\n  <br /> #next{left:129px;width:43px;}\n  <br /> #next{background:url(\'img_navsprites.gif\') -91px 0;} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_sprites_nav\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p class=\"elem_d11\"><b>实例解析：</b></p> \n<ul class=\"dd\"> \n <li>#navlist{position:relative;} - 位置设置相对定位，让里面的绝对定位</li> \n <li>#navlist li{margin:0;padding:0;list-style:none;position:absolute;top:0;} - margin和padding设置为0，列表样式被删除，所有列表项是绝对定位</li> \n <li>#navlist li, #navlist a{height:44px;display:block;} - 所有图像的高度是44px</li> \n</ul> \n<p class=\"elem_d11\">现在开始每个具体部分的定位和样式：</p> \n<ul class=\"dd\"> \n <li>#home{left:0px;width:46px;} - 定位到最左边的方式，以及图像的宽度是46px</li> \n <li>#home{background:url(img_navsprites.gif) 0 0;} - 定义背景图像和它的位置（左0px，顶部0px）</li> \n <li>#prev{left:63px;width:43px;} - 右侧定位63px（＃home宽46px+项目之间的一些多余的空间），宽度为43px。</li> \n <li>#prev{background:url(\'img_navsprites.gif\') -47px 0;} - 定义背景图像右侧47px（＃home宽46px+分隔线的1px）</li> \n <li>#next{left:129px;width:43px;}- 右边定位129px(#prev 63px + #prev宽是43px + 剩余的空间), 宽度是43px.</li> \n <li>#next{background:url(\'img_navsprites.gif\') no-repeat -91px 0;} - 定义背景图像右边91px（＃home 46px+1px的分割线+＃prev宽43px+1px的分隔线）</li> \n</ul> \n<hr /> \n<h2>图像拼合s - 悬停效果</h2> \n<p>现在，我们希望我们的导航列表中添加一个悬停效果。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <strong>:hover 选择器用于鼠标悬停在元素上的显示的效果</strong><b><br /><br /></b><strong>提示：</strong> :hover 选择器可以运用于所有元素。</td> \n  </tr>\n </tbody>\n</table> \n<p>我们的新图像 (&quot;img_navsprites_hover.gif&quot;) 包含三个导航图像和三幅图像：</p> \n<p><img src=\"http://www.runoob.com/images/img_navsprites_hover.gif\" alt=\"navigation images\" /></p> \n<p>因为这是一个单一的图像，而不是6个单独的图像文件，当用户停留在图像上不会有延迟加载。</p> \n<p>我们添加悬停效果只添加三行代码：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   #home a:hover{background: url(\'img_navsprites_hover.gif\') 0 -45px;}\n  <br /> #prev a:hover{background: url(\'img_navsprites_hover.gif\') -47px -45px;}\n  <br /> #next a:hover{background: url(\'img_navsprites_hover.gif\') -91px -45px;}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_sprites_hover_nav\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p class=\"elem_d11\"><b>实例解析：</b></p> \n<ul class=\"dd\"> \n <li>由于该列表项包含一个链接，我们可以使用：hover伪类</li> \n <li>#home a:hover{background: transparent url(img_navsprites_hover.gif) 0 -45px;} - 对于所有三个悬停图像，我们指定相同的背景位置，只是每个再向下45px</li> \n</ul>', null, 'CSS 图像拼合技术|图像拼合|图像拼合 - 简单实例|实例|图像拼合 - 创建一个导航列表|实例|图像拼合s - 悬停效果|实例|');
INSERT INTO `schoolcontent` VALUES ('102', '104', '<h1>CSS <span class=\"color_h1\">媒体类型</span> </h1> \n<hr /> \n<p class=\"intro\">媒体类型允许你指定文件将如何在不同媒体呈现。该文件可以以不同的方式显示在屏幕上，在纸张上，或听觉浏览器等等。&nbsp;</p> \n<hr /> \n<h2>媒体类型</h2> \n<p class=\"test\">一些CSS属性只设计了某些媒体。例如&quot;voice-family&quot;属性是专为听觉用户代理。其他一些属性可用于不同的媒体类型。例如，&quot;font-size&quot;属性可用于屏幕和印刷媒体，但有不同的值。屏幕和纸上的文件不同，通常需要一个更大的字体，sans - serif字体比较适合在屏幕上阅读，而serif字体更容易在纸上阅读。</p> \n<hr /> \n<h2> @media 规则</h2> \n<p> @media 规则允许在相同样式表为不同媒体设置不同的样式。</p> \n<p>在下面的例子告诉我们浏览器屏幕上显示一个14像素的Verdana字体样式。但是如果页面打印，将是10个像素的Times字体。请注意，font-weight在屏幕上和纸上设置为粗体：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;style&gt;\r\n@media screen\r\n{\r\n	p.test {font-family:verdana,sans-serif;font-size:14px;}\r\n}\r\n@media print\r\n{\r\n	p.test {font-family:times,serif;font-size:10px;}\r\n}\r\n@media screen,print\r\n{\r\n	p.test {font-weight:bold;}\r\n}\r\n&lt;/style&gt;\r\n&lt;/head&gt;\r\n\r\n&lt;body&gt;\r\n....\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre> \n<p><b>你可以自己尝试看看 !</b> 如果您使用的是Mozilla / Firefox或IE5+打印此页，你会看到，&quot;Media Types&quot;将使用另一种比其他文本字体大小小点的字体显示。</p> \n<hr /> \n<h2>其他媒体类型</h2> \n<p><b>注意：</b>媒体类型名称不区分大小写。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>媒体类型</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>all</td> \n   <td>用于所有的媒体设备。</td> \n  </tr> \n  <tr> \n   <td>aural</td> \n   <td>用于语音和音频合成器。</td> \n  </tr> \n  <tr> \n   <td>braille</td> \n   <td>用于盲人用点字法触觉回馈设备。</td> \n  </tr> \n  <tr> \n   <td>embossed</td> \n   <td>用于分页的盲人用点字法打印机。</td> \n  </tr> \n  <tr> \n   <td>handheld</td> \n   <td>用于小的手持的设备。</td> \n  </tr> \n  <tr> \n   <td>print</td> \n   <td>用于打印机。</td> \n  </tr> \n  <tr> \n   <td>projection</td> \n   <td>用于方案展示，比如幻灯片。</td> \n  </tr> \n  <tr> \n   <td>screen</td> \n   <td>用于电脑显示器。</td> \n  </tr> \n  <tr> \n   <td>tty</td> \n   <td>用于使用固定密度字母栅格的媒体，比如电传打字机和终端。</td> \n  </tr> \n  <tr> \n   <td>tv</td> \n   <td>用于电视机类型的设备。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 媒体类型|媒体类型|@media 规则|其他媒体类型|');
INSERT INTO `schoolcontent` VALUES ('103', '105', '<h1>CSS <span class=\"color_h1\">属性</span> 选择器</h1> \n<hr /> \n<h2>具有特定属性的HTML元素样式</h2> \n<p>具有特定属性的HTML元素样式不仅仅是class和id。</p> \n<p><b>注意：</b>IE7和IE8需声明!DOCTYPE才支持属性选择器！IE6和更低的版本不支持属性选择器。</p> \n<hr /> \n<h2>属性选择器</h2> \n<p>下面的例子是把包含标题（title）的所有元素变为蓝色：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   [title]\n  <br /> {\n  <br /> color:blue;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_att\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>属性和值选择器</h2> \n<p>下面的实例改变了标题title=\'w3cschool\'元素的边框样式:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   [title=w3cschool]\n  <br /> {\n  <br /> border:5px solid green;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_value\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>属性和值的选择器 - 多值</h2> \n<p>下面是包含指定值的title属性的元素样式的例子，使用（~）分隔属性和值:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   [title~=hello] { color:blue; }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_valuelist_space\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>下面是包含指定值的lang属性的元素样式的例子，使用（|）分隔属性和值:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   [lang|=en] { color:blue; } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_valuelist_hyphen\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>表单样式</h2> \n<p>属性选择器样式无需使用class或id的形式:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   input[type=&quot;text&quot;]\n  <br /> {\n  <br /> width:150px;\n  <br /> display:block;\n  <br /> margin-bottom:10px;\n  <br /> background-color:yellow;\n  <br /> }\n  <br /> input[type=&quot;button&quot;]\n  <br /> {\n  <br /> width:120px;\n  <br /> margin-left:35px;\n  <br /> display:block;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_form\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'CSS 属性 选择器|具有特定属性的HTML元素样式|属性选择器|实例|属性和值选择器|实例|属性和值的选择器 - 多值|实例|实例|表单样式|实例|');
INSERT INTO `schoolcontent` VALUES ('104', '106', '<h1>你已经学习了CSS,<span class=\"color_h1\">下一步学习什么呢?</span> </h1> \n<hr /> \n<h2>CSS 总结</h2> \n<p>本教程已向你讲解了如何创建样式表来同时控制多重页面的样式和布局。 </p> \n<p>你已经学会如何使用 CSS 来添加背景、格式化文本、以及格式化边框，并定义元素的填充和边距。 </p> \n<p>同时，你也学会了如何定位元素、控制元素的可见性和尺寸、设置元素的形状、将一个元素置于另一个之后，以及向某些选择器添加特殊的效果，比如链接。 </p> \n<p>如果需要更多关于 CSS 的信息，请参阅我们的 <a href=\"css-examples.html\">CSS 实例</a>, <a href=\"http://www.runoob.com/cssref/css-reference.html\"> CSS 参考手册</a>, and <a href=\"http://www.runoob.com/css3/css3-tutorial.html\">CSS3 教程</a>.</p> \n<hr /> \n<h2>你已经学习了CSS,下一步学习什么呢?</h2> \n<p>下一步应该学习 JavaScript 。</p> \n<p><b>JavaScript</b></p> \n<p>JavaScript 是最流行的语言之一。</p> \n<p>JavaScript 是属于 web 的语言，它适用于 PC、笔记本电脑、平板电脑和移动电话。</p> \n<p>JavaScript可以使您的网站更具活力。</p> \n<p>许多 HTML 开发者都不是程序员，但是 JavaScript 却拥有非常简单的语法。几乎每个人都有能力将小的 JavaScript 片段添加到网页中。 如果您希望</p> \n<p>如果您希望学习更多关于 JavaScript 的知识，请马上访问我们的<a href=\"http://www.runoob.com/js/js-tutorial.html\">JavaScript 教程</a>.</p>', null, '你已经学习了CSS,下一步学习什么呢?|CSS 总结|你已经学习了CSS,下一步学习什么呢?|');
INSERT INTO `schoolcontent` VALUES ('105', '107', '<h1>CSS <span class=\"color_h1\">实例</span></h1> \n<h2 class=\"tutheader\">CSS背景</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background-color_body\" target=\"_blank\">设置页面的背景颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background-color_elements\" target=\"_blank\">设置不同元素的背景颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image\" target=\"_blank\">设置一个图像作为页面的背景</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image_bad\" target=\"_blank\">错误的的背景图片</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image_gradient2\" target=\"_blank\">如何在水平方向重复背景图像</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background-image_position\" target=\"_blank\">如何定位背景图像</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background-attachment\" target=\"_blank\">一个固定的背景图片（这个图片不会随页面的其余部分滚动）</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background_shorthand\" target=\"_blank\">在一个声明的所有背景属性</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_background_shorthand2\" target=\"_blank\">高级的背景例子</a></p> \n<p><a href=\"css-background.html\"><b>背景属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS文本</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_color\" target=\"_blank\">设置不同元素的文本颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_text-align_all\" target=\"_blank\">文本对齐</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_text-decoration_link\" target=\"_blank\">移除链接下划线</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_text-decoration\" target=\"_blank\">装饰文字</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_text-transform\" target=\"_blank\">控制文本中的字母</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_text-indent\" target=\"_blank\">缩进文本</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_letter-spacing\" target=\"_blank\">指定了字符之间的空间</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_line-height\" target=\"_blank\">指定了行与行之间的空间</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_text-direction\" target=\"_blank\">设置元素的文本方向</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_text-word-spacing\" target=\"_blank\">增加单词之间的空格</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_text-white-space\" target=\"_blank\">在一个元素内禁用文字换行</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_vertical-align\" target=\"_blank\">内部文字图像的垂直对齐</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-text.html\" target=\"_blank\"><b>Text属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS的字体</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font-family\" target=\"_blank\">设置文本的字体</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font-size\" target=\"_blank\">设置字体大小</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font-size_px\" target=\"_blank\">用px设置的字体的大小</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font-size_em\" target=\"_blank\">用em设置的字体的大小</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font-size_percent_em\" target=\"_blank\">用百分比和em设置字体的大小</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font-style\" target=\"_blank\">设置字体样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font-variant\" target=\"_blank\">设置字体的异体</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font-weight\" target=\"_blank\">设置字体的粗细</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_font\" target=\"_blank\">在一个声明的所有字体属性</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-font.html\" target=\"_blank\"><b>Font属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS链接</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_link\" target=\"_blank\">为访问/未访问链接添加不同的颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_link_decoration\" target=\"_blank\">在链接上使用文本装饰</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_link_background\" target=\"_blank\">指定链接的背景颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_link2\" target=\"_blank\">超链接添加其他样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_link_advanced\" target=\"_blank\">高级 - 创建链接框</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-link.html\" target=\"_blank\"><b>链接属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS列表</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style-type_all\" target=\"_blank\">列表中所有不同的列表项标记</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style-image\" target=\"_blank\">设置作为列表项标记的图像</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style-image_crossbrow\" target=\"_blank\">使用Crossbrowser解决方案设置一个列表项标记的图像</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_list-style\" target=\"_blank\">在一个声明中的所有列表属性</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-list.html\" target=\"_blank\"><b>列表属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS表格</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_border\" target=\"_blank\">指定一个表的Th，TD元素和黑色边框</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_border-collapse\" target=\"_blank\">使用border-collapse</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_width\" target=\"_blank\">指定表格的宽度和高度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_align\" target=\"_blank\">设置内容的水平对齐方式（文本对齐）</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_vertical-align\" target=\"_blank\">设置内容的垂直对齐（垂直对齐）</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_padding\" target=\"_blank\">指定TH和TD元素的填充</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_color\" target=\"_blank\">指定表格边框的颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_caption-side\" target=\"_blank\">设置表格标题的位置</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_table_fancy\" target=\"_blank\">创建一个奇特的表</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-table.html\" target=\"_blank\"><b>表格属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS盒模型</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_boxmodel_width\" target=\"_blank\">指定元素的总宽度为250像素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_boxmodel_width_doctype\" target=\"_blank\">使用Crossbrowser解决方案指定元素的总宽度为250像素的 </a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-boxmodel.html\" target=\"_blank\"><b>盒模型的解释</b></a></p> \n<h2 class=\"tutheader\">CSS边框</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-width\" target=\"_blank\">设置四个边框的宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-top-width\" target=\"_blank\">设置上边框的宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-bottom-width\" target=\"_blank\">设置底部边框的宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-left-width\" target=\"_blank\">设置左边框的宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-right-width\" target=\"_blank\">设置右边框的宽度</a></p> \n<p>&nbsp;</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-style\" target=\"_blank\">设置四个边框的样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-top-style\" target=\"_blank\">设置上边框的样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-bottom-style\" target=\"_blank\">设置下边框的样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-left-style\" target=\"_blank\">设置左边框的样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-right-style\" target=\"_blank\">设置右边框的样式</a></p> \n<p>&nbsp;</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-color\" target=\"_blank\">设置四个边框的颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-top-color\" target=\"_blank\">设置上边框的颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-bottom-color\" target=\"_blank\">设置下边框的颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-left-color\" target=\"_blank\">设置左边框的颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-right-color\" target=\"_blank\">设置右边框的颜色</a></p> \n<p>&nbsp;</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border\" target=\"_blank\">在一个声明中的所有边框属性</a></p> \n<p>&nbsp;</p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-style2\" target=\"_blank\">每边设置不同的边框</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-top\" target=\"_blank\">在一个声明中的所有顶部边框属性</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-bottom\" target=\"_blank\">在一个声明中的所有下边框属性</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-left\" target=\"_blank\">在一个声明中的所有左边框属性</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_border-right\" target=\"_blank\">在一个声明中的所有右边框属性</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-border.html\" target=\"_blank\"><b>边框属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS轮廓</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_outline\" target=\"_blank\">围绕一个元素（outline），绘制一条线</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_outline-style\" target=\"_blank\">设置轮廓的样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_outline-color\" target=\"_blank\">设置轮廓颜色</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_outline-width\" target=\"_blank\">设置轮廓的宽度</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-outline.html\" target=\"_blank\"><b>轮廓属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS边距</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_margin_sides\" target=\"_blank\">指定一个元素的边距</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_margin_shorthand\" target=\"_blank\">边距缩写属性</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_margin-top\" target=\"_blank\">文本顶部边距设置的值使用厘米</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_margin-bottom_percent\" target=\"_blank\">使用百分比值设置文本的底部边缘</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_margin-left\" target=\"_blank\">使用厘米值设置文本的左边距</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-margin.html\" target=\"_blank\"><b>Margin属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS填充</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_padding-left\" target=\"_blank\">设置元素的左部填充</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_padding-right\" target=\"_blank\">设置元素的右部填充</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_padding-top\" target=\"_blank\">设置元素的顶部填充</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_padding-bottom\" target=\"_blank\">设置元素的底部填充</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_padding\" target=\"_blank\">在一个声明中的所有填充属性</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-padding.html\" target=\"_blank\"><b>padding属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS分组和嵌套</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_grouping\" target=\"_blank\">组选择器</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_nesting\" target=\"_blank\">嵌套选择器</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-grouping-nesting.html\" target=\"_blank\"><b>分组和嵌套解释</b></a></p> \n<h2 class=\"tutheader\">CSS尺寸</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_height\" target=\"_blank\">使用像素值设置图像的高度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_height_percent\" target=\"_blank\">使用百分比设置图像的高度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_width\" target=\"_blank\">使用像素值来设置元素的宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_width_percent\" target=\"_blank\">使用百分比来设置元素的宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_max-height\" target=\"_blank\">设置元素的最大高度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_max-width\" target=\"_blank\">使用像素值设置元素的最大宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_max-width_percent\" target=\"_blank\">使用百分比来设置元素的最大宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_min-height\" target=\"_blank\">设置元素的最低高度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_min-width\" target=\"_blank\">使用像素值来设置元素的最小宽度</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_dim_min-width_percent\" target=\"_blank\">使用百分比来设置元素的最小宽度</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-dimension.html\" target=\"_blank\"><b>尺寸属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS显示</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_visibility_hidden\" target=\"_blank\">如何隐藏一个元素(visibility:hidden)</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_display_none\" target=\"_blank\">如何不显示元素(display:none)</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_display\" target=\"_blank\">如何显示一个元素的内联元素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_display_block\" target=\"_blank\">如何显示一个元素的块元素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_visibility_collapse\" target=\"_blank\">H如何使用表格的collapse属性</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-display-visibility.html\" target=\"_blank\"><b>Display属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS定位</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_position_fixed\" target=\"_blank\">元素相对浏览器窗口的位置</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_position_relative\" target=\"_blank\">元素的相对定位</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_position_absolute\" target=\"_blank\">元素的绝对定位</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_zindex\" target=\"_blank\">重叠的元素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_clip\" target=\"_blank\">设置元素的形状</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_overflow\" target=\"_blank\">如何使用滚动条来显示元素内溢出的内容</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_pos_overflow_auto\" target=\"_blank\">如何设置浏览器自动溢出处理</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_position_top\" target=\"_blank\">使用像素值设置图像的顶部</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_position_bottom\" target=\"_blank\">使用像素值设置图像的底部</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_position_left\" target=\"_blank\">使用像素值设置图像的左边</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_position_right\" target=\"_blank\">使用像素值设置图像的右边</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_cursor\" target=\"_blank\">更改光标</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-positioning.html\" target=\"_blank\"><b>定位属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS浮动</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float\" target=\"_blank\">简单的使用float属性</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float2\" target=\"_blank\">为图像添加边框和边距并浮动到段落的左侧</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float3\" target=\"_blank\">标题和图片向右侧浮动</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float4\" target=\"_blank\">让段落的第一个字母浮动到左侧</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float_elements\" target=\"_blank\">使用float属性创建一个图片廊</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float_clear\" target=\"_blank\">开启float - clear属性</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float5\" target=\"_blank\">创建一个水平菜单</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_float6\" target=\"_blank\">创建一个没有表格的网页</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-float.html\" target=\"_blank\"><b>Float属性的解释</b></a></p> \n<h2 class=\"tutheader\">CSS对齐元素</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_align_container\" target=\"_blank\">使用margin的中间调整</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_align_pos\" target=\"_blank\">左/右位置对齐</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_align_pos_crossbrowser\" target=\"_blank\">使用Crossbrowser解决方案，设置左/右位置对齐</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_align_float\" target=\"_blank\">左/右对齐，浮动</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_align_float_crossbrowser\" target=\"_blank\">使用Crossbrowser解决方案，设置左/右位置对齐，浮动</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-align.html\" target=\"_blank\"><b>对齐属性解释</b></a></p> \n<h2 class=\"tutheader\">CSS生成的内容</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_gen_content\" target=\"_blank\">把括号内的URL用content属性插入到每个链接后面</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_gen_counter-reset\" target=\"_blank\">章节和分节的编号是&quot;第1节&quot;，&quot;1.1&quot;，&quot;1.2&quot;等</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_gen_quotes\" target=\"_blank\">quotes 属性指定了引号</a></p> \n<h2 class=\"tutheader\">CSS伪类</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_link\" target=\"_blank\">添加不同颜色的超链接</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_link2\" target=\"_blank\">给超链接添加其他样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_link_focus\" target=\"_blank\">使用：焦点</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_first-child1\" target=\"_blank\">:first-child - 匹配了第一个p元素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_first-child2\" target=\"_blank\">:first-child - 匹配了第一个p元素中的I元素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_first-child3\" target=\"_blank\">:first-child - 匹配了第一个p元素中的所有I元素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_lang\" target=\"_blank\">使用:lang</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-pseudo-classes.html\" target=\"_blank\"><b>伪类的解释</b></a></p> \n<h2 class=\"tutheader\">CSS伪元素</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_firstletter\" target=\"_blank\">把文本的第一个字母设为特殊的字母</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_firstline\" target=\"_blank\">把第一行文字设置为特殊</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_firstline_letter\" target=\"_blank\">把第一行文字的第一个字母设置为特殊</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_before\" target=\"_blank\">使用：在一个元素之前插入一些内容</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_after\" target=\"_blank\">使用：在一个元素之后插入一些内容</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-pseudo_elements.html\" target=\"_blank\"><b>伪元素的解释</b></a></p> \n<h2 class=\"tutheader\">CSS导航栏</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_vertical_advanced\" target=\"_blank\">垂直导航栏的全样式</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_navbar_horizontal_float_advanced\" target=\"_blank\">水平导航栏的全样式</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-navbar.html\" target=\"_blank\"><b>导航栏的解释</b></a></p> \n<h2 class=\"tutheader\">CSS图片廊</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_image_gallery\" target=\"_blank\">图片廊</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-image-gallery.html\" target=\"_blank\"><b>图片廊解释</b></a></p> \n<h2 class=\"tutheader\">CSS图像的不透明度</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_image_transparency\" target=\"_blank\">创建透明图像 - 鼠标悬停效果</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_transparency\" target=\"_blank\">创建一个背景图像与文本的透明框</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-image-transparency.html\" target=\"_blank\"><b>图像的不透明度解释</b></a></p> \n<h2 class=\"tutheader\">CSS图像拼合</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_sprites_img\" target=\"_blank\">图像拼合</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_sprites_nav\" target=\"_blank\">图像拼合-导航列表</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_sprites_hover_nav\" target=\"_blank\">悬停效果与图像拼合</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-image-sprites.html\" target=\"_blank\"><b>图像拼合解释</b></a></p> \n<h2 class=\"tutheader\">CSS属性选择器</h2> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_att\" target=\"_blank\">选择具有title属性的元素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_value\" target=\"_blank\">选择标题=一个特定值的元素</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_valuelist_space\" target=\"_blank\">选择标题=一个特定值的元素(使用（~）分隔属性和值)</a></p> \n<p><a href=\"http://www.runoob.com/try/try.php?filename=trycss_attselector_valuelist_hyphen\" target=\"_blank\">选择标题=一个特定值的元素(使用（|）分隔属性和值)</a></p> \n<p>&nbsp;</p> \n<p><a href=\"css-attribute-selectors.html\" target=\"_blank\"><b>属性选择器解释</b></a></p>', null, 'CSS 实例|CSS背景|CSS文本|CSS的字体|CSS链接|CSS列表|CSS表格|CSS盒模型|CSS边框|CSS轮廓|CSS边距|CSS填充|CSS分组和嵌套|CSS尺寸|CSS显示|CSS定位|CSS浮动|CSS对齐元素|CSS生成的内容|CSS伪类|CSS伪元素|CSS导航栏|CSS图片廊|CSS图像的不透明度|CSS图像拼合|CSS属性选择器|');
INSERT INTO `schoolcontent` VALUES ('106', '108', '<h1>CSS3 <span class=\"color_h1\">教程</span> </h1> \n<br />CSS 用于控制网页的样式和布局。\n<p></p> \n<p>CSS3 是最新的 CSS 标准。</p> \n<p>本教程向您讲解 CSS3 中的新特性。</p> \n<p><b><a href=\"css3-intro.html\">开始学习 CSS3!</a></b></p> \n<br />\n<img src=\"http://www.runoob.com/images/transforms.gif\" alt=\"CSS3 Transforms\" width=\"625\" height=\"124\" />\n<br />\n<br />\n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example_head\">CSS3 实例</h2> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;transform:rotate(30deg);\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform_rotate\">尝试一下 &raquo;</a> \n</div> \n<p><b>点击 &quot;尝试一下&quot; 按钮查看在线实例。</b></p> \n<h2 class=\"tutheader\">CSS3 参考手册</h2> \n<p>在菜鸟教程中，我们提供完整的 CSS3 参考手册，包括所有属性和选择器的语法、实例、浏览器支持信息。</p> \n<p><a href=\"http://www.runoob.com/cssref/css-reference.html\">CSS 属性参考手册</a></p> \n<p><a href=\"http://www.runoob.com/cssref/css3-browsersupport.html\">CSS3 浏览器支持情况</a></p> \n<p><a href=\"http://www.runoob.com/cssref/css-selectors.html\">CSS 选择器参考手册</a></p> \n<p><a href=\"http://www.runoob.com/cssref/css-colornames.html\">CSS 颜色参考手册</a></p>', null, 'CSS3 教程|CSS3 实例|CSS3 参考手册|');
INSERT INTO `schoolcontent` VALUES ('107', '109', '<h1>CSS3 <span class=\"color_h1\">简介</span> </h1> \n<hr /> \n<p class=\"intro\">对CSS3已完全向后兼容，所以你就不必改变现有的设计。浏览器将永远支持CSS2。</p> \n<hr /> \n<h2>CSS3 模块</h2> \n<p>CSS3被拆分为&quot;模块&quot;。旧规范已拆分成小块，还增加了新的。</p> \n<p>一些最重要CSS3模块如下：</p> \n<ul> \n <li>选择器</li> \n <li>盒模型</li> \n <li>背景和边框</li> \n <li>文字特效</li> \n <li>2D/3D转换</li> \n <li>动画</li> \n <li>多列布局</li> \n <li>用户界面</li> \n</ul> \n<hr /> \n<h2>CSS3 建议</h2> \n<p>W3C的CSS3规范仍在开发。</p> \n<p>但是，许多新的CSS3属性已在现代浏览器使用。</p>', null, 'CSS3 简介|CSS3 模块|CSS3 建议|');
INSERT INTO `schoolcontent` VALUES ('108', '110', '<h1>CSS3 <span class=\"color_h1\">边框</span> </h1> \n<div> \n <h2>CSS3 边框</h2> \n <p>用CSS3，你可以创建圆角边框，添加阴影框，并作为边界的形象而不使用设计程序，如Photoshop。</p> \n <p>在本章中，您将了解以下的边框属性：</p> \n <ul> \n  <li>border-radius</li> \n  <li>box-shadow</li> \n  <li>border-image</li> \n </ul> \n</div> \n<hr /> \n<h2>CSS3 圆角</h2> \n<p>在CSS2中添加圆角棘手。我们不得不在每个角落使用不同的图像。</p> \n<p>在CSS3中，很容易创建圆角。</p> \n<p>在CSS3中border-radius属性被用于创建圆角：</p> \n<div id=\"rounded_borders\">\n 这是圆角边框！\n</div> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>在div中添加圆角元素：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> border:2px solid;\n  <br /> border-radius:25px;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_border-radius\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS3盒阴影</h2> \n<p>CSS3中的box-shadow属性被用来添加阴影:</p> \n<div id=\"boxshadow\"></div> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>在div中添加box-shadow属性</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> box-shadow: 10px 10px 5px #888888;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_box-shadow\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS3边界图片</h2> \n<p>有了CSS3的border-image属性，你可以使用图像创建一个边框： </p> \n<div id=\"border_image\">\n border-image属性允许你指定一个图片作为边框！ 用于创建上文边框的原始图像：\n</div> \n<p>在div中使用图片创建边框:</p> \n<img src=\"http://www.runoob.com/images/border.png\" alt=\"Border\" height=\"81\" width=\"81\" />\n<br />\n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>在div中使用图片创建边框</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> border-image:url(border.png) 30 30 round;\n  <br /> -webkit-border-image:url(border.png) 30 30 round; /* Safari 5 and older */\n  <br /> -o-border-image:url(border.png) 30 30 round; /* Opera */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_border-image\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>新边框属性</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"30%\" align=\"left\">属性</th> \n   <th width=\"65%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-border-image.html\">border-image</a></td> \n   <td>设置所有边框图像的速记属性。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-border-radius.html\">border-radius</a></td> \n   <td>一个用于设置所有四个边框- *-半径属性的速记属性</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-box-shadow.html\">box-shadow</a></td> \n   <td>附加一个或多个下拉框的阴影</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS3 边框|CSS3 边框|CSS3 圆角|实例|CSS3盒阴影|实例|CSS3边界图片|实例|新边框属性|');
INSERT INTO `schoolcontent` VALUES ('109', '111', '<h1>CSS3 <span class=\"color_h1\">背景</span> </h1> \n<hr /> \n<div> \n <h2>CSS3 背景</h2> \n <p>CSS3中包含几个新的背景属性，提供更大背景元素控制。</p> \n <p>在本章您将了解以下背景属性：</p> \n <ul> \n  <li>background-image</li> \n  <li>background-size</li> \n  <li>background-origin</li> \n  <li>background-clip</li> \n </ul> \n <p>您还将学习如何使用多重背景图像。</p> \n</div> \n<hr /> \n<h2>浏览器支持</h2> \n<p>表格中的数字表示支持该属性的第一个浏览器版本号。</p> \n<p>紧跟在 -webkit-, -ms- 或 -moz- 前的数字为支持该前缀属性的第一个浏览器版本号。</p> \n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left\">属性</th> \n   <th style=\"width:15%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">background-image<br />(with multiple backgrounds)</td> \n   <td>4.0</td> \n   <td>9.0</td> \n   <td>3.6</td> \n   <td>3.1</td> \n   <td>11.5</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">background-size</td> \n   <td>4.0<br />1.0&nbsp;-webkit-</td> \n   <td>9.0</td> \n   <td>4.0<br />3.6&nbsp;-moz-</td> \n   <td>4.1<br />3.0&nbsp;-webkit-</td> \n   <td>10.5<br />10.0&nbsp;-o-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">background-origin</td> \n   <td>1.0</td> \n   <td>9.0</td> \n   <td>4.0</td> \n   <td>3.0</td> \n   <td>10.5</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">background-clip</td> \n   <td>4.0</td> \n   <td>9.0</td> \n   <td>4.0</td> \n   <td>3.0</td> \n   <td>10.5</td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>CSS3 background-image属性</h2> \n<div></div> \n<p>CSS3中可以通过background-image属性添加背景图片，</p> \n<p>不同的背景图像和图像用逗号隔开，所有的图片中显示在最顶端的为第一张</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   #example1 { \n  <br /> background-image: url(img_flwr.gif), url(paper.gif); \n  <br /> background-position: right bottom, left top; \n  <br /> background-repeat: no-repeat, repeat; \n  <br /> } \n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_background_multiple\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'CSS3 背景|CSS3 背景|浏览器支持|CSS3 background-image属性|实例|');
INSERT INTO `schoolcontent` VALUES ('110', '112', '<h1>CSS3 <span class=\"color_h1\">渐变（Gradients）</span></h1> \n<hr /> \n<img src=\"http://www.runoob.com/wp-content/uploads/2014/07/gradient_top.png\" alt=\"线性渐变\" style=\"width:822px;height:55px\" /> \n<p>CSS3 渐变（gradients）可以让你在两个或多个指定的颜色之间显示平稳的过渡。</p> \n<p>以前，你必须使用图像来实现这些效果。但是，通过使用 CSS3 渐变（gradients），你可以减少下载的事件和宽带的使用。此外，渐变效果的元素在放大时看起来效果更好，因为渐变（gradient）是由浏览器生成的。</p> \n<p>CSS3 定义了两种类型的渐变（gradients）：</p> \n<ul> \n <li><strong>线性渐变（Linear Gradients）- 向下/向上/向左/向右/对角方向</strong></li> \n <li><strong>径向渐变（Radial Gradients）- 由它们的中心定义</strong></li> \n</ul> \n<hr /> \n<h2>浏览器支持</h2> \n<p>表中的数字指定了完全支持该属性的第一个浏览器版本。</p> \n<p>后边跟 -webkit-、-moz- 或 -o- 的数字指定了需加上前缀才能支持属性的第一个版本。</p> \n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left;\">属性</th> \n   <th style=\"width:12%;\" class=\"bsIE\" title=\"Internet Explorer\"></th> \n   <th style=\"width:16%;\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:16%;\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:16%;\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%;\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td>linear-gradient</td> \n   <td>10.0</td> \n   <td>26.0<br />10.0 -webkit-</td> \n   <td>16.0<br />3.6 -moz-</td> \n   <td>6.1<br />5.1 -webkit-</td> \n   <td>12.1<br />11.1 -o-</td> \n  </tr> \n  <tr> \n   <td>radial-gradient</td> \n   <td>10.0</td> \n   <td>26.0<br />10.0 -webkit-</td> \n   <td>16.0<br />3.6 -moz-</td> \n   <td>6.1<br />5.1 -webkit-</td> \n   <td>12.1<br />11.6 -o-</td> \n  </tr> \n  <tr> \n   <td>repeating-linear-gradient</td> \n   <td>10.0</td> \n   <td>26.0<br />10.0 -webkit-</td> \n   <td>16.0<br />3.6 -moz-</td> \n   <td>6.1<br />5.1 -webkit-</td> \n   <td>12.1<br />11.1 -o-</td> \n  </tr> \n  <tr> \n   <td>repeating-radial-gradient</td> \n   <td>10.0</td> \n   <td>26.0<br />10.0 -webkit-</td> \n   <td>16.0<br />3.6 -moz-</td> \n   <td>6.1<br />5.1 -webkit-</td> \n   <td>12.1<br />11.6 -o-</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>CSS3 线性渐变</h2> \n<p>为了创建一个线性渐变，你必须至少定义两种颜色结点。颜色结点即你想要呈现平稳过渡的颜色。同时，你也可以设置一个起点和一个方向（或一个角度）。</p> \n<p><strong>线性渐变的实例：</strong></p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2014/07/gradient_linear.png\" alt=\"线性渐变\" style=\"width:200px;height:150px\" /> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   background: linear-gradient(\n  <em>direction</em>, \n  <em>color-stop1</em>, \n  <em> color-stop2, ...</em>);\n </div>\n</div> \n<p><strong>线性渐变 - 从上到下（默认情况下）</strong></p> \n<p>下面的实例演示了从顶部开始的线性渐变。起点是红色，慢慢过渡到蓝色：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>从上到下的线性渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-linear-gradient(red, blue); /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -o-linear-gradient(red, blue); /* Opera 11.1 - 12.0 */\n  <br />&nbsp; background: -moz-linear-gradient(red, blue); /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: linear-gradient(red, blue); /* 标准的语法 */\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-linear\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><strong>线性渐变 - 从左到右</strong></p> \n<p>下面的实例演示了从左边开始的线性渐变。起点是红色，慢慢过渡到蓝色：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>从左到右的线性渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-linear-gradient(left, red , blue); /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -o-linear-gradient(right, red, blue); /* Opera 11.1 - 12.0 */\n  <br />&nbsp; background: -moz-linear-gradient(right, red, blue); /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: linear-gradient(to right, red , blue); /* 标准的语法 */\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-linear_ltr\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><strong>线性渐变 - 对角</strong></p> \n<p>你可以通过指定水平和垂直的起始位置来制作一个对角渐变。</p> \n<p>下面的实例演示了从左上角开始（到右下角）的线性渐变。起点是红色，慢慢过渡到蓝色：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>从左上角到右下角的线性渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-linear-gradient(left top, red , blue); /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -o-linear-gradient(bottom right, red, blue); /* Opera 11.1 - 12.0 */\n  <br />&nbsp; background: -moz-linear-gradient(bottom right, red, blue); /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: linear-gradient(to bottom right, red , blue); /* 标准的语法 */\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-linear_diagonal\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>使用角度</h2> \n<p>如果你想要在渐变的方向上做更多的控制，你可以定义一个角度，而不用预定义方向（to bottom、to top、to right、to left、to bottom right，等等）。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\"> \n <div>\n   background: linear-gradient(\n  <em>angle</em>, \n  <em>color-stop1</em>, \n  <em> color-stop2</em>); \n </div>\n</div> \n<p>角度是指水平线和渐变线之间的角度，逆时针方向计算。换句话说，0deg 将创建一个从下到上的渐变，90deg 将创建一个从左到右的渐变。</p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2014/07/7B0CC41A-86DC-4E1B-8A69-A410E6764B91.jpg\" style=\"width: 50%;\" /> \n<p>但是，请注意很多浏览器(Chrome,Safari,fiefox等)的使用了旧的标准，即 0deg 将创建一个从左到右的渐变，90deg 将创建一个从下到上的渐变。换算公式 <strong>90 - x = y</strong> 其中 x 为标准角度，y为非标准角度。</p> \n<p>下面的实例演示了如何在线性渐变上使用角度：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>带有指定的角度的线性渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-linear-gradient(180deg, red, blue); /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -o-linear-gradient(180deg, red, blue); /* Opera 11.1 - 12.0 */\n  <br />&nbsp; background: -moz-linear-gradient(180deg, red, blue); /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: linear-gradient(180deg, red, blue); /* 标准的语法 */\n  <br /> } \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-linear_angles\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>使用多个颜色结点</h2> \n<p>下面的实例演示了如何设置多个颜色结点：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>带有多个颜色结点的从上到下的线性渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-linear-gradient(red, green, blue); /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -o-linear-gradient(red, green, blue); /* Opera 11.1 - 12.0 */\n  <br />&nbsp; background: -moz-linear-gradient(red, green, blue); /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: linear-gradient(red, green, blue); /* 标准的语法 */\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-linear_cs\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>下面的实例演示了如何创建一个带有彩虹颜色和文本的线性渐变：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -webkit-linear-gradient(left,red,orange,yellow,green,blue,indigo,violet);\n  <br /> &nbsp; /* Opera 11.1 - 12.0 */\n  <br />&nbsp; background: -o-linear-gradient(left,red,orange,yellow,green,blue,indigo,violet);\n  <br />&nbsp; /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: -moz-linear-gradient(left,red,orange,yellow,green,blue,indigo,violet);\n  <br /> &nbsp; /* 标准的语法 */\n  <br />&nbsp; background: linear-gradient(to right, red,orange,yellow,green,blue,indigo,violet); \n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-linear_rainbow\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>使用透明度（Transparency）</h2> \n<p>CSS3 渐变也支持透明度（transparency），可用于创建减弱变淡的效果。</p> \n<p>为了添加透明度，我们使用 rgba() 函数来定义颜色结点。rgba() 函数中的最后一个参数可以是从 0 到 1 的值，它定义了颜色的透明度：0 表示完全透明，1 表示完全不透明。</p> \n<p>下面的实例演示了从左边开始的线性渐变。起点是完全透明，慢慢过渡到完全不透明的红色：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>从左到右的线性渐变，带有透明度：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-linear-gradient(left,rgba(255,0,0,0),rgba(255,0,0,1)); /* Safari 5.1 - 6 */\n  <br />&nbsp; background: -o-linear-gradient(right,rgba(255,0,0,0),rgba(255,0,0,1)); /* Opera 11.1 - 12*/\n  <br />&nbsp; background: -moz-linear-gradient(right,rgba(255,0,0,0),rgba(255,0,0,1)); /* Firefox 3.6 - 15*/\n  <br />&nbsp; background: linear-gradient(to right, rgba(255,0,0,0), rgba(255,0,0,1)); /* 标准的语法 */\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-linear_trans\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>重复的线性渐变</h2> \n<p>repeating-linear-gradient() 函数用于重复线性渐变：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>一个重复的线性渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -webkit-repeating-linear-gradient(red, yellow 10%, green 20%);\n  <br />&nbsp; /* Opera 11.1 - 12.0 */\n  <br />&nbsp; background: -o-repeating-linear-gradient(red, yellow 10%, green 20%);\n  <br />&nbsp; /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: -moz-repeating-linear-gradient(red, yellow 10%, green 20%);\n  <br />&nbsp; /* 标准的语法 */\n  <br />&nbsp; background: repeating-linear-gradient(red, yellow 10%, green 20%);\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-linear_repeating\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>CSS3 径向渐变</h2> \n<p>径向渐变由它的中心定义。</p> \n<p>为了创建一个径向渐变，你也必须至少定义两种颜色结点。颜色结点即你想要呈现平稳过渡的颜色。同时，你也可以指定渐变的中心、形状（原型或椭圆形）、大小。默认情况下，渐变的中心是 center（表示在中心点），渐变的形状是 ellipse（表示椭圆形），渐变的大小是 farthest-corner（表示到最远的角落）。</p> \n<p><strong>径向渐变的实例：</strong></p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2014/07/gradient_radial.jpg\" alt=\"Radial gradient\" style=\"width:200px;height:150px\" /> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   background: radial-gradient(\n  <em>center, shape size, start-color, ..., last-color</em>);\n </div>\n</div> \n<p><strong>径向渐变 - 颜色结点均匀分布（默认情况下）</strong></p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>颜色结点均匀分布的径向渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-radial-gradient(red, green, blue); /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -o-radial-gradient(red, green, blue); /* Opera 11.6 - 12.0 */\n  <br />&nbsp; background: -moz-radial-gradient(red, green, blue); /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: radial-gradient(red, green, blue); /* 标准的语法 */\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-radial\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><strong>径向渐变 - 颜色结点不均匀分布</strong></p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>颜色结点不均匀分布的径向渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-radial-gradient(red 5%, green 15%, blue 60%); /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -o-radial-gradient(red 5%, green 15%, blue 60%); /* Opera 11.6 - 12.0 */\n  <br />&nbsp; background: -moz-radial-gradient(red 5%, green 15%, blue 60%); /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: radial-gradient(red 5%, green 15%, blue 60%); /* 标准的语法 */\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-radial2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>设置形状</h2> \n<p>shape 参数定义了形状。它可以是值 circle 或 ellipse。其中，circle 表示圆形，ellipse 表示椭圆形。默认值是 ellipse。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>形状为圆形的径向渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; background: -webkit-radial-gradient(circle, red, yellow, green); /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -o-radial-gradient(circle, red, yellow, green); /* Opera 11.6 - 12.0 */\n  <br />&nbsp; background: -moz-radial-gradient(circle, red, yellow, green); /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: radial-gradient(circle, red, yellow, green); /* 标准的语法 */\n  <br /> } \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-radial_shape\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>不同尺寸大小关键字的使用</h2> \n<p>size 参数定义了渐变的大小。它可以是以下四个值：</p> \n<ul> \n <li><strong>closest-side</strong></li> \n <li><strong>farthest-side</strong></li> \n <li><strong>closest-corner</strong></li> \n <li><strong>farthest-corner</strong></li> \n</ul> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>带有不同尺寸大小关键字的径向渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad1 {\n  <br />&nbsp; /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -webkit-radial-gradient(60% 55%, closest-side,blue,green,yellow,black); \n  <br />&nbsp; /* Opera 11.6 - 12.0 */\n  <br /> &nbsp; background: -o-radial-gradient(60% 55%, closest-side,blue,green,yellow,black);\n  <br /> &nbsp; /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: -moz-radial-gradient(60% 55%, closest-side,blue,green,yellow,black);\n  <br />&nbsp; /* 标准的语法 */\n  <br /> &nbsp; background: radial-gradient(60% 55%, closest-side,blue,green,yellow,black);\n  <br />}\n  <br /> \n  <br />#grad2 {\n  <br /> &nbsp; /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -webkit-radial-gradient(60% 55%, farthest-side,blue,green,yellow,black);\n  <br /> &nbsp; /* Opera 11.6 - 12.0 */ \n  <br />&nbsp; background: -o-radial-gradient(60% 55%, farthest-side,blue,green,yellow,black);\n  <br />&nbsp; /* Firefox 3.6 - 15 */\n  <br /> &nbsp; background: -moz-radial-gradient(60% 55%, farthest-side,blue,green,yellow,black);\n  <br /> &nbsp; /* 标准的语法 */\n  <br />&nbsp; background: radial-gradient(60% 55%, farthest-side,blue,green,yellow,black);\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-radial_size\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>重复的径向渐变</h2> \n<p>repeating-radial-gradient() 函数用于重复径向渐变：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>一个重复的径向渐变：</p> \n <div class=\"example_code notranslate cssHigh\">\n   #grad {\n  <br />&nbsp; /* Safari 5.1 - 6.0 */\n  <br />&nbsp; background: -webkit-repeating-radial-gradient(red, yellow 10%, green 15%);\n  <br />&nbsp; /* Opera 11.6 - 12.0 */\n  <br />&nbsp; background: -o-repeating-radial-gradient(red, yellow 10%, green 15%);\n  <br />&nbsp; /* Firefox 3.6 - 15 */\n  <br />&nbsp; background: -moz-repeating-radial-gradient(red, yellow 10%, green 15%);\n  <br />&nbsp; /* 标准的语法 */\n  <br />&nbsp; background: repeating-radial-gradient(red, yellow 10%, green 15%);\n  <br />} \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_gradient-radial_repeating\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>', null, 'CSS3 渐变（Gradients）|浏览器支持|CSS3 线性渐变|实例|实例|实例|使用角度|实例|使用多个颜色结点|实例|实例|使用透明度（Transparency）|实例|重复的线性渐变|实例|CSS3 径向渐变|实例|实例|设置形状|实例|不同尺寸大小关键字的使用|实例|重复的径向渐变|实例|');
INSERT INTO `schoolcontent` VALUES ('111', '113', '#textshadow { text-shadow: 5px 5px 5px #FF0000; font-size:30px; } #wordwrap { width:11em; border:1px solid #000000; word-wrap:break-word; } #normal { width:11em; border:1px solid #000000; word-wrap:normal; } \n<h1>CSS3 <span class=\"color_h1\">文本效果</span> </h1> \n<hr /> \n<h2>CSS3 文本效果</h2> \n<p>CSS3中包含几个新的文本特征。</p> \n<p>在本章中您将了解以下文本属性：</p> \n<ul> \n <li>text-shadow</li> \n <li>box-shadow</li> \n <li>text-overflow</li> \n <li>word-wrap</li> \n <li>word-break</li> \n</ul> \n<hr /> \n<h2>浏览器支持</h2> \n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left\">属性</th> \n   <th style=\"width:15%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">text-shadow</td> \n   <td>4.0</td> \n   <td>10.0</td> \n   <td>3.5</td> \n   <td>4.0</td> \n   <td>9.5</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">box-shadow</td> \n   <td>10.0<br />4.0&nbsp;-webkit-</td> \n   <td>9.0</td> \n   <td>4.0<br />3.5&nbsp;-moz-</td> \n   <td>5.1<br />3.1&nbsp;-webkit-</td> \n   <td>10.5</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">text-overflow</td> \n   <td>4.0</td> \n   <td>6.0</td> \n   <td>7.0</td> \n   <td>3.1</td> \n   <td>11.0<br />9.0&nbsp;-o-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">word-wrap</td> \n   <td>23.0</td> \n   <td>5.5</td> \n   <td>3.5</td> \n   <td>6.1</td> \n   <td>12.1</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">word-break</td> \n   <td>4.0</td> \n   <td>5.5</td> \n   <td>15.0</td> \n   <td>3.1</td> \n   <td>15.0</td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>CSS3的文本阴影</h2> \n<p>CSS3中，text-shadow属性适用于文本阴影。</p> \n<p> <img src=\"http://www.runoob.com/images/text_shadow_effect.gif\" alt=\"Text shadow effect!\" /></p> \n<p>您指定了水平阴影，垂直阴影，模糊的距离，以及阴影的颜色：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>给标题添加阴影:</p> \n <div class=\"example_code notranslate\">\n   h1\n  <br /> {\n  <br /> text-shadow: 5px 5px 5px #FF0000;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_text-shadow_tut\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS3 box-shadow属性</h2> \n<div></div> \n<p>CSS3中CSS3 box-shadow属性适用于盒子阴影</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   div { \n  <br /> box-shadow: 10px 10px; \n  <br /> } \n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_box-shadow\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'CSS3 文本效果|CSS3 文本效果|浏览器支持|CSS3的文本阴影|实例|CSS3 box-shadow属性|实例|');
INSERT INTO `schoolcontent` VALUES ('112', '114', '<h1>CSS3 <span class=\"color_h1\">字体</span> </h1> \n<hr /> \n<img src=\"http://www.runoob.com/images/font.gif\" alt=\"With CSS3, web designers are no longer forced to use only web-safe fonts\" />\n<hr /> \n<h2>CSS3 @font-face 规则</h2> \n<p>以前CSS3的版本，网页设计师不得不使用用户计算机上已经安装的字体。</p> \n<p>使用CSS3，网页设计师可以使用他/她喜欢的任何字体。</p> \n<p>当你发现您要使用的字体文件时，只需简单的将字体文件包含在网站中，它会自动下载给需要的用户。</p> \n<p>您所选择的字体在新的CSS3版本有关于@font-face规则描述。</p> \n<p>您&quot;自己的&quot;的字体是在 CSS3 @font-face 规则中定义的。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p>表格中的数字表示支持该属性的第一个浏览器版本号。</p> \n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left\">属性</th> \n   <th style=\"width:15%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">@font-face</td> \n   <td>4.0</td> \n   <td>9.0</td> \n   <td>3.5</td> \n   <td>3.2</td> \n   <td>10.0</td> \n  </tr> \n </tbody>\n</table> \n<p>Internet Explorer 9+, Firefox, Chrome, Safari, 和 Opera 支持 WOFF (Web Open Font Format) 字体.</p> \n<p>Firefox, Chrome, Safari, 和 Opera 支持 .ttf(True Type字体)和.otf(OpenType)字体字体类型）。</p> \n<p>Chrome, Safari 和 Opera 也支持 SVG 字体/折叠.</p> \n<p>Internet Explorer 同样支持 EOT (Embedded OpenType) 字体.</p> \n<p><b>注意：</b> Internet Explorer 8 以及更早的版本不支持新的 @font-face 规则。</p> \n<hr /> \n<h2>使用您需要的字体</h2> \n<p>在新的 @font-face 规则中，您必须首先定义字体的名称（比如 myFirstFont），然后指向该字体文件。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <strong>提示：</strong>URL请使用小写字母的字体，大写字母在IE中会产生意外的结果</td> \n  </tr>\n </tbody>\n</table> \n<p>如需为 HTML 元素使用字体，请通过 font-family 属性来引用字体的名称 (myFirstFont)：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;style&gt; \n  <br /> @font-face\n  <br /> {\n  <br /> font-family: myFirstFont;\n  <br /> src: url(sansation_light.woff);\n  <br /> }\n  <br />\n  <br /> div\n  <br /> {\n  <br /> font-family:myFirstFont;\n  <br /> }\n  <br /> &lt;/style&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_font-face_rule\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>使用粗体文本</h2> \n<p>您必须添加另一个包含粗体文字的@font-face规则：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   @font-face\n  <br /> {\n  <br /> font-family: myFirstFont;\n  <br /> src: url(sansation_bold.woff);\n  <br /> font-weight:bold;\n  <br /> }\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_font-face_rule_bold\">尝试一下 &raquo;</a> \n</div> \n<p>该文件&quot;Sansation_Bold.ttf&quot;是另一种字体文件，包含Sansation字体的粗体字。</p> \n<p>浏览器使用这一文本的字体系列&quot;myFirstFont&quot;时应该呈现为粗体。</p> \n<p>这样你就可以有许多相同的字体@font-face的规则。</p> \n<hr /> \n<h2>CSS3 字体描述</h2> \n<p>下表列出了所有的字体描述和里面的@font-face规则定义：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:20%\">描述符</th> \n   <th style=\"width:25%\">值</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>font-family</td> \n   <td><i>name</i></td> \n   <td>必需。规定字体的名称。</td> \n  </tr> \n  <tr> \n   <td>src</td> \n   <td><i>URL</i></td> \n   <td>必需。定义字体文件的 URL。</td> \n  </tr> \n  <tr> \n   <td>font-stretch</td> \n   <td> \n    <ul> \n     <li>normal</li> \n     <li>condensed</li> \n     <li>ultra-condensed</li> \n     <li>extra-condensed</li> \n     <li>semi-condensed</li> \n     <li>expanded</li> \n     <li>semi-expanded</li> \n     <li>extra-expanded</li> \n     <li>ultra-expanded</li> \n    </ul> </td> \n   <td>可选。定义如何拉伸字体。默认是 &quot;normal&quot;。</td> \n  </tr> \n  <tr> \n   <td>font-style</td> \n   <td> \n    <ul> \n     <li>normal</li> \n     <li>italic</li> \n     <li>oblique</li> \n    </ul> </td> \n   <td>可选。定义字体的样式。默认是 &quot;normal&quot;。</td> \n  </tr> \n  <tr> \n   <td>font-weight</td> \n   <td> \n    <ul> \n     <li>normal</li> \n     <li>bold</li> \n     <li>100</li> \n     <li>200</li> \n     <li>300</li> \n     <li>400</li> \n     <li>500</li> \n     <li>600</li> \n     <li>700</li> \n     <li>800</li> \n     <li>900</li> \n    </ul> </td> \n   <td>可选。定义字体的粗细。默认是 &quot;normal&quot;。</td> \n  </tr> \n  <tr> \n   <td>unicode-range</td> \n   <td><i>unicode-range</i></td> \n   <td>可选。定义字体支持的 UNICODE 字符范围。默认是 &quot;U+0-10FFFF&quot;。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS3 字体|CSS3 @font-face 规则|浏览器支持|使用您需要的字体|实例|使用粗体文本|实例|CSS3 字体描述|');
INSERT INTO `schoolcontent` VALUES ('113', '115', '<h1>CSS3 <span class=\"color_h1\">2D 转换</span> </h1> \n<hr /> \n<h2>CSS3 转换</h2> \n<p>CSS3转换，我们可以移动，比例化，反过来，旋转，和拉伸元素。</p> \n<img src=\"http://www.runoob.com/images/transforms.gif\" alt=\"CSS3 Transforms\" width=\"635\" height=\"124\" />\n<h2>它是如何工作？</h2> \n<p>变换的效果，让某个元素改变形状，大小和位置。</p> \n<p>您可以转换您使用2D或3D元素。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p>表格中的数字表示支持该属性的第一个浏览器版本号。</p> \n<p>紧跟在 -webkit-, -ms- 或 -moz- 前的数字为支持该前缀属性的第一个浏览器版本号。</p> \n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left\">Property</th> \n   <th style=\"width:15%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transform</td> \n   <td>36.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0<br />9.0&nbsp;-ms-</td> \n   <td>16.0<br />3.5&nbsp;-moz-</td> \n   <td>3.2&nbsp;-webkit-</td> \n   <td>23.0<br />15.0&nbsp;-webkit-<br />12.1<br />10.5&nbsp;-o-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transform-origin<br />(two-value syntax)</td> \n   <td>36.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0<br />9.0&nbsp;-ms-</td> \n   <td>16.0<br />3.5&nbsp;-moz-</td> \n   <td>3.2&nbsp;-webkit-</td> \n   <td>23.0<br />15.0&nbsp;-webkit-<br />12.1<br />10.5&nbsp;-o-</td> \n  </tr> \n </tbody>\n</table> \n<p>Internet Explorer 10, Firefox, 和 Opera支持transform 属性.</p> \n<p>Chrome 和 Safari 要求前缀 -webkit- 版本.</p> \n<p><strong>注意：</strong> Internet Explorer 9 要求前缀 -ms- 版本.</p> \n<hr /> \n<h2>2D 转换</h2> \n<p>在本章您将了解2D变换方法：</p> \n<ul> \n <li>translate()</li> \n <li>rotate()</li> \n <li>scale()</li> \n <li>skew()</li> \n <li>matrix()</li> \n</ul> \n<p>在下一章中您将了解3D转换。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transform: rotate(30deg);\n  <br /> -ms-transform: rotate(30deg); /* IE 9 */\n  <br /> -webkit-transform: rotate(30deg); /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform1\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>translate() 方法</h2> \n<img src=\"http://www.runoob.com/images/transform_translate.gif\" alt=\"Translate\" />\n<p>translate()方法，根据左(X轴)和顶部(Y轴)位置给定的参数，从当前元素位置移动。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transform: translate(50px,100px);\n  <br /> -ms-transform: translate(50px,100px); /* IE 9 */\n  <br /> -webkit-transform: translate(50px,100px); /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform_translate\">尝试一下 &raquo;</a> \n</div> \n<p>translate值（50px，100px）是从左边元素移动50个像素，并从顶部移动100像素。</p> \n<hr /> \n<h2> rotate() 方法</h2> \n<img src=\"http://www.runoob.com/images/transform_rotate.gif\" alt=\"Rotate\" />\n<p>rotate()方法，在一个给定度数顺时针旋转的元素。负值是允许的，这样是元素逆时针旋转。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transform: rotate(30deg);\n  <br /> -ms-transform: rotate(30deg); /* IE 9 */\n  <br /> -webkit-transform: rotate(30deg); /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform_rotate\">尝试一下 &raquo;</a> \n</div> \n<p>rotate值（30deg）元素顺时针旋转30度。</p> \n<hr /> \n<h2>scale() 方法</h2> \n<img src=\"http://www.runoob.com/images/transform_scale.gif\" alt=\"Scale\" />\n<p>scale()方法，该元素增加或减少的大小，取决于宽度（X轴）和高度（Y轴）的参数：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transform: scale(2,4);\n  <br /> -ms-transform: scale(2,4); /* IE 9 */\n  <br /> -webkit-transform: scale(2,4); /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform_scale\">尝试一下 &raquo;</a> \n</div> \n<p>scale（2,4）转变宽度为原来的大小的2倍，和其原始大小4倍的高度。</p> \n<hr /> \n<h2> skew() 方法</h2> \n<img src=\"http://www.runoob.com/images/transform_skew.gif\" alt=\"Skew\" />\n<p>skew()方法，该元素会根据横向（X轴）和垂直（Y轴）线参数给定角度：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transform: skew(30deg,20deg);\n  <br /> -ms-transform: skew(30deg,20deg); /* IE 9 */\n  <br /> -webkit-transform: skew(30deg,20deg); /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform_skew\">尝试一下 &raquo;</a> \n</div> \n<p>skew(30deg,20deg)是绕X轴和Y轴周围20度30度的元素。</p> \n<hr /> \n<h2>matrix() 方法</h2> \n<img src=\"http://www.runoob.com/images/transform_rotate.gif\" alt=\"Rotate\" />\n<p>matrix()方法和2D变换方法合并成一个。</p> \n<p>matrix 方法有六个参数，包含旋转，缩放，移动（平移）和倾斜功能。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">利用matrix()方法旋转div元素30&deg;</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transform:matrix(0.866,0.5,-0.5,0.866,0,0);\n  <br /> -ms-transform:matrix(0.866,0.5,-0.5,0.866,0,0); /* IE 9 */\n  <br /> -webkit-transform:matrix(0.866,0.5,-0.5,0.866,0,0); /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform_matrix1\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2> 新转换属性</h2> \n<p>以下列出了所有的转换属性:</p> \n<table class=\"reference \"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">Property</th> \n   <th width=\"67%\" align=\"left\">描述</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transform.html\">transform</a></td> \n   <td>适用于2D或3D转换的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transform-origin.html\">transform-origin</a></td> \n   <td>允许您更改转化元素位置</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2>2D 转换方法</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%\">函数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>matrix(<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>)</td> \n   <td>定义 2D 转换，使用六个值的矩阵。</td> \n  </tr> \n  <tr> \n   <td>translate(<i>x</i>,<i>y</i>)</td> \n   <td>定义 2D 转换，沿着 X 和 Y 轴移动元素。</td> \n  </tr> \n  <tr> \n   <td>translateX(<i>n</i>)</td> \n   <td>定义 2D 转换，沿着 X 轴移动元素。</td> \n  </tr> \n  <tr> \n   <td>translateY(<i>n</i>)</td> \n   <td>定义 2D 转换，沿着 Y 轴移动元素。</td> \n  </tr> \n  <tr> \n   <td>scale(<i>x</i>,<i>y</i>)</td> \n   <td>定义 2D 缩放转换，改变元素的宽度和高度。</td> \n  </tr> \n  <tr> \n   <td>scaleX(<i>n</i>)</td> \n   <td>定义 2D 缩放转换，改变元素的宽度。</td> \n  </tr> \n  <tr> \n   <td>scaleY(<i>n</i>)</td> \n   <td>定义 2D 缩放转换，改变元素的高度。</td> \n  </tr> \n  <tr> \n   <td>rotate(<i>angle</i>)</td> \n   <td>定义 2D 旋转，在参数中规定角度。</td> \n  </tr> \n  <tr> \n   <td>skew(<i>x-angle</i>,<i>y-angle</i>)</td> \n   <td>定义 2D 倾斜转换，沿着 X 和 Y 轴。</td> \n  </tr> \n  <tr> \n   <td>skewX(<i>angle</i>)</td> \n   <td>定义 2D 倾斜转换，沿着 X 轴。</td> \n  </tr> \n  <tr> \n   <td>skewY(<i>angle</i>)</td> \n   <td>定义 2D 倾斜转换，沿着 Y 轴。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS3 2D 转换|CSS3 转换|它是如何工作？|浏览器支持|2D 转换|实例|translate() 方法|实例|rotate() 方法|实例|scale() 方法|实例|skew() 方法|实例|matrix() 方法|实例|新转换属性|2D 转换方法|');
INSERT INTO `schoolcontent` VALUES ('114', '116', '<style> \r\n#rotate2D,#rotate3D {\r\n    width: 80px;\r\n    height: 70px;\r\n    color: white;\r\n    position:relative;\r\n    font-weight:bold;\r\n    font-size:15px;\r\n    padding:10px;\r\n    float:left;\r\n    margin-right:50px;\r\n    border-radius:5px;\r\n    border:1px solid #000000;\r\n    background:red;\r\n    margin:10px;\r\n}\r\n</style> \n<script>\r\n<!--\r\nvar x,y,n=0,ny=0,rotINT,rotYINT\r\nfunction rotateDIV()\r\n{\r\nx=document.getElementById(\"rotate2D\")\r\nclearInterval(rotINT)\r\nrotINT=setInterval(\"startRotate()\",10)\r\n}\r\nfunction rotateYDIV()\r\n{\r\ny=document.getElementById(\"rotate3D\")\r\nclearInterval(rotYINT)\r\nrotYINT=setInterval(\"startYRotate()\",10)\r\n}\r\nfunction startRotate()\r\n{\r\nn=n+1\r\nx.style.transform=\"rotate(\" + n + \"deg)\"\r\nx.style.webkitTransform=\"rotate(\" + n + \"deg)\"\r\nx.style.OTransform=\"rotate(\" + n + \"deg)\"\r\nx.style.MozTransform=\"rotate(\" + n + \"deg)\"\r\nif (n==180 || n==360)\r\n	{\r\n	clearInterval(rotINT)\r\n	if (n==360){n=0}\r\n	}\r\n}\r\nfunction startYRotate()\r\n{\r\nny=ny+1\r\ny.style.transform=\"rotateY(\" + ny + \"deg)\"\r\ny.style.webkitTransform=\"rotateY(\" + ny + \"deg)\"\r\ny.style.OTransform=\"rotateY(\" + ny + \"deg)\"\r\ny.style.MozTransform=\"rotateY(\" + ny + \"deg)\"\r\nif (ny==180 || ny>=360)\r\n	{\r\n	clearInterval(rotYINT)\r\n	if (ny>=360){ny=0}\r\n	}\r\n}\r\n//-->\r\n</script> \n<h1>CSS3 <span class=\"color_h1\">3D 转换</span> </h1> \n<hr /> \n<h2>3D Transforms</h2> \n<p>CSS3 允许您使用 3D 转换来对元素进行格式化。</p> \n<p>在本章中，您将学到其中的一些 3D 转换方法：</p> \n<ul> \n <li>rotateX()</li> \n <li>rotateY()</li> \n</ul> \n<p class=\"example\">点击下面的元素，来查看 2D 转换与 3D 转换之间的不同之处：</p> \n<div style=\"height:80px;\"> \n <div onmouseover=\"rotateDIV()\" id=\"rotate2D\" style=\"transform: rotate(1970deg);\">\n  2D rotate\n </div> \n <div onmouseover=\"rotateYDIV()\" id=\"rotate3D\" style=\"transform: rotateY(360deg);\">\n  3D rotate\n </div> \n</div> \n<br />\n<hr /> \n<h2>浏览器支持</h2> \n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left\">Property</th> \n   <th style=\"width:15%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transform</td> \n   <td>36.0<br />12.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />10.0&nbsp;-moz-</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>23.0<br />15.0&nbsp;-webkit-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transform-origin<br />(three-value syntax)</td> \n   <td>36.0<br />12.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />10.0&nbsp;-moz-</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>23.0<br />15.0&nbsp;-webkit-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transform-style</td> \n   <td>36.0<br />12.0&nbsp;-webkit-</td> \n   <td>11.0</td> \n   <td>16.0<br />10.0&nbsp;-moz-</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>23.0<br />15.0&nbsp;-webkit-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">perspective</td> \n   <td>36.0<br />12.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />10.0&nbsp;-moz-</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>23.0<br />15.0&nbsp;-webkit-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">perspective-origin</td> \n   <td>36.0<br />12.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />10.0&nbsp;-moz-</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>23.0<br />15.0&nbsp;-webkit-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">backface-visibility</td> \n   <td>36.0<br />12.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />10.0&nbsp;-moz-</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>23.0<br />15.0&nbsp;-webkit-</td> \n  </tr> \n </tbody>\n</table> \n<h2>rotateX() 方法</h2> \n<img src=\"http://www.runoob.com/images/transform_rotatex.gif\" alt=\"Rotate X\" />\n<p>rotateX()方法，围绕其在一个给定度数X轴旋转的元素。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transform: rotateX(120deg);\n  <br /> -webkit-transform: rotateX(120deg); /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform_rotateX\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2> rotateY() 方法</h2> \n<img src=\"http://www.runoob.com/images/transform_rotatey.gif\" alt=\"Rotate Y\" />\n<p>rotateY()方法，围绕其在一个给定度数Y轴旋转的元素。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transform: rotateY(130deg);\n  <br /> -webkit-transform: rotateY(130deg); /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transform_rotateY\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>转换属性</h2> \n<p>下表列出了所有的转换属性：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%\">属性</th> \n   <th>描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transform.html\" title=\"CSS3 transform 属性\">transform</a></td> \n   <td>向元素应用 2D 或 3D 转换。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transform-origin.html\" title=\"CSS3 transform-origin 属性\">transform-origin</a></td> \n   <td>允许你改变被转换元素的位置。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transform-style.html\" title=\"CSS3 transform-style 属性\">transform-style</a></td> \n   <td>规定被嵌套元素如何在 3D 空间中显示。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-perspective.html\" title=\"CSS3 perspective 属性\">perspective</a></td> \n   <td>规定 3D 元素的透视效果。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-perspective-origin.html\" title=\"CSS3 perspective-origin 属性\">perspective-origin</a></td> \n   <td>规定 3D 元素的底部位置。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-backface-visibility.html\" title=\"CSS3 backface-visibility 属性\">backface-visibility</a></td> \n   <td>定义元素在不面对屏幕时是否可见。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2>3D 转换方法</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%\">函数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>matrix3d(<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<br /><i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>,<i>n</i>)</td> \n   <td>定义 3D 转换，使用 16 个值的 4x4 矩阵。</td> \n  </tr> \n  <tr> \n   <td>translate3d(<i>x</i>,<i>y</i>,<i>z</i>)</td> \n   <td>定义 3D 转化。</td> \n  </tr> \n  <tr> \n   <td>translateX(<i>x</i>)</td> \n   <td>定义 3D 转化，仅使用用于 X 轴的值。</td> \n  </tr> \n  <tr> \n   <td>translateY(<i>y</i>)</td> \n   <td>定义 3D 转化，仅使用用于 Y 轴的值。</td> \n  </tr> \n  <tr> \n   <td>translateZ(<i>z</i>)</td> \n   <td>定义 3D 转化，仅使用用于 Z 轴的值。</td> \n  </tr> \n  <tr> \n   <td>scale3d(<i>x</i>,<i>y</i>,<i>z</i>)</td> \n   <td>定义 3D 缩放转换。</td> \n  </tr> \n  <tr> \n   <td>scaleX(<i>x</i>)</td> \n   <td>定义 3D 缩放转换，通过给定一个 X 轴的值。</td> \n  </tr> \n  <tr> \n   <td>scaleY(<i>y</i>)</td> \n   <td>定义 3D 缩放转换，通过给定一个 Y 轴的值。</td> \n  </tr> \n  <tr> \n   <td>scaleZ(<i>z</i>)</td> \n   <td>定义 3D 缩放转换，通过给定一个 Z 轴的值。</td> \n  </tr> \n  <tr> \n   <td>rotate3d(<i>x</i>,<i>y</i>,<i>z</i>,<i>angle</i>)</td> \n   <td>定义 3D 旋转。</td> \n  </tr> \n  <tr> \n   <td>rotateX(<i>angle</i>)</td> \n   <td>定义沿 X 轴的 3D 旋转。</td> \n  </tr> \n  <tr> \n   <td>rotateY(<i>angle</i>)</td> \n   <td>定义沿 Y 轴的 3D 旋转。</td> \n  </tr> \n  <tr> \n   <td>rotateZ(<i>angle</i>)</td> \n   <td>定义沿 Z 轴的 3D 旋转。</td> \n  </tr> \n  <tr> \n   <td>perspective(<i>n</i>)</td> \n   <td>定义 3D 转换元素的透视视图。</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS3 3D 转换|3D Transforms|浏览器支持|rotateX() 方法|实例|rotateY() 方法|实例|转换属性|3D 转换方法|');
INSERT INTO `schoolcontent` VALUES ('115', '117', '<style>\r\n.animated_div\r\n{\r\nwidth:60px;\r\nheight:40px;\r\nbackground:#92B901;\r\ncolor:#ffffff;\r\nposition:absolute;\r\nfont-weight:bold;\r\nfont-size:15px;\r\npadding:10px;\r\nfloat:left;\r\nmargin:5px;\r\n-webkit-transition:-webkit-transform 1s,opacity 1s,background 1s,width 1s,height 1s,font-size 1s;\r\n-webkit-border-radius:5px;\r\n-o-transition-property:width,height,-o-transform,background,font-size,opacity;\r\n-o-transition-duration:1s,1s,1s,1s,1s,1s;\r\n-moz-transition-property:width,height,-o-transform,background,font-size,opacity;\r\n-moz-transition-duration:1s,1s,1s,1s,1s,1s;\r\ntransition-property:width,height,transform,background,font-size,opacity;\r\ntransition-duration:1s,1s,1s,1s,1s,1s;\r\nborder-radius:5px;\r\nopacity:0.4;\r\n}\r\n\r\n.animated_div:hover\r\n{\r\n-moz-transform: rotate(360deg);\r\n-webkit-transform: rotate(360deg);\r\n-o-transform: rotate(360deg);\r\ntransform: rotate(360deg);\r\nopacity:1;\r\nbackground:#1ec7e6;\r\nwidth:90px;\r\nheight:60px;\r\nfont-size:30px;\r\n}\r\n  </style> \n<h1>CSS3 <span class=\"color_h1\">过渡</span> </h1> \n<hr /> \n<h2>CSS3 过渡</h2> \n<p>CSS3中，我们为了添加某种效果可以从一种样式转变到另一个的时候，无需使用Flash动画或JavaScript。用鼠标移过下面的元素：</p> \n<hr /> \n<p>用鼠标移过下面的元素：</p> \n<div style=\"height:70px\"> \n <div class=\"animated_div\">\n  CSS3\n  <br />\n  <span style=\"font-size:50%\">Transition</span> \n </div> \n</div> \n<hr /> \n<h2>浏览器支持</h2> \n<p>表格中的数字表示支持该属性的第一个浏览器版本号。</p> \n<p>紧跟在 -webkit-, -ms- 或 -moz- 前的数字为支持该前缀属性的第一个浏览器版本号。</p> \n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left\">属性</th> \n   <th style=\"width:15%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transition</td> \n   <td>26.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />4.0&nbsp;-moz-</td> \n   <td>6.1<br />3.1&nbsp;-webkit-</td> \n   <td>12.1<br />10.5&nbsp;-o-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transition-delay</td> \n   <td>26.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />4.0&nbsp;-moz-</td> \n   <td>6.1<br />3.1&nbsp;-webkit-</td> \n   <td>12.1<br />10.5&nbsp;-o-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transition-duration</td> \n   <td>26.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />4.0&nbsp;-moz-</td> \n   <td>6.1<br />3.1&nbsp;-webkit-</td> \n   <td>12.1<br />10.5&nbsp;-o-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transition-property</td> \n   <td>26.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />4.0&nbsp;-moz-</td> \n   <td>6.1<br />3.1&nbsp;-webkit-</td> \n   <td>12.1<br />10.5&nbsp;-o-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">transition-timing-function</td> \n   <td>26.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />4.0&nbsp;-moz-</td> \n   <td>6.1<br />3.1&nbsp;-webkit-</td> \n   <td>12.1<br />10.5&nbsp;-o-</td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>它是如何工作？</h2> \n<p>CSS3 过渡是元素从一种样式逐渐改变为另一种的效果。</p> \n<p>要实现这一点，必须规定两项内容：</p> \n<ul> \n <li>指定要添加效果的CSS属性</li> \n <li>指定效果的持续时间。</li> \n</ul> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p class=\"example\">应用于宽度属性的过渡效果，时长为 2 秒：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transition: width 2s;\n  <br /> -webkit-transition: width 2s; /* Safari */\n  <br /> } \n </div> \n <br /> \n</div> \n<p><b>注意：</b> 如果未指定的期限，transition将没有任何效果，因为默认值是0。</p> \n<p>指定的CSS属性的值更改时效果会发生变化。一个典型CSS属性的变化是用户鼠标放在一个元素上时：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>规定当鼠标指针悬浮(:hover)于 &lt;div&gt;元素上时：</p> \n <div class=\"example_code\">\n   div:hover\n  <br /> {\n  <br /> width:300px;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transition1\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意：</b> 当鼠标光标移动到该元素时，它逐渐改变它原有样式</p> \n<hr /> \n<h2>多项改变</h2> \n<p>要添加多个样式的变换效果，添加的属性由逗号分隔：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>添加了宽度，高度和转换效果：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transition: width 2s, height 2s, transform 2s;\n  <br /> -webkit-transition: width 2s, height 2s, -webkit-transform 2s;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transition2\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>过渡属性</h2> \n<p>下表列出了所有的过渡属性:</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:30%\">属性</th> \n   <th>描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transition.html\" title=\"CSS3 transition 属性\">transition</a></td> \n   <td>简写属性，用于在一个属性中设置四个过渡属性。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transition-property.html\" title=\"CSS3 transition-property 属性\">transition-property</a></td> \n   <td>规定应用过渡的 CSS 属性的名称。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transition-duration.html\" title=\"CSS3 transition-duration 属性\">transition-duration</a></td> \n   <td>定义过渡效果花费的时间。默认是 0。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transition-timing-function.html\" title=\"CSS3 transition-timing-function 属性\">transition-timing-function</a></td> \n   <td>规定过渡效果的时间曲线。默认是 &quot;ease&quot;。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-transition-delay.html\" title=\"CSS3 transition-delay 属性\">transition-delay</a></td> \n   <td>规定过渡效果何时开始。默认是 0。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<p>下面的两个例子设置所有过渡属性：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>在一个例子中使用所有过渡属性：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transition-property: width;\n  <br /> transition-duration: 1s;\n  <br /> transition-timing-function: linear;\n  <br /> transition-delay: 2s;\n  <br /> /* Safari */\n  <br /> -webkit-transition-property:width;\n  <br /> -webkit-transition-duration:1s;\n  <br /> -webkit-transition-timing-function:linear;\n  <br /> -webkit-transition-delay:2s;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transition4\">尝试一下 &raquo;</a> \n</div> \n<br />\n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>与上面的例子相同的过渡效果，但是使用了简写的 transition 属性：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> transition: width 1s linear 2s;\n  <br /> /* Safari */\n  <br /> -webkit-transition:width 1s linear 2s;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_transition5\">尝试一下 &raquo;</a> \n</div>', null, 'CSS3 过渡|CSS3 过渡|浏览器支持|它是如何工作？|实例|实例|多项改变|实例|过渡属性|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('116', '118', '<style>\r\n \r\n#animated_div\r\n{\r\nwidth:76px;\r\nheight:47px;\r\nbackground:#92B901;\r\ncolor:#ffffff;\r\nposition:relative;\r\nfont-weight:bold;\r\nfont-size:20px;\r\npadding:10px;\r\nanimation:animated_div 5s 1;\r\n-moz-animation:animated_div 5s 1;\r\n-webkit-animation:animated_div 5s 1;\r\n-o-animation:animated_div 5s 1;\r\nborder-radius:5px;\r\n-webkit-border-radius:5px;\r\n}\r\n\r\n@keyframes animated_div\r\n{\r\n0%		{transform: rotate(0deg);left:0px;}\r\n25%		{transform: rotate(20deg);left:0px;}\r\n50%		{transform: rotate(0deg);left:500px;}\r\n55%		{transform: rotate(0deg);left:500px;}\r\n70%		{transform: rotate(0deg);left:500px;background:#1ec7e6;}\r\n100%	{transform: rotate(-360deg);left:0px;}\r\n}\r\n\r\n@-webkit-keyframes animated_div\r\n{\r\n0%		{-webkit-transform: rotate(0deg);left:0px;}\r\n25%		{-webkit-transform: rotate(20deg);left:0px;}\r\n50%		{-webkit-transform: rotate(0deg);left:500px;}\r\n55%		{-webkit-transform: rotate(0deg);left:500px;}\r\n70%		{-webkit-transform: rotate(0deg);left:500px;background:#1ec7e6;}\r\n100%	{-webkit-transform: rotate(-360deg);left:0px;}\r\n}\r\n\r\n@-moz-keyframes animated_div\r\n{\r\n0%   {-moz-transform: rotate(0deg);left:0px;}\r\n25%  {-moz-transform: rotate(20deg);left:0px;}\r\n50%  {-moz-transform: rotate(0deg);left:500px;}\r\n55%  {-moz-transform: rotate(0deg);left:500px;}\r\n70%  {-moz-transform: rotate(0deg);left:500px;background:#1ec7e6;}\r\n100% {-moz-transform: rotate(-360deg);left:0px;}\r\n}\r\n\r\n@-o-keyframes animated_div\r\n{\r\n0%   {transform: rotate(0deg);left:0px;}\r\n25%  {transform: rotate(20deg);left:0px;}\r\n50%  {transform: rotate(0deg);left:500px;}\r\n55%  {transform: rotate(0deg);left:500px;}\r\n70%  {transform: rotate(0deg);left:500px;background:#1ec7e6;}\r\n100% {transform: rotate(-360deg);left:0px;}\r\n}\r\n</style> \n<h1>CSS3 <span class=\"color_h1\">动画</span> </h1> \n<hr /> \n<h2>CSS3 动画</h2> \n<p>CSS3，我们可以创建动画，它可以取代许多网页动画图像，Flash动画，和JAVAScripts。</p> \n<hr /> \n<div id=\"animated_div\">\n CSS3\n <br />\n <span style=\"font-size:10px\">动画</span> \n</div> \n<hr /> \n<h2>CSS3 @keyframes 规则</h2> \n<p>要创建CSS3动画，你将不得不了解@keyframes规则。</p> \n<p>@keyframes规则是创建动画。 @keyframes规则内指定一个CSS样式和动画将逐步从目前的样式更改为新的样式。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p>表格中的数字表示支持该属性的第一个浏览器版本号。</p> \n<p>紧跟在 -webkit-, -ms- 或 -moz- 前的数字为支持该前缀属性的第一个浏览器版本号。</p> \n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left\">Property</th> \n   <th style=\"width:15%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">@keyframes</td> \n   <td>43.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />5.0&nbsp;-moz-</td> \n   <td>9.0<br />4.0&nbsp;-webkit-</td> \n   <td>30.0<br />15.0&nbsp;-webkit-<br />12.0 -o-</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">animation</td> \n   <td>43.0<br />4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />5.0&nbsp;-moz-</td> \n   <td>9.0<br />4.0&nbsp;-webkit-</td> \n   <td>30.0<br />15.0&nbsp;-webkit-<br />12.0&nbsp;-o-</td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   @keyframes myfirst\n  <br /> {\n  <br /> from {background: red;}\n  <br /> to {background: yellow;}\n  <br /> }\n  <br />\n  <br /> @-webkit-keyframes myfirst /* Safari and Chrome */\n  <br /> {\n  <br /> from {background: red;}\n  <br /> to {background: yellow;}\n  <br /> }\n  <br /> \n </div> \n</div> \n<br />\n<hr /> \n<h2>CSS3 动画</h2> \n<p>当在 <strong>@keyframes</strong> 创建动画，把它绑定到一个选择器，否则动画不会有任何效果。</p> \n<p>指定至少这两个CSS3的动画属性绑定向一个选择器：</p> \n<ul> \n <li>规定动画的名称</li> \n <li>规定动画的时长</li> \n</ul> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>把 &quot;myfirst&quot; 动画捆绑到 div 元素，时长：5 秒：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> animation: myfirst 5s;\n  <br /> -webkit-animation: myfirst 5s; /* Safari and Chrome */\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_animation1\">尝试一下 &raquo;</a> \n</div> \n<p><b>注意: </b>您必须定义动画的名称和动画的持续时间。如果省略的持续时间，动画将无法运行，因为默认值是0。</p> \n<hr /> \n<h2>CSS3动画是什么？</h2> \n<p>动画是使元素从一种样式逐渐变化为另一种样式的效果。</p> \n<p>您可以改变任意多的样式任意多的次数。</p> \n<p>请用百分比来规定变化发生的时间，或用关键词 &quot;from&quot; 和 &quot;to&quot;，等同于 0% 和 100%。</p> \n<p>0% 是动画的开始，100% 是动画的完成。</p> \n<p>为了得到最佳的浏览器支持，您应该始终定义 0% 和 100% 选择器。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>当动画为 25% 及 50% 时改变背景色，然后当动画 100% 完成时再次改变：</p> \n <div class=\"example_code notranslate\">\n   @keyframes myfirst\n  <br /> {\n  <br /> 0%&nbsp;&nbsp; {background: red;}\n  <br /> 25%&nbsp; {background: yellow;}\n  <br /> 50%&nbsp; {background: blue;}\n  <br /> 100% {background: green;}\n  <br /> }\n  <br />\n  <br /> @-webkit-keyframes myfirst /* Safari and Chrome */\n  <br /> {\n  <br /> 0%&nbsp;&nbsp; {background: red;}\n  <br /> 25%&nbsp; {background: yellow;}\n  <br /> 50%&nbsp; {background: blue;}\n  <br /> 100% {background: green;}\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_animation2\">尝试一下 &raquo;</a> \n</div> \n<br />\n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>改变背景色和位置：</p> \n <div class=\"example_code notranslate\">\n   @keyframes myfirst\n  <br /> {\n  <br /> 0%&nbsp;&nbsp; {background: red; left:0px; top:0px;}\n  <br /> 25%&nbsp; {background: yellow; left:200px; top:0px;}\n  <br /> 50%&nbsp; {background: blue; left:200px; top:200px;}\n  <br /> 75%&nbsp; {background: green; left:0px; top:200px;}\n  <br /> 100% {background: red; left:0px; top:0px;}\n  <br /> }\n  <br />\n  <br /> @-webkit-keyframes myfirst /* Safari and Chrome */\n  <br /> {\n  <br /> 0%&nbsp;&nbsp; {background: red; left:0px; top:0px;}\n  <br /> 25%&nbsp; {background: yellow; left:200px; top:0px;}\n  <br /> 50%&nbsp; {background: blue; left:200px; top:200px;}\n  <br /> 75%&nbsp; {background: green; left:0px; top:200px;}\n  <br /> 100% {background: red; left:0px; top:0px;}\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_animation3\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS3的动画属性</h2> \n<p>下面的表格列出了 @keyframes 规则和所有动画属性：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:30%\">属性</th> \n   <th>描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation-keyframes.html\" title=\"CSS3 @keyframes 规则\">@keyframes</a></td> \n   <td>规定动画。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation.html\" title=\"CSS3 animation 属性\">animation</a></td> \n   <td>所有动画属性的简写属性，除了 animation-play-state 属性。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation-name.html\" title=\"CSS3 animation-name 属性\">animation-name</a></td> \n   <td>规定 @keyframes 动画的名称。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation-duration.html\" title=\"CSS3 animation-duration 属性\">animation-duration</a></td> \n   <td>规定动画完成一个周期所花费的秒或毫秒。默认是 0。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation-timing-function.html\" title=\"CSS3 animation-timing-function 属性\">animation-timing-function</a></td> \n   <td>规定动画的速度曲线。默认是 &quot;ease&quot;。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation-delay.html\" title=\"CSS3 animation-delay 属性\">animation-delay</a></td> \n   <td>规定动画何时开始。默认是 0。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation-iteration-count.html\" title=\"CSS3 animation-iteration-count 属性\">animation-iteration-count</a></td> \n   <td>规定动画被播放的次数。默认是 1。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation-direction.html\" title=\"CSS3 animation-direction 属性\">animation-direction</a></td> \n   <td>规定动画是否在下一周期逆向地播放。默认是 &quot;normal&quot;。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-animation-play-state.html\" title=\"CSS3 animation-play-state 属性\">animation-play-state</a></td> \n   <td>规定动画是否正在运行或暂停。默认是 &quot;running&quot;。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<p>下面两个例子设置所有动画属性：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>运行myfirst动画，设置所有的属性：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> animation-name: myfirst;\n  <br /> animation-duration: 5s;\n  <br /> animation-timing-function: linear;\n  <br /> animation-delay: 2s;\n  <br /> animation-iteration-count: infinite;\n  <br /> animation-direction: alternate;\n  <br /> animation-play-state: running;\n  <br /> /* Safari and Chrome: */\n  <br /> -webkit-animation-name: myfirst;\n  <br /> -webkit-animation-duration: 5s;\n  <br /> -webkit-animation-timing-function: linear;\n  <br /> -webkit-animation-delay: 2s;\n  <br /> -webkit-animation-iteration-count: infinite;\n  <br /> -webkit-animation-direction: alternate;\n  <br /> -webkit-animation-play-state: running;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_animation4\">尝试一下 &raquo;</a> \n</div> \n<br />\n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>与上面的动画相同，但是使用了简写的动画 animation 属性：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> animation: myfirst 5s linear 2s infinite alternate;\n  <br /> /* Safari and Chrome: */\n  <br /> -webkit-animation: myfirst 5s linear 2s infinite alternate;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_animation5\">尝试一下 &raquo;</a> \n</div>', null, 'CSS3 动画|CSS3 动画|CSS3 @keyframes 规则|浏览器支持|实例|CSS3 动画|实例|CSS3动画是什么？|实例|实例|CSS3的动画属性|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('117', '119', '<h1>CSS3 多列</h1> \n<p>CSS3 可以将文本内容设计成像报纸一样的多列布局，如下实例:</p> \n<style> \r\n.newspaper {\r\n    border:1px black solid;\r\n    padding: 15px;\r\n    -webkit-column-count: 3; /* Chrome, Safari, Opera */\r\n    -moz-column-count: 3; /* Firefox */\r\n    column-count: 3;\r\n    -webkit-column-gap: 40px; /* Chrome, Safari, Opera */\r\n    -moz-column-gap: 40px; /* Firefox */\r\n    column-gap: 40px;\r\n    -webkit-column-rule: 1px solid lightgrey; /* Chrome, Safari, Opera */\r\n    -moz-column-rule: 1px solid lightgrey; /* Firefox */\r\n    column-rule: 1px solid lightgrey;\r\n}\r\n</style> \n<p class=\"newspaper\"> 菜鸟教程 - 学的不仅是技术，更是梦想！菜鸟教程(www.runoob.com)提供了最全的编程技术基础教程, 介绍了HTML、CSS、Javascript、Python，Java，Ruby，C，PHP , MySQL等各种编程语言的基础知识。 同时本站中也提供了大量的在线实例，通过实例，您可以更好的学习编程。 </p> \n<hr /> \n<h2>浏览器支持</h2> \n<p>表格中的数字表示支持该方法的第一个浏览器的版本号。</p>\n<p> 紧跟在数字后面的 -webkit- 或 -moz- 为指定浏览器的前缀。</p> \n<table class=\"browserref\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left;\">属性</th> \n   <th style=\"width:15%;\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%;\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%;\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%;\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%;\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left;\">column-count</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>2.0&nbsp;-moz-</td> \n   <td>3.1&nbsp;-webkit-</td> \n   <td>15.0&nbsp;-webkit-<br />11.1</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left;\">column-gap</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>2.0&nbsp;-moz-</td> \n   <td>3.1&nbsp;-webkit-</td> \n   <td>15.0&nbsp;-webkit-<br />11.1</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left;\">column-rule</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>2.0&nbsp;-moz-</td> \n   <td>3.1&nbsp;-webkit-</td> \n   <td>15.0&nbsp;-webkit-<br />11.1</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left;\">column-rule-color</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>2.0&nbsp;-moz-</td> \n   <td>3.1&nbsp;-webkit-</td> \n   <td>15.0&nbsp;-webkit<br />11.1</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left;\">column-rule-style</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>2.0&nbsp;-moz-</td> \n   <td>3.1&nbsp;-webkit-</td> \n   <td>15.0&nbsp;-webkit<br />11.1</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left;\">column-rule-width</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>2.0&nbsp;-moz-</td> \n   <td>3.1&nbsp;-webkit-</td> \n   <td>15.0&nbsp;-webkit<br />11.1</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left;\">column-width</td> \n   <td>4.0&nbsp;-webkit-</td> \n   <td>10.0</td> \n   <td>2.0&nbsp;-moz-</td> \n   <td>3.1&nbsp;-webkit-</td> \n   <td>15.0&nbsp;-webkit<br />11.1</td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>CSS3 多列属性</h2> \n<p>本章节我们将学习以下几个 CSS3 的多列属性:</p> \n<ul> \n <li><code>column-count</code></li> \n <li><code>column-gap</code></li> \n <li><code>column-rule-style</code></li> \n <li><code>column-rule-width</code></li> \n <li><code>column-rule-color</code></li> \n <li><code>column-rule</code></li> \n <li><code>column-span</code></li> \n <li><code>column-width</code></li> \n</ul> \n<hr /> \n<h2>CSS3 创建多列</h2> \n<p><code>column-count</code> 属性指定了需要分割的列数。</p> \n<p>以下实例将 &lt;div&gt; 元素中的文本分为 3 列：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-webkit-column-count:</span>\n  <span class=\"highVAL\"> 3;</span> \n  <span class=\"highCOM\">/* Chrome, Safari, Opera */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-moz-column-count:</span>\n  <span class=\"highVAL\"> 3;</span> \n  <span class=\"highCOM\">/* Firefox */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">column-count:</span>\n  <span class=\"highVAL\"> 3;</span>\n  <br /> } \n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_column-count\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>CSS3 多列中列与列间的间隙</h2> \n<p><code>column-gap</code> 属性指定了列与列间的间隙。</p> \n<p>以下实例指定了列与列间的间隙为 40 像素：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-webkit-column-gap:</span>\n  <span class=\"highVAL\"> 40px;</span> \n  <span class=\"highCOM\">/* Chrome, Safari, Opera */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-moz-column-gap:</span>\n  <span class=\"highVAL\"> 40px;</span> \n  <span class=\"highCOM\">/* Firefox */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">column-gap:</span>\n  <span class=\"highVAL\"> 40px;</span>\n  <br /> } \n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_column-gap\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>CSS3 列边框</h2> \n<p><code>column-rule-style</code> 属性指定了列与列间的边框样式：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-webkit-column-rule-style:</span>\n  <span class=\"highVAL\"> solid;</span> \n  <span class=\"highCOM\">/* Chrome, Safari, Opera */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-moz-column-rule-style:</span>\n  <span class=\"highVAL\"> solid;</span> \n  <span class=\"highCOM\">/* Firefox */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">column-rule-style:</span>\n  <span class=\"highVAL\"> solid;</span>\n  <br /> } \n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_column-rule-style\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><code>column-rule-width</code> 属性指定了两列的边框厚度:</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-webkit-column-rule-width:</span>\n  <span class=\"highVAL\"> 1px;</span> \n  <span class=\"highCOM\">/* Chrome, Safari, Opera */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-moz-column-rule-width:</span>\n  <span class=\"highVAL\"> 1px;</span> \n  <span class=\"highCOM\">/* Firefox */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">column-rule-width:</span>\n  <span class=\"highVAL\"> 1px;</span>\n  <br /> } \n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_column-rule-width\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><code>column-rule-color</code> 属性指定了两列的边框颜色：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-webkit-column-rule-color:</span>\n  <span class=\"highVAL\"> lightblue;</span> \n  <span class=\"highCOM\">/* Chrome, Safari, Opera */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-moz-column-rule-color:</span>\n  <span class=\"highVAL\"> lightblue;</span> \n  <span class=\"highCOM\">/* Firefox */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">column-rule-color:</span>\n  <span class=\"highVAL\"> lightblue;</span>\n  <br /> } \n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_column-rule-color\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><code>column-rule</code> 属性是 column-rule-* 所有属性的简写。 </p> \n<p>以下实例设置了列直接的边框的厚度，样式及颜色：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-webkit-column-rule:</span>\n  <span class=\"highVAL\"> 1px solid lightblue;</span> \n  <span class=\"highCOM\">/* Chrome, Safari, Opera */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-moz-column-rule:</span>\n  <span class=\"highVAL\"> 1px solid lightblue;</span> \n  <span class=\"highCOM\">/* Firefox */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">column-rule:</span>\n  <span class=\"highVAL\"> 1px solid lightblue;</span>\n  <br /> } \n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_column-rule\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>指定元素跨越多少列</h2> \n<p>以下实例指定 &lt;h2&gt; 元素跨越所有列：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">h2 </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-webkit-column-span:</span>\n  <span class=\"highVAL\"> all;</span> \n  <span class=\"highCOM\">/* Chrome, Safari, Opera */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">column-span:</span>\n  <span class=\"highVAL\"> all;</span>\n  <br /> } \n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_column-span\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>指定列的宽度</h2> \n<p><code>column-width</code> 属性指定了列的宽度。</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">-webkit-column-width:</span>\n  <span class=\"highVAL\"> 100px;</span> \n  <span class=\"highCOM\">/* Chrome, Safari, Opera */</span>\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">column-width:</span>\n  <span class=\"highVAL\"> 100px;</span>\n  <br /> } \n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_column-width\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>CSS3 多列属性</h2> \n<p>下表列出了所有 CSS3 的多列属性：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%\">属性</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-count.html\">column-count</a></td> \n   <td>指定元素应该被分割的列数。</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-fill.html\">column-fill</a></td> \n   <td>指定如何填充列</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-gap.html\">column-gap</a></td> \n   <td>指定列与列之间的间隙</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-rule.html\">column-rule</a></td> \n   <td>所有 column-rule-* 属性的简写</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-rule-color.html\">column-rule-color</a></td> \n   <td>指定两列间边框的颜色</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-rule-style.html\">column-rule-style</a></td> \n   <td>指定两列间边框的样式</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-rule-width.html\">column-rule-width</a></td> \n   <td>指定两列间边框的厚度</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-span.html\">column-span</a></td> \n   <td>指定元素要跨越多少列</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-column-width.html\">column-width</a></td> \n   <td>指定列的宽度</td> \n  </tr> \n  <tr> \n   <td><a target=\"_blank\" href=\"http://www.runoob.com/cssref/css3-pr-columns.html\">columns</a></td> \n   <td>设置 column-width 和 column-count 的简写</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS3 多列|浏览器支持|CSS3 多列属性|CSS3 创建多列|CSS3 多列中列与列间的间隙|CSS3 列边框|指定元素跨越多少列|指定列的宽度|CSS3 多列属性|');
INSERT INTO `schoolcontent` VALUES ('118', '120', '<h1>CSS3 <span class=\"color_h1\">用户界面</span> </h1> \n<hr /> \n<h2>CSS3 用户界面</h2> \n<p>在 CSS3 中, 增加了一些新的用户界面特性来调整元素尺寸，框尺寸和外边框。</p> \n<p>在本章中，您将了解以下的用户界面属性：</p> \n<ul> \n <li>resize</li> \n <li>box-sizing</li> \n <li>outline-offset</li> \n</ul> \n<hr /> \n<h2>浏览器支持</h2> \n<p>表格中的数字表示支持该属性的第一个浏览器版本号。</p> \n<p>紧跟在 -webkit-, -ms- 或 -moz- 前的数字为支持该前缀属性的第一个浏览器版本号。</p> \n<table class=\"browsersupport\"> \n</table>\n<table class=\"browserref notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%;font-size:16px;text-align:left\">属性</th> \n   <th style=\"width:15%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:15%\" class=\"bsEdge\" title=\"Internet Explorer / Edge\"></th> \n   <th style=\"width:15%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:15%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:15%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">resize</td> \n   <td>4.0</td> \n   <td><span class=\"deprecated\">不兼容</span></td> \n   <td>5.0<br />4.0&nbsp;-moz-</td> \n   <td>4.0</td> \n   <td>15.0</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">box-sizing</td> \n   <td>10.0<br />4.0&nbsp;-webkit-</td> \n   <td>8.0</td> \n   <td>29.0<br />2.0&nbsp;-moz-</td> \n   <td>5.1<br />3.1&nbsp;-webkit-</td> \n   <td>9.5</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">outline-offset</td> \n   <td>4.0</td> \n   <td><span class=\"deprecated\">不兼容</span></td> \n   <td>5.0<br />4.0&nbsp;-moz-</td> \n   <td>4.0</td> \n   <td>9.5</td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>CSS3 调整尺寸(Resizing)</h2> \n<p>CSS3中，resize属性指定一个元素是否应该由用户去调整大小。</p> \n<div id=\"resize\">\n 这个 div 元素由用户调整大小。 (在 Firefox 4+, Chrome, 和 Safari中)\n</div> \n<p>CSS代码如下：</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>由用户指定一个div元素尺寸大小：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> resize:both;\n  <br /> overflow:auto;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_resize\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS3 方框大小调整(Box Sizing)</h2> \n<p>box-sizing 属性允许您以确切的方式定义适应某个区域的具体内容。</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>规定两个并排的带边框方框：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> box-sizing:border-box;\n  <br /> -moz-box-sizing:border-box; /* Firefox */\n  <br /> width:50%;\n  <br /> float:left;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_box-sizing\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>CSS3 外形修饰（outline-offset ）</h2> \n<p>outline-offset 属性对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。</p> \n<p>轮廓与边框有两点不同：</p> \n<ul> \n <li>轮廓不占用空间 </li> \n <li>轮廓可能是非矩形</li> \n</ul> \n<div id=\"outlineoffset\">\n 这个 div 在边框之外 15 像素处有一个轮廓。\n</div> \n<p>The CSS code is as follows:</p> \n<div class=\"example\"> \n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_opera2020.gif\" align=\"middle\" title=\"Opera\" alt=\"Opera\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_safari2020.gif\" align=\"middle\" title=\"Safari\" alt=\"Safari\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_chrome2020.gif\" align=\"middle\" title=\"Chrome\" alt=\"Chrome\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/compatible_firefox2020.gif\" align=\"middle\" title=\"Firefox\" alt=\"Firefox\" width=\"20\" height=\"20\" />\n <img style=\"float:right\" src=\"http://www.runoob.com/images/incompatible_ie2020.gif\" align=\"middle\" title=\"Internet Explorer\" alt=\"Internet Explorer\" width=\"20\" height=\"20\" />\n <h2 class=\"example\">实例</h2> \n <p>规定边框边缘之外 15 像素处的轮廓：</p> \n <div class=\"example_code notranslate\">\n   div\n  <br /> {\n  <br /> border:2px solid black;\n  <br /> outline:2px solid red;\n  <br /> outline-offset:15px;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss3_outline-offset\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>新的用户界面特性</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-appearance.html\">appearance</a></td> \n   <td>允许您使一个元素的外观像一个标准的用户界面元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-box-sizing.html\">box-sizing</a></td> \n   <td>允许你以适应区域而用某种方式定义某些元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-icon.html\">icon</a></td> \n   <td>为创作者提供了将元素设置为图标等价物的能力。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-nav-down.html\">nav-down</a></td> \n   <td>指定在何处使用箭头向下导航键时进行导航</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-nav-index.html\">nav-index</a></td> \n   <td>指定一个元素的Tab的顺序</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-nav-left.html\">nav-left</a></td> \n   <td>指定在何处使用左侧的箭头导航键进行导航</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-nav-right.html\">nav-right</a></td> \n   <td>指定在何处使用右侧的箭头导航键进行导航</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-nav-up.html\">nav-up</a></td> \n   <td>指定在何处使用箭头向上导航键时进行导航</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-outline-offset.html\">outline-offset</a></td> \n   <td>外轮廓修饰并绘制超出边框的边缘</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-resize.html\">resize</a></td> \n   <td>指定一个元素是否是由用户调整大小</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS3 用户界面|CSS3 用户界面|浏览器支持|CSS3 调整尺寸(Resizing)|实例|CSS3 方框大小调整(Box Sizing)|实例|CSS3 外形修饰（outline-offset ）|实例|新的用户界面特性|');
INSERT INTO `schoolcontent` VALUES ('119', '121', '<h1>响应式 Web 设计 - <span class=\"color_h1\">Viewport</span></h1> \n<hr /> \n<h2>什么是 Viewport?</h2> \n<p>viewport 是用户网页的可视区域。</p> \n<p>viewport 翻译为中文可以叫做&quot;视区&quot;。</p> \n<p>手机浏览器是把页面放在一个虚拟的&quot;窗口&quot;（viewport）中，通常这个虚拟的&quot;窗口&quot;（viewport）比屏幕宽，这样就不用把每个网页挤到很小的窗口中（这样会破坏没有针对手机浏览器优化的网页的布局），用户可以通过平移和缩放来看网页的不同部分。</p> \n<hr /> \n<h2>设置 Viewport</h2>\n<p>一个常用的针对移动网页优化过的页面的 viewport meta 标签大致如下：</p> \n<pre>\r\n\r\n</pre> \n<ul> \n <li>width：控制 viewport 的大小，可以指定的一个值，如果 600，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。</li>\n <li> height：和 width 相对应，指定高度。</li>\n <li> initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例。</li>\n <li> maximum-scale：允许用户缩放到的最大比例。</li>\n <li> minimum-scale：允许用户缩放到的最小比例。</li>\n <li> user-scalable：用户是否可以手动缩放。</li>\n</ul> \n<p>以下实例演示了使用viewport和没使用viewport在移动端上的效果：</p> \n<h3>实例1、没有添加 viewport：<a target=\"_blank\" href=\"http://www.runoob.com/try/demo_source/example_withoutviewport.htm\">点击查看</a></h3> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/img_viewport1.png\" /> \n<h3>实例2、添加 viewport：<a target=\"_blank\" href=\"http://www.runoob.com/try/demo_source/example_withviewport.htm\">点击查看</a></h3> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/img_viewport2.png\" /> \n<p>如果你在平板电脑或手机上访问，可以直接点击查看效果。</p>', null, '响应式 Web 设计 - Viewport|什么是 Viewport?|设置 Viewport|');
INSERT INTO `schoolcontent` VALUES ('120', '122', '<h1>响应式 Web 设计 - <span class=\"color_h1\">网格视图</span></h1> \n<hr /> \n<h2>什么是网格视图?</h2> \n<p>很多网页都是基于网格设计的，这说明网页是按列来布局的。</p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/viewgrid1.jpg\" /> \n<p>使用网格视图有助于我们设计网页。这让我们向网页添加元素变的更简单。</p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/viewgrid2.jpg\" /> \n<p> 响应式网格视图通常是 12 列，宽度为100%，在浏览器窗口大小调整时会自动伸缩。</p> \n<p><a href=\"http://www.runoob.com/try/demo_source/tryresponsive_grid.htm\" target=\"_blank\">响应式网格视图</a> </p>\n<hr />\n<h2>创建响应式网格视图</h2>\n<p>接下来我们来创建一个响应式网格视图。</p> \n<p>首先确保所有的 HTML 元素都有 <b>box-sizing</b> 属性且设置为 <b>border-box</b>。 </p> \n<p>确保边距和边框包含在元素的宽度和高度间。</p> \n<p>添加如下代码：</p> \n<pre>\r\n* {\r\n    box-sizing: border-box;\r\n}\r\n</pre> \n<p>查看更多 box-sizing 内容请点击：<a href=\"http://www.runoob.com/cssref/css3-pr-box-sizing.html\" target=\"_blank\">CSS3 box-sizing 属性 </a>。</p> \n<p>以下实例演示了简单的响应式网页，包含两列：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">.menu </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 25%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">float:</span>\n  <span class=\"highVAL\"> left;</span>\n  <br />}\n  <br /> \n  <span class=\"highELE\">.main </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 75%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">float:</span>\n  <span class=\"highVAL\"> left;</span>\n  <br />}\n  <br />\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_webpage\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<p> 以上实例包含两列。</p>\n<p> 12 列的网格系统可以更好的控制响应式网页。</p>\n<p> 首先我们可以计算每列的百分比: 100% / 12 列 = 8.33%。</p>\n<p> 在每列中指定 class， <b>class=&quot;col-&quot;</b> 用于定义每列有几个 span ：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">CSS:</h2> \n <div class=\"example_code notranslate cssHigh\"> \n  <span class=\"highELE\">.col-1 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 8.33%;</span>}\n  <br />\n  <span class=\"highELE\">.col-2 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 16.66%;</span>}\n  <br />\n  <span class=\"highELE\">.col-3 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 25%;</span>}\n  <br /> \n  <span class=\"highELE\">.col-4 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 33.33%;</span>}\n  <br />\n  <span class=\"highELE\">.col-5 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 41.66%;</span>}\n  <br />\n  <span class=\"highELE\">.col-6 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 50%;</span>}\n  <br /> \n  <span class=\"highELE\">.col-7 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 58.33%;</span>}\n  <br />\n  <span class=\"highELE\">.col-8 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 66.66%;</span>}\n  <br />\n  <span class=\"highELE\">.col-9 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 75%;</span>}\n  <br /> \n  <span class=\"highELE\">.col-10 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 83.33%;</span>}\n  <br />\n  <span class=\"highELE\">.col-11 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 91.66%;</span>}\n  <br />\n  <span class=\"highELE\">.col-12 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_cols\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p> 所有的列向左浮动，间距(padding) 为 15px： </p> \n<div class=\"example\"> \n <h2 class=\"example_head\">CSS:</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">[class*=&quot;col-&quot;] </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">float:</span>\n  <span class=\"highVAL\"> left;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">padding:</span>\n  <span class=\"highVAL\"> 15px;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">border:</span>\n  <span class=\"highVAL\"> 1px solid red;</span>\n  <br />}\n </div> \n</div> \n<p> 每一行使用 &lt;div&gt; 包裹。所有列数加起来应为 12：</p> \n<div class=\"example_code\"> \n <span class=\"highLT\">&lt;</span>\n <span class=\"highELE\">div</span> \n <span class=\"highATT\">class=</span>\n <span class=\"highVAL\">&quot;row&quot;</span>\n <span class=\"highGT\">&gt;</span>\n <br />&nbsp; \n <span class=\"highLT\">&lt;</span>\n <span class=\"highELE\">div</span> \n <span class=\"highATT\">class=</span>\n <span class=\"highVAL\">&quot;col-3&quot;</span>\n <span class=\"highGT\">&gt;</span>...\n <span class=\"highLT\">&lt;</span>\n <span class=\"highELE\">/div</span>\n <span class=\"highGT\">&gt;</span>\n <br />&nbsp; \n <span class=\"highLT\">&lt;</span>\n <span class=\"highELE\">div</span> \n <span class=\"highATT\">class=</span>\n <span class=\"highVAL\">&quot;col-9&quot;</span>\n <span class=\"highGT\">&gt;</span>...\n <span class=\"highLT\">&lt;</span>\n <span class=\"highELE\">/div</span>\n <span class=\"highGT\">&gt;</span>\n <br />\n <span class=\"highLT\">&lt;</span>\n <span class=\"highELE\">/div</span>\n <span class=\"highGT\">&gt;</span>\n</div> \n<p> 列中行为左浮动，并添加清除浮动： </p> \n<div class=\"example\"> \n <h2 class=\"example_head\">CSS:</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">.row:after </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">content:</span>\n  <span class=\"highVAL\"> &quot;&quot;;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">clear:</span>\n  <span class=\"highVAL\"> both;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">display:</span>\n  <span class=\"highVAL\"> block;</span>\n  <br />}\n </div> \n</div> \n<p>我们可以添加一些样式和颜色，让其更好看：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">html </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">font-family:</span>\n  <span class=\"highVAL\"> &quot;Lucida Sans&quot;, sans-serif;</span>\n  <br />}\n  <br /> \n  <span class=\"highELE\">.header </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-color:</span>\n  <span class=\"highVAL\"> #9933cc;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">color:</span>\n  <span class=\"highVAL\"> #ffffff;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">padding:</span>\n  <span class=\"highVAL\"> 15px;</span>\n  <br />}\n  <br />\n  <span class=\"highELE\">.menu ul </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">list-style-type:</span>\n  <span class=\"highVAL\"> none;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">margin:</span>\n  <span class=\"highVAL\"> 0;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">padding:</span>\n  <span class=\"highVAL\"> 0;</span>\n  <br />}\n  <br />\n  <span class=\"highELE\">.menu li </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">padding:</span>\n  <span class=\"highVAL\"> 8px;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">margin-bottom:</span>\n  <span class=\"highVAL\"> 7px;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-color :</span>\n  <span class=\"highVAL\">#33b5e5;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">color:</span>\n  <span class=\"highVAL\"> #ffffff;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">box-shadow:</span>\n  <span class=\"highVAL\"> 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);</span>\n  <br />}\n  <br />\n  <span class=\"highELE\">.menu li:hover </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-color:</span>\n  <span class=\"highVAL\"> #0099cc;</span>\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_styles\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, '响应式 Web 设计 - 网格视图|什么是网格视图?|创建响应式网格视图|实例|CSS:|CSS:|CSS:|实例|');
INSERT INTO `schoolcontent` VALUES ('121', '123', '<h1>响应式 Web 设计 - <span class=\"color_h1\">媒体查询</span></h1> \n<hr /> \n<p>媒体(media)查询在 CSS3 上有介绍：<a href=\"http://www.runoob.com/cssref/css3-pr-mediaquery.html\" target=\"_blank\">CSS3 @media 查询</a>。</p> \n<p>使用 @media 查询，你可以针对不同的媒体类型定义不同的样式。</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <p>如果浏览器窗口小于 500px, 背景将变为浅蓝色：</p> \n <div class=\"example_code notranslate cssHigh\"> \n  <span class=\"highELE\">@media only screen and (max-width: 500px) </span>{\n  <br />\n  <span class=\"highELE\">&nbsp;&nbsp;&nbsp; body </span>{\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-color:</span>\n  <span class=\"highVAL\"> lightblue;</span>\n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />}\n  <br />\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_mediaquery\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>添加断点</h2> \n<p>在先前的教程中我们使用行和列来制作网页，它是响应式的，但在小屏幕上并不能友好的展示。</p> \n<p>媒体查询可以帮我们解决这个问题。我们可以在设计稿的中间添加断点，不同的断点有不同的效果。</p> \n<h3>桌面设备</h3> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/rwd_desktop.png\" /> \n<h3>手机设备</h3> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/rwd_phone.png\" /> \n<p>使用媒体查询在 768px 添加断点：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <p>当屏幕 (浏览器窗口) 小于 768px, 每一列的宽度是 100%:</p> \n <div class=\"example_code notranslate cssHigh\"> \n  <span class=\"highCOM\">/* For desktop: */</span>\n  <br />\n  <span class=\"highELE\">.col-1 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 8.33%;</span>}\n  <br />\n  <span class=\"highELE\">.col-2 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 16.66%;</span>}\n  <br />\n  <span class=\"highELE\">.col-3 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 25%;</span>}\n  <br /> \n  <span class=\"highELE\">.col-4 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 33.33%;</span>}\n  <br />\n  <span class=\"highELE\">.col-5 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 41.66%;</span>}\n  <br />\n  <span class=\"highELE\">.col-6 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 50%;</span>}\n  <br /> \n  <span class=\"highELE\">.col-7 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 58.33%;</span>}\n  <br />\n  <span class=\"highELE\">.col-8 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 66.66%;</span>}\n  <br />\n  <span class=\"highELE\">.col-9 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 75%;</span>}\n  <br /> \n  <span class=\"highELE\">.col-10 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 83.33%;</span>}\n  <br />\n  <span class=\"highELE\">.col-11 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 91.66%;</span>}\n  <br />\n  <span class=\"highELE\">.col-12 </span>{\n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>}\n  <br />\n  <br />\n  <span class=\"highELE\">@media only screen and (max-width: 768px) </span>{\n  <br />\n  <span class=\"highELE\">&nbsp;&nbsp;&nbsp; <span class=\"highCOM\">/* For mobile phones: */</span><br />&nbsp;&nbsp;&nbsp; [class*=&quot;col-&quot;] {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span><br />&nbsp;&nbsp;&nbsp; }<br />}<br /></span>\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_breakpoints\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>为移动端优先设计</h2> \n<p>移动端优先意味着在设计桌面和其他设备时优先考虑移动端的设计。</p> \n<p>这就意味着我们必须对 CSS 做一些改变。</p> \n<p> 我们在屏幕小于 768px 进行样式修改，同样在屏幕宽度大于 768px 时也需要修改样式。以下是移动端优先实例：</p> \n<div class=\"example_code\"> \n <span class=\"highCOM\">/* 为移动端设计: */</span>\n <br />\n <span class=\"highELE\">[class*=&quot;col-&quot;] </span>{\n <br />&nbsp;&nbsp;&nbsp; \n <span class=\"highATT\">width:</span>\n <span class=\"highVAL\"> 100%;</span>\n <br />}\n <br />\n <span class=\"highELE\">@media only screen and (min-width: 768px) </span>{\n <br />\n <span class=\"highELE\">&nbsp;&nbsp;&nbsp; <span class=\"highCOM\">/* For desktop: */</span><br />&nbsp;&nbsp;&nbsp; .col-1 {<span class=\"highATT\">width:</span><span class=\"highVAL\"> 8.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-2 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 16.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-3 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-4 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 33.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-5 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 41.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-6 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 50%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-7 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 58.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-8 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 66.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-9 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-10 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 83.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-11 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 91.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-12 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}<br />}<br /></span>\n</div> \n<hr /> \n<h2>其他断点</h2> \n<p>你可以根据自己的需要添加断点。</p>\n<p>我们同样可以为平板设备和移动手机设备设置断点。</p> \n<h3>桌面设备</h3> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/rwd_desktop.png\" /> \n<h3>平板设备</h3> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/rwd_tablet.png\" /> \n<h3>手机设备</h3> \n<img src=\"http://www.runoob.com/wp-content/uploads/2015/06/rwd_phone.png\" /> \n<p> 在屏幕为 600px 时添加媒体查询，并设置新的样式（屏幕大于600px但小于768px）：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <p>注意两组类样式是相同的，但名称不同 (col- 和 col-m-):</p> \n <div class=\"example_code notranslate cssHigh\"> \n  <span class=\"highCOM\">/* For mobile phones: */</span>\n  <br />\n  <span class=\"highELE\">[class*=&quot;col-&quot;] </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />}\n  <br />\n  <span class=\"highELE\">@media only screen and (min-width: 600px) </span>{\n  <br />\n  <span class=\"highELE\">&nbsp;&nbsp;&nbsp; <span class=\"highCOM\">/* For tablets: */</span><br />&nbsp;&nbsp;&nbsp; .col-m-1 {<span class=\"highATT\">width:</span><span class=\"highVAL\"> 8.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-2 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 16.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-3 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-4 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 33.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-5 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 41.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-6 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 50%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-7 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 58.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-8 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 66.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-9 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-10 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 83.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-11 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 91.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-m-12 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}<br />}<br /><span class=\"highELE\">@media only screen and (min-width: 768px) </span>{<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; <span class=\"highCOM\">/* For desktop: */</span><br />&nbsp;&nbsp;&nbsp; .col-1 {<span class=\"highATT\">width:</span><span class=\"highVAL\"> 8.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-2 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 16.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-3 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 25%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-4 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 33.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-5 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 41.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-6 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 50%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-7 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 58.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-8 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 66.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-9 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 75%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-10 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 83.33%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-11 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 91.66%;</span>}<br /><span class=\"highELE\">&nbsp;&nbsp;&nbsp; .col-12 </span>{<span class=\"highATT\">width:</span><span class=\"highVAL\"> 100%;</span>}<br />}</span></span>\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_col-s\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p> 以上代码看起来很多余，但是他可以根据屏幕大小自动设置不同的样式，所以还是非常必要的。</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">HTML 实例</h2> \n <p>针对桌面设备:</p> \n <p>第一和第三部分跨越 3 列。中间部分跨域 6 列。</p> \n <p>针对平板设备:</p> \n <p>第一跨域 3列，第二部分跨越 9 列，第三部分跨域 12 列：</p> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;row&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;col-3 col-m-3&quot;</span>\n  <span class=\"highGT\">&gt;</span>...\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;col-6 col-m-9&quot;</span>\n  <span class=\"highGT\">&gt;</span>...\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;col-3 col-m-12&quot;</span>\n  <span class=\"highGT\">&gt;</span>...\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n</div> \n<hr /> \n<h2>方向：横屏/竖屏</h2> \n<p> 结合CSS媒体查询,可以创建适应不同设备的方向(横屏landscape、竖屏portrait等)的布局。 </p> \n<h3>语法：</h3> \n<pre>\r\norientation：portrait | landscape\r\n</pre> \n<ul>\n <li><strong> portrait：</strong>指定输出设备中的页面可见区域高度大于或等于宽度</li>\n <li><strong> landscape：</strong> 除portrait值情况外，都是landscape</li> \n</ul> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <p>如果是竖屏背景将是浅蓝色：</p> \n <div class=\"example_code\"> \n  <span class=\"highELE\">@media only screen and (orientation: landscape) </span>{\n  <br />\n  <span class=\"highELE\">&nbsp;&nbsp;&nbsp; body </span>{\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-color:</span>\n  <span class=\"highVAL\"> lightblue;</span>\n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_mediaquery_orientation\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, '响应式 Web 设计 - 媒体查询|实例|添加断点|实例|为移动端优先设计|其他断点|实例|HTML 实例|方向：横屏/竖屏|实例|');
INSERT INTO `schoolcontent` VALUES ('122', '124', '<h1>响应式 Web 设计 - <span class=\"color_h1\">图片</span></h1> .bg1 { width: 100%; height:400px; background-image:url(\'/wp-content/uploads/2015/06/img_flowers.jpg\'); background-repeat:no-repeat; background-size:contain; border:1px solid red; } .bg2 { width: 100%; height:400px; background-image:url(\'/wp-content/uploads/2015/06/img_flowers.jpg\'); background-size:100% 100%; border:1px solid red; } .bg3 { width: 100%; height:400px; background-image:url(\'/wp-content/uploads/2015/06/img_flowers.jpg\'); background-size:cover; border:1px solid red; } \n<hr /> \n<h2>使用 width 属性</h2> \n<p> 如果 width 属性设置为 100%，图片会根据上下范围实现响应式功能：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">img </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> auto;</span>\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p> 注意在以上实例中，图片会比它的原始图片大。我们可以使用 <strong>max-width</strong> 属性很好的解决这个问题。</p> \n<hr /> \n<h2>使用 max-width 属性</h2> \n<p> 如果 max-width 属性设置为 100%, 图片永远不会大于其原始大小： </p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">img </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">max-width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> auto;</span>\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>网页中添加图片</h2> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">img </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> auto;</span>\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>背景图片</h2>\n<p>背景图片可以响应调整大小或缩放。</p> \n<p>以下是三个不同的方法：</p> \n<p>1. 如果 background-size 属性设置为 &quot;contain&quot;, 背景图片将按比例自适应内容区域。图片保持其比例不变：</p> \n<div class=\"bg1\"></div> \n<p>这是 CSS 代码:</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> 400px;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-image:</span>\n  <span class=\"highVAL\"> url(\'img_flowers.jpg\');</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-repeat:</span>\n  <span class=\"highVAL\"> no-repeat;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-size:</span>\n  <span class=\"highVAL\"> contain;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">border:</span>\n  <span class=\"highVAL\"> 1px solid red;</span>\n  <br />}\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image_background1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> 2. 如果 background-size 属性设置为 &quot;100% 100%&quot; ，背景图片将延展覆盖整个区域：</p> \n<div class=\"bg2\"></div> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <p>这是 CSS 代码:</p> \n <div class=\"example_code\"> \n  <span class=\"highELE\">div </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> 400px;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-image:</span>\n  <span class=\"highVAL\"> url(\'img_flowers.jpg\');</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-size:</span>\n  <span class=\"highVAL\"> 100% 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">border:</span>\n  <span class=\"highVAL\"> 1px solid red;</span>\n  <br />}\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image_background2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> 3. 如果 background-size 属性设置为 &quot;cover&quot;，则会把背景图像扩展至足够大，以使背景图像完全覆盖背景区域。注意该属性保持了图片的比例因此 背景图像的某些部分无法显示在背景定位区域中。 </p> \n<div class=\"bg3\"></div> \n<p>这是 CSS 代码:</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code notranslate cssHigh\"> \n  <span class=\"highELE\">div </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> 400px;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-image:</span>\n  <span class=\"highVAL\"> url(\'img_flowers.jpg\');</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-size:</span>\n  <span class=\"highVAL\"> cover;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">border:</span>\n  <span class=\"highVAL\"> 1px solid red;</span>\n  <br />}\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image_background3\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>不同设备显示不同图片</h2> \n<p>大尺寸图片可以显示在大屏幕上，但在小屏幕上确不能很好显示。我们没有必要在小屏幕上去加载大图片，这样很影响加载速度。所以我们可以使用媒体查询，根据不同的设备显示不同的图片。</p> \n<p>以下大图片和小图片将显示在不同设备上：</p> \n<img style=\"max-width: 100%;height: auto\" src=\"http://www.runoob.com/wp-content/uploads/2015/06/img_flowers.jpg\" class=\"img-responsive\" /> \n<img style=\"max-width: 100%;height: auto\" src=\"http://www.runoob.com/wp-content/uploads/2015/06/img_smallflower.jpg\" class=\"img-responsive\" /> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code notranslate cssHigh\"> \n  <span class=\"highCOM\">/* For width smaller than 400px: */</span>\n  <br />\n  <span class=\"highELE\">body </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-image:</span>\n  <span class=\"highVAL\"> url(\'img_smallflower.jpg\');</span> \n  <br />}\n  <br />\n  <br />\n  <span class=\"highCOM\">/* For width 400px and larger: */</span>\n  <br />\n  <span class=\"highELE\">@media only screen and (min-width: 400px) </span>{\n  <br />\n  <span class=\"highELE\">&nbsp;&nbsp;&nbsp; body </span>{ \n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-image:</span>\n  <span class=\"highVAL\"> url(\'img_flowers.jpg\');</span> \n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />}\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image_mediaq\" target=\"_blank\">Try it yourself &raquo;</a> \n</div> \n<p> 你可以使用媒体查询的 min-device-width 替代 min-width 属性，它将检测的是设备宽度而不是浏览器宽度。浏览器大小重置时，图片大小不会改变。</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highCOM\">/* 设备小于 400px: */</span>\n  <br />\n  <span class=\"highELE\">body </span>{\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-image:</span>\n  <span class=\"highVAL\"> url(\'img_smallflower.jpg\');</span> \n  <br />}\n  <br />\n  <br />\n  <span class=\"highCOM\">/* 设备大于 400px (也等于): */</span>\n  <br />\n  <span class=\"highELE\">@media only screen and (min-device-width: 400px) </span>{\n  <br />\n  <span class=\"highELE\">&nbsp;&nbsp;&nbsp; body </span>{ \n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">background-image:</span>\n  <span class=\"highVAL\"> url(\'img_flowers.jpg\');</span> \n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />}\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image_mediaq2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>HTML5 &lt;picture&gt; 元素</h2> \n<p>HTML5 的 <code>&lt;picture&gt;</code> 元素可以设置多张图片。</p> \n<h3>浏览器支持</h3> \n<table class=\"browserref\"> \n <tbody>\n  <tr> \n   <th style=\"width:15%;font-size:16px;text-align:left\">元素</th> \n   <th style=\"width:15%\" class=\"bsIE\" title=\"Internet Explorer\"></th> \n   <th style=\"width:17%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:18%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:18%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:17%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">&lt;picture&gt;</td> \n   <td><span class=\"deprecated\">不支持</span></td> \n   <td>38.0</td> \n   <td>38.0</td> \n   <td><span class=\"deprecated\">不支持</span></td> \n   <td>25.0</td> \n  </tr> \n </tbody>\n</table> \n<p> <code>&lt;picture&gt;</code> 元素类似于 <code>&lt;video&gt;</code> 和 <code>&lt;audio&gt;</code> 元素。可以设备不同的资源，第一个设置的资源为首选使用的：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">picture</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">source</span> \n  <span class=\"highATT\">srcset=</span>\n  <span class=\"highVAL\">&quot;img_smallflower.jpg&quot;</span> \n  <span class=\"highATT\">media=</span>\n  <span class=\"highVAL\">&quot;(max-width: 400px)&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">source</span> \n  <span class=\"highATT\">srcset=</span>\n  <span class=\"highVAL\">&quot;img_flowers.jpg&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">img</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;img_flowers.jpg&quot;</span> \n  <span class=\"highATT\">alt=</span>\n  <span class=\"highVAL\">&quot;Flowers&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/picture</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_image_picture\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> <code>srcset</code> 属性的必须的，定义了图片资源。</p> \n<p> <code>media</code> 属性是可选的，可以在媒体查询的 <a href=\"http://www.runoob.com/cssref/css3-pr-mediaquery.html\">CSS @media 规则</a> 查看详情。</p> \n<p>对于不支持 <code>&lt;picture&gt;</code> 元素的浏览器你也可以定义 <code>&lt;img&gt;</code> 元素来替代。</p>', null, '响应式 Web 设计 - 图片|使用 width 属性|实例|使用 max-width 属性|实例|网页中添加图片|实例|背景图片|实例|实例|实例|不同设备显示不同图片|实例|实例|HTML5 <picture> 元素|实例|');
INSERT INTO `schoolcontent` VALUES ('123', '125', '<h1>响应式 Web 设计 - 视频(Video)</h1> \n<hr /> \n<h2>使用 width 属性</h2> \n<p>如果 width 属性设置为 100%，视频播放器会根据屏幕大小自动调整比例：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">video </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> auto;</span>\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_video2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p> 注意在以上实例中，视频播放器根据屏幕大小自动调整比例，且可以比原始尺寸大。更多情况下我们可以使用 max-width 属性来替代。 </p> \n<hr /> \n<h2>使用 max-width 属性</h2> \n<p>如果 max-width 属性设置为 100%, 视频播放器会根据屏幕自动调整比例，但不会超过其原始大小：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">video </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">max-width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> auto;</span>\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_video\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>在网页中添加视频</h2>\n<p>我们可以在网页中添加视频。以下实例视频根据 div 区域大小自动调整并占满整个 div 区域：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">video </span>{\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">width:</span>\n  <span class=\"highVAL\"> 100%;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highATT\">height:</span>\n  <span class=\"highVAL\"> auto;</span>\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryresponsive_video3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, '响应式 Web 设计 - 视频(Video)|使用 width 属性|实例|使用 max-width 属性|实例|在网页中添加视频|实例|');
INSERT INTO `schoolcontent` VALUES ('124', '126', '<h1>响应式 Web 设计 - 框架</h1> \n<p>本章节为大家介绍响应式 Web 设计框架 Bootstrap。</p> \n<p>Bootstrap，来自 Twitter，是目前最受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code notranslate htmlHigh\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span> \n  <span class=\"highATT\">lang=</span>\n  <span class=\"highVAL\">&quot;en&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">head</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">title</span>\n  <span class=\"highGT\">&gt;</span>Bootstrap Example\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/title</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">meta</span> \n  <span class=\"highATT\">charset=</span>\n  <span class=\"highVAL\">&quot;utf-8&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">meta</span> \n  <span class=\"highATT\">name=</span>\n  <span class=\"highVAL\">&quot;viewport&quot;</span> \n  <span class=\"highATT\">content=</span>\n  <span class=\"highVAL\">&quot;width=device-width, initial-scale=1&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">link</span> \n  <span class=\"highATT\">rel=</span>\n  <span class=\"highVAL\">&quot;stylesheet&quot;</span> \n  <span class=\"highATT\">href=</span>\n  <span class=\"highVAL\">&quot;http://apps.bdimg.com/libs/bootstrap/3.3.4/css/bootstrap.min.css&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;http://apps.bdimg.com/libs/jquery/2.1.4/jquery.min.js&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;http://apps.bdimg.com/libs/bootstrap/3.3.4/js/bootstrap.min.js&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/head</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;container&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;jumbotron&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>我的第一个 Bootstrap 页面\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;row&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;col-sm-4&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;col-sm-4&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">div</span> \n  <span class=\"highATT\">class=</span>\n  <span class=\"highVAL\">&quot;col-sm-4&quot;</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp;&nbsp;&nbsp; ...\n  <br />&nbsp;&nbsp;&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />&nbsp; \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/div</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/html</span>\n  <span class=\"highGT\">&gt;</span>\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/demo_source/tryresponsive_bootstrap.htm\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>更多内容，请查看我们的 <a href=\"http://www.runoob.com/bootstrap/bootstrap-tutorial.html\">Bootstrap 教材</a>。</p>', null, '响应式 Web 设计 - 框架|实例|');
INSERT INTO `schoolcontent` VALUES ('125', '127', '<h1>CSS <span class=\"color-h1\">参考手册</span> </h1> \n<hr /> \n<p class=\"intro\"><img style=\"float:left;margin-right:6px\" alt=\"Note\" src=\"http://www.runoob.com/images/icon_small_star.gif\" /> 菜鸟教程的 CSS 参考手册在所有主流浏览器中测试通过.</p> \n<hr /> \n<h2>CSS 属性</h2> \n<h3>CSS 属性组：</h3> \n<table class=\"notranslate\">\n <tbody>\n  <tr> \n   <td> \n    <ul style=\"margin-top:0px;margin-bottom:0px\"> \n     <li><a href=\"#animation\">动画</a></li> \n     <li><a href=\"#background\">背景</a></li> \n     <li><a href=\"#border\">边框和轮廓</a></li> \n     <li><a href=\"#box\">框</a></li> \n     <li><a href=\"#color\">颜色</a></li> \n     <li><a href=\"#contentPM\">内容页的媒体属性</a></li> \n     <li><a href=\"#dimension\">尺寸</a></li> \n     <li><a href=\"#flexbox\">盒子模型(新)</a></li> \n     <li><a href=\"#flexbox_old\">盒子模型(旧)</a></li> \n     <li><a href=\"#font\">字体</a></li> \n     <li><a href=\"#generatedcontent\">内容生成</a></li> \n    </ul> </td> \n   <td> \n    <ul style=\"margin-top:0px;margin-bottom:0px\"> \n     <li><a href=\"#grid\">网格</a></li> \n     <li><a href=\"#hyperlink\">超链接</a></li> \n     <li><a href=\"#linebox\">线框</a></li> \n     <li><a href=\"#list\">列表</a></li> \n     <li><a href=\"#margin\">外边距</a></li> \n     <li><a href=\"#marquee\">字幕</a></li> \n     <li><a href=\"#multicol\">多列</a></li> \n     <li><a href=\"#padding\">内边距</a></li> \n     <li><a href=\"#pagemedia\">页面媒体</a></li> \n     <li><a href=\"#positioning\">定位</a></li> \n    </ul> </td> \n   <td> \n    <ul style=\"margin-top:0px;margin-bottom:0px\"> \n     <li><a href=\"#print\">分页</a></li> \n     <li><a href=\"#ruby\">Ruby</a></li> \n     <li><a href=\"#speech\">语音</a></li> \n     <li><a href=\"#table\">表格</a></li> \n     <li><a href=\"#text\">文本</a></li> \n     <li><a href=\"#3Dtransform\">2D/3D 转换</a></li> \n     <li><a href=\"#transition\">过渡</a></li> \n     <li><a href=\"#userinterface\">用户界面</a></li> \n    </ul> </td> \n  </tr>\n </tbody>\n</table> \n<p>&quot;CSS&quot; 列指示属性是在哪个 CSS 版本中定义的 (CSS1, CSS2, 或者 CSS3).</p> \n<h2><a id=\"animation\">动画属性</a></h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%\">属性</th> \n   <th style=\"width:67%\">描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation-keyframes.html\">@keyframes</a></td> \n   <td>定义一个动画,@keyframes定义的动画名称用来被animation-name所使用。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation.html\">animation</a></td> \n   <td>复合属性。检索或设置对象所应用的动画特效。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation-name.html\">animation-name</a></td> \n   <td>检索或设置对象所应用的动画名称 ,必须与规则@keyframes配合使用，因为动画名称由@keyframes定义</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation-duration.html\">animation-duration</a></td> \n   <td>检索或设置对象动画的持续时间</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation-timing-function.html\">animation-timing-function</a></td> \n   <td>检索或设置对象动画的过渡类型</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation-delay.html\">animation-delay</a></td> \n   <td>检索或设置对象动画的延迟时间</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation-iteration-count.html\">animation-iteration-count</a></td> \n   <td>检索或设置对象动画的循环次数</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation-direction.html\">animation-direction</a></td> \n   <td>检索或设置对象动画在循环中是否反向运动</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-animation-play-state.html\">animation-play-state</a></td> \n   <td>检索或设置对象动画的状态</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"background\">背景属性</a></h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%\">属性</th> \n   <th style=\"width:67%\">描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-background.html\">background</a></td> \n   <td>复合属性。设置对象的背景特性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-background-attachment.html\">background-attachment</a></td> \n   <td>设置或检索背景图像是随对象内容滚动还是固定的。必须先指定background-image属性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-background-color.html\">background-color</a></td> \n   <td>设置或检索对象的背景颜色。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-background-image.html\">background-image</a></td> \n   <td>设置或检索对象的背景图像。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-background-position.html\">background-position</a></td> \n   <td>设置或检索对象的背景图像位置。必须先指定background-image属性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-background-repeat.html\">background-repeat</a></td> \n   <td>设置或检索对象的背景图像如何铺排填充。必须先指定background-image属性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-background-clip.html\">background-clip</a></td> \n   <td>指定对象的背景图像向外裁剪的区域。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-background-origin.html\">background-origin</a></td> \n   <td>S设置或检索对象的背景图像计算background-position时的参考原点(位置)。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-background-size.html\">background-size</a></td> \n   <td>检索或设置对象的背景图像的尺寸大小。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"border\">边框(Border) 和 轮廓(Outline) 属性</a></h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%\">属性</th> \n   <th style=\"width:67%\">描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border.html\">border</a></td> \n   <td>复合属性。设置对象边框的特性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-bottom.html\">border-bottom</a></td> \n   <td>复合属性。设置对象底部边框的特性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-bottom-color.html\">border-bottom-color</a></td> \n   <td>设置或检索对象的底部边框颜色。</td> \n   <td>1&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-bottom-style.html\">border-bottom-style</a></td> \n   <td>设置或检索对象的底部边框样式。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-bottom-width.html\">border-bottom-width</a></td> \n   <td>设置或检索对象的底部边框宽度。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-color.html\">border-color</a></td> \n   <td>置或检索对象的边框颜色。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-left.html\">border-left</a></td> \n   <td>复合属性。设置对象左边边框的特性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-left-color.html\">border-left-color</a></td> \n   <td>设置或检索对象的左边边框颜色。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-left-style.html\">border-left-style</a></td> \n   <td>设置或检索对象的左边边框样式。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-left-width.html\">border-left-width</a></td> \n   <td>设置或检索对象的左边边框宽度。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-right.html\">border-right</a></td> \n   <td>复合属性。设置对象右边边框的特性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-right-color.html\">border-right-color</a></td> \n   <td>设置或检索对象的右边边框颜色。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-right-style.html\">border-right-style</a></td> \n   <td>设置或检索对象的右边边框样式。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-right-width.html\">border-right-width</a></td> \n   <td>设置或检索对象的右边边框宽度。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-style.html\">border-style</a></td> \n   <td>设置或检索对象的边框样式。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-top.html\">border-top</a></td> \n   <td>复合属性。设置对象顶部边框的特性。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-top-color.html\">border-top-color</a></td> \n   <td>设置或检索对象的顶部边框颜色</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-top-style.html\">border-top-style</a></td> \n   <td>设置或检索对象的顶部边框样式。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-top-width.html\">border-top-width</a></td> \n   <td>设置或检索对象的顶部边框宽度。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-width.html\">border-width</a></td> \n   <td>设置或检索对象的边框宽度。</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-outline.html\">outline</a></td> \n   <td>复合属性。设置或检索对象外的线条轮廓。</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-outline-color.html\">outline-color</a></td> \n   <td>设置或检索对象外的线条轮廓的颜色。</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-outline-style.html\">outline-style</a></td> \n   <td>设置或检索对象外的线条轮廓的样式。</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-outline-width.html\">outline-width</a></td> \n   <td>设置或检索对象外的线条轮廓的宽度。</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-bottom-left-radius.html\">border-bottom-left-radius</a></td> \n   <td>设置或检索对象的左下角圆角边框。提供2个参数，2个参数以空格分隔，每个参数允许设置1个参数值，第1个参数表示水平半径，第2个参数表示垂直半径，如第2个参数省略，则默认等于第1个参数</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-bottom-right-radius.html\">border-bottom-right-radius</a></td> \n   <td>设置或检索对象的右下角圆角边框。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-image.html\">border-image</a></td> \n   <td>设置或检索对象的边框样式使用图像来填充。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-image-outset.html\">border-image-outset</a></td> \n   <td>规定边框图像超过边框的量。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-image-repeat.html\">border-image-repeat</a></td> \n   <td>规定图像边框是否应该被重复（repeated）、拉伸（stretched）或铺满（rounded）。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-image-slice.html\">border-image-slice</a></td> \n   <td>规定图像边框的向内偏移。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-image-source.html\">border-image-source</a></td> \n   <td>规定要使用的图像，代替 border-style 属性中设置的边框样式。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-image-width.html\">border-image-width</a></td> \n   <td>规定图像边框的宽度。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-radius.html\">border-radius</a></td> \n   <td>设置或检索对象使用圆角边框。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-top-left-radius.html\">border-top-left-radius</a></td> \n   <td>定义左上角边框的形状。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-top-right-radius.html\">border-top-right-radius</a></td> \n   <td>定义右下角边框的形状。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>box-decoration-break</td> \n   <td>规定行内元素被折行</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-shadow.html\">box-shadow</a></td> \n   <td>向方框添加一个或多个阴影。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"box\">盒子(Box) 属性</a></h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%\">属性</th> \n   <th style=\"width:67%\">描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-overflow-x.html\">overflow-x</a></td> \n   <td>如果内容溢出了元素内容区域，是否对内容的左/右边缘进行裁剪。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-overflow-y.html\">overflow-y</a></td> \n   <td>如果内容溢出了元素内容区域，是否对内容的上/下边缘进行裁剪。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-overflow-style.html\">overflow-style</a></td> \n   <td>规定溢出元素的首选滚动方法。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-rotation.html\">rotation</a></td> \n   <td>围绕由 rotation-point 属性定义的点对元素进行旋转。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-rotation-point.html\">rotation-point</a></td> \n   <td>定义距离上左边框边缘的偏移点。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"color\">颜色(Color) 属性</a></h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%\">属性</th> \n   <th style=\"width:67%\">描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td>color-profile</td> \n   <td>允许使用源的颜色配置文件的默认以外的规范</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-opacity.html\">opacity</a></td> \n   <td>设置一个元素的透明度级别</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>rendering-intent</td> \n   <td>允许超过默认颜色配置文件渲染意向的其他规范</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"padding\">内边距(Padding) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding.html\">padding</a></td> \n   <td>在一个声明中设置所有填充属性</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding-bottom.html\">padding-bottom</a></td> \n   <td>设置元素的底填充</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding-left.html\">padding-left</a></td> \n   <td>设置元素的左填充</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding-right.html\">padding-right</a></td> \n   <td>设置元素的右填充</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding-top.html\">padding-top</a></td> \n   <td>设置元素的顶部填充</td> \n   <td>1</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"contentPM\">媒体页面内容属性</a></h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td>bookmark-label</td> \n   <td>指定书签的标签</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>bookmark-level</td> \n   <td>指定了书签级别</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>bookmark-target</td> \n   <td>指定了书签链接的目标</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>float-offset</td> \n   <td>在相反的方向推动浮动元素，他们一直具有浮动</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>hyphenate-after</td> \n   <td>指定一个断字的单词断字字符后的最少字符数</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>hyphenate-before</td> \n   <td>指定一个断字的单词断字字符前的最少字符数</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>hyphenate-character</td> \n   <td>指定了当一个断字发生时，要显示的字符串</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>hyphenate-lines</td> \n   <td>表示连续断字的行在元素的最大数目</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>hyphenate-resource</td> \n   <td>外部资源指定一个逗号分隔的列表，可以帮助确定浏览器的断字点</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>hyphens</td> \n   <td>设置如何分割单词以改善该段的布局</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>image-resolution</td> \n   <td>指定了正确的图像分辨率</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>marks</td> \n   <td>将crop and/or cross标志添加到文档</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>string-set</td> \n   <td>&nbsp;</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"dimension\">尺寸(Dimension) 属性</a></h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th style=\"width:28%\">属性</th> \n   <th style=\"width:67%\">描述</th> \n   <th style=\"width:5%\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-height.html\">height</a></td> \n   <td>设置元素的高度</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-max-height.html\">max-height</a></td> \n   <td>设置元素的最大高度</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-max-width.html\">max-width</a></td> \n   <td>设置元素的最大宽度</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-min-height.html\">min-height</a></td> \n   <td>设置元素的最小高度</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-min-width.html\">min-width</a></td> \n   <td>设置元素的最小宽度</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-width.html\">width</a></td> \n   <td> 设置元素的宽度</td> \n   <td>1</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"flexbox\">弹性盒子模型（Flexible Box） 属性(新)</a></h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-flex.html\">flex</a></td> \n   <td>复合属性。设置或检索弹性盒模型对象的子元素如何分配空间。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-flex-grow.html\">flex-grow</a></td> \n   <td>设置或检索弹性盒的扩展比率。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-flex-shrink.html\">flex-shrink</a></td> \n   <td>设置或检索弹性盒的收缩比率。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-flex-basis.html\">flex-basis</a></td> \n   <td>设置或检索弹性盒伸缩基准值。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-flex-flow.html\">flex-flow</a></td> \n   <td>复合属性。设置或检索弹性盒模型对象的子元素排列方式。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-flex-direction.html\">flex-direction</a></td> \n   <td>该属性通过定义flex容器的主轴方向来决定felx子项在flex容器中的位置。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-flex-wrap.html\">flex-wrap</a></td> \n   <td>该属性控制flex容器是单行或者多行，同时横轴的方向决定了新行堆叠的方向。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-align-content.html\">align-content</a></td> \n   <td>在弹性容器内的各项没有占用交叉轴上所有可用的空间时对齐容器内的各项（垂直）。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-align-items.html\">align-items</a></td> \n   <td>定义flex子项在flex容器的当前行的侧轴（纵轴）方向上的对齐方式。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-align-self.html\">align-self</a></td> \n   <td>定义flex子项单独在侧轴（纵轴）方向上的对齐方式。 </td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-justify-content.html\">justify-content</a></td> \n   <td>设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"http://www.runoob.com/cssref/css3-pr-order.html\">order</a></td> \n   <td>设置或检索弹性盒模型对象的子元素出现的順序。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"flexbox_old\">弹性盒子模型（Flexible Box） 属性(旧)</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-align.html\">box-align</a></td> \n   <td>指定如何对齐一个框的子元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-direction.html\">box-direction</a></td> \n   <td>指定在哪个方向，显示一个框的子元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-flex.html\">box-flex</a></td> \n   <td>指定一个框的子元素是否是灵活的或固定的大小</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-flex-group.html\">box-flex-group</a></td> \n   <td>指派灵活的元素到Flex组</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-lines.html\">box-lines</a></td> \n   <td>每当它在父框的空间运行时，是否指定将再上一个新的行列</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-ordinal-group.html\">box-ordinal-group</a></td> \n   <td>指定一个框的子元素的显示顺序</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-orient.html\">box-orient</a></td> \n   <td>指定一个框的子元素是否在水平或垂直方向应铺设</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-pack.html\">box-pack</a></td> \n   <td>指定横向盒在垂直框的水平位置和垂直位置</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"font\">字体（Font） 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-font.html\">font</a></td> \n   <td>在一个声明中设置所有字体属性</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-font-family.html\">font-family</a></td> \n   <td>规定文本的字体系列</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-font-size.html\">font-size</a></td> \n   <td>规定文本的字体尺寸</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-font-style.html\">font-style</a></td> \n   <td>规定文本的字体样式</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-font-variant.html\">font-variant</a></td> \n   <td>规定文本的字体样式</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-weight.html\">font-weight</a></td> \n   <td>规定字体的粗细</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-font-face-rule.html\">@font-face</a></td> \n   <td>一个规则，允许网站下载并使用其他超过&quot;Web- safe&quot;字体的字体</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-font-size-adjust.html\">font-size-adjust</a></td> \n   <td>为元素规定 aspect 值</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-font-stretch.html\">font-stretch</a></td> \n   <td>收缩或拉伸当前的字体系列</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"generatedcontent\">内容生成属性(Generated Content Properties)</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-gen-content.html\">content</a></td> \n   <td>与 :before 以及 :after 伪元素配合使用，来插入生成内容</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-gen-counter-increment.html\">counter-increment</a></td> \n   <td>递增或递减一个或多个计数器</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-gen-counter-reset.html\">counter-reset</a></td> \n   <td>创建或重置一个或多个计数器</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-gen-quotes.html\">quotes</a></td> \n   <td>设置嵌套引用的引号类型</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>crop</td> \n   <td>允许replaced元素只是作为一个对象代替整个对象的矩形区域</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>move-to</td> \n   <td>Causes an element to be removed from the flow and reinserted at a later point in the document</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>page-policy</td> \n   <td>判定基于页面的给定元素的适用于计数器的字符串值</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"grid\">网格（Grid） 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-grid-columns.html\">grid-columns</a></td> \n   <td>指定在网格中每列的宽度</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-grid-rows.html\">grid-rows</a></td> \n   <td>指定在网格中每列的高度</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"hyperlink\">超链接(Hyperlink) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-target.html\">target</a></td> \n   <td>简写属性设置target-name, target-new,和target-position属性</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-target-name.html\">target-name</a></td> \n   <td>指定在何处打开链接（目标位置）</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-target-new.html\">target-new</a></td> \n   <td>指定是否有新的目标链接打开一个新窗口或在现有窗口打开新标签</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-target-position.html\">target-position</a></td> \n   <td>指定应该放置新的目标链接的位置</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table>  \n<h2><a id=\"linebox\">线框(Linebox) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td>alignment-adjust</td> \n   <td>允许更精确的元素的对齐方式</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>alignment-baseline</td> \n   <td>其父级指定的内联级别的元素如何对齐</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>baseline-shift</td> \n   <td>允许重新定位相对于dominant-baseline的dominant-baseline</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>dominant-baseline</td> \n   <td>指定scaled-baseline-table</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>drop-initial-after-adjust</td> \n   <td>设置下拉的主要连接点的初始对齐点</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>drop-initial-after-align</td> \n   <td>校准行内的初始行的设置就是具有首字母的框使用初级连接点</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>drop-initial-before-adjust</td> \n   <td>设置下拉的辅助连接点的初始对齐点</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>drop-initial-before-align</td> \n   <td>校准行内的初始行的设置就是具有首字母的框使用辅助连接点</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>drop-initial-size</td> \n   <td>控制局部的首字母下沉</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>drop-initial-value</td> \n   <td>激活一个下拉式的初步效果</td> \n   <td>3&nbsp;</td> \n  </tr> \n  <tr> \n   <td>inline-box-align</td> \n   <td>设置一个多行的内联块内的行具有前一个和后一个内联元素的对齐</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>line-stacking</td> \n   <td>一个速记属性设置line-stacking-strategy, line-stacking-ruby,和line-stacking-shift属性</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>line-stacking-ruby</td> \n   <td>设置包含Ruby注释元素的行对于块元素的堆叠方法</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>line-stacking-shift</td> \n   <td>设置base-shift行中块元素包含元素的堆叠方法</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>line-stacking-strategy</td> \n   <td>设置内部包含块元素的堆叠线框的堆叠方法</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>text-height</td> \n   <td>行内框的文本内容区域设置block-progression维数</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"list\">列表(List) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-list-style.html\">list-style</a></td> \n   <td>在一个声明中设置所有的列表属性</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-list-style-image.html\">list-style-image</a></td> \n   <td>将图象设置为列表项标记</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-list-style-position.html\">list-style-position</a></td> \n   <td>设置列表项标记的放置位置</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-list-style-type.html\">list-style-type</a></td> \n   <td>设置列表项标记的类型</td> \n   <td>1</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"margin\">外边距(Margin) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin.html\">margin</a></td> \n   <td>在一个声明中设置所有外边距属性</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin-bottom.html\">margin-bottom</a></td> \n   <td>设置元素的下外边距</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin-left.html\">margin-left</a></td> \n   <td>设置元素的左外边距</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin-right.html\">margin-right</a></td> \n   <td>设置元素的右外边距</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin-top.html\">margin-top</a></td> \n   <td>设置元素的上外边距</td> \n   <td>1</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"marquee\">字幕(Marquee) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td>marquee-direction</td> \n   <td>设置内容移动的方向</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>marquee-play-count</td> \n   <td>设置内容移动多少次</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>marquee-speed</td> \n   <td>设置内容滚动的速度有多快</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>marquee-style</td> \n   <td>设置内容移动的样式</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"multicol\">多列(Multi-column) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-count.html\">column-count</a></td> \n   <td>指定元素应该分为的列数</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-fill.html\">column-fill</a></td> \n   <td>指定如何填充列</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-gap.html\">column-gap</a></td> \n   <td>指定列之间的差距</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-rule.html\">column-rule</a></td> \n   <td>对于设置所有column-rule-*属性的简写属性</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-rule-color.html\">column-rule-color</a></td> \n   <td>指定列之间的颜色规则</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-rule-style.html\">column-rule-style</a></td> \n   <td>指定列之间的样式规则</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-rule-width.html\">column-rule-width</a></td> \n   <td>指定列之间的宽度规则</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-span.html\">column-span</a></td> \n   <td>指定元素应该跨越多少列</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-width.html\">column-width</a></td> \n   <td>指定列的宽度</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-columns.html\">columns</a></td> \n   <td>缩写属性设置列宽和列数</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"pagemedia\">页面媒体(Paged Media) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">思念</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td>fit</td> \n   <td>如果其宽度和高度属性都不是auto给出一个提示，如何大规模替换元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>fit-position</td> \n   <td>判定方框内对象的对齐方式</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>image-orientation</td> \n   <td>指定用户代理适用于图像中的向右或顺时针方向的旋转</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>page</td> \n   <td>指定一个元素应显示的页面的特定类型</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>size</td> \n   <td>指定含有BOX的页面内容的大小和方位</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"positioning\">定位（Positioning） 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-bottom.html\">bottom</a></td> \n   <td>设置定位元素下外边距边界与其包含块下边界之间的偏移</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-class-clear.html\">clear</a></td> \n   <td>规定元素的哪一侧不允许其他浮动元素</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-clip.html\">clip</a></td> \n   <td>剪裁绝对定位元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-class-cursor.html\">cursor</a></td> \n   <td>规定要显示的光标的类型（形状）</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-class-display.html\">display</a></td> \n   <td>规定元素应该生成的框的类型</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-class-float.html\">float</a></td> \n   <td>规定框是否应该浮动</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-left.html\">left</a></td> \n   <td>设置定位元素左外边距边界与其包含块左边界之间的偏移</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-overflow.html\">overflow</a><br /> </td> \n   <td>规定当内容溢出元素框时发生的事情</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-class-position.html\">position</a></td> \n   <td>规定元素的定位类型</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-right.html\">right</a></td> \n   <td>设置定位元素右外边距边界与其包含块右边界之间的偏移</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-top.html\">top</a></td> \n   <td>设置定位元素的上外边距边界与其包含块上边界之间的偏移</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-class-visibility.html\">visibility</a></td> \n   <td>规定元素是否可见</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-z-index.html\">z-index</a></td> \n   <td>设置元素的堆叠顺序</td> \n   <td>2</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"print\">分页（Print） 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td>orphans</td> \n   <td>设置当元素内部发生分页时必须在页面底部保留的最少行数</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-print-pageba.html\">page-break-after</a></td> \n   <td>设置元素后的分页行为</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-print-pagebb.html\">page-break-before</a></td> \n   <td>设置元素前的分页行为</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-print-pagebi.html\">page-break-inside</a></td> \n   <td>设置元素内部的分页行为</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>widows</td> \n   <td>设置当元素内部发生分页时必须在页面顶部保留的最少行数</td> \n   <td>2</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"ruby\">Ruby 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td>ruby-align</td> \n   <td>控制Ruby文本和Ruby基础内容相对彼此的文本对齐方式</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>ruby-overhang</td> \n   <td>当Ruby文本超过Ruby的基础宽，确定ruby文本是否允许局部悬置任意相邻的文本，除了自己的基础</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>ruby-position</td> \n   <td>它的base控制Ruby文本的位置</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>ruby-span</td> \n   <td>控制annotation 元素的跨越行为</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"speech\">语音（Speech） 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td>mark</td> \n   <td>缩写属性设置mark-before和mark-after属性</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>mark-after</td> \n   <td>允许命名的标记连接到音频流</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>mark-before</td> \n   <td>允许命名的标记连接到音频流</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>phonemes</td> \n   <td>指定包含文本的相应元素中的一个音标发音</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>rest</td> \n   <td>一个缩写属性设置rest-before和rest-after属性</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>rest-after</td> \n   <td>一个元素的内容讲完之后，指定要休息一下或遵守韵律边界</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>rest-before</td> \n   <td>一个元素的内容讲完之前，指定要休息一下或遵守韵律边界</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>voice-balance</td> \n   <td>指定了左，右声道之间的平衡</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>voice-duration</td> \n   <td>指定应采取呈现所选元素的内容的长度</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>voice-pitch</td> \n   <td>指定平均说话的声音的音调（频率）</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>voice-pitch-range</td> \n   <td>指定平均间距的变化</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>voice-rate</td> \n   <td>控制语速</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>voice-stress</td> \n   <td>指示着重力度</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>voice-volume</td> \n   <td>语音合成是指波形输出幅度</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"table\">表格（Table） 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-tab-border-collapse.html\">border-collapse</a></td> \n   <td>规定是否合并表格边框</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-tab-border-spacing.html\">border-spacing</a></td> \n   <td>规定相邻单元格边框之间的距离</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-tab-caption-side.html\">caption-side</a></td> \n   <td>规定表格标题的位置</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-tab-empty-cells.html\">empty-cells</a></td> \n   <td>规定是否显示表格中的空单元格上的边框和背景</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-tab-table-layout.html\">table-layout</a></td> \n   <td>设置用于表格的布局算法</td> \n   <td>2</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"text\">文本（Text） 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-color.html\">color</a></td> \n   <td>设置文本的颜色</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-direction.html\">direction</a></td> \n   <td>规定文本的方向 / 书写方向</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-letter-spacing.html\">letter-spacing</a></td> \n   <td>设置字符间距</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-line-height.html\">line-height</a></td> \n   <td>设置行高</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-text-align.html\">text-align</a></td> \n   <td>规定文本的水平对齐方式</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-text-decoration.html\">text-decoration</a></td> \n   <td>规定添加到文本的装饰效果</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-text-indent.html\">text-indent</a></td> \n   <td>规定文本块首行的缩进</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-text-transform.html\">text-transform</a></td> \n   <td>控制文本的大小写</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td>unicode-bidi</td> \n   <td>&nbsp;</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-vertical-align.html\">vertical-align</a></td> \n   <td>设置元素的垂直对齐方式</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-white-space.html\">white-space</a></td> \n   <td>设置怎样给一元素控件留白</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-word-spacing.html\">word-spacing</a></td> \n   <td>设置单词间距</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-hanging-punctuation.html\">hanging-punctuation</a></td> \n   <td>指定一个标点符号是否可能超出行框</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-punctuation-trim.html\">punctuation-trim</a></td> \n   <td>指定一个标点符号是否要去掉</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td>text-align-last</td> \n   <td>当 text-align 设置为 justify 时，最后一行的对齐方式。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-text-justify.html\">text-justify</a></td> \n   <td>当 text-align 设置为 justify 时指定分散对齐的方式。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-text-outline.html\">text-outline</a></td> \n   <td>设置文字的轮廓。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-text-overflow.html\">text-overflow</a></td> \n   <td>指定当文本溢出包含的元素，应该发生什么</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-text-shadow.html\">text-shadow</a></td> \n   <td>为文本添加阴影</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-text-wrap.html\">text-wrap</a></td> \n   <td>指定文本换行规则</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-word-break.html\">word-break</a></td> \n   <td>指定非CJK文字的断行规则</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-word-wrap.html\">word-wrap</a></td> \n   <td>设置浏览器是否对过长的单词进行换行。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"3Dtransform\">2D/3D 转换属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transform.html\">transform</a></td> \n   <td>适用于2D或3D转换的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transform-origin.html\">transform-origin</a></td> \n   <td>允许您更改转化元素位置</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transform-style.html\">transform-style</a></td> \n   <td>3D空间中的指定如何嵌套元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-perspective.html\">perspective</a></td> \n   <td>指定3D元素是如何查看透视图</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-perspective-origin.html\">perspective-origin</a></td> \n   <td>指定3D元素底部位置</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-backface-visibility.html\">backface-visibility</a></td> \n   <td>定义一个元素是否应该是可见的，不对着屏幕时</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"transition\">过渡（Transition） 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transition.html\">transition</a></td> \n   <td>此属性是 transition-property、transition-duration、transition-timing-function、transition-delay 的简写形式。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transition-property.html\">transition-property</a></td> \n   <td>设置用来进行过渡的 CSS 属性。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transition-duration.html\">transition-duration</a></td> \n   <td>设置过渡进行的时间长度。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transition-timing-function.html\">transition-timing-function</a></td> \n   <td>设置过渡进行的时序函数。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transition-delay.html\">transition-delay</a></td> \n   <td>指定过渡开始的时间。</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table> \n<h2><a id=\"userinterface\">用户外观(User-interface) 属性</a></h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"28%\" align=\"left\">属性</th> \n   <th width=\"67%\" align=\"left\">说明</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-appearance.html\">appearance</a></td> \n   <td>定义元素的外观样式</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-sizing.html\">box-sizing</a></td> \n   <td>允许您为了适应区域以某种方式定义某些元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-icon.html\">icon</a></td> \n   <td>为元素指定图标</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-nav-down.html\">nav-down</a></td> \n   <td>指定用户按向下键时向下导航的位置</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-nav-index.html\">nav-index</a></td> \n   <td>指定导航（tab）顺序。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-nav-left.html\">nav-left</a></td> \n   <td>指定用户按向左键时向左导航的位置</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-nav-right.html\">nav-right</a></td> \n   <td>指定用户按向右键时向左导航的位置</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-nav-up.html\">nav-up</a></td> \n   <td>指定用户按向上键时向上导航的位置a</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-outline-offset.html\">outline-offset</a></td> \n   <td>设置轮廓框架在 border 边缘外的偏移</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-resize.html\">resize</a></td> \n   <td>定义元素是否可以改变大小</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 参考手册|CSS 属性|动画属性|背景属性|边框(Border) 和 轮廓(Outline) 属性|盒子(Box) 属性|颜色(Color) 属性|内边距(Padding) 属性|媒体页面内容属性|尺寸(Dimension) 属性|弹性盒子模型（Flexible Box） 属性(新)|弹性盒子模型（Flexible Box） 属性(旧)|字体（Font） 属性|内容生成属性(Generated Content Properties)|网格（Grid） 属性|超链接(Hyperlink) 属性|线框(Linebox) 属性|列表(List) 属性|外边距(Margin) 属性|字幕(Marquee) 属性|多列(Multi-column) 属性|页面媒体(Paged Media) 属性|定位（Positioning） 属性|分页（Print） 属性|Ruby 属性|语音（Speech） 属性|表格（Table） 属性|文本（Text） 属性|2D/3D 转换属性|过渡（Transition） 属性|用户外观(User-interface) 属性|');
INSERT INTO `schoolcontent` VALUES ('126', '128', '<h1>CSS <span class=\"color_h1\">选择器</span></h1> \n<hr /> \n<p class=\"elem_d11\">CSS选择器用于选择你想要的元素的样式的模式。</p> \n<p class=\"elem_d11\">&quot;CSS&quot;列表示在CSS版本的属性定义（CSS1，CSS2，或对CSS3）。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"22%\" align=\"left\">选择器</th> \n   <th width=\"17%\" align=\"left\">示例</th> \n   <th width=\"56%\" align=\"left\">示例说明</th> \n   <th align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td><a href=\"sel-class.html\">.<i>class</i></a></td> \n   <td class=\"notranslate\">.intro</td> \n   <td>选择所有class=&quot;intro&quot;的元素</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-id.html\">#<i>id</i></a></td> \n   <td class=\"notranslate\">#firstname</td> \n   <td>选择所有id=&quot;firstname&quot;的元素</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-all.html\">*</a></td> \n   <td class=\"code notranslate\">*</td> \n   <td>选择所有元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><i><a href=\"sel-element.html\">element</a></i></td> \n   <td class=\"notranslate\">p</td> \n   <td>选择所有&lt;p&gt;元素</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><i><a href=\"sel-element-comma.html\">element,element</a></i></td> \n   <td class=\"notranslate\">div,p</td> \n   <td>选择所有&lt;div&gt;元素和&lt;p&gt;元素</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-element-element.html\"><i>element</i> <i>element</i></a></td> \n   <td class=\"notranslate\">div p</td> \n   <td>选择&lt;div&gt;元素内的所有&lt;p&gt;元素</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-element-gt.html\"><i>element</i>&gt;<i>element</i></a></td> \n   <td class=\"notranslate\">div&gt;p</td> \n   <td>选择所有父级是 &lt;div&gt; 元素的 &lt;p&gt; 元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-element-pluss.html\"><i>element</i>+<i>element</i></a></td> \n   <td class=\"notranslate\">div+p</td> \n   <td>选择所有紧接着&lt;div&gt;元素之后的&lt;p&gt;元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute.html\">[<i>attribute</i>]</a></td> \n   <td class=\"notranslate\">[target]</td> \n   <td>选择所有带有target属性元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-value.html\">[<i>attribute</i>=<i>value</i>]</a></td> \n   <td class=\"notranslate\">[target=-blank]</td> \n   <td>选择所有使用target=&quot;-blank&quot;的元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-value-contains.html\">[<i>attribute</i>~=<i>value</i>]</a></td> \n   <td class=\"notranslate\">[title~=flower]</td> \n   <td>选择标题属性包含单词&quot;flower&quot;的所有元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-value-lang.html\">[<i>attribute</i>|=<i>language</i>]</a></td> \n   <td class=\"notranslate\">[lang|=en]</td> \n   <td>选择一个lang属性的起始值=&quot;EN&quot;的所有元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-link.html\">:link</a></td> \n   <td class=\"notranslate\">a:link</td> \n   <td>选择所有未访问链接</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-visited.html\">:visited</a></td> \n   <td class=\"notranslate\">a:visited</td> \n   <td>选择所有访问过的链接</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-active.html\">:active</a></td> \n   <td class=\"notranslate\">a:active</td> \n   <td>选择活动链接</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-hover.html\">:hover</a></td> \n   <td class=\"notranslate\">a:hover</td> \n   <td>选择鼠标在链接上面时</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-focus.html\">:focus</a></td> \n   <td class=\"notranslate\">input:focus</td> \n   <td>选择具有焦点的输入元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-firstletter.html\">:first-letter</a></td> \n   <td class=\"notranslate\">p:first-letter</td> \n   <td>选择每一个&lt;P&gt;元素的第一个字母</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-firstline.html\">:first-line</a></td> \n   <td class=\"notranslate\">p:first-line</td> \n   <td>选择每一个&lt;P&gt;元素的第一行</td> \n   <td>1</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-firstchild.html\">:first-child</a></td> \n   <td class=\"notranslate\">p:first-child</td> \n   <td>指定只有当&lt;p&gt;元素是其父级的第一个子级的样式。</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-before.html\">:before</a></td> \n   <td class=\"notranslate\">p:before</td> \n   <td>在每个&lt;p&gt;元素之前插入内容</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-after.html\">:after</a></td> \n   <td class=\"notranslate\">p:after</td> \n   <td>在每个&lt;p&gt;元素之后插入内容</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-lang.html\">:lang(<i>language</i>)</a></td> \n   <td class=\"notranslate\">p:lang(it)</td> \n   <td>选择一个lang属性的起始值=&quot;it&quot;的所有&lt;p&gt;元素</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-gen-sibling.html\"><i>element1</i>~<i>element2</i></a></td> \n   <td>p~ul</td> \n   <td>选择p元素之后的每一个ul元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attr-begin.html\">[<i>attribute</i>^=<i>value</i>]</a></td> \n   <td>a[src^=&quot;https&quot;]</td> \n   <td>选择每一个src属性的值以&quot;https&quot;开头的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attr-end.html\">[<i>attribute</i>$=<i>value</i>]</a></td> \n   <td>a[src$=&quot;.pdf&quot;]</td> \n   <td>选择每一个src属性的值以&quot;.pdf&quot;结尾的元素 </td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attr-contain.html\">[<i>attribute</i>*=<i>value</i>]</a></td> \n   <td>a[src*=&quot;44lan&quot;]</td> \n   <td>选择每一个src属性的值包含子字符串&quot;44lan&quot;的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-first-of-type.html\">:first-of-type</a></td> \n   <td>p:first-of-type</td> \n   <td>选择每个p元素是其父级的第一个p元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-last-of-type.html\">:last-of-type</a></td> \n   <td>p:last-of-type</td> \n   <td>选择每个p元素是其父级的最后一个p元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-only-of-type.html\">:only-of-type</a></td> \n   <td>p:only-of-type</td> \n   <td>选择每个p元素是其父级的唯一p元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-only-child.html\">:only-child</a></td> \n   <td>p:only-child</td> \n   <td>选择每个p元素是其父级的唯一子元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-nth-child.html\">:nth-child(<i>n</i>)</a></td> \n   <td>p:nth-child(2)</td> \n   <td>选择每个p元素是其父级的第二个子元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-nth-last-child.html\">:nth-last-child(<i>n</i>)</a></td> \n   <td>p:nth-last-child(2)</td> \n   <td>选择每个p元素的是其父级的第二个子元素，从最后一个子项计数</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-nth-of-type.html\">:nth-of-type(<i>n</i>)</a></td> \n   <td>p:nth-of-type(2)</td> \n   <td>选择每个p元素是其父级的第二个p元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-nth-last-of-type.html\">:nth-last-of-type(<i>n</i>)</a></td> \n   <td>p:nth-last-of-type(2)</td> \n   <td>选择每个p元素的是其父级的第二个p元素，从最后一个子项计数</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-last-child.html\">:last-child</a></td> \n   <td>p:last-child</td> \n   <td>选择每个p元素是其父级的最后一个子级。</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-root.html\">:root</a></td> \n   <td>:root</td> \n   <td>选择文档的根元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-empty.html\">:empty</a></td> \n   <td>p:empty</td> \n   <td>选择每个没有任何子级的p元素（包括文本节点）</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-target.html\">:target</a></td> \n   <td>#news:target </td> \n   <td>选择当前活动的#news元素（包含该锚名称的点击的URL）</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-enabled.html\">:enabled</a></td> \n   <td>input:enabled</td> \n   <td>选择每一个已启用的输入元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-disabled.html\">:disabled</a></td> \n   <td>input:disabled</td> \n   <td>选择每一个禁用的输入元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-checked.html\">:checked</a></td> \n   <td>input:checked</td> \n   <td>选择每个选中的输入元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-not.html\">:not(<i>selector</i>)</a></td> \n   <td>:not(p)</td> \n   <td>选择每个并非p元素的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-selection.html\">::selection</a></td> \n   <td>::selection</td> \n   <td>匹配元素中被用户选中或处于高亮状态的部分</td> \n   <td>3</td> \n  </tr>  \n  <tr> \n   <td><a href=\"sel-out-of-range.html\">:out-of-range</a></td> \n   <td>:out-of-range</td> \n   <td>匹配值在指定区间之外的input元素</td> \n   <td>3</td> \n  </tr>  \n  <tr> \n   <td><a href=\"sel-in-range.html\">:in-range</a></td> \n   <td>:in-range</td> \n   <td>匹配值在指定区间之内的input元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-read-write.html\">:read-write</a></td> \n   <td>:read-write</td> \n   <td>用于匹配可读及可写的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-read-only.html\">:read-only</a></td> \n   <td>:read-only</td> \n   <td>用于匹配设置 &quot;readonly&quot;（只读） 属性的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-optional.html\">:optional</a></td> \n   <td>:optional</td> \n   <td>用于匹配可选的输入元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-required.html\">:required </a></td> \n   <td>:required</td> \n   <td>用于匹配设置了 &quot;required&quot; 属性的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-valid.html\">:valid </a></td> \n   <td>:valid</td> \n   <td>用于匹配输入值为合法的元素</td> \n   <td>3</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-invalid.html\">:invalid </a></td> \n   <td>:invalid</td> \n   <td>用于匹配输入值为非法的元素</td> \n   <td>3</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 选择器|');
INSERT INTO `schoolcontent` VALUES ('127', '129', '<h1>CSS <span class=\"color_h1\">语音参考</span></h1> \n<hr /> \n<p>听觉样式表使用了语音合成和声音效果的结合，让用户收听信息，而不是读取信息。</p> \n<p>有声显示可用于：</p> \n<ul> \n <li>失明人士</li> \n <li>帮助用户学习阅读</li> \n <li>帮助具有阅读问题的用户</li> \n <li>家庭娱乐</li> \n <li>在车上</li> \n</ul> \n<p>听觉呈现通常会把文档转化为纯文本，然后传给屏幕阅读器（可读出屏幕上所有字符的一种程序）。</p> \n<p>听觉样式表的一个例子：</p> \n<div class=\"code\">\n <div>\n   h1,h2,h3,h4\n  <br /> {\n  <br /> voice-family:male;\n  <br /> richness:80;\n  <br /> cue-before:url(&quot;beep.au&quot;)\n  <br /> } \n </div>\n</div> \n<p>上面的例子用语音合成器播放声音，开头有一个男性的声音说话。</p> \n<br />\n<hr /> \n<h2>CSS 语音参考手册</h2> \n<p>CSS&quot;列表示在CSS版本的属性定义（CSS1或CSS2）。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"25%\" align=\"left\">Property</th> \n   <th width=\"43%\" align=\"left\">Description</th> \n   <th width=\"27%\" align=\"left\">Values</th> \n   <th width=\"5%\" align=\"left\">CSS</th> \n  </tr> \n  <tr> \n   <td>azimuth</td> \n   <td>设置声音应该来自哪里</td> \n   <td><i>angle</i><br /> left-side<br /> far-left<br /> left<br /> center-left<br /> center<br /> center-right<br /> right<br /> far-right<br /> right-side<br /> behind<br /> leftwards<br /> rightwards</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>cue</td> \n   <td>在一个声明中设置cue属性</td> \n   <td><i>cue-before<br /> cue-after</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>cue-after</td> \n   <td>指定要播放的声音在一个元素的内容后面</td> \n   <td>none<br /> <i>url</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>cue-before</td> \n   <td>指定要播放的声音在一个元素的内容前面</td> \n   <td>none<br /> <i>url</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>elevation</td> \n   <td>设置声音应该来自哪里</td> \n   <td>angle<br /> below<br /> level<br /> above<br /> higher<br /> lower&nbsp;</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>pause</td> \n   <td>在一个声明中设置pause属性</td> \n   <td><i>pause-before<br /> pause-after</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>pause-after</td> \n   <td>在一个元素的内容之后，指定暂停</td> \n   <td><i>time<br /> %</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>pause-before</td> \n   <td>在一个元素的内容之前，指定暂停</td> \n   <td><i>time<br /> %</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>pitch</td> \n   <td>指定讲话声音</td> \n   <td><i>frequency</i><br /> x-low<br /> low<br /> medium<br /> high<br /> x-high&nbsp;</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>pitch-range</td> \n   <td>指定讲话声音的变化。（单调的声音或动态的声音？）</td> \n   <td><i>number</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>play-during</td> \n   <td>指定在读一个元素的内容时要播放的声音</td> \n   <td>auto<br /> none<br /> <i>url</i><br /> mix<br /> repeat</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>richness</td> \n   <td>指定丰富的讲话声音。（浑厚的声音或细的声音？）</td> \n   <td><i>number</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>speak</td> \n   <td>指定内容是否会提供听觉方式</td> \n   <td>normal<br /> none<br /> spell-out</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>speak-header</td> \n   <td>此属性设置或检索表格标题是在所有的单元格之前发声，还是到一个不与之关联的单元格就结束发声。</td> \n   <td>always<br /> once<br /> </td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>speak-numeral</td> \n   <td>设置或检索数字如何发音。</td> \n   <td>digits<br /> continuous</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>speak-punctuation</td> \n   <td>设置或检索标点字符如何发音</td> \n   <td>none<br /> code</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>speech-rate</td> \n   <td>指定发言速度</td> \n   <td><i>number</i><br /> x-slow<br /> slow<br /> medium<br /> fast<br /> x-fast<br /> faster<br /> slower&nbsp;</td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>stress</td> \n   <td>讲话声音在指定的地方&quot;重音&quot;</td> \n   <td><i>number</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>voice-family</td> \n   <td>设置或检索当前声音类型</td> \n   <td><i>specific-voice<br /> generic-voice</i></td> \n   <td>2</td> \n  </tr> \n  <tr> \n   <td>volume</td> \n   <td>指定发言的音量</td> \n   <td><i>number<br /> </i><i>%<br /> </i>silent<br /> x-soft<br /> soft<br /> medium<br /> loud<br /> x-loud&nbsp;</td> \n   <td>2</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 语音参考|CSS 语音参考手册|');
INSERT INTO `schoolcontent` VALUES ('128', '130', '<h1>CSS <span class=\"color_h1\"> Web安全字体组合</span> </h1> \n<hr /> \n<h2>常用的字体组合</h2> \n<p>font-family属性是多种字体的名称，作为一个&quot;应变&quot;制度，以确保浏览器/操作系统之间的最大兼容性。如果浏览器不支持的第一个字体，它尝试下一个的字体。</p> \n<p>你想要的字体类型如果浏览器找不到，它会从通用的字体类型中找到与你相似的:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p{font-family:&quot;Times New Roman&quot;, Times, serif} \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_font-family\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>下面是一些常用的字体组合，通用的字体系列。</p> \n<hr /> \n<h2>Serif 字体</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"55%\" align=\"left\">字体</th> \n   <th align=\"left\">文本示例</th> \n  </tr> \n  <tr> \n   <td>Georgia, serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: Georgia, serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: Georgia, serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>&quot;Palatino Linotype&quot;, &quot;Book Antiqua&quot;, Palatino, serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: \'Palatino Linotype\', \'Book Antiqua\', Palatino, serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: \'Palatino Linotype\', \'Book Antiqua\', Palatino, serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>&quot;Times New Roman&quot;, Times, serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: \'Times New Roman\', Times, serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: \'Times New Roman\', Times, serif\">This is a paragraph</p></td> \n  </tr> \n </tbody>\n</table> \n<h2>sans - serif字体</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"55%\" align=\"left\">字体</th> \n   <th align=\"left\">文本示例</th> \n  </tr> \n  <tr> \n   <td>Arial, Helvetica, sans-serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: Arial, Helvetica, sans-serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: Arial, Helvetica, sans-serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>Arial Black, Gadget, sans-serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: Arial Black, Gadget, sans-serif;font-weight:normal\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: Arial Black, Gadget, sans-serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>&quot;Comic Sans MS&quot;, cursive, sans-serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: \'Comic Sans MS\', cursive, sans-serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: \'Comic Sans MS\', cursive, sans-serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>Impact, Charcoal, sans-serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: Impact, Charcoal, sans-serif;font-weight:normal\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: Impact, Charcoal, sans-serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>&quot;Lucida Sans Unicode&quot;, &quot;Lucida Grande&quot;, sans-serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: \'Lucida Sans Unicode\', \'Lucida Grande\', sans-serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: \'Lucida Sans Unicode\', \'Lucida Grande\', sans-serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>Tahoma, Geneva, sans-serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: Tahoma, Geneva, sans-serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: Tahoma, Geneva, sans-serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>&quot;Trebuchet MS&quot;, Helvetica, sans-serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: \'Trebuchet MS\', Helvetica, sans-serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: \'Trebuchet MS\', Helvetica, sans-serif\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>Verdana, Geneva, sans-serif</td> \n   <td><h2 style=\"margin-top:0px;font-family: Verdana, Geneva, sans-serif\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: Verdana, Geneva, sans-serif\">This is a paragraph</p></td> \n  </tr> \n </tbody>\n</table> \n<h2>Monospace 字体</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"55%\" align=\"left\">字体</th> \n   <th align=\"left\">文本示例</th> \n  </tr> \n  <tr> \n   <td>&quot;Courier New&quot;, Courier, monospace</td> \n   <td><h2 style=\"margin-top:0px;font-family: \'Courier New\', Courier, monospace\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: \'Courier New\', Courier, monospace\">This is a paragraph</p></td> \n  </tr> \n  <tr> \n   <td>&quot;Lucida Console&quot;, Monaco, monospace</td> \n   <td><h2 style=\"margin-top:0px;font-family: \'Lucida Console\', Monaco, monospace\">This is a heading</h2><p style=\"margin-bottom:0px;font-family: \'Lucida Console\', Monaco, monospace\">This is a paragraph</p></td> \n  </tr> \n </tbody>\n</table>', null, 'CSS Web安全字体组合|常用的字体组合|实例|Serif 字体|This is a heading|This is a heading|This is a heading|sans - serif字体|This is a heading|This is a heading|This is a heading|This is a heading|This is a heading|This is a heading|This is a heading|This is a heading|Monospace 字体|This is a heading|This is a heading|');
INSERT INTO `schoolcontent` VALUES ('129', '131', '<h1>CSS <span class=\"color_h1\">动画</span></h1> \n<h2>定义和用法</h2> \n<p>一些 CSS 属性是<em>可以有动画效果的</em>，这意味着它们可以用于动画和过渡。</p> \n<p>动画属性可以逐渐地从一个值变化到另一个值，比如尺寸大小、数量、百分比和颜色。</p> \n<hr /> \n<h2>浏览器支持</h2>\n<p>表格中的数字表示支持该方法的第一个浏览器的版本号。</p> \n<p>紧跟在数字后面的 -webkit-, -moz-, 或 -o- 指定了第一个支持该属性的浏览器版本前缀。</p> \n<table class=\"browserref\"> \n <tbody>\n  <tr> \n   <th style=\"width:20%;padding:20px\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:20%\" class=\"bsIE\" title=\"Internet Explorer\"></th> \n   <th style=\"width:20%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:20%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:20%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td>4.0 -webkit-</td> \n   <td>10.0</td> \n   <td>16.0<br />5.0 -moz-</td> \n   <td>4.0 -webkit-</td> \n   <td>15.0 -webkit-<br />12.1<br />12.0 -o-</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>背景颜色逐渐地从红色变化到蓝色：</p> \n <div class=\"example_code notranslate\">\n   @keyframes mymove\n  <br /> {\n  <br /> from {background-color:red;}\n  <br /> to {left:blue;}\n  <br /> }\n  <br /> \n  <br /> /*Safari 和 Chrome:*/\n  <br /> @-webkit-keyframes mymove\n  <br /> {\n  <br /> from {background-color:red;}\n  <br /> to {background-color:blue;}\n  <br /> }\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=trycss_animatable\">尝试一下 &raquo;</a> \n</div> \n<h2>动画属性</h2> \n<p>CSS 中的动画属性：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>属性</th> \n   <th>实例</th> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-background.html\">background</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_background\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-background-color.html\">background-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_background-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-background-position.html\">background-position</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_background-position\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-background-size.html\">background-size</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_background-size\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border.html\">border</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-bottom.html\">border-bottom</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-bottom\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-bottom_color.html\">border-bottom-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-bottom-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-bottom-left-radius.html\">border-bottom-left-radius</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-bottom-left-radius\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-bottom-right-radius.html\">border-bottom-right-radius</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-bottom-right-radius\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-bottom-width.html\">border-bottom-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-bottom-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-color.html\">border-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-left.html\">border-left</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-left\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-left_color.html\">border-left-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-left-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-left_width.html\">border-left-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-left-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-right.html\">border-right</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-right\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-right_color.html\">border-right-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-right-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-right-width.html\">border-right-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-right-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-spacing.html\">border-spacing</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-spacing\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-top.html\">border-top</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-top\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-top-color.html\">border-top-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-top-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-top-left-radius.html\">border-top-left-radius</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-top-left-radius\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-border-top-right-radius.html\">border-top-right-radius</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-top-right-radius\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-border-top-width.html\">border-top-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_border-top-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-bottom.html\">bottom</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_bottom\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-box-shadow.html\">box-shadow</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_box-shadow\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-clip.html\">clip</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_clip\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-color.html\">color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-count.html\">column-count</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_column-count\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-gap.html\">column-gap</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_column-gap\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-rule.html\">column-rule</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_column-rule\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-rule-color.html\">column-rule-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_column-rule-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-rule-width.html\">column-rule-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_column-rule-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-column-width.html\">column-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_column-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-columns.html\">columns</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_columns\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-filter.html\">filter</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_filter\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-flex.html\">flex</a></td>\n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-flex-basis.html\">flex-basis</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_flex-basis\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-flex-grow.html\">flex-grow</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_flex-grow\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-flex-shrink.html\">flex-shrink</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_flex-shrink\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-font.html\">font</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_font\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-font-size.html\">font-size</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_font-size\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-font-size-adjust.html\">font-size-adjust</a></td>\n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-font-stretch.html\">font-stretch</a></td>\n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-font-weight.html\">font-weight</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_font-weight\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-height.html\">height</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_height\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-left.html\">left</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_left\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-letter-spacing.html\">letter-spacing</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_letter-spacing\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-line-height.html\">line-height</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_line-height\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin.html\">margin</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_margin\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin-bottom.html\">margin-bottom</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_margin-bottom\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin-left.html\">margin-left</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_margin-left\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin-right.html\">margin-right</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_margin-right\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-margin-top.html\">margin-top</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_margin-top\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-max-height.html\">max-height</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_max-height\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-max-width.html\">max-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_max-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-min-height.html\">min-height</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_min-height\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-min-width.html\">min-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_min-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-opacity.html\">opacity</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_opacity\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-order.html\">order</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_order\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-outline.html\">outline</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_outline\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-outline-color.html\">outline-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_outline-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-outline-offset.html\">outline-offset</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_outline-offset\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-outline-width.html\">outline-width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_outline-width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding.html\">padding</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_padding\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding-bottom.html\">padding-bottom</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_padding-bottom\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding-left.html\">padding-left</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_padding-left\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding-right.html\">padding-right</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_padding-right\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-padding-top.html\">padding-top</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_padding-top\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-perspective.html\">perspective</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_perspective\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-perspective-origin.html\">perspective-origin</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_perspective-origin\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-right.html\">right</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_right\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-text-decoration-color.html\">text-decoration-color</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_text-decoration-color\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text_text-indent.html\">text-indent</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_text-indent\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-text-shadow.html\">text-shadow</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_text-shadow\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-top.html\">top</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_top\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transform.html\">transform</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_transform\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"css3-pr-transform-origin.html\">transform-origin</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_transform-origin\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-vertical-align.html\">vertical-align</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_vertical-align\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-class-visibility.html\">visibility</a></td>\n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-dim-width.html\">width</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_width\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-text-word-spacing.html\">word-spacing</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_word-spacing\">尝试一下 》</a></td> \n  </tr> \n  <tr> \n   <td><a href=\"pr-pos-z-index.html\">z-index</a></td>\n   <td><a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_anim_z-index\">尝试一下 》</a></td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 动画|定义和用法|浏览器支持|实例|动画属性|');
INSERT INTO `schoolcontent` VALUES ('130', '132', '<p>CSS 有几个不同的单位用于表示长度。 </p>\n<p> 一些设置 CSS 长度的属性有 width, margin, padding, font-size, border-width, 等。 </p>\n<p> 长度有一个数字和单位组成如 10px, 2em, 等。 </p>\n<p> 数字与单位之间不能出现空格。如果长度值为 0，则可以省略单位。 </p>\n<p> 对于一些 CSS 属性，长度可以是负数。 </p>\n<p> 有两种类型的长度单位：相对和绝对。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p>下表中的数字表示支持该长度单位的最低浏览器版本。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:20%;font-size:16px;text-align:left\">长度单位</th> \n   <th style=\"width:16%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:16%\" class=\"bsIE\" title=\"Internet Explorer\"></th> \n   <th style=\"width:16%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:16%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:16%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">em, ex, %, px, cm, mm, in, pt, pc</td> \n   <td>1.0</td> \n   <td>3.0</td> \n   <td>1.0</td> \n   <td>1.0</td> \n   <td>3.5</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">ch</td> \n   <td>27.0</td> \n   <td>9.0</td> \n   <td>1.0</td> \n   <td>7.0</td> \n   <td>20.0</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">rem</td> \n   <td>4.0</td> \n   <td>9.0</td> \n   <td>3.6</td> \n   <td>4.1</td> \n   <td>11.6</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">vh, vw</td> \n   <td>20.0</td> \n   <td>9.0</td> \n   <td>19.0</td> \n   <td>6.0</td> \n   <td>20.0</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">vmin</td> \n   <td>20.0</td> \n   <td>9.0*</td> \n   <td>19.0</td> \n   <td>6.0</td> \n   <td>20.0</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">vmax</td> \n   <td>26.0</td> \n   <td><span class=\"deprecated\">不支持</span></td> \n   <td>19.0</td> \n   <td><span class=\"deprecated\">不支持</span></td> \n   <td>20.0</td> \n  </tr> \n </tbody>\n</table> \n<p><b>注意:</b> Internet Explorer 9 通过不标准的名称 vm 来支持 vmin 。</p>\n<hr /> \n<h2>相对长度</h2> \n<p> 相对长度单位指定了一个长度相对于另一个长度的属性。对于不同的设备相对长度更适用。 </p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:12%\">单位</th> \n   <th>描述</th> \n   <th>在线实例</th> \n  </tr> \n  <tr> \n   <td>em</td> \n   <td>它是描述相对于应用在当前元素的字体尺寸，所以它也是相对长度单位。一般浏览器字体大小默认为16px，则2em == 32px；</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_em\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>ex</td> \n   <td>依赖于英文子母小 x 的高度</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_ex\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>ch</td> \n   <td>数字 0 的宽度</td>&nbsp;\n   <td> </td>\n  </tr> \n  <tr> \n   <td>rem</td> \n   <td>根元素（html）的 font-size</td>&nbsp;\n   <td> </td>\n  </tr> \n  <tr> \n   <td>vw</td> \n   <td>viewpoint width，视窗宽度，1vw=视窗宽度的1%</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_vw\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>vh</td> \n   <td>viewpoint height，视窗高度，1vh=视窗高度的1%</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_vh\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>vmin</td> \n   <td>vw和vh中较小的那个。</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_vmin\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>vmax</td> \n   <td>vw和vh中较大的那个。</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_vmax\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>%</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td><b>提示:</b> rem与em有什么区别呢？区别在于使用rem为元素设定字体大小时，仍然是相对大小，但相对的只是HTML根元素。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>绝对长度</h2> \n<p>绝对长度单位是一个固定的值，它反应一个真实的物理尺寸。绝对长度单位视输出介质而定，不依赖于环境（显示器、分辨率、操作系统等）。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:12%\">单位</th> \n   <th>描述</th> \n   <th>在线实例</th> \n  </tr> \n  <tr> \n   <td>cm</td> \n   <td>厘米</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_cm\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>mm</td> \n   <td>毫米</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_mm\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>in</td> \n   <td>英寸 (1in = 96px = 2.54cm)</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_in\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>px *</td> \n   <td>像素 (1px = 1/96th of 1in)</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_px\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>pt</td> \n   <td>point，大约1/72英寸； (1pt = 1/72in)</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_pt\">尝试一下</a> </td> \n  </tr> \n  <tr> \n   <td>pc</td> \n   <td>pica，大约6pt，1/6英寸； (1pc = 12 pt)</td>\n   <td> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=trycss_unit_pc\">尝试一下</a> </td> \n  </tr> \n </tbody>\n</table> \n<p>像素或许被认为是最好的&quot;设备像素&quot;，而这种像素长度和你在显示器上看到的文字屏幕像素无关。px实际上是一个按角度度量的单位。</p>', null, '浏览器支持|相对长度|绝对长度|');
INSERT INTO `schoolcontent` VALUES ('131', '133', '<h1>CSS <span class=\"color_h1\">颜色</span> </h1> \n<hr /> \n<p class=\"intro\"> 颜色是由红（RED），绿（GREEN），蓝（BLUE ）光线的显示结合。</p> \n<hr /> \n<h2>颜色值 </h2> \n<p>CSS中定义颜色使用十六进制（hex）表示法为红，绿，蓝的颜色值结合。可以是最低值是0（十六进制00）到最高值是255（十六进制FF）</p> \n<p>3个双位数字的十六进制值写法，以＃符号开始。</p> \n<div class=\"example\"> \n <h2 class=\"example\">Color Examples</h2> \n <table class=\"reference notranslate\"> \n  <tbody>\n   <tr> \n    <th width=\"50%\">Color</th> \n    <th width=\"25%\">Color HEX</th> \n    <th width=\"25%\">Color RGB</th> \n   </tr> \n   <tr> \n    <td bgcolor=\"#000000\">&nbsp;</td> \n    <td>#000000</td> \n    <td>rgb(0,0,0)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#FF0000\">&nbsp;</td> \n    <td>#FF0000</td> \n    <td>rgb(255,0,0)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#00FF00\">&nbsp;</td> \n    <td>#00FF00</td> \n    <td>rgb(0,255,0)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#0000FF\">&nbsp;</td> \n    <td>#0000FF</td> \n    <td>rgb(0,0,255)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#FFFF00\">&nbsp;</td> \n    <td>#FFFF00</td> \n    <td>rgb(255,255,0)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#00FFFF\">&nbsp;</td> \n    <td>#00FFFF</td> \n    <td>rgb(0,255,255)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#FF00FF\">&nbsp;</td> \n    <td>#FF00FF</td> \n    <td>rgb(255,0,255)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#C0C0C0\">&nbsp;</td> \n    <td>#C0C0C0</td> \n    <td>rgb(192,192,192)</td> \n   </tr> \n   <tr> \n    <td bgcolor=\"#FFFFFF\">&nbsp;</td> \n    <td>#FFFFFF</td> \n    <td>rgb(255,255,255)</td> \n   </tr> \n  </tbody>\n </table> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_colorhex\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>16万个不同的颜色</h2> \n<p>红，绿，蓝值从0到255的结合，给出了总额超过16万不同的颜色（256 &times; 256 &times;256）。</p> \n<p>现代大多数显示器能够显示至少16384种颜色。</p> \n<p>如果你看看下面的颜色表，你会看到从0到255不同的红灯颜色。</p> \n<p>要看到充满色彩混合时红灯从0到255变化，单击十六进制或RGB值。</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th align=\"left\" width=\"50%\">红光</th> \n   <th align=\"left\" width=\"20%\">16进制值</th> \n   <th align=\"left\" width=\"30%\">RGB</th> \n  </tr> \n  <tr> \n   <td bgcolor=\"#000000\"></td> \n   <td>#000000</td> \n   <td>rgb(0,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#080000\"></td> \n   <td>#080000</td> \n   <td>rgb(8,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#100000\"></td> \n   <td>#100000</td> \n   <td>rgb(16,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#180000\"></td> \n   <td>#180000</td> \n   <td>rgb(24,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#200000\"></td> \n   <td>#200000</td> \n   <td>rgb(32,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#280000\"></td> \n   <td>#280000</td> \n   <td>rgb(40,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#300000\"></td> \n   <td>#300000</td> \n   <td>rgb(48,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#380000\"></td> \n   <td>#380000</td> \n   <td>rgb(56,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#400000\"></td> \n   <td>#400000</td> \n   <td>rgb(64,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#480000\"></td> \n   <td>#480000</td> \n   <td>rgb(72,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#500000\"></td> \n   <td>#500000</td> \n   <td>rgb(80,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#580000\"></td> \n   <td>#580000</td> \n   <td>rgb(88,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#600000\"></td> \n   <td>#600000</td> \n   <td>rgb(96,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#680000\"></td> \n   <td>#680000</td> \n   <td>rgb(104,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#700000\"></td> \n   <td>#700000</td> \n   <td>rgb(112,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#780000\"></td> \n   <td>#780000</td> \n   <td>rgb(120,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#800000\"></td> \n   <td>#800000</td> \n   <td>rgb(128,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#880000\"></td> \n   <td>#880000</td> \n   <td>rgb(136,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#900000\"></td> \n   <td>#900000</td> \n   <td>rgb(144,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#980000\"></td> \n   <td>#980000</td> \n   <td>rgb(152,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#A00000\"></td> \n   <td>#A00000</td> \n   <td>rgb(160,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#A80000\"></td> \n   <td>#A80000</td> \n   <td>rgb(168,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#B00000\"></td> \n   <td>#B00000</td> \n   <td>rgb(176,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#B80000\"></td> \n   <td>#B80000</td> \n   <td>rgb(184,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#C00000\"></td> \n   <td>#C00000</td> \n   <td>rgb(192,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#C80000\"></td> \n   <td>#C80000</td> \n   <td>rgb(200,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#D00000\"></td> \n   <td>#D00000</td> \n   <td>rgb(208,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#D80000\"></td> \n   <td>#D80000</td> \n   <td>rgb(216,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#E00000\"></td> \n   <td>#E00000</td> \n   <td>rgb(224,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#E80000\"></td> \n   <td>#E80000</td> \n   <td>rgb(232,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#F00000\"></td> \n   <td>#F00000</td> \n   <td>rgb(240,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#F80000\"></td> \n   <td>#F80000</td> \n   <td>rgb(248,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#FF0000\"></td> \n   <td>#FF0000</td> \n   <td>rgb(255,0,0)</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2>灰阶</h2> 灰阶代表了由最暗到最亮之间不同亮度的层次级别,为了使您更容易选择合适的灰色，我们已编制了灰色色调的表： \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th align=\"left\" width=\"50%\">Gray Shades</th> \n   <th align=\"left\" width=\"20%\">HEX</th> \n   <th align=\"left\" width=\"30%\">RGB</th> \n  </tr> \n  <tr> \n   <td bgcolor=\"#000000\" width=\"50%\"></td> \n   <td width=\"20%\">#000000</td> \n   <td width=\"30%\">rgb(0,0,0)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#080808\" width=\"50%\"></td> \n   <td width=\"20%\">#080808</td> \n   <td width=\"30%\">rgb(8,8,8)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#101010\" width=\"50%\"></td> \n   <td width=\"20%\">#101010</td> \n   <td width=\"30%\">rgb(16,16,16)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#181818\" width=\"50%\"></td> \n   <td width=\"20%\">#181818</td> \n   <td width=\"30%\">rgb(24,24,24)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#202020\" width=\"50%\"></td> \n   <td width=\"20%\">#202020</td> \n   <td width=\"30%\">rgb(32,32,32)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#282828\" width=\"50%\"></td> \n   <td width=\"20%\">#282828</td> \n   <td width=\"30%\">rgb(40,40,40)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#303030\" width=\"50%\"></td> \n   <td width=\"20%\">#303030</td> \n   <td width=\"30%\">rgb(48,48,48)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#383838\" width=\"50%\"></td> \n   <td width=\"20%\">#383838</td> \n   <td width=\"30%\">rgb(56,56,56)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#404040\" width=\"50%\"></td> \n   <td width=\"20%\">#404040</td> \n   <td width=\"30%\">rgb(64,64,64)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#484848\" width=\"50%\"></td> \n   <td width=\"20%\">#484848</td> \n   <td width=\"30%\">rgb(72,72,72)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#505050\" width=\"50%\"></td> \n   <td width=\"20%\">#505050</td> \n   <td width=\"30%\">rgb(80,80,80)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#585858\" width=\"50%\"></td> \n   <td width=\"20%\">#585858</td> \n   <td width=\"30%\">rgb(88,88,88)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#606060\" width=\"50%\"></td> \n   <td width=\"20%\">#606060</td> \n   <td width=\"30%\">rgb(96,96,96)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#686868\" width=\"50%\"></td> \n   <td width=\"20%\">#686868</td> \n   <td width=\"30%\">rgb(104,104,104)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#707070\" width=\"50%\"></td> \n   <td width=\"20%\">#707070</td> \n   <td width=\"30%\">rgb(112,112,112)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#787878\" width=\"50%\"></td> \n   <td width=\"20%\">#787878</td> \n   <td width=\"30%\">rgb(120,120,120)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#808080\" width=\"50%\"></td> \n   <td width=\"20%\">#808080</td> \n   <td width=\"30%\">rgb(128,128,128)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#888888\" width=\"50%\"></td> \n   <td width=\"20%\">#888888</td> \n   <td width=\"30%\">rgb(136,136,136)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#909090\" width=\"50%\"></td> \n   <td width=\"20%\">#909090</td> \n   <td width=\"30%\">rgb(144,144,144)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#989898\" width=\"50%\"></td> \n   <td width=\"20%\">#989898</td> \n   <td width=\"30%\">rgb(152,152,152)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#A0A0A0\" width=\"50%\"></td> \n   <td width=\"20%\">#A0A0A0</td> \n   <td width=\"30%\">rgb(160,160,160)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#A8A8A8\" width=\"50%\"></td> \n   <td width=\"20%\">#A8A8A8</td> \n   <td width=\"30%\">rgb(168,168,168)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#B0B0B0\" width=\"50%\"></td> \n   <td width=\"20%\">#B0B0B0</td> \n   <td width=\"30%\">rgb(176,176,176)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#B8B8B8\" width=\"50%\"></td> \n   <td width=\"20%\">#B8B8B8</td> \n   <td width=\"30%\">rgb(184,184,184)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#C0C0C0\" width=\"50%\"></td> \n   <td width=\"20%\">#C0C0C0</td> \n   <td width=\"30%\">rgb(192,192,192)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#C8C8C8\" width=\"50%\"></td> \n   <td width=\"20%\">#C8C8C8</td> \n   <td width=\"30%\">rgb(200,200,200)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#D0D0D0\" width=\"50%\"></td> \n   <td width=\"20%\">#D0D0D0</td> \n   <td width=\"30%\">rgb(208,208,208)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#D8D8D8\" width=\"50%\"></td> \n   <td width=\"20%\">#D8D8D8</td> \n   <td width=\"30%\">rgb(216,216,216)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#E0E0E0\" width=\"50%\"></td> \n   <td width=\"20%\">#E0E0E0</td> \n   <td width=\"30%\">rgb(224,224,224)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#E8E8E8\" width=\"50%\"></td> \n   <td width=\"20%\">#E8E8E8</td> \n   <td width=\"30%\">rgb(232,232,232)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#F0F0F0\" width=\"50%\"></td> \n   <td width=\"20%\">#F0F0F0</td> \n   <td width=\"30%\">rgb(240,240,240)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#F8F8F8\" width=\"50%\"></td> \n   <td width=\"20%\">#F8F8F8</td> \n   <td width=\"30%\">rgb(248,248,248)</td> \n  </tr> \n  <tr> \n   <td bgcolor=\"#FFFFFF\" width=\"50%\"></td> \n   <td width=\"20%\">#FFFFFF</td> \n   <td width=\"30%\">rgb(255,255,255)</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2>网络安全色?</h2> \n<p>若干年前，当计算机支持最大256个不同的颜色，一个216&quot;网络安全颜色&quot;列表被建议作为Web标准，保留了40个固定的系统颜色。</p> \n<p>这在现在看来不是很重要，因为大多数计算机可以显示数百万种不同的色彩，但选择是留给你。</p> \n<p>跨浏览器的调色板创建，以确保所有的计算机将显示正确的颜色，运行一个256色调色板：</p> \n<table class=\"reference notranslate\"> \n <tbody> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#000000\">000000</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#000033\">000033</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#000066\">000066</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#000099\">000099</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#0000cc\">0000CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#0000ff\">0000FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#003300\">003300</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#003333\">003333</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#003366\">003366</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#003399\">003399</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#0033cc\">0033CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#0033ff\">0033FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#006600\">006600</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#006633\">006633</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#006666\">006666</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#006699\">006699</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#0066cc\">0066CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#0066ff\">0066FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#009900\">009900</td> \n   <td align=\"center\" bgcolor=\"#009933\">009933</td> \n   <td align=\"center\" bgcolor=\"#009966\">009966</td> \n   <td align=\"center\" bgcolor=\"#009999\">009999</td> \n   <td align=\"center\" bgcolor=\"#0099cc\">0099CC</td> \n   <td align=\"center\" bgcolor=\"#0099ff\">0099FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#00cc00\">00CC00</td> \n   <td align=\"center\" bgcolor=\"#00cc33\">00CC33</td> \n   <td align=\"center\" bgcolor=\"#00cc66\">00CC66</td> \n   <td align=\"center\" bgcolor=\"#00cc99\">00CC99</td> \n   <td align=\"center\" bgcolor=\"#00cccc\">00CCCC</td> \n   <td align=\"center\" bgcolor=\"#00ccff\">00CCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#00ff00\">00FF00</td> \n   <td align=\"center\" bgcolor=\"#00ff33\">00FF33</td> \n   <td align=\"center\" bgcolor=\"#00ff66\">00FF66</td> \n   <td align=\"center\" bgcolor=\"#00ff99\">00FF99</td> \n   <td align=\"center\" bgcolor=\"#00ffcc\">00FFCC</td> \n   <td align=\"center\" bgcolor=\"#00ffff\">00FFFF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#330000\">330000</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#330033\">330033</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#330066\">330066</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#330099\">330099</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#3300cc\">3300CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#3300ff\">3300FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#333300\">333300</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#333333\">333333</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#333366\">333366</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#333399\">333399</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#3333cc\">3333CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#3333ff\">3333FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#336600\">336600</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#336633\">336633</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#336666\">336666</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#336699\">336699</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#3366cc\">3366CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#3366ff\">3366FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#339900\">339900</td> \n   <td align=\"center\" bgcolor=\"#339933\">339933</td> \n   <td align=\"center\" bgcolor=\"#339966\">339966</td> \n   <td align=\"center\" bgcolor=\"#339999\">339999</td> \n   <td align=\"center\" bgcolor=\"#3399cc\">3399CC</td> \n   <td align=\"center\" bgcolor=\"#3399ff\">3399FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#33cc00\">33CC00</td> \n   <td align=\"center\" bgcolor=\"#33cc33\">33CC33</td> \n   <td align=\"center\" bgcolor=\"#33cc66\">33CC66</td> \n   <td align=\"center\" bgcolor=\"#33cc99\">33CC99</td> \n   <td align=\"center\" bgcolor=\"#33cccc\">33CCCC</td> \n   <td align=\"center\" bgcolor=\"#33ccff\">33CCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#33ff00\">33FF00</td> \n   <td align=\"center\" bgcolor=\"#33ff33\">33FF33</td> \n   <td align=\"center\" bgcolor=\"#33ff66\">33FF66</td> \n   <td align=\"center\" bgcolor=\"#33ff99\">33FF99</td> \n   <td align=\"center\" bgcolor=\"#33ffcc\">33FFCC</td> \n   <td align=\"center\" bgcolor=\"#33ffff\">33FFFF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#660000\">660000</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#660033\">660033</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#660066\">660066</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#660099\">660099</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#6600cc\">6600CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#6600ff\">6600FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#663300\">663300</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#663333\">663333</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#663366\">663366</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#663399\">663399</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#6633cc\">6633CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#6633ff\">6633FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#666600\">666600</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#666633\">666633</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#666666\">666666</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#666699\">666699</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#6666cc\">6666CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#6666ff\">6666FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#669900\">669900</td> \n   <td align=\"center\" bgcolor=\"#669933\">669933</td> \n   <td align=\"center\" bgcolor=\"#669966\">669966</td> \n   <td align=\"center\" bgcolor=\"#669999\">669999</td> \n   <td align=\"center\" bgcolor=\"#6699cc\">6699CC</td> \n   <td align=\"center\" bgcolor=\"#6699ff\">6699FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#66cc00\">66CC00</td> \n   <td align=\"center\" bgcolor=\"#66cc33\">66CC33</td> \n   <td align=\"center\" bgcolor=\"#66cc66\">66CC66</td> \n   <td align=\"center\" bgcolor=\"#66cc99\">66CC99</td> \n   <td align=\"center\" bgcolor=\"#66cccc\">66CCCC</td> \n   <td align=\"center\" bgcolor=\"#66ccff\">66CCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#66ff00\">66FF00</td> \n   <td align=\"center\" bgcolor=\"#66ff33\">66FF33</td> \n   <td align=\"center\" bgcolor=\"#66ff66\">66FF66</td> \n   <td align=\"center\" bgcolor=\"#66ff99\">66FF99</td> \n   <td align=\"center\" bgcolor=\"#66ffcc\">66FFCC</td> \n   <td align=\"center\" bgcolor=\"#66ffff\">66FFFF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#990000\">990000</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#990033\">990033</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#990066\">990066</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#990099\">990099</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#9900cc\">9900CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#9900ff\">9900FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#993300\">993300</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#993333\">993333</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#993366\">993366</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#993399\">993399</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#9933cc\">9933CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#9933ff\">9933FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#996600\">996600</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#996633\">996633</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#996666\">996666</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#996699\">996699</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#9966cc\">9966CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#9966ff\">9966FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#999900\">999900</td> \n   <td align=\"center\" bgcolor=\"#999933\">999933</td> \n   <td align=\"center\" bgcolor=\"#999966\">999966</td> \n   <td align=\"center\" bgcolor=\"#999999\">999999</td> \n   <td align=\"center\" bgcolor=\"#9999cc\">9999CC</td> \n   <td align=\"center\" bgcolor=\"#9999ff\">9999FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#99cc00\">99CC00</td> \n   <td align=\"center\" bgcolor=\"#99cc33\">99CC33</td> \n   <td align=\"center\" bgcolor=\"#99cc66\">99CC66</td> \n   <td align=\"center\" bgcolor=\"#99cc99\">99CC99</td> \n   <td align=\"center\" bgcolor=\"#99cccc\">99CCCC</td> \n   <td align=\"center\" bgcolor=\"#99ccff\">99CCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#99ff00\">99FF00</td> \n   <td align=\"center\" bgcolor=\"#99ff33\">99FF33</td> \n   <td align=\"center\" bgcolor=\"#99ff66\">99FF66</td> \n   <td align=\"center\" bgcolor=\"#99ff99\">99FF99</td> \n   <td align=\"center\" bgcolor=\"#99ffcc\">99FFCC</td> \n   <td align=\"center\" bgcolor=\"#99ffff\">99FFFF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc0000\">CC0000</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc0033\">CC0033</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc0066\">CC0066</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc0099\">CC0099</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc00cc\">CC00CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc00ff\">CC00FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc3300\">CC3300</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc3333\">CC3333</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc3366\">CC3366</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc3399\">CC3399</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc33cc\">CC33CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc33ff\">CC33FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc6600\">CC6600</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc6633\">CC6633</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc6666\">CC6666</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc6699\">CC6699</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc66cc\">CC66CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#cc66ff\">CC66FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#cc9900\">CC9900</td> \n   <td align=\"center\" bgcolor=\"#cc9933\">CC9933</td> \n   <td align=\"center\" bgcolor=\"#cc9966\">CC9966</td> \n   <td align=\"center\" bgcolor=\"#cc9999\">CC9999</td> \n   <td align=\"center\" bgcolor=\"#cc99cc\">CC99CC</td> \n   <td align=\"center\" bgcolor=\"#cc99ff\">CC99FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#cccc00\">CCCC00</td> \n   <td align=\"center\" bgcolor=\"#cccc33\">CCCC33</td> \n   <td align=\"center\" bgcolor=\"#cccc66\">CCCC66</td> \n   <td align=\"center\" bgcolor=\"#cccc99\">CCCC99</td> \n   <td align=\"center\" bgcolor=\"#cccccc\">CCCCCC</td> \n   <td align=\"center\" bgcolor=\"#ccccff\">CCCCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#ccff00\">CCFF00</td> \n   <td align=\"center\" bgcolor=\"#ccff33\">CCFF33</td> \n   <td align=\"center\" bgcolor=\"#ccff66\">CCFF66</td> \n   <td align=\"center\" bgcolor=\"#ccff99\">CCFF99</td> \n   <td align=\"center\" bgcolor=\"#ccffcc\">CCFFCC</td> \n   <td align=\"center\" bgcolor=\"#ccffff\">CCFFFF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff0000\">FF0000</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff0033\">FF0033</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff0066\">FF0066</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff0099\">FF0099</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff00cc\">FF00CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff00ff\">FF00FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff3300\">FF3300</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff3333\">FF3333</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff3366\">FF3366</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff3399\">FF3399</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff33cc\">FF33CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff33ff\">FF33FF</td> \n  </tr> \n  <tr> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff6600\">FF6600</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff6633\">FF6633</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff6666\">FF6666</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff6699\">FF6699</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff66cc\">FF66CC</td> \n   <td style=\"color: #ffffff\" align=\"center\" bgcolor=\"#ff66ff\">FF66FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#ff9900\">FF9900</td> \n   <td align=\"center\" bgcolor=\"#ff9933\">FF9933</td> \n   <td align=\"center\" bgcolor=\"#ff9966\">FF9966</td> \n   <td align=\"center\" bgcolor=\"#ff9999\">FF9999</td> \n   <td align=\"center\" bgcolor=\"#ff99cc\">FF99CC</td> \n   <td align=\"center\" bgcolor=\"#ff99ff\">FF99FF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#ffcc00\">FFCC00</td> \n   <td align=\"center\" bgcolor=\"#ffcc33\">FFCC33</td> \n   <td align=\"center\" bgcolor=\"#ffcc66\">FFCC66</td> \n   <td align=\"center\" bgcolor=\"#ffcc99\">FFCC99</td> \n   <td align=\"center\" bgcolor=\"#ffcccc\">FFCCCC</td> \n   <td align=\"center\" bgcolor=\"#ffccff\">FFCCFF</td> \n  </tr> \n  <tr> \n   <td align=\"center\" bgcolor=\"#ffff00\">FFFF00</td> \n   <td align=\"center\" bgcolor=\"#ffff33\">FFFF33</td> \n   <td align=\"center\" bgcolor=\"#ffff66\">FFFF66</td> \n   <td align=\"center\" bgcolor=\"#ffff99\">FFFF99</td> \n   <td align=\"center\" bgcolor=\"#ffffcc\">FFFFCC</td> \n   <td align=\"center\" bgcolor=\"#ffffff\">FFFFFF</td> \n  </tr> \n </tbody> \n</table>', null, 'CSS 颜色|颜色值|Color Examples|16万个不同的颜色|灰阶|网络安全色?|');
INSERT INTO `schoolcontent` VALUES ('132', '134', '<h1>CSS <span class=\"color_h1\">合法颜色值</span> </h1> \n<hr /> \n<h2>CSS Colors</h2> \n<p>CSS的颜色可以通过以下方法指定：</p> \n<ul> \n <li>十六进制颜色</li> \n <li>RGB颜色</li> \n <li>RGBA颜色</li> \n <li>HSL色彩</li> \n <li>HSLA颜色</li> \n <li>预定义/跨浏览器的颜色名称</li> \n</ul> \n<hr /> \n<h2>十六进制颜色</h2> \n<p>所有主要浏览器都支持十六进制颜色值。</p> \n<p>指定一个十六进制的颜色其组成部分是：＃RRGGBB，其中RR（红色），GG（绿色）和BB（蓝色）。所有值必须介于0和FF之间。</p> &lt;p例如，＃0000FF值呈现为蓝色，因为蓝色的组成设置为最高值（FF）而其他设置为0。\n<p></p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p\n  <br /> {\n  <br /> background-color:#ff0000;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_color_hex\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>RGB颜色</h2> \n<p>RGB颜色值在所有主要浏览器都支持。</p> \n<p>RGB颜色值指定：RGB（红，绿，蓝）。每个参数（红色，绿色和蓝色）定义颜色的亮度，可在0和255之间，或一个百分比值（从0％到100％）之间的整数。</p> \n<p>例如RGB（0,0,255）值呈现为蓝色，因为蓝色的参数设置为最高值（255）而其他设置为0。</p> \n<p>此外，下面的值定义相同的颜色：RGB（0,0,255），RGB（0％，0％，100％）。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p\n  <br /> {\n  <br /> background-color:rgb(255,0,0);\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_color_rgb\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>RGBA颜色</h2> \n<p>RGBA颜色值被IE9, Firefox3+, Chrome, Safari,和Opera10+支持。</p> \n<p>RGBA颜色值是RGB颜色值alpha通道的延伸 - 指定对象的透明度。</p> \n<p>RGBA颜色值指定：RGBA（红，绿，蓝，alpha）。 Alpha参数是一个介于0.0（完全透明）和1.0（完全不透明）之间的参数。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p\n  <br /> {\n  <br /> background-color:rgba(255,0,0,0.5);\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_color_rgba\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HSL颜色</h2> \n<p>IE9, Firefox, Chrome, Safari,和Opera 10+.支持HSL颜色值。</p> \n<p>HSL代表色相，饱和度和亮度 - 使用色彩圆柱坐标表示。</p> \n<p>HSL颜色值指定：HSL（色调，饱和度，明度）。</p> \n<p>色相是在色轮上的程度（从0到360）-0（或360）是红色的，120是绿色的，240是蓝色的。饱和度是一个百分比值;0％意味着灰色和100％的阴影，是全彩。亮度也是一个百分点;0％是黑色的，100％是白色的。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p\n  <br /> {\n  <br /> background-color:hsl(120,65%,75%);\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_color_hsl\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HSLA颜色</h2> \n<p>HSLA颜色值被IE9, Firefox3+, Chrome, Safari,和Opera10+.支持.</p> \n<p>HSLA的颜色值是一个带有alpha通道的HSL颜色值的延伸 - 指定对象的透明度。</p> \n<p>指定HSLA颜色值：HSLA（色调，饱和度，亮度，α），α是Alpha参数定义的不透明度。 Alpha参数是一个介于0.0（完全透明）和1.0（完全不透明）之间的参数。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   p\n  <br /> {\n  <br /> background-color:hsla(120,65%,75%,0.3);\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trycss_color_hsla\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>预定义/跨浏览器的颜色名称</h2> \n<p>147是在HTML和CSS颜色规范预定义的颜色名称。你可以查看我们的<a href=\"css-colornames.html\">预定义颜色名称表</a>。</p>', null, 'CSS 合法颜色值|CSS Colors|十六进制颜色|实例|RGB颜色|实例|RGBA颜色|实例|HSL颜色|实例|HSLA颜色|实例|预定义/跨浏览器的颜色名称|');
INSERT INTO `schoolcontent` VALUES ('133', '135', '<h1>CSS <span class=\"color_h1\">颜色名称</span> </h1> \n<hr /> \n<h2>所有浏览器都支持颜色名称</h2> \n<p>147颜色名称定义在HTML和CSS的颜色规格(17个标准色加上130多个其他)。下表列出了所有这些，连同其十六进制值。</p> \n<p><img src=\"http://www.runoob.com/images/lamp.gif\" alt=\"Remark\" /><b>提示:</b> 17种标准颜色：浅绿色，黑色，蓝色，紫红色，灰色，灰色，绿色，石灰，栗色，海军，橄榄，紫，红，银，蓝绿色，白色和黄色。</p> \n<p>点击颜色的名称或十六进制值，伴随着不同的颜色名称或值其背景颜色会改变:</p> \n<hr /> \n<h2>按颜色名称排序</h2> \n<p><a href=\"css-colorsfull.html\">列表按十六进制值进行排序</a></p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"25%\">Color Name</th> \n   <th align=\"left\" width=\"15%\">HEX</th> \n   <th align=\"left\" width=\"43%\">Color</th> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AliceBlue\">AliceBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0F8FF\">#F0F8FF</a></td> \n   <td bgcolor=\"#F0F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AntiqueWhite\">AntiqueWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAEBD7\">#FAEBD7</a></td> \n   <td bgcolor=\"#FAEBD7\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aqua\">Aqua</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aquamarine\">Aquamarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFFD4\">#7FFFD4</a></td> \n   <td bgcolor=\"#7FFFD4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Azure\">Azure</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFFF\">#F0FFFF</a></td> \n   <td bgcolor=\"#F0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Beige\">Beige</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5DC\">#F5F5DC</a></td> \n   <td bgcolor=\"#F5F5DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Bisque\">Bisque</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4C4\">#FFE4C4</a></td> \n   <td bgcolor=\"#FFE4C4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Black\">Black</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000000\">#000000</a></td> \n   <td bgcolor=\"#000000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlanchedAlmond\">BlanchedAlmond</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEBCD\">#FFEBCD</a></td> \n   <td bgcolor=\"#FFEBCD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Blue\">Blue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000FF\">#0000FF</a></td> \n   <td bgcolor=\"#0000FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlueViolet\">BlueViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8A2BE2\">#8A2BE2</a></td> \n   <td bgcolor=\"#8A2BE2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Brown\">Brown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A52A2A\">#A52A2A</a></td> \n   <td bgcolor=\"#A52A2A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BurlyWood\">BurlyWood</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DEB887\">#DEB887</a></td> \n   <td bgcolor=\"#DEB887\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CadetBlue\">CadetBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=5F9EA0\">#5F9EA0</a></td> \n   <td bgcolor=\"#5F9EA0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chartreuse\">Chartreuse</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFF00\">#7FFF00</a></td> \n   <td bgcolor=\"#7FFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chocolate\">Chocolate</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2691E\">#D2691E</a></td> \n   <td bgcolor=\"#D2691E\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Coral\">Coral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF7F50\">#FF7F50</a></td> \n   <td bgcolor=\"#FF7F50\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CornflowerBlue\">CornflowerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6495ED\">#6495ED</a></td> \n   <td bgcolor=\"#6495ED\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cornsilk\">Cornsilk</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF8DC\">#FFF8DC</a></td> \n   <td bgcolor=\"#FFF8DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Crimson\">Crimson</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DC143C\">#DC143C</a></td> \n   <td bgcolor=\"#DC143C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cyan\">Cyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkBlue\">DarkBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00008B\">#00008B</a></td> \n   <td bgcolor=\"#00008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkCyan\">DarkCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008B8B\">#008B8B</a></td> \n   <td bgcolor=\"#008B8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGoldenRod\">DarkGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B8860B\">#B8860B</a></td> \n   <td bgcolor=\"#B8860B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGray\">DarkGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A9A9A9\">#A9A9A9</a></td> \n   <td bgcolor=\"#A9A9A9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGreen\">DarkGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=006400\">#006400</a></td> \n   <td bgcolor=\"#006400\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkKhaki\">DarkKhaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BDB76B\">#BDB76B</a></td> \n   <td bgcolor=\"#BDB76B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkMagenta\">DarkMagenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B008B\">#8B008B</a></td> \n   <td bgcolor=\"#8B008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOliveGreen\">DarkOliveGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=556B2F\">#556B2F</a></td> \n   <td bgcolor=\"#556B2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrange\">DarkOrange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF8C00\">#FF8C00</a></td> \n   <td bgcolor=\"#FF8C00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrchid\">DarkOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9932CC\">#9932CC</a></td> \n   <td bgcolor=\"#9932CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkRed\">DarkRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B0000\">#8B0000</a></td> \n   <td bgcolor=\"#8B0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSalmon\">DarkSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E9967A\">#E9967A</a></td> \n   <td bgcolor=\"#E9967A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSeaGreen\">DarkSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8FBC8F\">#8FBC8F</a></td> \n   <td bgcolor=\"#8FBC8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateBlue\">DarkSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=483D8B\">#483D8B</a></td> \n   <td bgcolor=\"#483D8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateGray\">DarkSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2F4F4F\">#2F4F4F</a></td> \n   <td bgcolor=\"#2F4F4F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkTurquoise\">DarkTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00CED1\">#00CED1</a></td> \n   <td bgcolor=\"#00CED1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkViolet\">DarkViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9400D3\">#9400D3</a></td> \n   <td bgcolor=\"#9400D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepPink\">DeepPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF1493\">#FF1493</a></td> \n   <td bgcolor=\"#FF1493\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepSkyBlue\">DeepSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00BFFF\">#00BFFF</a></td> \n   <td bgcolor=\"#00BFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DimGray\">DimGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=696969\">#696969</a></td> \n   <td bgcolor=\"#696969\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DodgerBlue\">DodgerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=1E90FF\">#1E90FF</a></td> \n   <td bgcolor=\"#1E90FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FireBrick\">FireBrick</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B22222\">#B22222</a></td> \n   <td bgcolor=\"#B22222\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FloralWhite\">FloralWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAF0\">#FFFAF0</a></td> \n   <td bgcolor=\"#FFFAF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=ForestGreen\">ForestGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=228B22\">#228B22</a></td> \n   <td bgcolor=\"#228B22\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Fuchsia\">Fuchsia</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gainsboro\">Gainsboro</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DCDCDC\">#DCDCDC</a></td> \n   <td bgcolor=\"#DCDCDC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GhostWhite\">GhostWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F8F8FF\">#F8F8FF</a></td> \n   <td bgcolor=\"#F8F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gold\">Gold</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFD700\">#FFD700</a></td> \n   <td bgcolor=\"#FFD700\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GoldenRod\">GoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DAA520\">#DAA520</a></td> \n   <td bgcolor=\"#DAA520\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gray\">Gray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808080\">#808080</a></td> \n   <td bgcolor=\"#808080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Green\">Green</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008000\">#008000</a></td> \n   <td bgcolor=\"#008000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GreenYellow\">GreenYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADFF2F\">#ADFF2F</a></td> \n   <td bgcolor=\"#ADFF2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HoneyDew\">HoneyDew</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFF0\">#F0FFF0</a></td> \n   <td bgcolor=\"#F0FFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HotPink\">HotPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF69B4\">#FF69B4</a></td> \n   <td bgcolor=\"#FF69B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=IndianRed \">IndianRed </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD5C5C\">#CD5C5C</a></td> \n   <td bgcolor=\"#CD5C5C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Indigo  \">Indigo </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4B0082\">#4B0082</a></td> \n   <td bgcolor=\"#4B0082\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Ivory\">Ivory</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFF0\">#FFFFF0</a></td> \n   <td bgcolor=\"#FFFFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Khaki\">Khaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0E68C\">#F0E68C</a></td> \n   <td bgcolor=\"#F0E68C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lavender\">Lavender</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E6E6FA\">#E6E6FA</a></td> \n   <td bgcolor=\"#E6E6FA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LavenderBlush\">LavenderBlush</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF0F5\">#FFF0F5</a></td> \n   <td bgcolor=\"#FFF0F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LawnGreen\">LawnGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7CFC00\">#7CFC00</a></td> \n   <td bgcolor=\"#7CFC00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LemonChiffon\">LemonChiffon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFACD\">#FFFACD</a></td> \n   <td bgcolor=\"#FFFACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightBlue\">LightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADD8E6\">#ADD8E6</a></td> \n   <td bgcolor=\"#ADD8E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCoral\">LightCoral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F08080\">#F08080</a></td> \n   <td bgcolor=\"#F08080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCyan\">LightCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E0FFFF\">#E0FFFF</a></td> \n   <td bgcolor=\"#E0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGoldenRodYellow\">LightGoldenRodYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAFAD2\">#FAFAD2</a></td> \n   <td bgcolor=\"#FAFAD2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGray\">LightGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D3D3D3\">#D3D3D3</a></td> \n   <td bgcolor=\"#D3D3D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGreen\">LightGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=90EE90\">#90EE90</a></td> \n   <td bgcolor=\"#90EE90\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightPink\">LightPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFB6C1\">#FFB6C1</a></td> \n   <td bgcolor=\"#FFB6C1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSalmon\">LightSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA07A\">#FFA07A</a></td> \n   <td bgcolor=\"#FFA07A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSeaGreen\">LightSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=20B2AA\">#20B2AA</a></td> \n   <td bgcolor=\"#20B2AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSkyBlue\">LightSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEFA\">#87CEFA</a></td> \n   <td bgcolor=\"#87CEFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSlateGray\">LightSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=778899\">#778899</a></td> \n   <td bgcolor=\"#778899\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSteelBlue\">LightSteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0C4DE\">#B0C4DE</a></td> \n   <td bgcolor=\"#B0C4DE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightYellow\">LightYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFE0\">#FFFFE0</a></td> \n   <td bgcolor=\"#FFFFE0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lime\">Lime</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF00\">#00FF00</a></td> \n   <td bgcolor=\"#00FF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LimeGreen\">LimeGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=32CD32\">#32CD32</a></td> \n   <td bgcolor=\"#32CD32\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Linen\">Linen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAF0E6\">#FAF0E6</a></td> \n   <td bgcolor=\"#FAF0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Magenta\">Magenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Maroon\">Maroon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800000\">#800000</a></td> \n   <td bgcolor=\"#800000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumAquaMarine\">MediumAquaMarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=66CDAA\">#66CDAA</a></td> \n   <td bgcolor=\"#66CDAA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumBlue\">MediumBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000CD\">#0000CD</a></td> \n   <td bgcolor=\"#0000CD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumOrchid\">MediumOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BA55D3\">#BA55D3</a></td> \n   <td bgcolor=\"#BA55D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumPurple\">MediumPurple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9370DB\">#9370DB</a></td> \n   <td bgcolor=\"#9370DB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSeaGreen\">MediumSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=3CB371\">#3CB371</a></td> \n   <td bgcolor=\"#3CB371\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSlateBlue\">MediumSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7B68EE\">#7B68EE</a></td> \n   <td bgcolor=\"#7B68EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSpringGreen\">MediumSpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FA9A\">#00FA9A</a></td> \n   <td bgcolor=\"#00FA9A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumTurquoise\">MediumTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=48D1CC\">#48D1CC</a></td> \n   <td bgcolor=\"#48D1CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumVioletRed\">MediumVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C71585\">#C71585</a></td> \n   <td bgcolor=\"#C71585\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MidnightBlue\">MidnightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=191970\">#191970</a></td> \n   <td bgcolor=\"#191970\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MintCream\">MintCream</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5FFFA\">#F5FFFA</a></td> \n   <td bgcolor=\"#F5FFFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MistyRose\">MistyRose</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4E1\">#FFE4E1</a></td> \n   <td bgcolor=\"#FFE4E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Moccasin\">Moccasin</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4B5\">#FFE4B5</a></td> \n   <td bgcolor=\"#FFE4B5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=NavajoWhite\">NavajoWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDEAD\">#FFDEAD</a></td> \n   <td bgcolor=\"#FFDEAD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Navy\">Navy</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000080\">#000080</a></td> \n   <td bgcolor=\"#000080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OldLace\">OldLace</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FDF5E6\">#FDF5E6</a></td> \n   <td bgcolor=\"#FDF5E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Olive\">Olive</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808000\">#808000</a></td> \n   <td bgcolor=\"#808000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OliveDrab\">OliveDrab</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6B8E23\">#6B8E23</a></td> \n   <td bgcolor=\"#6B8E23\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orange\">Orange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA500\">#FFA500</a></td> \n   <td bgcolor=\"#FFA500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OrangeRed\">OrangeRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF4500\">#FF4500</a></td> \n   <td bgcolor=\"#FF4500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orchid\">Orchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DA70D6\">#DA70D6</a></td> \n   <td bgcolor=\"#DA70D6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGoldenRod\">PaleGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EEE8AA\">#EEE8AA</a></td> \n   <td bgcolor=\"#EEE8AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGreen\">PaleGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=98FB98\">#98FB98</a></td> \n   <td bgcolor=\"#98FB98\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleTurquoise\">PaleTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=AFEEEE\">#AFEEEE</a></td> \n   <td bgcolor=\"#AFEEEE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleVioletRed\">PaleVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DB7093\">#DB7093</a></td> \n   <td bgcolor=\"#DB7093\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PapayaWhip\">PapayaWhip</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEFD5\">#FFEFD5</a></td> \n   <td bgcolor=\"#FFEFD5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PeachPuff\">PeachPuff</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDAB9\">#FFDAB9</a></td> \n   <td bgcolor=\"#FFDAB9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Peru\">Peru</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD853F\">#CD853F</a></td> \n   <td bgcolor=\"#CD853F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Pink\">Pink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFC0CB\">#FFC0CB</a></td> \n   <td bgcolor=\"#FFC0CB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Plum\">Plum</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DDA0DD\">#DDA0DD</a></td> \n   <td bgcolor=\"#DDA0DD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PowderBlue\">PowderBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0E0E6\">#B0E0E6</a></td> \n   <td bgcolor=\"#B0E0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Purple\">Purple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800080\">#800080</a></td> \n   <td bgcolor=\"#800080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Red\">Red</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF0000\">#FF0000</a></td> \n   <td bgcolor=\"#FF0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RosyBrown\">RosyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BC8F8F\">#BC8F8F</a></td> \n   <td bgcolor=\"#BC8F8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RoyalBlue\">RoyalBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4169E1\">#4169E1</a></td> \n   <td bgcolor=\"#4169E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SaddleBrown\">SaddleBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B4513\">#8B4513</a></td> \n   <td bgcolor=\"#8B4513\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Salmon\">Salmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FA8072\">#FA8072</a></td> \n   <td bgcolor=\"#FA8072\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SandyBrown\">SandyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F4A460\">#F4A460</a></td> \n   <td bgcolor=\"#F4A460\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaGreen\">SeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2E8B57\">#2E8B57</a></td> \n   <td bgcolor=\"#2E8B57\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaShell\">SeaShell</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF5EE\">#FFF5EE</a></td> \n   <td bgcolor=\"#FFF5EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Sienna\">Sienna</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A0522D\">#A0522D</a></td> \n   <td bgcolor=\"#A0522D\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Silver\">Silver</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C0C0C0\">#C0C0C0</a></td> \n   <td bgcolor=\"#C0C0C0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SkyBlue\">SkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEEB\">#87CEEB</a></td> \n   <td bgcolor=\"#87CEEB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateBlue\">SlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6A5ACD\">#6A5ACD</a></td> \n   <td bgcolor=\"#6A5ACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateGray\">SlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=708090\">#708090</a></td> \n   <td bgcolor=\"#708090\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Snow\">Snow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAFA\">#FFFAFA</a></td> \n   <td bgcolor=\"#FFFAFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SpringGreen\">SpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF7F\">#00FF7F</a></td> \n   <td bgcolor=\"#00FF7F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SteelBlue\">SteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4682B4\">#4682B4</a></td> \n   <td bgcolor=\"#4682B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tan\">Tan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2B48C\">#D2B48C</a></td> \n   <td bgcolor=\"#D2B48C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Teal\">Teal</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008080\">#008080</a></td> \n   <td bgcolor=\"#008080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Thistle\">Thistle</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D8BFD8\">#D8BFD8</a></td> \n   <td bgcolor=\"#D8BFD8\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tomato\">Tomato</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF6347\">#FF6347</a></td> \n   <td bgcolor=\"#FF6347\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Turquoise\">Turquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=40E0D0\">#40E0D0</a></td> \n   <td bgcolor=\"#40E0D0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Violet\">Violet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EE82EE\">#EE82EE</a></td> \n   <td bgcolor=\"#EE82EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Wheat\">Wheat</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5DEB3\">#F5DEB3</a></td> \n   <td bgcolor=\"#F5DEB3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=White\">White</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFFF\">#FFFFFF</a></td> \n   <td bgcolor=\"#FFFFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=WhiteSmoke\">WhiteSmoke</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5F5\">#F5F5F5</a></td> \n   <td bgcolor=\"#F5F5F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Yellow\">Yellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFF00\">#FFFF00</a></td> \n   <td bgcolor=\"#FFFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=YellowGreen\">YellowGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9ACD32\">#9ACD32</a></td> \n   <td bgcolor=\"#9ACD32\">&nbsp;</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 颜色名称|所有浏览器都支持颜色名称|按颜色名称排序|');
INSERT INTO `schoolcontent` VALUES ('134', '136', '<h1>CSS <span class=\"color_h1\">颜色十六进制值</span> </h1> \n<hr /> \n<h2>按十六进制值排序</h2> \n<p><a href=\"css-colornames.html\">列表按颜色名称进行排序</a></p> \n<table class=\"reference \" cellspacing=\"0\" border=\"1\" width=\"100%\"> \n <tbody>\n  <tr> \n   <th align=\"left\" width=\"25%\">Color Name</th> \n   <th align=\"left\" width=\"15%\">HEX</th> \n   <th align=\"left\" width=\"60%\">Color</th> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Black\">Black</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000000\">#000000</a></td> \n   <td bgcolor=\"#000000\">&nbsp;</td>\n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Navy\">Navy</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=000080\">#000080</a></td> \n   <td bgcolor=\"#000080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkBlue\">DarkBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00008B\">#00008B</a></td> \n   <td bgcolor=\"#00008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumBlue\">MediumBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000CD\">#0000CD</a></td> \n   <td bgcolor=\"#0000CD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Blue\">Blue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=0000FF\">#0000FF</a></td> \n   <td bgcolor=\"#0000FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGreen\">DarkGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=006400\">#006400</a></td> \n   <td bgcolor=\"#006400\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Green\">Green</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008000\">#008000</a></td> \n   <td bgcolor=\"#008000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Teal\">Teal</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008080\">#008080</a></td> \n   <td bgcolor=\"#008080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkCyan\">DarkCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=008B8B\">#008B8B</a></td> \n   <td bgcolor=\"#008B8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepSkyBlue\">DeepSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00BFFF\">#00BFFF</a></td> \n   <td bgcolor=\"#00BFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkTurquoise\">DarkTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00CED1\">#00CED1</a></td> \n   <td bgcolor=\"#00CED1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSpringGreen\">MediumSpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FA9A\">#00FA9A</a></td> \n   <td bgcolor=\"#00FA9A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lime\">Lime</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF00\">#00FF00</a></td> \n   <td bgcolor=\"#00FF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SpringGreen\">SpringGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FF7F\">#00FF7F</a></td> \n   <td bgcolor=\"#00FF7F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aqua\">Aqua</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cyan\">Cyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=00FFFF\">#00FFFF</a></td> \n   <td bgcolor=\"#00FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MidnightBlue\">MidnightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=191970\">#191970</a></td> \n   <td bgcolor=\"#191970\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DodgerBlue\">DodgerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=1E90FF\">#1E90FF</a></td> \n   <td bgcolor=\"#1E90FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSeaGreen\">LightSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=20B2AA\">#20B2AA</a></td> \n   <td bgcolor=\"#20B2AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=ForestGreen\">ForestGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=228B22\">#228B22</a></td> \n   <td bgcolor=\"#228B22\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaGreen\">SeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2E8B57\">#2E8B57</a></td> \n   <td bgcolor=\"#2E8B57\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateGray\">DarkSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=2F4F4F\">#2F4F4F</a></td> \n   <td bgcolor=\"#2F4F4F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LimeGreen\">LimeGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=32CD32\">#32CD32</a></td> \n   <td bgcolor=\"#32CD32\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSeaGreen\">MediumSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=3CB371\">#3CB371</a></td> \n   <td bgcolor=\"#3CB371\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Turquoise\">Turquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=40E0D0\">#40E0D0</a></td> \n   <td bgcolor=\"#40E0D0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RoyalBlue\">RoyalBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4169E1\">#4169E1</a></td> \n   <td bgcolor=\"#4169E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SteelBlue\">SteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4682B4\">#4682B4</a></td> \n   <td bgcolor=\"#4682B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSlateBlue\">DarkSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=483D8B\">#483D8B</a></td> \n   <td bgcolor=\"#483D8B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumTurquoise\">MediumTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=48D1CC\">#48D1CC</a></td> \n   <td bgcolor=\"#48D1CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Indigo  \">Indigo </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=4B0082\">#4B0082</a></td> \n   <td bgcolor=\"#4B0082\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOliveGreen\">DarkOliveGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=556B2F\">#556B2F</a></td> \n   <td bgcolor=\"#556B2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CadetBlue\">CadetBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=5F9EA0\">#5F9EA0</a></td> \n   <td bgcolor=\"#5F9EA0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=CornflowerBlue\">CornflowerBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6495ED\">#6495ED</a></td> \n   <td bgcolor=\"#6495ED\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumAquaMarine\">MediumAquaMarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=66CDAA\">#66CDAA</a></td> \n   <td bgcolor=\"#66CDAA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DimGray\">DimGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=696969\">#696969</a></td> \n   <td bgcolor=\"#696969\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateBlue\">SlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6A5ACD\">#6A5ACD</a></td> \n   <td bgcolor=\"#6A5ACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OliveDrab\">OliveDrab</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=6B8E23\">#6B8E23</a></td> \n   <td bgcolor=\"#6B8E23\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SlateGray\">SlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=708090\">#708090</a></td> \n   <td bgcolor=\"#708090\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSlateGray\">LightSlateGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=778899\">#778899</a></td> \n   <td bgcolor=\"#778899\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumSlateBlue\">MediumSlateBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7B68EE\">#7B68EE</a></td> \n   <td bgcolor=\"#7B68EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LawnGreen\">LawnGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7CFC00\">#7CFC00</a></td> \n   <td bgcolor=\"#7CFC00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chartreuse\">Chartreuse</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFF00\">#7FFF00</a></td> \n   <td bgcolor=\"#7FFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Aquamarine\">Aquamarine</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=7FFFD4\">#7FFFD4</a></td> \n   <td bgcolor=\"#7FFFD4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Maroon\">Maroon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800000\">#800000</a></td> \n   <td bgcolor=\"#800000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Purple\">Purple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=800080\">#800080</a></td> \n   <td bgcolor=\"#800080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Olive\">Olive</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808000\">#808000</a></td> \n   <td bgcolor=\"#808000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gray\">Gray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=808080\">#808080</a></td> \n   <td bgcolor=\"#808080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SkyBlue\">SkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEEB\">#87CEEB</a></td> \n   <td bgcolor=\"#87CEEB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSkyBlue\">LightSkyBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=87CEFA\">#87CEFA</a></td> \n   <td bgcolor=\"#87CEFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlueViolet\">BlueViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8A2BE2\">#8A2BE2</a></td> \n   <td bgcolor=\"#8A2BE2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkRed\">DarkRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B0000\">#8B0000</a></td> \n   <td bgcolor=\"#8B0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkMagenta\">DarkMagenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B008B\">#8B008B</a></td> \n   <td bgcolor=\"#8B008B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SaddleBrown\">SaddleBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8B4513\">#8B4513</a></td> \n   <td bgcolor=\"#8B4513\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSeaGreen\">DarkSeaGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=8FBC8F\">#8FBC8F</a></td> \n   <td bgcolor=\"#8FBC8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGreen\">LightGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=90EE90\">#90EE90</a></td> \n   <td bgcolor=\"#90EE90\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumPurple\">MediumPurple</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9370DB\">#9370DB</a></td> \n   <td bgcolor=\"#9370DB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkViolet\">DarkViolet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9400D3\">#9400D3</a></td> \n   <td bgcolor=\"#9400D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGreen\">PaleGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=98FB98\">#98FB98</a></td> \n   <td bgcolor=\"#98FB98\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrchid\">DarkOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9932CC\">#9932CC</a></td> \n   <td bgcolor=\"#9932CC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=YellowGreen\">YellowGreen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=9ACD32\">#9ACD32</a></td> \n   <td bgcolor=\"#9ACD32\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Sienna\">Sienna</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A0522D\">#A0522D</a></td> \n   <td bgcolor=\"#A0522D\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Brown\">Brown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A52A2A\">#A52A2A</a></td> \n   <td bgcolor=\"#A52A2A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGray\">DarkGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=A9A9A9\">#A9A9A9</a></td> \n   <td bgcolor=\"#A9A9A9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightBlue\">LightBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADD8E6\">#ADD8E6</a></td> \n   <td bgcolor=\"#ADD8E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GreenYellow\">GreenYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=ADFF2F\">#ADFF2F</a></td> \n   <td bgcolor=\"#ADFF2F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleTurquoise\">PaleTurquoise</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=AFEEEE\">#AFEEEE</a></td> \n   <td bgcolor=\"#AFEEEE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSteelBlue\">LightSteelBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0C4DE\">#B0C4DE</a></td> \n   <td bgcolor=\"#B0C4DE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PowderBlue\">PowderBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B0E0E6\">#B0E0E6</a></td> \n   <td bgcolor=\"#B0E0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FireBrick\">FireBrick</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B22222\">#B22222</a></td> \n   <td bgcolor=\"#B22222\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkGoldenRod\">DarkGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=B8860B\">#B8860B</a></td> \n   <td bgcolor=\"#B8860B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumOrchid\">MediumOrchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BA55D3\">#BA55D3</a></td> \n   <td bgcolor=\"#BA55D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=RosyBrown\">RosyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BC8F8F\">#BC8F8F</a></td> \n   <td bgcolor=\"#BC8F8F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkKhaki\">DarkKhaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=BDB76B\">#BDB76B</a></td> \n   <td bgcolor=\"#BDB76B\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Silver\">Silver</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C0C0C0\">#C0C0C0</a></td> \n   <td bgcolor=\"#C0C0C0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MediumVioletRed\">MediumVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=C71585\">#C71585</a></td> \n   <td bgcolor=\"#C71585\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=IndianRed \">IndianRed </a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD5C5C\">#CD5C5C</a></td> \n   <td bgcolor=\"#CD5C5C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Peru\">Peru</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=CD853F\">#CD853F</a></td> \n   <td bgcolor=\"#CD853F\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Chocolate\">Chocolate</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2691E\">#D2691E</a></td> \n   <td bgcolor=\"#D2691E\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tan\">Tan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D2B48C\">#D2B48C</a></td> \n   <td bgcolor=\"#D2B48C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGray\">LightGray</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D3D3D3\">#D3D3D3</a></td> \n   <td bgcolor=\"#D3D3D3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Thistle\">Thistle</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=D8BFD8\">#D8BFD8</a></td> \n   <td bgcolor=\"#D8BFD8\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orchid\">Orchid</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DA70D6\">#DA70D6</a></td> \n   <td bgcolor=\"#DA70D6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GoldenRod\">GoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DAA520\">#DAA520</a></td> \n   <td bgcolor=\"#DAA520\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleVioletRed\">PaleVioletRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DB7093\">#DB7093</a></td> \n   <td bgcolor=\"#DB7093\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Crimson\">Crimson</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DC143C\">#DC143C</a></td> \n   <td bgcolor=\"#DC143C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gainsboro\">Gainsboro</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DCDCDC\">#DCDCDC</a></td> \n   <td bgcolor=\"#DCDCDC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Plum\">Plum</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DDA0DD\">#DDA0DD</a></td> \n   <td bgcolor=\"#DDA0DD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BurlyWood\">BurlyWood</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=DEB887\">#DEB887</a></td> \n   <td bgcolor=\"#DEB887\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCyan\">LightCyan</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E0FFFF\">#E0FFFF</a></td> \n   <td bgcolor=\"#E0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Lavender\">Lavender</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E6E6FA\">#E6E6FA</a></td> \n   <td bgcolor=\"#E6E6FA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkSalmon\">DarkSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=E9967A\">#E9967A</a></td> \n   <td bgcolor=\"#E9967A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Violet\">Violet</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EE82EE\">#EE82EE</a></td> \n   <td bgcolor=\"#EE82EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PaleGoldenRod\">PaleGoldenRod</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=EEE8AA\">#EEE8AA</a></td> \n   <td bgcolor=\"#EEE8AA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightCoral\">LightCoral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F08080\">#F08080</a></td> \n   <td bgcolor=\"#F08080\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Khaki\">Khaki</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0E68C\">#F0E68C</a></td> \n   <td bgcolor=\"#F0E68C\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AliceBlue\">AliceBlue</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0F8FF\">#F0F8FF</a></td> \n   <td bgcolor=\"#F0F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HoneyDew\">HoneyDew</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFF0\">#F0FFF0</a></td> \n   <td bgcolor=\"#F0FFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Azure\">Azure</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F0FFFF\">#F0FFFF</a></td> \n   <td bgcolor=\"#F0FFFF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SandyBrown\">SandyBrown</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F4A460\">#F4A460</a></td> \n   <td bgcolor=\"#F4A460\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Wheat\">Wheat</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5DEB3\">#F5DEB3</a></td> \n   <td bgcolor=\"#F5DEB3\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Beige\">Beige</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5DC\">#F5F5DC</a></td> \n   <td bgcolor=\"#F5F5DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=WhiteSmoke\">WhiteSmoke</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5F5F5\">#F5F5F5</a></td> \n   <td bgcolor=\"#F5F5F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MintCream\">MintCream</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F5FFFA\">#F5FFFA</a></td> \n   <td bgcolor=\"#F5FFFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=GhostWhite\">GhostWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=F8F8FF\">#F8F8FF</a></td> \n   <td bgcolor=\"#F8F8FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Salmon\">Salmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FA8072\">#FA8072</a></td> \n   <td bgcolor=\"#FA8072\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=AntiqueWhite\">AntiqueWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAEBD7\">#FAEBD7</a></td> \n   <td bgcolor=\"#FAEBD7\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Linen\">Linen</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAF0E6\">#FAF0E6</a></td> \n   <td bgcolor=\"#FAF0E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightGoldenRodYellow\">LightGoldenRodYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FAFAD2\">#FAFAD2</a></td> \n   <td bgcolor=\"#FAFAD2\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OldLace\">OldLace</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FDF5E6\">#FDF5E6</a></td> \n   <td bgcolor=\"#FDF5E6\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Red\">Red</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF0000\">#FF0000</a></td> \n   <td bgcolor=\"#FF0000\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Fuchsia\">Fuchsia</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Magenta\">Magenta</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF00FF\">#FF00FF</a></td> \n   <td bgcolor=\"#FF00FF\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DeepPink\">DeepPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF1493\">#FF1493</a></td> \n   <td bgcolor=\"#FF1493\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=OrangeRed\">OrangeRed</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF4500\">#FF4500</a></td> \n   <td bgcolor=\"#FF4500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Tomato\">Tomato</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF6347\">#FF6347</a></td> \n   <td bgcolor=\"#FF6347\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=HotPink\">HotPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF69B4\">#FF69B4</a></td> \n   <td bgcolor=\"#FF69B4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Coral\">Coral</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF7F50\">#FF7F50</a></td> \n   <td bgcolor=\"#FF7F50\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=DarkOrange\">DarkOrange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FF8C00\">#FF8C00</a></td> \n   <td bgcolor=\"#FF8C00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightSalmon\">LightSalmon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA07A\">#FFA07A</a></td> \n   <td bgcolor=\"#FFA07A\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Orange\">Orange</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFA500\">#FFA500</a></td> \n   <td bgcolor=\"#FFA500\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightPink\">LightPink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFB6C1\">#FFB6C1</a></td> \n   <td bgcolor=\"#FFB6C1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Pink\">Pink</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFC0CB\">#FFC0CB</a></td> \n   <td bgcolor=\"#FFC0CB\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Gold\">Gold</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFD700\">#FFD700</a></td> \n   <td bgcolor=\"#FFD700\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PeachPuff\">PeachPuff</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDAB9\">#FFDAB9</a></td> \n   <td bgcolor=\"#FFDAB9\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=NavajoWhite\">NavajoWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFDEAD\">#FFDEAD</a></td> \n   <td bgcolor=\"#FFDEAD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Moccasin\">Moccasin</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4B5\">#FFE4B5</a></td> \n   <td bgcolor=\"#FFE4B5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Bisque\">Bisque</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4C4\">#FFE4C4</a></td> \n   <td bgcolor=\"#FFE4C4\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=MistyRose\">MistyRose</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFE4E1\">#FFE4E1</a></td> \n   <td bgcolor=\"#FFE4E1\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=BlanchedAlmond\">BlanchedAlmond</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEBCD\">#FFEBCD</a></td> \n   <td bgcolor=\"#FFEBCD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=PapayaWhip\">PapayaWhip</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFEFD5\">#FFEFD5</a></td> \n   <td bgcolor=\"#FFEFD5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LavenderBlush\">LavenderBlush</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF0F5\">#FFF0F5</a></td> \n   <td bgcolor=\"#FFF0F5\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=SeaShell\">SeaShell</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF5EE\">#FFF5EE</a></td> \n   <td bgcolor=\"#FFF5EE\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Cornsilk\">Cornsilk</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFF8DC\">#FFF8DC</a></td> \n   <td bgcolor=\"#FFF8DC\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LemonChiffon\">LemonChiffon</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFACD\">#FFFACD</a></td> \n   <td bgcolor=\"#FFFACD\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=FloralWhite\">FloralWhite</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAF0\">#FFFAF0</a></td> \n   <td bgcolor=\"#FFFAF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Snow\">Snow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFAFA\">#FFFAFA</a></td> \n   <td bgcolor=\"#FFFAFA\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Yellow\">Yellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFF00\">#FFFF00</a></td> \n   <td bgcolor=\"#FFFF00\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=LightYellow\">LightYellow</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFE0\">#FFFFE0</a></td> \n   <td bgcolor=\"#FFFFE0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=Ivory\">Ivory</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFF0\">#FFFFF0</a></td> \n   <td bgcolor=\"#FFFFF0\">&nbsp;</td> \n  </tr> \n  <tr> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?color=White\">White</a>&nbsp;</td> \n   <td align=\"left\"><a target=\"_blank\" href=\"http://www.runoob.com/try/color.php?hex=FFFFFF\">#FFFFFF</a></td> \n   <td bgcolor=\"#FFFFFF\">&nbsp;</td> \n  </tr> \n </tbody>\n</table>', null, 'CSS 颜色十六进制值|按十六进制值排序|');
INSERT INTO `schoolcontent` VALUES ('135', '137', '<h1>JavaScript <span class=\"color_h1\">教程</span> </h1> \n<div class=\"tutintro\"> \n <p>JavaScript 是 Web 的编程语言。</p> \n <p>所有现代的 HTML 页面都使用 JavaScript。</p> \n <p>JavaScript 非常容易学。</p> \n <p>本教程将教你学习从初级到高级JavaScript知识。</p> \n</div> \n<h2 class=\"tutheader\">JavaScript 在线实例</h2> \n<p>本教程包含了大量的 JavaScript 实例， 您可以点击 &quot;尝试一下&quot; 来在线查看实例。</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_result\"> \n  <script>\r\nfunction displayDate()\r\n{\r\ndocument.getElementById(\"demo\").innerHTML=Date();\r\n}\r\n</script> \n  <h2>我的第一个 JavaScript 程序</h2> \n  <p id=\"demo\">这是一个段落</p> \n  <button type=\"button\" onclick=\"displayDate()\">显示日期</button> \n  <br />\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_events\">尝试一下 &raquo;</a> \n</div> \n<p>在每个页面您可以点击 &quot;尝试一下&quot; 在线查看实例！！！</p> \n<p>尝试每个实例，并且在线修改代码，查看不同的运行效果！！！</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>如果能根据本站的实例一步一个脚印学习，你将会在很短的时间内学会 JavaScript。 </td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<h2 class=\"tutheader\">为什么学习 JavaScript?</h2> \n<p>JavaScript web 开发人员必须学习的 3 门语言中的一门：</p> \n<ol> \n <li><strong>HTML</strong> 定义了网页的内容</li> \n <li><strong>CSS</strong> 描述了网页的布局</li> \n <li><strong>JavaScript</strong> 网页的行为</li> \n</ol> \n<p>本教程是关于 JavaScript 及介绍 JavaScript 如何与 HTML 和 CSS 一起工作。</p> \n<br />\n<h2 class=\"tutheader\">谁适合阅读本教程?</h2> \n<p>1. 如果您想学习 JavaScript，您可以学习本教程：</p> \n<p>了解 JavaScript 是如何与 HTML 和 CSS 一起工作的。</p> \n<p>2. 如果在此之前您已经使用过 JavaScript，您也可以阅读本教程：</p> \n<p>JavaScript 一直在升级，所以我们需要时刻了解 JavaScript 的新技术。</p> \n<br />\n<h2 class=\"tutheader\">阅读本教程前，您需要了解的知识：</h2> \n<p>阅读本教程，您需要有以下基础：</p> \n<ul> \n <li>HTML 和 CSS 基础</li> \n</ul> \n<p>如果您想学习这些基础知识，您可以在我们的首页找到相应的教程<a href=\"http://www.runoob.com/\">菜鸟教程</a>。</p> \n<br />\n<h2 class=\"tutheader\">JavaScript 实例</h2> \n<p>学习 100 多个 JavaScript 实例！</p> \n<p>在实例页面中，您可以点击 &quot;尝试一下&quot; 来查看 JavaScript 在线实例。</p> \n<ul> \n <li><a href=\"js-examples.html\">JavaScript 实例</a></li> \n <li><a href=\"js-ex-objects.html\">JavaScript 对象实例</a></li> \n <li><a href=\"js-ex-browser.html\">JavaScript 浏览器支持实例</a></li> \n <li><a href=\"js-ex-dom.html\">JavaScript HTML DOM 实例</a></li> \n</ul> \n<br />\n<h2 class=\"tutheader\">JavaScript 测验</h2> \n<p>在菜鸟教程中测试您的 JavaScript 技能！</p> \n<br />\n<h2 class=\"tutheader\">JavaScript 参考手册</h2> \n<p>在菜鸟教程中，我们为您提供完整的 JavaScript 对象、浏览器对象、HTML DOM 对象参考手册。</p> \n<p>以下手册包含了每个对象、属性、方法的实例。</p> \n<ul> \n <li><a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\">JavaScript 内置对象</a></li> \n <li><a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\">Browser 对象</a></li> \n <li><a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\">HTML DOM 对象</a></li> \n</ul>', null, 'JavaScript 教程|JavaScript 在线实例|实例|我的第一个 JavaScript 程序|为什么学习 JavaScript?|谁适合阅读本教程?|阅读本教程前，您需要了解的知识：|JavaScript 实例|JavaScript 测验|JavaScript 参考手册|');
INSERT INTO `schoolcontent` VALUES ('136', '138', '<h1>JavaScript <span class=\"color_h1\">简介</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 是互联网上最流行的脚本语言，这门语言可用于 HTML 和 web，更可广泛用于服务器、PC、笔记本电脑、平板电脑和智能手机等设备。</p> \n<hr /> \n<h2>JavaScript 是脚本语言</h2> \n<p>JavaScript 是一种轻量级的编程语言。</p> \n<p>JavaScript 是可插入 HTML 页面的编程代码。</p> \n<p>JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行。</p> \n<p>JavaScript 很容易学习。</p> \n<hr /> \n<h2>您将学到什么</h2> \n<p>下面是您将在本教程中学到的主要内容。</p> \n<hr /> \n<h2>JavaScript：直接写入 HTML 输出流</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   document.write(&quot;&lt;h1&gt;这是一个标题&lt;/h1&gt;&quot;);\n  <br />document.write(&quot;&lt;p&gt;这是一个段落。&lt;/p&gt;&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_document_write\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 您只能在 HTML 输出中使用 document.write。如果您在文档加载后使用该方法，会覆盖整个文档。 </td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>JavaScript：对事件的反应</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;button type=&quot;button&quot; onclick=&quot;alert(\'欢迎!\')&quot;&gt;点我!&lt;/button&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_alert\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>alert() 函数在 JavaScript 中并不常用，但它对于代码测试非常方便。</p>\n<p> </p>\n<p> onclick 事件只是您即将在本教程中学到的众多事件之一。 </p> \n<hr /> \n<h2>JavaScript：改变 HTML 内容</h2> \n<p>使用 JavaScript 来处理 HTML 内容是非常强大的功能。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   x=document.getElementById(&quot;demo&quot;)&nbsp; //查找元素\n  <br /> x.innerHTML=&quot;Hello JavaScript&quot;;&nbsp;&nbsp;&nbsp; //改变内容 \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_inner_html\">尝试一下 &raquo;</a> \n</div> \n<p>您会经常看到 <strong>document.getElementById(&quot;</strong><em><strong>some id</strong></em><strong>&quot;)</strong>。这个方法是 HTML DOM 中定义的。</p> \n<p>DOM (<strong>D</strong>ocument <strong>O</strong>bject <strong>M</strong>odel)（文档对象模型）是用于访问 HTML 元素的正式 W3C 标准。 </p> \n<p>您将在本教程的多个章节中学到有关 HTML DOM 的知识。</p> \n<hr /> \n<h2>JavaScript：改变 HTML 图像</h2> \n<p>本例会动态地改变 HTML &lt;image&gt; 的来源（src）：</p> \n<div class=\"example\"> \n <script>\r\nfunction changeImage()\r\n{\r\nelement=document.getElementById(\'myimage\')\r\nif (element.src.match(\"bulbon\"))\r\n  {\r\n  element.src=\"/images/pic_bulboff.gif\";\r\n  }\r\nelse\r\n  {\r\n  element.src=\"/images/pic_bulbon.gif\";\r\n  }\r\n}\r\n</script> \n <h2 class=\"example_head\">点亮灯泡</h2> \n <div class=\"example_result notranslate\" style=\"text-align:center\"> \n  <img id=\"myimage\" onclick=\"changeImage()\" border=\"0\" src=\"http://www.runoob.com/images/pic_bulboff.gif\" width=\"100\" height=\"180\" />\n  <p>点击灯泡就可以打开或关闭这盏灯</p> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_lightbulb\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>JavaScript 能够改变任意 HTML 元素的大多数属性，而不仅仅是图片。</p> \n<hr /> \n<h2>JavaScript：改变 HTML 样式</h2> \n<p>改变 HTML 元素的样式，属于改变 HTML 属性的变种。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   x=document.getElementById(&quot;demo&quot;)&nbsp; //找到元素 \n  <br />x.style.color=&quot;#ff0000&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //改变样式\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_style\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>JavaScript：验证输入 </h2> \n<p>JavaScript 常用于验证用户的输入。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   if isNaN(x) {alert(&quot;不是数字&quot;)};\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_validate\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>您知道吗？</h2> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> JavaScript 与 Java 是两种完全不同的语言，无论在概念上还是设计上。<br /> Java（由 Sun 发明）是更复杂的编程语言。<br /><br />ECMA-262 是 JavaScript 标准的官方名称。<br /><br /> JavaScript 由 Brendan Eich 发明。它于 1995 年出现在 Netscape 中（该浏览器已停止更新），并于 1997 年被 ECMA（一个标准协会）采纳。 </td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 简介|JavaScript 是脚本语言|您将学到什么|JavaScript：直接写入 HTML 输出流|实例|JavaScript：对事件的反应|实例|JavaScript：改变 HTML 内容|实例|JavaScript：改变 HTML 图像|点亮灯泡|JavaScript：改变 HTML 样式|实例|JavaScript：验证输入|实例|您知道吗？|');
INSERT INTO `schoolcontent` VALUES ('137', '139', '<h1>JavaScript <span class=\"color_h1\">用法</span> </h1> \n<hr /> \n<p class=\"intro\">HTML 中的脚本必须位于 &lt;script&gt; 与 &lt;/script&gt; 标签之间。</p> \n<p class=\"intro\">脚本可被放置在 HTML 页面的 &lt;body&gt; 和 &lt;head&gt; 部分中。</p> \n<hr /> \n<h2>&lt;script&gt; 标签</h2> \n<p>如需在 HTML 页面中插入 JavaScript，请使用 &lt;script&gt; 标签。</p> \n<p>&lt;script&gt; 和 &lt;/script&gt; 会告诉 JavaScript 在何处开始和结束。</p> \n<p> &lt;script&gt; 和 &lt;/script&gt; 之间的代码行包含了 JavaScript:</p> \n<div class=\"code notranslate\"> \n <div> \n  <span class=\"marked\"> &lt;script&gt;<br /> alert(&quot;我的第一个 JavaScript&quot;);<br /> &lt;/script&gt;</span> \n </div> \n</div> \n<p>您无需理解上面的代码。只需明白，浏览器会解释并执行位于 &lt;script&gt; 和 &lt;/script&gt;之间的 JavaScript 代码&nbsp; </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 那些老旧的实例可能会在 &lt;script&gt; 标签中使用 type=&quot;text/javascript&quot;。现在已经不必这样做了。JavaScript 是所有现代浏览器以及 HTML5 中的默认脚本语言。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2> &lt;body&gt; 中的 JavaScript </h2> \n<p>在本例中，JavaScript 会在页面加载时向 HTML 的 &lt;body&gt; 写文本：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;body&gt;\n  <br /> .\n  <br /> .\n  <br />\n  <span class=\"marked\">&lt;script&gt;<br /> document.write(&quot;&lt;h1&gt;这是一个标题&lt;/h1&gt;&quot;);<br />document.write(&quot;&lt;p&gt;这是一个段落&lt;/p&gt;&quot;);<br /> &lt;/script&gt;<br /></span>.\n  <br /> .\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_intro_document_write\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 函数和事件</h2> \n<p>上面例子中的 JavaScript 语句，会在页面加载时执行。</p> \n<p>通常，我们需要在某个事件发生时执行代码，比如当用户点击按钮时。</p> \n<p>如果我们把 JavaScript 代码放入函数中，就可以在事件发生时调用该函数。</p> \n<p>您将在稍后的章节学到更多有关 JavaScript 函数和事件的知识。</p> \n<hr /> \n<h2>在 &lt;head&gt; 或者 &lt;body&gt; 的JavaScript </h2> \n<p>您可以在 HTML 文档中放入不限数量的脚本。</p> \n<p>脚本可位于 HTML 的 &lt;body&gt; 或 &lt;head&gt; 部分中，或者同时存在于两个部分中。</p> \n<p>通常的做法是把函数放入 &lt;head&gt; 部分中，或者放在页面底部。这样就可以把它们安置到同一处位置，不会干扰页面的内容。</p> \n<hr /> \n<h2>&lt;head&gt; 中的 JavaScript 函数</h2> \n<p>在本例中，我们把一个 JavaScript 函数放置到 HTML 页面的 &lt;head&gt; 部分。</p> \n<p>该函数会在点击按钮时被调用：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <p>&lt;head&gt;<br /><span class=\"marked\">&lt;script&gt;<br /> function myFunction()<br /> {<br /> document.getElementById(&quot;demo&quot;).innerHTML=&quot;我的第一个 JavaScript 函数&quot;;<br /> }<br /> &lt;/script&gt;</span><br /> &lt;/head&gt;</p> \n  <p>&lt;body&gt;</p> \n  <p>&lt;h1&gt;我的 Web 页面&lt;/h1&gt;</p> \n  <p>&lt;p id=&quot;demo&quot;&gt;一个段落&lt;/p&gt;</p> \n  <p>&lt;button type=&quot;button&quot; <span class=\"marked\">onclick=&quot;myFunction()&quot;</span>&gt;尝试一下&lt;/button&gt;</p> \n  <p>&lt;/body&gt;<br /> &lt;/html&gt; </p> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_whereto_head\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>&lt;body&gt; 中的 JavaScript 函数</h2> \n<p>在本例中，我们把一个 JavaScript 函数放置到 HTML 页面的 &lt;body&gt; 部分。</p> \n<p>该函数会在点击按钮时被调用：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br />&lt;body&gt; \n  <p>&lt;h1&gt;我的 Web 页面&lt;/h1&gt;</p> \n  <p>&lt;p id=&quot;demo&quot;&gt;一个段落&lt;/p&gt;</p> \n  <p>&lt;button type=&quot;button&quot; onclick=&quot;<span class=\"marked\">myFunction()</span>&quot;&gt;尝试一下&lt;/button&gt;</p> \n  <p> <span class=\"marked\">&lt;script&gt;<br /> function myFunction()<br /> {<br /> document.getElementById(&quot;demo&quot;).innerHTML=&quot;我的第一个 JavaScript 函数&quot;;<br /> }<br /> &lt;/script&gt;</span></p> \n  <p>&lt;/body&gt;<br /> &lt;/html&gt; </p> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_whereto_body\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>外部的 JavaScript</h2> \n<p>也可以把脚本保存到外部文件中。外部文件通常包含被多个网页使用的代码。</p> \n<p>外部 JavaScript 文件的文件扩展名是 .js。</p> \n<p>如需使用外部文件，请在 &lt;script&gt; 标签的 &quot;src&quot; 属性中设置该 .js 文件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <span class=\"marked\">&lt;script src=&quot;myScript.js&quot;&gt;&lt;/script&gt;</span>\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_externalexample\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>你可以将脚本放置于 &lt;head&gt; 或者 &lt;body&gt;中 实际运行效果与您在 &lt;script&gt; 标签中编写脚本完全一致。<br /></p> \n<p>myScript.js 文件代码如下：</p> \n<pre>\r\nfunction myFunction()\r\n{\r\n    document.getElementById(&quot;demo&quot;).innerHTML=&quot;我的第一个 JavaScript 函数&quot;;\r\n}\r\n</pre> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 外部脚本不能包含 &lt;script&gt; 标签。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 用法|<script> 标签|<body> 中的 JavaScript|实例|JavaScript 函数和事件|在 <head> 或者 <body> 的JavaScript|<head> 中的 JavaScript 函数|实例|<body> 中的 JavaScript 函数|实例|外部的 JavaScript|实例|');
INSERT INTO `schoolcontent` VALUES ('138', '140', '<h1>JavaScript <span class=\"color_h1\">输出</span></h1> \n<hr /> \n<p class=\"intro\">JavaScript 没有任何打印或者输出的函数。</p> \n<h2>JavaScript 显示数据</h2> \n<p>JavaScript 可以通过不同的方式来输出数据：</p> \n<ul> \n <li>使用 <strong>window.alert()</strong> 弹出警告框。</li> \n <li>使用 <strong>document.write()</strong> 方法将内容写到 HTML 文档中。</li> \n <li>使用 <strong>innerHTML</strong> 写入到 HTML 元素。</li> \n <li>使用 <strong>console.log()</strong> 写入到浏览器的控制台。</li> \n</ul> \n<hr /> \n<h2>使用 window.alert()</h2> \n<p>你可以弹出警告框来显示数据：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>我的第一个页面\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>我的第一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />window.alert(5 + 6);\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/html</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_output_alert\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>操作 HTML 元素</h2> \n<p>如需从 JavaScript 访问某个 HTML 元素，您可以使用 document.getElementById(<i>id</i>) 方法。 </p> \n<p></p>\n<p>请使用 &quot;id&quot; 属性来标识 HTML 元素，并 innerHTML 来获取或插入元素内容：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>我的第一个 Web 页面\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span> \n  <span class=\"highATT\">id=</span>\n  <span class=\"highVAL\">&quot;demo&quot;</span>\n  <span class=\"highGT\">&gt;</span>我的第一个段落\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> document.getElementById(&quot;demo&quot;).innerHTML = &quot;段落已修改。&quot;;\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/html</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_dom\">尝试一下 &raquo;</a> \n</div> \n<p>以上 JavaScript 语句（在 &lt;script&gt; 标签中）可以在 web 浏览器中执行：</p> \n<p><strong>document.getElementById(&quot;demo&quot;)</strong> 是使用 id 属性来查找 HTML 元素的 JavaScript 代码 。</p> \n<p><strong>innerHTML = &quot;段落已修改。&quot;</strong> 是用于修改元素的 HTML 内容(innerHTML)的 JavaScript 代码。 </p> \n<hr /> \n<h2>在本教程中</h2> \n<p> 在大多数情况下，在本教程中，我们将使用上面描述的方法来输出：</p> \n<p>下面的例子直接把 id=&quot;demo&quot; 的 &lt;p&gt; 元素写到 HTML 文档输出中：</p> \n<hr /> \n<h2>写到 HTML 文档</h2> \n<p>出于测试目的，您可以将JavaScript直接写在HTML 文档中：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>我的第一个 Web 页面\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>我的第一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />document.write(Date());\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/html</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_write\">尝试一下 &raquo;</a> \n</div> \n<p> </p>\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> <p>请使用 document.write() 仅仅向文档输出写内容。 </p> <p>如果在文档已完成加载后执行 document.write，整个 HTML 页面将被覆盖。</p> </td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>我的第一个 Web 页面\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br />\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">p</span>\n  <span class=\"highGT\">&gt;</span>我的第一个段落。\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/p</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">button</span> \n  <span class=\"highATT\">onclick=</span>\n  <span class=\"highVAL\">&quot;myFunction()&quot;</span>\n  <span class=\"highGT\">&gt;</span>点我\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/button</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> function myFunction() {\n  <br /> &nbsp;&nbsp;&nbsp; document.write(Date());\n  <br /> }\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/html</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_write_over\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>写到控制台</h2> \n<p>如果您的浏览器支持调试，你可以使用 <strong>console.log()</strong> 方法在浏览器中显示 JavaScript 值。 </p> \n<p>浏览器中使用 F12 来启用调试模式， 在调试窗口中点击 &quot;Console&quot; 菜单。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">!DOCTYPE</span> \n  <span class=\"highATT\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">html</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">h1</span>\n  <span class=\"highGT\">&gt;</span>我的第一个 Web 页面\n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/h1</span>\n  <span class=\"highGT\">&gt;</span>\n  <br />\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> a = 5;\n  <br /> b = 6;\n  <br /> c = a + b;\n  <br /> console.log(c);\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/script</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/body</span>\n  <span class=\"highGT\">&gt;</span>\n  <br /> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">/html</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_console\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<p>实例 console 截图：</p>\n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/08/console-log.jpg\" /></p> \n<hr /> \n<h2>您知道吗?</h2> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>程序中调试是测试，查找及减少bug(错误)的过程。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 输出|JavaScript 显示数据|使用 window.alert()|操作 HTML 元素|实例|在本教程中|写到 HTML 文档|实例|实例|写到控制台|实例|您知道吗?|');
INSERT INTO `schoolcontent` VALUES ('139', '141', '<h1>JavaScript <span class=\"color_h1\">语法</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 是一个程序语言。语法规则定义了语言结构。</p> \n<hr /> \n<h2>JavaScript 语法</h2> \n<p>JavaScript 是一个脚本语言。</p> \n<p>它是一个轻量级，但功能强大的编程语言。</p> \n<hr /> \n<h2>JavaScript 字面量</h2> \n<p>在编程语言中，一个字面量是一个常量，如 3.14。</p> \n<p><strong>数字（Number）字面量</strong> 可以是整数或者是小数，或者是科学计数(e)。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   3.14\n  <br />\n  <br /> 1001\n  <br />\n  <br /> 123e5 \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_numbers\">尝试一下 &raquo;</a> \n</div> \n<p><strong>字符串（String）字面量</strong> 可以使用单引号或双引号:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   &quot;John Doe&quot;\n  <br />\n  <br /> \'John Doe\' \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_strings\">尝试一下 &raquo;</a> \n</div> \n<p><strong>表达式字面量</strong> 用于计算：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   5 + 6\n  <br />\n  <br /> 5 * 10 \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_expressions\">尝试一下 &raquo;</a> \n</div> \n<p><strong>数组（Array）字面量</strong> 定义一个数组：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   [40, 100, 1, 5, 25, 10] \n </div> \n</div> \n<p><strong>对象（Object）字面量</strong> 定义一个对象：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   {firstName:&quot;John&quot;, lastName:&quot;Doe&quot;, age:50, eyeColor:&quot;blue&quot;} \n </div> \n</div> \n<p><strong>函数（Function）字面量</strong> 定义一个函数：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   function myFunction(a, b) { return a * b;} \n </div> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 变量</h2> \n<p>在编程语言中，变量用于存储数据值。</p> \n<p>JavaScript 使用关键字 <strong>var</strong> 来定义变量， 使用等号来为变量赋值：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   var x, length\n  <br />\n  <br />x = 5\n  <br />\n  <br /> length = 6 \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_variables\">尝试一下 &raquo;</a> \n</div> \n<p>变量可以通过变量名访问。在指令式语言中，变量通常是可变的。字面量是一个恒定的值。 </p> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>变量是一个<strong>名称</strong>。字面量是一个<strong>值</strong>。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>JavaScript 操作符</h2> \n<p>JavaScript使用 <strong>算术运算符</strong> 来计算值: </p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   (5 + 6) * 10\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_operators\">尝试一下 &raquo;</a> \n</div> \n<p>JavaScript使用<strong>赋值运算符</strong>给变量赋值： </p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   x = 5\n  <br /> y = 6\n  <br /> z = (x + y) * 10 \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_syntax_assign\">尝试一下 &raquo;</a> \n</div> \n<p>JavaScript语言有多种类型的运算符：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>类型</th> \n   <th>实例</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>赋值，算术和位运算符</td> \n   <td>=&nbsp; +&nbsp; -&nbsp; *&nbsp; /</td> \n   <td>在 JS 运算符中描述</td> \n  </tr> \n  <tr> \n   <td>条件，比较及逻辑运算符</td> \n   <td>==&nbsp; != &lt;&nbsp; &gt;&nbsp; </td> \n   <td>在 JS 比较运算符中描述</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>JavaScript 语句</h2> \n<p>在 HTML 中，JavaScript 语句向浏览器发出的命令。</p> \n<p>语句是用分号分隔：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   x = 5 + 6;\n  <br /> y = x * 10;\n </div> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 关键词</h2> \n<p>JavaScript 语句通常于<strong>关键词</strong>为开头。 <strong>var</strong> 关键词告诉浏览器创建一个新的变量：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   var x = 5 + 6;\n  <br />var y = x * 10; \n </div> \n</div> \n<br />\n<hr /> \n<hr />\n<h2>JavaScript 关键字</h2> \n<p> 和其他任何编程语言一样，JavaScript 保留了一些关键字为自己所用。 </p>\n<p> JavaScript 同样保留了一些关键字，这些关键字在当前的语言版本中并没有使用，但在以后 JavaScript 扩展中会用到。 </p>\n<p> JavaScript 关键字必须以字母、下划线（_）或美元符（$）开始。 </p>\n<p> 后续的字符可以是字母、数字、下划线或美元符（数字是不允许作为首字符出现的，以便 JavaScript 可以轻易区分开关键字和数字）。 </p>\n<p> 以下是 JavaScript 中最​​重要的保留字（按字母顺序）：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <td>abstract</td> \n   <td>else</td> \n   <td>instanceof</td> \n   <td>super</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>boolean</td> \n   <td>enum</td> \n   <td>int</td> \n   <td>switch</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>break</td> \n   <td>export</td> \n   <td>interface</td> \n   <td>synchronized</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>byte</td> \n   <td>extends</td> \n   <td>let</td> \n   <td>this</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>case</td> \n   <td>false</td> \n   <td>long</td> \n   <td>throw</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>catch</td> \n   <td>final</td> \n   <td>native</td> \n   <td>throws</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>char</td> \n   <td>finally</td> \n   <td>new</td> \n   <td>transient</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>class</td> \n   <td>float</td> \n   <td>null</td> \n   <td>true</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>const</td> \n   <td>for</td> \n   <td>package</td> \n   <td>try</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>continue</td> \n   <td>function</td> \n   <td>private</td> \n   <td>typeof</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>debugger</td> \n   <td>goto</td> \n   <td>protected</td> \n   <td>var</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>default</td> \n   <td>if</td> \n   <td>public</td> \n   <td>void</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>delete</td> \n   <td>implements</td> \n   <td>return</td> \n   <td>volatile</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>do</td> \n   <td>import</td> \n   <td>short</td> \n   <td>while</td> \n  </tr>\n  <tr> \n  </tr>\n  <tr> \n   <td>double</td> \n   <td>in</td> \n   <td>static</td> \n   <td>with</td> \n  </tr>\n  <tr> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>JavaScript 注释</h2> \n<p>不是所有的 JavaScript 语句都是&quot;命令&quot;。双斜杠 <strong>//</strong> 后的内容将会被浏览器忽略：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   // 我不会执行\n </div> \n</div> \n<hr /> \n<h2>JavaScript 数据类型</h2> \n<p>JavaScript 有多种数据类型：数字，字符串，数组，对象等等：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   var length = 16;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;// Number 通过数字字面量赋值 \n  <br /> var points = x * 10;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Number 通过表达式字面量赋值\n  <br /> var lastName = &quot;Johnson&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // String 通过字符串字面量赋值\n  <br /> var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Array&nbsp; 通过数组字面量赋值\n  <br /> var person = {firstName:&quot;John&quot;, lastName:&quot;Doe&quot;};&nbsp;&nbsp;// Object 通过对象字面量赋值 \n </div> \n</div> \n<br />\n<hr /> \n<h2>数据类型的概念</h2> \n<p>编程语言中，数据类型是一个非常重要的内容。</p> \n<p>为了可以操作变量，了解数据类型的概念非常重要。</p> \n<p>如果没有使用数据类型，以下实例将无法执行：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   16 + &quot;Volvo&quot;\n </div> \n</div> \n<p>16 加上 &quot;Volvo&quot; 是如何计算呢? 以上会产生一个错误还是输出以下结果呢？</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   &quot;16Volvo&quot;\n </div> \n</div> \n<p>你可以在浏览器尝试执行以上代码查看效果。</p> \n<p> 在接下来的章节中你将学到更多关于数据类型的知识。</p> \n<hr /> \n<h2>JavaScript 函数</h2> \n<p> JavaScript 语句可以写在函数内，函数可以重复引用：</p> \n<p> <strong>引用一个函数</strong> = 调用函数(执行函数内的语句)。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br /> &nbsp;&nbsp;&nbsp; return a * b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 返回 a 乘于 b 的结果\n  <br /> } \n </div> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 对大小写敏感。</h2> \n<p>JavaScript 对大小写是敏感的。</p> \n<p>当编写 JavaScript 语句时，请留意是否关闭大小写切换键。</p> \n<p>函数 <strong>getElementById</strong> 与 <strong>getElementbyID</strong> 是不同的。</p> \n<p>同样，变量 <strong>myVariable</strong> 与 <strong>MyVariable</strong> 也是不同的。</p> \n<hr /> \n<h2>JavaScript 字符集</h2> \n<p>JavaScript 使用 Unicode 字符集。</p> \n<p>Unicode 覆盖了所有的字符，包含标点等字符。</p> \n<p>如需进一步了解，请学习我们的 <a href=\"http://www.runoob.com/charsets/ref-html-utf8.html\">完整 Unicode 参考手册</a>。</p> \n<hr /> \n<h2>您知道吗?</h2> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /><br /> </th> \n   <td>JavaScript 中，常见的是驼峰法的命名规则，如 lastName (而不是lastname)。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 语法|JavaScript 语法|JavaScript 字面量|JavaScript 变量|JavaScript 操作符|JavaScript 语句|JavaScript 关键词|JavaScript 关键字|JavaScript 注释|JavaScript 数据类型|数据类型的概念|JavaScript 函数|JavaScript 对大小写敏感。|JavaScript 字符集|您知道吗?|');
INSERT INTO `schoolcontent` VALUES ('140', '142', '<h1>JavaScript <span class=\"color_h1\">语句</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 语句向浏览器发出的命令。语句的作用是告诉浏览器该做什么。</p> \n<hr /> \n<h2>JavaScript 语句</h2> \n<p>JavaScript 语句是发给浏览器的命令。</p> \n<p>这些命令的作用是告诉浏览器要做的事情。</p> \n<p>下面的 JavaScript 语句向 id=&quot;demo&quot; 的 HTML 元素输出文本 &quot;你好 Dolly&quot; ： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate jsHigh\">\n   document.getElementById(\n  <span class=\"highVAL\">&quot;demo&quot;</span>).innerHTML = \n  <span class=\"highVAL\">&quot;你好 Dolly&quot;</span>;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_statement\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>分号 ;</h2> \n<p>分号用于分隔 JavaScript 语句。</p> \n<p>通常我们在每条可执行的语句结尾添加分号。</p> \n<p>使用分号的另一用处是在一行中编写多条语句。</p> \n<div class=\"example\">\n  实例:\n <br />\n <br /> \n <div class=\"example_code\">\n   a = \n  <span class=\"highVAL\">5</span>;\n  <br /> b = \n  <span class=\"highVAL\">6</span>;\n  <br /> c = a + b;\n  <br /> \n </div> \n <p>以上实例也可以这么写:</p> \n <div class=\"example_code\">\n   a = \n  <span class=\"highVAL\">5</span>; b = \n  <span class=\"highVAL\">6</span>; c = a + b; \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_semicolon\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 您也可能看到不带有分号的案例。 <br />在 JavaScript 中，用分号来结束语句是可选的。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>JavaScript 代码</h2> \n<p>JavaScript 代码是 JavaScript 语句的序列。</p> \n<p>浏览器按照编写顺序依次执行每条语句。</p> \n<p>本例向网页输出一个标题和两个段落：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   document.getElementById(&quot;demo&quot;).innerHTML=&quot;你好 Dolly&quot;;\n  <br />document.getElementById(&quot;myDIV&quot;).innerHTML=&quot;你最近怎么样?&quot;;\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_statements\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 代码块</h2> \n<p>JavaScript 可以分批地组合起来。</p> \n<p>代码块以左花括号开始，以右花括号结束。</p> \n<p>代码块的作用是一并地执行语句序列。</p> \n<p>本例向网页输出一个标题和两个段落：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function myFunction()\n  <br />{\n  <br /> document.getElementById(&quot;demo&quot;).innerHTML=&quot;你好Dolly&quot;;\n  <br />document.getElementById(&quot;myDIV&quot;).innerHTML=&quot;你最近怎么样?&quot;;\n  <br /> }\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_blocks\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>您将在稍后的章节学到更多有关函数的知识。</p>\n<hr /> \n<h2>JavaScript 语句标识符</h2> \n<p>JavaScript 语句通常以一个 <strong>语句标识符</strong> 为开始，并执行该语句。</p> \n<p>语句标识符是保留关键字不能作为变量名使用。</p> \n<p>下表列出了 JavaScript 语句标识符 (关键字) ： </p> \n<table class=\"reference\" \"style=\"width: 100%\"> \n <tbody>\n  <tr> \n   <th>语句</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>break</td> \n   <td>用于跳出循环。</td> \n  </tr> \n  <tr> \n   <td>catch</td> \n   <td>语句块，在 try 语句块执行出错时执行 catch 语句块。</td> \n  </tr> \n  <tr> \n   <td>continue</td> \n   <td>跳过循环中的一个迭代。</td> \n  </tr> \n  <tr> \n   <td>do ... while</td> \n   <td>执行一个语句块，在条件语句为 true 时继续执行该语句块。</td> \n  </tr> \n  <tr> \n   <td>for</td> \n   <td>在条件语句为 true 时，可以将代码块执行指定的次数。 </td> \n  </tr> \n  <tr> \n   <td>for ... in </td> \n   <td>用于遍历数组或者对象的属性（对数组或者对象的属性进行循环操作）。</td> \n  </tr> \n  <tr> \n   <td>function</td> \n   <td>定义一个函数</td> \n  </tr> \n  <tr> \n   <td>if ... else</td> \n   <td>用于基于不同的条件来执行不同的动作。</td> \n  </tr> \n  <tr> \n   <td>return</td> \n   <td>退出函数</td> \n  </tr> \n  <tr> \n   <td>switch</td> \n   <td>用于基于不同的条件来执行不同的动作。</td> \n  </tr> \n  <tr> \n   <td>throw</td> \n   <td>抛出（生成）错误 。 </td> \n  </tr> \n  <tr> \n   <td>try</td> \n   <td>实现错误处理，与 catch 一同使用。 </td> \n  </tr> \n  <tr> \n   <td>var</td> \n   <td>声明一个变量。</td> \n  </tr> \n  <tr> \n   <td>while</td> \n   <td>当条件语句为 true 时，执行语句块。 </td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>JavaScript 对大小写敏感。</h2> \n<p>JavaScript 对大小写是敏感的。</p> \n<p>当编写 JavaScript 语句时，请留意是否关闭大小写切换键。</p> \n<p>函数 getElementById 与 getElementbyID 是不同的。</p> \n<p>同样，变量 myVariable 与 MyVariable 也是不同的。</p> \n<hr /> \n<h2>空格</h2> \n<p>JavaScript 会忽略多余的空格。您可以向脚本添加空格，来提高其可读性。下面的两行代码是等效的：</p> \n<div class=\"code notranslate\">\n <div>\n   var person=&quot;Hege&quot;;\n  <br /> var person = &quot;Hege&quot;;\n </div>\n</div> \n<br />\n<hr /> \n<h2>对代码行进行折行</h2> \n<p>您可以在文本字符串中使用反斜杠对代码行进行换行。下面的例子会正确地显示：</p> \n<div class=\"code\">\n <div>\n   document.write(&quot;你好 \\\n  <br /> 世界!&quot;);\n </div>\n</div> \n<p>不过，您不能像这样折行：</p> \n<div class=\"code\">\n <div>\n   document.write \\ \n  <br /> (&quot;你好世界!&quot;);\n </div>\n</div> \n<br />\n<hr />\n<h2>您知道吗？</h2> \n<p class=\"tip\"><span>提示：</span>JavaScript 是脚本语言。浏览器会在读取代码时，逐行地执行脚本代码。而对于传统编程来说，会在执行前对所有代码进行编译。</p>', null, 'JavaScript 语句|JavaScript 语句|实例|分号 ;|JavaScript 代码|实例|JavaScript 代码块|实例|JavaScript 语句标识符|JavaScript 对大小写敏感。|空格|对代码行进行折行|您知道吗？|');
INSERT INTO `schoolcontent` VALUES ('141', '143', '<h1>JavaScript <span class=\"color_h1\">注释</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 注释可用于提高代码的可读性。</p> \n<hr /> \n<h2>JavaScript 注释</h2> \n<p>JavaScript 不会执行注释。</p> \n<p>我们可以添加注释来对 JavaScript 进行解释，或者提高代码的可读性。</p> \n<p>单行注释以 // 开头。</p> \n<p>本例用单行注释来解释代码：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   // 输出标题：\n  <br /> document.getElementById(&quot;myH1&quot;).innerHTML=&quot;欢迎来到我的主页&quot;;\n  <br /> // 输出段落：\n  <br /> document.getElementById(&quot;myP&quot;).innerHTML=&quot;这是我的第一个段落。&quot;; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 多行注释</h2> \n<p>多行注释以 /* 开始，以 */ 结尾。 </p> \n<p>下面的例子使用多行注释来解释代码：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   /*\n  <br /> 下面的这些代码会输出\n  <br /> 一个标题和一个段落\n  <br /> 并将代表主页的开始\n  <br /> */\n  <br /> document.getElementById(&quot;myH1&quot;).innerHTML=&quot;欢迎来到我的主页&quot;;\n  <br /> document.getElementById(&quot;myP&quot;).innerHTML=&quot;这是我的第一个段落。&quot;; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>使用注释来阻止执行</h2> \n<p>在下面的例子中，注释用于阻止其中一条代码行的执行（可用于调试）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   //document.getElementById(&quot;myH1&quot;).innerHTML=&quot;欢迎来到我的主页&quot;;\n  <br /> document.getElementById(&quot;myP&quot;).innerHTML=&quot;这是我的第一个段落。&quot;; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>在下面的例子中，注释用于阻止代码块的执行（可用于调试）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   /*\n  <br /> document.getElementById(&quot;myH1&quot;).innerHTML=&quot;欢迎来到我的主页&quot;;\n  <br /> document.getElementById(&quot;myP&quot;).innerHTML=&quot;这是我的第一个段落。&quot;;\n  <br /> */ \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments4\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>在行末使用注释</h2> \n<p>在下面的例子中，我们把注释放到代码行的结尾处：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x=5;&nbsp;&nbsp;&nbsp; // 声明 x 并把 5 赋值给它\n  <br /> var y=x+2;&nbsp; // 声明 y 并把 x+2 赋值给它 \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments5\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript 注释|JavaScript 注释|实例|JavaScript 多行注释|实例|使用注释来阻止执行|实例|实例|在行末使用注释|实例|');
INSERT INTO `schoolcontent` VALUES ('142', '144', '<h1>JavaScript <span class=\"color_h1\"> 变量</span> </h1> \n<hr /> \n<p class=\"intro\">变量是用于存储信息的&quot;容器&quot;。</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x=5;\n  <br />var y=6;\n  <br /> var z=x+y;\n  <br /> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_data1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>就像代数那样</h2> \n<p>x=5<br /> y=6<br /> z=x+y</p> \n<p>在代数中，我们使用字母（比如 x）来保存值（比如 5）。</p> \n<p>通过上面的表达式 z=x+y，我们能够计算出 z 的值为 11。</p> \n<p>在 JavaScript 中，这些字母被称为变量。 </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 您可以把变量看做存储数据的容器。 </td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>JavaScript 变量</h2> \n<p>与代数一样，JavaScript 变量可用于存放值（比如 x=5）和表达式（比如 z=x+y）。</p> \n<p>变量可以使用短名称（比如 x 和 y），也可以使用描述性更好的名称（比如 age, sum, totalvolume）。</p> \n<ul> \n <li>变量必须以字母开头</li> \n <li>变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）</li> \n <li>变量名称对大小写敏感（y 和 Y 是不同的变量）</li> \n</ul> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> JavaScript 语句和 JavaScript 变量都对大小写敏感。 </td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>JavaScript 数据类型</h2> \n<p>JavaScript 变量还能保存其他数据类型，比如文本值 (name=&quot;Bill Gates&quot;)。</p> \n<p>在 JavaScript 中，类似 &quot;Bill Gates&quot; 这样一条文本被称为字符串。</p> \n<p>JavaScript 变量有很多种类型，但是现在，我们只关注数字和字符串。</p> \n<p>当您向变量分配文本值时，应该用双引号或单引号包围这个值。</p> \n<p>当您向变量赋的值是数值时，不要使用引号。如果您用引号包围数值，该值会被作为文本来处理。</p> \n<div class=\"example\"> \n <h2 class=\"example_head\">实例</h2> \n <div class=\"example_code notranslate\">\n   var pi=3.14;\n  <br />var person=&quot;John Doe&quot;;\n  <br />var answer=\'Yes I am!\';\n  <br /> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_data2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>声明（创建） JavaScript 变量</h2> \n<p>在 JavaScript 中创建变量通常称为&quot;声明&quot;变量。 </p> \n<p>我们使用 var 关键词来声明变量：</p> \n<div class=\"code notranslate\"> \n <div>\n   var carname; \n </div> \n</div> \n<p>变量声明之后，该变量是空的（它没有值）。 </p> \n<p>如需向变量赋值，请使用等号：</p> \n<div class=\"code notranslate\"> \n <div>\n   carname=&quot;Volvo&quot;; \n </div> \n</div> \n<p>不过，您也可以在声明变量时对其赋值：</p> \n<div class=\"code notranslate\">\n <div>\n   var carname=&quot;Volvo&quot;;\n </div>\n</div> \n<p>在下面的例子中，我们创建了名为 carname 的变量，并向其赋值 &quot;Volvo&quot;，然后把它放入 id=&quot;demo&quot; 的 HTML 段落中： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;\n  <br /> var carname=&quot;Volvo&quot;;\n  <br /> document.getElementById(&quot;demo&quot;).innerHTML=carname; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_variables1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td>一个好的编程习惯是，在代码开始处，统一对需要的变量进行声明。 </td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>一条语句，多个变量</h2> \n<p>您可以在一条语句中声明很多变量。该语句以 var 开头，并使用逗号分隔变量即可：</p> \n<div class=\"code notranslate\"> \n <div>\n   var lastname=&quot;Doe&quot;, age=30, job=&quot;carpenter&quot;; \n </div> \n</div> \n<p>声明也可横跨多行： </p> \n<div class=\"code notranslate\"> \n <div>\n   var lastname=&quot;Doe&quot;,\n  <br /> age=30,\n  <br /> job=&quot;carpenter&quot;; \n </div> \n</div> \n<br />\n<hr /> \n<h2>Value = undefined</h2> \n<p>在计算机程序中，经常会声明无值的变量。未使用值来声明的变量，其值实际上是 undefined。</p> \n<p>在执行过以下语句后，变量 carname 的值将是 undefined：</p> \n<div class=\"code notranslate\"> \n <div>\n   var carname;\n </div> \n</div> \n<br />\n<hr /> \n<h2>重新声明 JavaScript 变量</h2> \n<p>如果重新声明 JavaScript 变量，该变量的值不会丢失：</p> \n<p>在以下两条语句执行后，变量 carname 的值依然是 &quot;Volvo&quot;：</p> \n<div class=\"code notranslate\"> \n <div>\n   var carname=&quot;Volvo&quot;; \n  <br /> var carname;\n </div> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 算数</h2> \n<p>您可以通过 JavaScript 变量来做算数，使用的是 = 和 + 这类运算符：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   y=5;\n  <br /> x=y+2; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_add\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>您将在本教程稍后的章节学到更多有关 JavaScript 运算符的知识。</p>', null, 'JavaScript 变量|实例|就像代数那样|JavaScript 变量|JavaScript 数据类型|实例|声明（创建） JavaScript 变量|实例|一条语句，多个变量|Value = undefined|重新声明 JavaScript 变量|JavaScript 算数|实例|');
INSERT INTO `schoolcontent` VALUES ('143', '145', '<h1>JavaScript <span class=\"color_h1\">数据类型</span> </h1> \n<hr /> \n<p class=\"intro\">字符串（String）、数字(Number)、布尔(Boolean)、数组(Array)、对象(Object)、空（Null）、未定义（Undefined）。<br /></p> \n<hr /> \n<h2>JavaScript 拥有动态类型</h2> \n<p>JavaScript 拥有动态类型。这意味着相同的变量可用作不同的类型：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // x 为 undefined\n  <br />var x = 5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 现在 x 为数字\n  <br /> var x = &quot;John&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 现在 x 为字符串\n </div> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 字符串</h2> \n<p>字符串是存储字符（比如 &quot;Bill Gates&quot;）的变量。</p> \n<p>字符串可以是引号中的任意文本。您可以使用单引号或双引号：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var carname=&quot;Volvo XC60&quot;;\n  <br /> var carname=\'Volvo XC60\';\n </div> \n</div> \n<p>您可以在字符串中使用引号，只要不匹配包围字符串的引号即可：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var answer=&quot;It\'s alright&quot;;\n  <br /> var answer=&quot;He is called \'Johnny\'&quot;;\n  <br /> var answer=\'He is called &quot;Johnny&quot;\';\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_datatypes_string\">尝试一下 &raquo;</a> \n</div> \n<p>您将在本教程的高级部分学到更多关于字符串的知识。</p> \n<hr /> \n<h2>JavaScript 数字</h2> \n<p>JavaScript 只有一种数字类型。数字可以带小数点，也可以不带：<br /></p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x1=34.00;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使用小数点来写\n  <br /> var x2=34;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // //不使用小数点来写\n </div> \n</div> \n<p>极大或极小的数字可以通过科学（指数）计数法来书写：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var y=123e5;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 12300000\n  <br /> var z=123e-5;&nbsp;&nbsp;&nbsp;&nbsp; // 0.00123\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_numbers\">尝试一下 &raquo;</a> \n</div> \n<p>您将在本教程的高级部分学到更多关于数字的知识。</p> \n<hr /> \n<h2>JavaScript 布尔</h2> \n<p>布尔（逻辑）只能有两个值：true 或 false。</p> \n<div class=\"code notranslate\"> \n <div>\n   var x=true;\n  <br /> var y=false;\n </div> \n</div> \n<p>布尔常用在条件测试中。您将在本教程稍后的章节中学到更多关于条件测试的知识。</p> \n<hr /> \n<h2>JavaScript 数组</h2> \n<p> 下面的代码创建名为 cars 的数组：</p> \n<div class=\"code notranslate\"> \n <div>\n   var cars=new Array();\n  <br /> cars[0]=&quot;Saab&quot;;\n  <br /> cars[1]=&quot;Volvo&quot;;\n  <br /> cars[2]=&quot;BMW&quot;;\n </div> \n</div> \n<p>或者 (condensed array):</p> \n<div class=\"code notranslate\"> \n <div>\n   var cars=new Array(&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;);\n </div> \n</div> \n<p>或者 (literal array):</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var cars=[&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;]; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_datatypes_array\">尝试一下 &raquo;</a> \n</div> \n<p>数组下标是基于零的，所以第一个项目是 [0]，第二个是 [1]，以此类推。</p> \n<p>您将在本教程稍后的章节中学到更多关于数组的知识。</p> \n<hr /> \n<h2>JavaScript 对象</h2> \n<p>对象由花括号分隔。在括号内部，对象的属性以名称和值对的形式 (name : value) 来定义。属性由逗号分隔： </p> \n<div class=\"code notranslate\"> \n <div>\n   var person={firstname:&quot;John&quot;, lastname:&quot;Doe&quot;, id:5566};\n </div> \n</div> \n<p>上面例子中的对象 (person) 有三个属性：firstname、lastname 以及 id。</p> \n<p>空格和折行无关紧要。声明可横跨多行：</p> \n<div class=\"code notranslate\"> \n <div>\n   var person={\n  <br /> firstname : &quot;John&quot;,\n  <br /> lastname&nbsp; : &quot;Doe&quot;,\n  <br /> id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :&nbsp; 5566\n  <br /> };\n </div> \n</div> \n<p>对象属性有两种寻址方式： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   name=person.lastname;\n  <br /> name=person[&quot;lastname&quot;]; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_datatypes_object\">尝试一下 &raquo;</a> \n</div> \n<p>您将在本教程稍后的章节中学到更多关于对象的知识。</p> \n<hr /> \n<h2>Undefined 和 Null</h2> \n<p>Undefined 这个值表示变量不含有值。</p> \n<p>可以通过将变量的值设置为 null 来清空变量。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   cars=null;\n  <br /> person=null;\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_undefined\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>声明变量类型</h2> \n<p>当您声明新变量时，可以使用关键词 &quot;new&quot; 来声明其类型： </p> \n<div class=\"code notranslate\"> \n <div>\n   var carname=new String;\n  <br /> var x=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new Number;\n  <br /> var y=&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; new Boolean;\n  <br /> var cars=&nbsp;&nbsp; new Array;\n  <br /> var person= new Object;\n </div> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> JavaScript 变量均为对象。当您声明一个变量时，就创建了一个新的对象。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 数据类型|JavaScript 拥有动态类型|实例|JavaScript 字符串|实例|实例|JavaScript 数字|实例|实例|JavaScript 布尔|JavaScript 数组|实例|JavaScript 对象|实例|Undefined 和 Null|实例|声明变量类型|');
INSERT INTO `schoolcontent` VALUES ('144', '146', '<h1>JavaScript <span class=\"color_h1\">对象</span></h1> \n<hr /> \n<p class=\"intro\">JavaScript 对象是拥有属性和方法的数据。</p> \n<hr /> \n<h2>真实生活中的对象，属性和方法</h2> \n<p>真实生活中，一辆汽车是一个对象。 </p> \n<p>对象有它的属性，如重量和颜色等，方法有启动停止等:</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:370px\"> 对象 </th> \n   <th> 属性 </th> \n   <th> 方法 </th> \n  </tr> \n  <tr> \n   <td> <img src=\"http://www.runoob.com/images/objectExplained.gif\" style=\"width:368px;height:230px\" /> </td> \n   <td> <br />car.name = Fiat<br /><br /> car.model = 500<br /><br /> car.weight = 850kg<br /><br /> car.color = white </td> \n   <td> <br />car.start()<br /><br /> car.drive()<br /><br /> car.brake() <br /><br />car.stop()</td> \n  </tr> \n </tbody>\n</table> \n<p>所有汽车都有这些属性，但是每款车的属性都不尽相同。</p> \n<p>所有汽车都拥有这些方法，但是它们被执行的时间都不尽相同。</p> \n<hr /> \n<h2>JavaScript 对象</h2> \n<p>在 JavaScript中，几乎所有的事物都是对象。</p> \n<p> </p>\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 在 JavaScript 中，对象是非常重要的，当你理解了对象，就可以了解 JavaScript 。</td> \n  </tr>\n </tbody>\n</table> \n<p></p> \n<p>你已经学习了 JavaScript 变量的赋值。</p> \n<p>以下代码为变量 <strong>car</strong> 设置值为 &quot;Fiat&quot; : </p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> car = \n  <span class=\"highVAL\">&quot;Fiat&quot;</span>; \n </div> \n</div> \n<p>对象也是一个变量，但对象可以包含多个值（多个变量）。 </p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> car = {type:\n  <span class=\"highVAL\">&quot;Fiat&quot;</span>, model:\n  <span class=\"highVAL\">500</span>, color:\n  <span class=\"highVAL\">&quot;white&quot;</span>}; \n </div> \n</div> \n<p>在以上实例中，3 个值 (&quot;Fiat&quot;, 500, &quot;white&quot;) 赋予变量 car。</p> \n<p>在以上实例中，3 个变量 (type, model, color) 赋予变量 car。</p> \n<p> </p>\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> JavaScript 对象是变量的容器。</td> \n  </tr>\n </tbody>\n</table> \n<p></p> \n<hr /> \n<h2>对象定义</h2> \n<p>你可以使用字符来定义和创建 JavaScript 对象:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> person = {firstName:\n  <span class=\"highVAL\">&quot;John&quot;</span>, lastName:\n  <span class=\"highVAL\">&quot;Doe&quot;</span>, age:\n  <span class=\"highVAL\">50</span>, eyeColor:\n  <span class=\"highVAL\">&quot;blue&quot;</span>};\n  <br /> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_create_1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>定义 JavaScript 对象可以跨越多行，空格跟换行不是必须的： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> person = {\n  <br /> &nbsp;&nbsp;&nbsp; firstName:\n  <span class=\"highVAL\">&quot;John&quot;</span>,\n  <br /> &nbsp;&nbsp;&nbsp; lastName:\n  <span class=\"highVAL\">&quot;Doe&quot;</span>,\n  <br /> &nbsp;&nbsp;&nbsp; age:\n  <span class=\"highVAL\">50</span>,\n  <br /> &nbsp;&nbsp;&nbsp; eyeColor:\n  <span class=\"highVAL\">&quot;blue&quot;</span>\n  <br /> }; \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_create_2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>对象属性</h2> \n<p>可以说 &quot;JavaScript 对象是变量的容器&quot;。</p> \n<p>但是，我们通常认为 &quot;JavaScript 对象是键值对的容器&quot;。</p> \n<p>键值对通常写法为 <strong>name : value</strong> (键与值以冒号分割)。</p> \n<p>键值对在 JavaScript 对象通常称为 <strong>对象属性</strong>。</p> \n<p> </p>\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> JavaScript 对象是属性变量的容器。</td> \n  </tr>\n </tbody>\n</table> \n<p></p> \n<p>对象键值对的写法类似于：</p> \n<ul> \n <li>PHP 中的关联数组</li> \n <li>Python 中的字典</li> \n <li>C 语言中的哈希表</li> \n <li>Java 中的哈希映射</li> \n <li>Ruby 和 Perl 中的哈希表</li> \n</ul> \n<hr /> \n<h2>访问对象属性</h2> \n<p>你可以通过两种方式访问对象属性: </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例 1</h2> \n <div class=\"example_code\">\n   person.lastName;\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_properties_1\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">实例 2</h2> \n <div class=\"example_code\">\n   person[\n  <span class=\"highVAL\">&quot;lastName&quot;</span>]; \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_properties_2\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>对象方法</h2> \n<p>对象的方法定义了一个函数，并作为对象的属性存储。 </p> \n<p>对象方法通过添加 () 调用 (作为一个函数)。</p> \n<p>该实例访问了 person 对象的 fullName() 方法:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   name = person.fullName();\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_method\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>如果你要访问 person 对象的 fullName 属性，它将作为一个定义函数的字符串返回：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   name = person.fullName;\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_function\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>&nbsp;</p> \n<p> </p>\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> JavaScript 对象是属性和方法的容器。</td> \n  </tr>\n </tbody>\n</table> \n<p></p> \n<p>在随后的教程中你将学习到更多关于函数，属性和方法的知识。 </p> \n<hr /> \n<h2>访问对象方法</h2> \n<p>你可以使用以下语法创建对象方法：</p> \n<div class=\"code\">\n <div> \n  <i>methodName : function() { code lines }</i> \n </div>\n</div> \n<p>你可以使用以下语法访问对象方法：</p> \n<div class=\"code\">\n <div> \n  <i>objectName.methodName()</i>\n </div>\n</div> \n<p>通常 fullName() 是作为 person 对象的一个方法， fullName 是作为一个属性。 </p> \n<p>有多种方式可以创建，使用和修改 JavaScript 对象。</p> \n<p>同样也有多种方式用来创建，使用和修改属性和方法。</p> \n<p> </p>\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 在随后的教程中，你将学习到更多关于对象的知识。</td> \n  </tr>\n </tbody>\n</table> \n<p></p> \n<hr /> \n<h2>更多实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_create_1\"> 创建 JavaScript 对象 I</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_create_2\"> 创建 JavaScript 对象 II</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_properties_1\"> 访问对象属性 I</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_properties_2\"> 访问对象属性 II</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_method\"> 函数属性作为一个方法访问</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_object_function\"> 函数属性作为一个属性访问</a></p>', null, 'JavaScript 对象|真实生活中的对象，属性和方法|JavaScript 对象|对象定义|实例|实例|对象属性|访问对象属性|实例 1|实例 2|对象方法|实例|实例|访问对象方法|更多实例|');
INSERT INTO `schoolcontent` VALUES ('145', '147', '<h1>JavaScript <span class=\"color_h1\">函数</span> </h1> \n<hr /> \n<p class=\"intro\">函数是由事件驱动的或者当它被调用时执行的可重复使用的代码块。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script&gt;\n  <br />\n  <span class=\"marked\"> function myFunction()<br /> {<br /> alert(&quot;Hello World!&quot;);<br /> }</span>\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br />\n  <br /> &lt;body&gt;\n  <br /> &lt;button onclick=&quot;\n  <span class=\"marked\">myFunction()</span>&quot;&gt;Try it&lt;/button&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 函数语法</h2> \n<p>函数就是包裹在花括号中的代码块，前面使用了关键词 function：</p> \n<div class=\"code notranslate\">\n <div>\n   function \n  <i>functionname</i>()\n  <br /> {\n  <br />\n  <i>执行代码</i>\n  <br /> }\n </div>\n</div> \n<p>当调用该函数时，会执行函数内的代码。</p> \n<p>可以在某事件发生时直接调用函数（比如当用户点击按钮时），并且可由 JavaScript 在任何位置进行调用。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td>JavaScript 对大小写敏感。关键词 function 必须是小写的，并且必须以与函数名称相同的大小写来调用函数。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>调用带参数的函数</h2> \n<p>在调用函数时，您可以向其传递值，这些值被称为参数。</p> \n<p>这些参数可以在函数中使用。</p> \n<p>您可以发送任意多的参数，由逗号 (,) 分隔：</p> \n<div class=\"code notranslate\">\n <div>\n   myFunction(\n  <i>argument1,argument2</i>)\n  <br /> \n </div>\n</div> \n<p>当您声明函数时，请把参数作为变量来声明： </p> \n<div class=\"code notranslate\">\n <div>\n   function myFunction(\n  <em><span class=\"marked\">var1</span></em>,\n  <em><span class=\"marked\">var2</span></em>)\n  <br />{\n  <br />\n  <i>代码</i>\n  <br /> }\n </div>\n</div> \n<p>变量和参数必须以一致的顺序出现。第一个变量就是第一个被传递的参数的给定的值，以此类推。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;button onclick=&quot;myFunction(\n  <span class=\"marked\">\'Harry Potter\'</span>,\n  <span class=\"marked\">\'Wizard\'</span>)&quot;&gt;Try it&lt;/button&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br /> function myFunction(\n  <span class=\"marked\">name</span>,\n  <span class=\"marked\">job</span>)\n  <br /> {\n  <br /> alert(&quot;Welcome &quot; + \n  <span class=\"marked\">name</span> + &quot;, the &quot; + \n  <span class=\"marked\"> job</span>);\n  <br /> }\n  <br /> &lt;/script&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>上面的函数在按钮被点击时会提示 &quot;Welcome Harry Potter, the Wizard&quot;。</p> \n<p>函数很灵活，您可以使用不同的参数来调用该函数，这样就会给出不同的消息：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;button onclick=&quot;myFunction(\n  <span class=\"marked\">\'Harry Potter\'</span>,\n  <span class=\"marked\">\'Wizard\'</span>)&quot;&gt;Try it&lt;/button&gt;\n  <br />&lt;button onclick=&quot;myFunction(\n  <span class=\"marked\">\'Bob\'</span>,\n  <span class=\"marked\">\'Builder\'</span>)&quot;&gt;Try it&lt;/button&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>根据您点击的不同的按钮，上面的例子会提示 &quot;Welcome Harry Potter, the Wizard&quot; 或 &quot;Welcome Bob, the Builder&quot;。</p> \n<hr /> \n<h2>带有返回值的函数</h2> \n<p>有时，我们会希望函数将值返回调用它的地方。</p> \n<p>通过使用 return 语句就可以实现。</p> \n<p>在使用 return 语句时，函数会停止执行，并返回指定的值。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   function myFunction()\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;var x=5;\n  <br />&nbsp;&nbsp;&nbsp;&nbsp;return x;\n  <br />}\n </div>\n</div> \n<p>上面的函数会返回值 5。</p> \n<p><strong>注意：</strong> 整个 JavaScript 并不会停止执行，仅仅是函数。JavaScript 将继续执行代码，从调用函数的地方。</p> \n<p>函数调用将被返回值取代：</p> \n<div class=\"code notranslate\">\n <div>\n   var myVar=myFunction();\n </div>\n</div> \n<p>myVar 变量的值是 5，也就是函数 &quot;myFunction()&quot; 所返回的值。</p> \n<p>即使不把它保存为变量，您也可以使用返回值：</p> \n<div class=\"code notranslate\">\n <div>\n   document.getElementById(&quot;demo&quot;).innerHTML=myFunction();\n </div>\n</div> \n<p>&quot;demo&quot; 元素的 innerHTML 将成为 5，也就是函数 &quot;myFunction()&quot; 所返回的值。</p> \n<p>您可以使返回值基于传递到函数中的参数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>计算两个数字的乘积，并返回结果：</p> \n <div class=\"example_code notranslate\">\n   function myFunction(a,b)\n  <br />{\n  <br />return a*b;\n  <br />}\n  <br />\n  <br /> document.getElementById(&quot;demo&quot;).innerHTML=myFunction(4,3);\n  <br /> \n </div> \n <p>&quot;demo&quot; 元素的 innerHTML 将是：</p> \n <div class=\"example_code notranslate\">\n   12 \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_return\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>在您仅仅希望退出函数时 ，也可使用 return 语句。返回值是可选的：</p> \n<pre>\r\nfunction myFunction(a,b)\r\n{\r\n	if (a&gt;b)\r\n	{\r\n		return;\r\n	}\r\n	x=a+b\r\n}\r\n</pre> \n<p>如果 a 大于 b，则上面的代码将退出函数，并不会计算 a 和 b 的总和。</p> \n<hr /> \n<h2>局部 JavaScript 变量</h2> \n<p>在 JavaScript 函数内部声明的变量（使用 var）是<em>局部</em>变量，所以只能在函数内部访问它。（该变量的作用域是局部的）。</p> \n<p>您可以在不同的函数中使用名称相同的局部变量，因为只有声明过该变量的函数才能识别出该变量。</p> \n<p>只要函数运行完毕，本地变量就会被删除。</p> \n<hr /> \n<h2>全局 JavaScript 变量</h2> \n<p>在函数外声明的变量是<em>全局</em>变量，网页上的所有脚本和函数都能访问它。</p> \n<hr /> \n<h2>JavaScript 变量的生存期</h2> \n<p>JavaScript 变量的生命期从它们被声明的时间开始。</p> \n<p>局部变量会在函数运行以后被删除。</p> \n<p>全局变量会在页面关闭后被删除。</p> \n<hr /> \n<h2>向未声明的 JavaScript 变量分配值</h2> \n<p>如果您把值赋给尚未声明的变量，该变量将被自动作为全局变量声明。</p> \n<p>这条语句：</p> \n<div class=\"code notranslate\">\n <div>\n   carname=&quot;Volvo&quot;;\n </div>\n</div> \n<p>将声明一个全局变量 carname，即使它在函数内执行。</p>', null, 'JavaScript 函数|实例|JavaScript 函数语法|调用带参数的函数|实例|实例|带有返回值的函数|实例|局部 JavaScript 变量|全局 JavaScript 变量|JavaScript 变量的生存期|向未声明的 JavaScript 变量分配值|');
INSERT INTO `schoolcontent` VALUES ('146', '148', '<h1>JavaScript <span class=\"color_h1\">作用域</span> </h1> \n<hr /> \n<p class=\"intro\">作用域可访问变量的集合。</p> \n<hr /> \n<h2>JavaScript 作用域</h2> \n<p>在 JavaScript 中, 对象和函数同样也是变量。</p> \n<p><strong>在 JavaScript 中, 作用域为可访问变量，对象，函数的集合。</strong></p> \n<p>JavaScript 函数作用域: 作用域在函数内修改。</p> \n<hr /> \n<h2>JavaScript 局部作用域</h2> \n<p>变量在函数内声明，变量为局部作用域。</p> \n<p>局部变量：只能在函数内部访问。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   // 此处不能调用 carName 变量\n  <br />\n  <br />function myFunction() {\n  <br /> &nbsp;&nbsp;&nbsp; var carName = &quot;Volvo&quot;;\n  <br />\n  <br />&nbsp;&nbsp;&nbsp; // 函数内可调用 carName 变量\n  <br />\n  <br />} \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_scope_local\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>因为局部变量只作用于函数内，所以不同的函数可以使用相同名称的变量。</p> \n<p>局部变量在函数开始执行时创建，函数执行完后局部变量会自动销毁。</p> \n<hr /> \n<h2> JavaScript 全局变量</h2> \n<p>变量在函数外定义，即为全局变量。</p> \n<p>全局变量有 <strong>全局作用域</strong>: 网页中所有脚本和函数均可使用。&nbsp;</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var carName = &quot; Volvo&quot;;\n  <br />\n  <br /> // 此处可调用 carName 变量\n  <br />\n  <br /> function myFunction() {\n  <br />\n  <br /> &nbsp;&nbsp;&nbsp; // 函数内可调用 carName 变量 \n  <br />\n  <br />} \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_scope_global\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<p>如果变量在函数内没有声明（没有使用 var 关键字），该变量为全局变量。</p> \n<p>以下实例中 carName 在函数内，但是为全局变量。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   // 此处可调用 carName 变量\n  <br />\n  <br />function myFunction() {\n  <br /> &nbsp;&nbsp;&nbsp; carName = &quot;Volvo&quot;;\n  <br />\n  <br />&nbsp;&nbsp;&nbsp; // 此处可调用 carName 变量\n  <br />\n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_local_global\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2> JavaScript 变量生命周期</h2> \n<p>JavaScript 变量生命周期在它声明时初始化。</p> \n<p>局部变量在函数执行完毕后销毁。</p> \n<p>全局变量在页面关闭后销毁。</p> \n<hr /> \n<h2>函数参数</h2> \n<p>函数参数只在函数内起作用，是局部变量。</p> \n<hr /> \n<h2>HTML 中的全局变量</h2> \n<p>在 HTML 中, 全局变量是 window 对象: 所有数据变量都属于 window 对象。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   //此处可使用 window.carName\n  <br />\n  <br />function myFunction() {\n  <br /> &nbsp;&nbsp;&nbsp; carName = &quot;Volvo&quot;;\n  <br />} \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_scope_window\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>你知道吗?</h2> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>你的全局变量，或者函数，可以覆盖 window 对象的变量或者函数。<br />局部变量，包括 window 对象可以覆盖全局变量和函数。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 作用域|JavaScript 作用域|JavaScript 局部作用域|实例|JavaScript 全局变量|实例|实例|JavaScript 变量生命周期|函数参数|HTML 中的全局变量|实例|你知道吗?|');
INSERT INTO `schoolcontent` VALUES ('147', '149', '<h1>JavaScript <span class=\"color_h1\">事件</span> </h1> \n<hr /> \n<p class=\"intro\">HTML 事件是发生在 HTML 元素上的事情。</p> \n<p class=\"intro\">当在 HTML 页面中使用 JavaScript 时， JavaScript 可以触发这些事件。</p> \n<hr /> \n<h2>HTML 事件</h2> \n<p> HTML 事件可以是浏览器行为，也可以是用户行为。</p> \n<p>以下是 HTML 事件的实例：</p> \n<ul> \n <li> HTML 页面完成加载</li> \n <li> HTML input 字段改变时</li> \n <li> HTML 按钮被点击</li> \n</ul> \n<p>通常，当事件发生时，你可以做些事情。</p> \n<p>在事件触发时 JavaScript 可以执行一些代码。</p> \n<p>HTML 元素中可以添加事件属性，使用 JavaScript 代码来添加 HTML 元素。</p> \n<p>单引号:</p> \n<div class=\"code\"> \n <div>\n   &lt;\n  <em>some-HTML-element</em> \n  <em>some-event</em>=\n  <strong>\'</strong>\n  <em><strong>some JavaScript</strong></em>\n  <strong>\'</strong>&gt;\n </div> \n</div> \n<p>双引号:</p> \n<div class=\"code\"> \n <div>\n   &lt;\n  <em>some-HTML-element</em> \n  <em>some-event</em>=\n  <strong>&quot;</strong>\n  <em><strong>some JavaScript</strong></em>\n  <strong>&quot;</strong>&gt;\n </div> \n</div> \n<p>在以下实例中，按钮元素中添加了 onclick 属性 (并加上代码):</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;button onclick=\'getElementById(&quot;demo&quot;).innerHTML=Date()\'&gt;现在的时间是??&lt;/button&gt;\n  <br /> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_event_onclick1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>以上实例中，JavaScript 代码将修改 id=&quot;demo&quot; 元素的内容。</p> \n<p>在下一个实例中，代码将修改自身元素的内容 (使用 <strong>this</strong>.innerHTML): </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;button onclick=&quot;this.innerHTML=Date()&quot;&gt;现在的时间是?&lt;/button&gt;\n  <br /> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_event_onclick\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>JavaScript代码通常是几行代码。比较常见的是通过事件属性来调用：</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;button onclick=&quot;displayDate()&quot;&gt;现在的时间是?&lt;/button&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_events1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>常见的HTML事件</h2> \n<p>下面是一些常见的HTML事件的列表:</p> \n<table class=\"reference\" style=\"width: 100%\"> \n <tbody>\n  <tr> \n   <th>事件</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>onchange</td> \n   <td> HTML 元素改变</td> \n  </tr> \n  <tr> \n   <td>onclick</td> \n   <td>用户点击 HTML 元素</td> \n  </tr> \n  <tr> \n   <td>onmouseover</td> \n   <td>用户在一个HTML元素上移动鼠标</td> \n  </tr> \n  <tr> \n   <td>onmouseout</td> \n   <td>用户从一个HTML元素上移开鼠标</td> \n  </tr> \n  <tr> \n   <td>onkeydown</td> \n   <td>用户按下键盘按键</td> \n  </tr> \n  <tr> \n   <td>onload</td> \n   <td>浏览器已完成页面的加载</td> \n  </tr> \n </tbody>\n</table> \n<p>更多事件列表: <a href=\"http://www.runoob.com/jsref/dom-obj-event.html\"> JavaScript 参考手册 - HTML DOM 事件</a>。</p> \n<hr /> \n<h2> JavaScript 可以做什么?</h2> \n<p>事件可以用于处理表单验证，用户输入，用户行为及浏览器动作:</p> \n<ul> \n <li>页面加载时触发事件</li> \n <li>页面关闭时触发事件</li> \n <li>用户点击按钮执行动作</li> \n <li>验证用户输入内容的合法性</li> \n <li>等等 ...</li> \n</ul> \n<p>可以使用多种方法来执行 JavaScript 事件代码：</p> \n<ul> \n <li>HTML 事件属性可以直接执行 JavaScript 代码</li> \n <li>HTML 事件属性可以调用 JavaScript 函数</li> \n <li>你可以为 HTML 元素指定自己的事件处理程序</li> \n <li>你可以阻止事件的发生。</li> \n <li>等等 ...</li> \n</ul> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>在 HTML DOM 章节中你将会学到更多关于事件及事件处理程序的知识。<br /> </td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 事件|HTML 事件|实例|实例|实例|常见的HTML事件|JavaScript 可以做什么?|');
INSERT INTO `schoolcontent` VALUES ('148', '150', '<h1>JavaScript <span class=\"color_h1\">字符串</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 字符串用于存储和处理文本。</p> \n<hr /> \n<h2>JavaScript 字符串</h2> \n<p>字符串可以存储一系列字符，如 &quot;John Doe&quot;。</p> \n<p>字符串可以是插入到引号中的任何字符。你可以使用单引号或双引号：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var carname = &quot;Volvo XC60&quot;;\n  <br /> var carname = \'Volvo XC60\';\n </div> \n</div> \n<p>你可以使用索引位置来访问字符串中的每个字符：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var character = carname[7];\n </div> \n</div> \n<p>字符串的索引从 0 开始，这意味着第一个字符索引值为 [0],第二个为 [1], 以此类推。</p> \n<p>你可以在字符串中使用引号，字符串中的引号不要与字符串的引号相同:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var answer = &quot;It\'s alright&quot;;\n  <br /> var answer = &quot;He is called \'Johnny\'&quot;;\n  <br /> var answer = \'He is called &quot;Johnny&quot;\';\n </div> \n</div> \n<p>你也可以在字符串添加转义字符来使用引号：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var x = \'It\\\'s alright\';\n  <br /> var y = &quot;He is called \\&quot;Johnny\\&quot;&quot;;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strings_escape\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>字符串长度</h2> \n<p>可以使用内置属性 <strong>length</strong> 来计算字符串的长度：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var txt = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;\n  <br />var sln = txt.length;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_string_length\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>特殊字符</h2> \n<p>在 JavaScript 中，字符串写在单引号或双引号来中。</p> \n<p>因为这样，以下实例 JavaScript 无法解析：x</p> \n<div class=\"code\">\n <div>\n   &nbsp;&quot;We are the so-called &quot;Vikings&quot; from the north.&quot;\n  <br /> \n </div>\n</div> \n<p>字符串 &quot;We are the so-called &quot; 被截断。</p> \n<p>如何解决以上的问题呢？可以使用反斜杠 (\\) 来转义 &quot;Vikings&quot; 字符串中的双引号，如下:</p> \n<div class=\"code\">\n <div>\n   &nbsp;&quot;We are the so-called \\&quot;Vikings\\&quot; from the north.&quot;\n  <br /> \n </div>\n</div> \n<p>&nbsp;反斜杠是一个<strong>转义字符</strong>。 转义字符将特殊字符转换为字符串字符：</p> \n<p>转义字符 (\\) 可以用于转义撇号，换行，引号，等其他特殊字符。</p> \n<p>下表中列举了在字符串中可以使用转义字符转义的特殊字符： </p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>代码</th> \n   <th>输出</th> \n  </tr> \n  <tr> \n   <td>\\\'</td> \n   <td>单引号</td> \n  </tr> \n  <tr> \n   <td>\\&quot;</td> \n   <td>双引号</td> \n  </tr> \n  <tr> \n   <td>\\\\</td> \n   <td>反斜杠</td> \n  </tr> \n  <tr> \n   <td>\\n</td> \n   <td>换行</td> \n  </tr> \n  <tr> \n   <td>\\r</td> \n   <td>回车</td> \n  </tr> \n  <tr> \n   <td>\\t</td> \n   <td>tab(制表符)</td> \n  </tr> \n  <tr> \n   <td>\\b</td> \n   <td>退格符</td> \n  </tr> \n  <tr> \n   <td>\\f</td> \n   <td>换页符</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>字符串可以是对象</h2> \n<p>通常， JavaScript 字符串是原始值，可以使用字符创建： <strong>var firstName = &quot;John&quot;</strong></p> \n<p>但我们也可以使用 new 关键字将字符串定义为一个对象： <strong>var firstName = new String(&quot;John&quot;)</strong></p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var x = &quot;John&quot;;\n  <br /> var y = new String(&quot;John&quot;);\n  <br /> typeof x // 返回 String\n  <br /> typeof y // 返回 Object \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_object_string_type\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 不要创建 String 对象。它会拖慢执行速度，并可能产生其他副作用：<br /> </td> \n  </tr>\n </tbody>\n</table>\n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var x = &quot;John&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <br /> var y = new String(&quot;John&quot;);\n  <br /> (x === y) // 结果为 false，因为是字符串，y 是对象 \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_object_string\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>\n<p>=== 为绝对相等，即数据类型与值都必须相等。</p> \n<br />\n<hr /> \n<h2>字符串属性和方法</h2> \n<p>原始值字符串，如 &quot;John&quot;, 没有属性和方法(因为他们不是对象)。 </p> \n<p>原始值可以使用 JavaScript 的属性和方法，因为 JavaScript 在执行方法和属性时可以把原始值当作对象。</p> \n<p><strong>字符串方法我们将在下一章节中介绍。</strong></p> \n<hr /> \n<h2>字符串属性</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:24%\">属性</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>constructor</td> \n   <td>返回创建字符串属性的函数</td> \n  </tr> \n  <tr> \n   <td>length</td> \n   <td>返回字符串的长度</td> \n  </tr> \n  <tr> \n   <td>prototype</td> \n   <td>允许您向对象添加属性和方法</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>字符串方法</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:24%\">Method</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>charAt()</td> \n   <td>返回指定索引位置的字符</td> \n  </tr> \n  <tr> \n   <td>charCodeAt()</td> \n   <td>返回指定索引位置字符的 Unicode 值</td> \n  </tr> \n  <tr> \n   <td>concat()</td> \n   <td>连接两个或多个字符串，返回连接后的字符串</td> \n  </tr> \n  <tr> \n   <td>fromCharCode()</td> \n   <td>将 Unicode 转换为字符串</td> \n  </tr> \n  <tr> \n   <td>indexOf()</td> \n   <td>返回字符串中检索指定字符第一次出现的位置</td> \n  </tr> \n  <tr> \n   <td>lastIndexOf()</td> \n   <td>返回字符串中检索指定字符最后一次出现的位置</td> \n  </tr> \n  <tr> \n   <td>localeCompare()</td> \n   <td>用本地特定的顺序来比较两个字符串</td> \n  </tr> \n  <tr> \n   <td>match()</td> \n   <td>找到一个或多个正则表达式的匹配</td> \n  </tr> \n  <tr> \n   <td>replace()</td> \n   <td>替换与正则表达式匹配的子串</td> \n  </tr> \n  <tr> \n   <td>search()</td> \n   <td>检索与正则表达式相匹配的值</td> \n  </tr> \n  <tr> \n   <td>slice()</td> \n   <td>提取字符串的片断，并在新的字符串中返回被提取的部分</td> \n  </tr> \n  <tr> \n   <td>split()</td> \n   <td>把字符串分割为子字符串数组</td> \n  </tr> \n  <tr> \n   <td>substr()</td> \n   <td>从起始索引号提取字符串中指定数目的字符</td> \n  </tr> \n  <tr> \n   <td>substring()</td> \n   <td>提取字符串中两个指定的索引号之间的字符</td> \n  </tr> \n  <tr> \n   <td>toLocaleLowerCase()</td> \n   <td>根据主机的语言环境把字符串转换为小写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td> \n  </tr> \n  <tr> \n   <td>toLocaleUpperCase()</td> \n   <td>根据主机的语言环境把字符串转换为大写，只有几种语言（如土耳其语）具有地方特有的大小写映射</td> \n  </tr> \n  <tr> \n   <td>toLowerCase()</td> \n   <td>把字符串转换为小写</td> \n  </tr> \n  <tr> \n   <td>toString()</td> \n   <td>返回字符串对象值</td> \n  </tr> \n  <tr> \n   <td>toUpperCase()</td> \n   <td>把字符串转换为大写</td> \n  </tr> \n  <tr> \n   <td>trim()</td> \n   <td>移除字符串首尾空白</td> \n  </tr> \n  <tr> \n   <td>valueOf()</td> \n   <td>返回某个字符串对象的原始值</td> \n  </tr> \n </tbody>\n</table>', null, 'JavaScript 字符串|JavaScript 字符串|实例|实例|实例|实例|字符串长度|实例|特殊字符|字符串可以是对象|实例|实例|字符串属性和方法|字符串属性|字符串方法|');
INSERT INTO `schoolcontent` VALUES ('149', '151', '<h1>JavaScript <span class=\"color_h1\">运算符</span> </h1> \n<hr /> \n<p><strong>运算符 = 用于赋值。</strong></p> \n<p><strong>运算符 + 用于加值。</strong></p> \n<hr /> \n<p>运算符 = 用于给 JavaScript 变量赋值。</p> \n<p>算术运算符 + 用于把值加起来。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">指定变量值，并将值相加：</p> \n <div class=\"example_code notranslate\">\n   y=5;\n  <br /> z=2;\n  <br /> x=y+z; \n </div> \n <p>在以上语句执行后，<em>x</em> 的值是：</p> \n <div class=\"example_code notranslate\">\n   7 \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_operators1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 算术运算符</h2> \n<p算术运算符用于执行变量与 值之间的算术运算。=\"\" <=\"\"> \n <p给定<strong>\n   y=5，下面的表格解释了这些算术运算符： \n  <p></p> \n  <table class=\"reference notranslate\"> \n   <tbody>\n    <tr> \n     <th width=\"13%\" align=\"left\">运算符</th> \n     <th width=\"32%\" align=\"left\">描述</th> \n     <th width=\"15%\" align=\"left\">例子</th> \n     <th width=\"15%\" align=\"left\"> x 运算结果</th> \n     <th width=\"15%\" align=\"left\"> y 运算结果</th> \n     <th width=\"10%\" align=\"left\">在线实例</th> \n    </tr> \n    <tr> \n     <td valign=\"top\">+</td> \n     <td valign=\"top\">加法</td> \n     <td valign=\"top\">x=y+2</td> \n     <td valign=\"top\">7</td> \n     <td valign=\"top\">5</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_add\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">-</td> \n     <td valign=\"top\">减法</td> \n     <td valign=\"top\">x=y-2</td> \n     <td valign=\"top\">3</td> \n     <td valign=\"top\">5</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_sub\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">*</td> \n     <td valign=\"top\">乘法</td> \n     <td valign=\"top\">x=y*2</td> \n     <td valign=\"top\">10</td> \n     <td valign=\"top\">5</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_mult\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">/</td> \n     <td valign=\"top\">除法 </td> \n     <td valign=\"top\">x=y/2</td> \n     <td valign=\"top\">2.5</td> \n     <td valign=\"top\">5</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_div\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">%</td> \n     <td valign=\"top\">取模（余数）</td> \n     <td valign=\"top\">x=y%2</td> \n     <td valign=\"top\">1</td> \n     <td valign=\"top\">5</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_mod\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\" rowspan=\"2\">++</td> \n     <td valign=\"top\" rowspan=\"2\">自增</td> \n     <td valign=\"top\">x=++y</td> \n     <td valign=\"top\">6</td> \n     <td valign=\"top\">6</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_incr\">实例 &raquo;</a></td> \n    </tr> \n    <tr class=\"fixzebra\"> \n     <td valign=\"top\">x=y++</td> \n     <td valign=\"top\">5</td> \n     <td valign=\"top\">6</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_incr2\">实例 &raquo;</a></td> \n    </tr> \n    <tr style=\"background-color:#ffffff\"> \n     <td valign=\"top\" rowspan=\"2\">--</td> \n     <td valign=\"top\" rowspan=\"2\">自减</td> \n     <td valign=\"top\">x=--y</td> \n     <td valign=\"top\">4</td> \n     <td valign=\"top\">4</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_decr\">实例 &raquo;</a></td> \n    </tr> \n    <tr style=\"background-color:#ffffff\"> \n     <td valign=\"top\">x=y--</td> \n     <td valign=\"top\">5</td> \n     <td valign=\"top\">4</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_decr2\">实例 &raquo;</a></td> \n    </tr> \n   </tbody>\n  </table> \n  <br />\n  <hr /> \n  <h2>JavaScript 赋值运算符</h2> \n  <p>赋值运算符用于给 JavaScript 变量赋值。 </p> \n  <p>给定 <strong>x=10 </strong>和<strong> y=5</strong>，下面的表格解释了赋值运算符：</p> \n  <table class=\"reference notranslate\"> \n   <tbody>\n    <tr> \n     <th width=\"13%\" align=\"left\">运算符</th> \n     <th width=\"32%\" align=\"left\">例子</th> \n     <th width=\"20%\" align=\"left\">等同于</th> \n     <th width=\"25%\" align=\"left\">运算结果</th> \n     <th width=\"10%\" align=\"left\">在线实例</th> \n    </tr> \n    <tr> \n     <td valign=\"top\">=</td> \n     <td valign=\"top\">x=y</td> \n     <td valign=\"top\">&nbsp;</td> \n     <td valign=\"top\">x=5</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_equal\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">+=</td> \n     <td valign=\"top\">x+=y</td> \n     <td valign=\"top\">x=x+y</td> \n     <td valign=\"top\">x=15</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_plusequal\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">-=</td> \n     <td valign=\"top\">x-=y</td> \n     <td valign=\"top\">x=x-y</td> \n     <td valign=\"top\">x=5</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_minequal\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">*=</td> \n     <td valign=\"top\">x*=y</td> \n     <td valign=\"top\">x=x*y</td> \n     <td valign=\"top\">x=50</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_multequal\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">/=</td> \n     <td valign=\"top\">x/=y</td> \n     <td valign=\"top\">x=x/y</td> \n     <td valign=\"top\">x=2</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_divequal\">实例 &raquo;</a></td> \n    </tr> \n    <tr> \n     <td valign=\"top\">%=</td> \n     <td valign=\"top\">x%=y</td> \n     <td valign=\"top\">x=x%y</td> \n     <td valign=\"top\">x=0</td> \n     <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_oper_modequal\">实例 &raquo;</a></td> \n    </tr> \n   </tbody>\n  </table> \n  <br />\n  <hr /> \n  <h2>用于字符串的 + 运算符</h2> \n  <p>+ 运算符用于把文本值或字符串变量加起来（连接起来）。</p> \n  <p>如需把两个或多个字符串变量连接起来，请使用 + 运算符。</p> \n  <div class=\"example\"> \n   <h2 class=\"example\">实例</h2> \n   <p class=\"example\">如需把两个或多个字符串变量连接起来，请使用 + 运算符：</p> \n   <div class=\"example_code notranslate\">\n     txt1=&quot;What a very&quot;;\n    <br /> txt2=&quot;nice day&quot;;\n    <br /> txt3=txt1+txt2; \n   </div> \n   <p> <em>txt3</em> 运算结果如下:</p> \n   <div class=\"example_code notranslate\">\n     What a verynice day\n   </div> \n   <br />\n   <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_operators2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n  </div> \n  <p>要想在两个字符串之间增加空格，需要把空格插入一个字符串之中：</p> \n  <div class=\"example\"> \n   <h2 class=\"example\">实例</h2> \n   <div class=\"example_code notranslate\">\n     txt1=&quot;What a very &quot;;\n    <br /> txt2=&quot;nice day&quot;;\n    <br /> txt3=txt1+txt2; \n   </div> \n   <p>在以上语句执行后，变量 <em>txt3</em>包含的值是：</p> \n   <div class=\"example_code notranslate\">\n     What a very nice day\n   </div> \n   <br />\n   <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_operators3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n  </div> \n  <p>或者把空格插入表达式中：:</p> \n  <div class=\"example\"> \n   <h2 class=\"example\">实例</h2> \n   <div class=\"example_code notranslate\">\n     txt1=&quot;What a very&quot;;\n    <br /> txt2=&quot;nice day&quot;;\n    <br /> txt3=txt1+&quot; &quot;+txt2; \n   </div> \n   <p>在以上语句执行后，变量<em>txt3</em> 包含的值是：</p> \n   <div class=\"example_code notranslate\">\n     What a very nice day\n   </div> \n   <br />\n   <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_operators4\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n  </div> \n  <br />\n  <hr /> \n  <h2>对字符串和数字进行加法运算</h2> \n  <p>两个数字相加，返回数字相加的和，如果数字与字符串相加，返回字符串，如下实例：</p> \n  <div class=\"example\"> \n   <h2 class=\"example\">实例</h2> \n   <div class=\"example_code notranslate\">\n     x=5+5;\n    <br /> y=&quot;5&quot;+5;\n    <br /> z=&quot;Hello&quot;+5;\n    <br /> \n   </div> \n   <p><em>x</em>,<em>y</em>, 和 <em>z</em> 输出结果为:</p> \n   <div class=\"example_code notranslate\">\n     10\n    <br /> 55\n    <br /> Hello5\n   </div> \n   <br />\n   <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_operators5\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n  </div> \n  <p> <b>规则:</b>如果把数字与字符串相加，结果将成为字符串！</p> \n </p给定<strong>\n</p算术运算符用于执行变量与>', null, 'JavaScript 运算符|实例|JavaScript 算术运算符|JavaScript 赋值运算符|用于字符串的 + 运算符|实例|实例|实例|对字符串和数字进行加法运算|实例|');
INSERT INTO `schoolcontent` VALUES ('150', '152', '<h1>JavaScript <span class=\"color_h1\"> 比较</span> 和<span class=\"color_h1\"> 逻辑运算符</span> </h1> \n<hr /> \n<p class=\"intro\">比较和逻辑运算符用于测试 <em>true</em> 或者 <em>false</em>。</p> \n<hr /> \n<h2>比较运算符</h2> \n<p>比较运算符在逻辑语句中使用，以测定变量或值是否相等。</p> \n<p给定<strong>\n  x=5，下面的表格解释了比较运算符：\n <p></p> \n <table class=\"reference \"> \n  <tbody>\n   <tr> \n    <th width=\"15%\" align=\"left\">运算符</th> \n    <th width=\"40%\" align=\"left\">描述</th> \n    <th width=\"18%\" align=\"left\">比较</th> \n    <th width=\"17%\" align=\"left\">返回值</th> \n    <th width=\"10%\" align=\"left\">实例</th> \n   </tr> \n   <tr style=\"background-color:#ffffff\"> \n    <td valign=\"top\" rowspan=\"2\">==</td> \n    <td valign=\"top\" rowspan=\"2\">等于</td> \n    <td valign=\"top\">x==8</td> \n    <td valign=\"top\"><em>false</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison1\">实例 &raquo;</a></td> \n   </tr> \n   <tr style=\"background-color:#ffffff\"> \n    <td valign=\"top\">x==5</td> \n    <td valign=\"top\"><em>true</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison2\">实例 &raquo;</a></td> \n   </tr> \n   <tr class=\"fixzebra\"> \n    <td valign=\"top\" rowspan=\"2\">===</td> \n    <td valign=\"top\" rowspan=\"2\">绝对等于（值和类型均相等）</td> \n    <td valign=\"top\">x===&quot;5&quot;</td> \n    <td valign=\"top\"><em>false</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison3\">实例 &raquo;</a></td> \n   </tr> \n   <tr class=\"fixzebra\"> \n    <td valign=\"top\">x===5</td> \n    <td valign=\"top\"><em>true</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison4\">实例 &raquo;</a></td> \n   </tr> \n   <tr> \n    <td valign=\"top\">!=</td> \n    <td valign=\"top\">&nbsp;不等于</td> \n    <td valign=\"top\">x!=8</td> \n    <td valign=\"top\"><em>true</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison5\">实例 &raquo;</a></td> \n   </tr> \n   <tr> \n    <td valign=\"top\" rowspan=\"2\">!==</td> \n    <td valign=\"top\" rowspan=\"2\">&nbsp;绝对不等于（值或类型不相等）</td> \n    <td valign=\"top\">x!==&quot;5&quot;</td> \n    <td valign=\"top\"><em>true</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison6\">实例 &raquo;</a></td> \n   </tr> \n   <tr class=\"fixzebra\"> \n    <td valign=\"top\">x!==5</td> \n    <td valign=\"top\"><em>false</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison7\">实例 &raquo;</a></td> \n   </tr> \n   <tr style=\"background-color:#ffffff\"> \n    <td valign=\"top\">&gt;</td> \n    <td valign=\"top\">&nbsp;大于</td> \n    <td valign=\"top\">x&gt;8</td> \n    <td valign=\"top\"><em>false</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison8\">实例 &raquo;</a></td> \n   </tr> \n   <tr class=\"fixzebra\"> \n    <td valign=\"top\">&lt;</td> \n    <td valign=\"top\">&nbsp;小于</td> \n    <td valign=\"top\">x&lt;8</td> \n    <td valign=\"top\"><em>true</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison9\">实例 &raquo;</a></td> \n   </tr> \n   <tr style=\"background-color:#ffffff\"> \n    <td valign=\"top\">&gt;=</td> \n    <td valign=\"top\">&nbsp;大于或等于</td> \n    <td valign=\"top\">x&gt;=8</td> \n    <td valign=\"top\"><em>false</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison10\">实例 &raquo;</a></td> \n   </tr> \n   <tr class=\"fixzebra\"> \n    <td valign=\"top\">&lt;=</td> \n    <td valign=\"top\">&nbsp;小于或等于</td> \n    <td valign=\"top\">x&lt;=8</td> \n    <td valign=\"top\"><em>true</em></td> \n    <td valign=\"top\"><a target=\"_blank\" class=\"tryitbtn\" style=\"float:right;width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison11\">实例 &raquo;</a></td> \n   </tr> \n  </tbody>\n </table> \n <br />\n <hr /> \n <h2>如何使用</h2> \n <p>可以在条件语句中使用比较运算符对值进行比较，然后根据结果来采取行动：</p> \n <div class=\"code notranslate\">\n  <div>\n    if (age&lt;18) x=&quot;Too young&quot;;\n  </div>\n </div> \n <p>您将在本教程的下一节中学习更多有关条件语句的知识。</p> \n <hr /> \n <h2>逻辑运算符</h2> \n <p>逻辑运算符用于测定变量或值之间的逻辑。 </p> \n <p>给定 x=6 以及 y=3，下表解释了逻辑运算符： </p> \n <table class=\"reference notranslate\"> \n  <tbody>\n   <tr> \n    <th width=\"15%\" align=\"left\">运算符</th> \n    <th width=\"45%\" align=\"left\">描述</th> \n    <th width=\"40%\" align=\"left\">例子</th> \n   </tr> \n   <tr> \n    <td valign=\"top\">&amp;&amp;</td> \n    <td valign=\"top\">and</td> \n    <td valign=\"top\"> (x &lt; 10 &amp;&amp; y &gt; 1) 为 true</td> \n   </tr> \n   <tr> \n    <td valign=\"top\">||</td> \n    <td valign=\"top\">or</td> \n    <td valign=\"top\">(x==5 || y==5) 为 false</td> \n   </tr> \n   <tr> \n    <td valign=\"top\">!</td> \n    <td valign=\"top\">not</td> \n    <td valign=\"top\"> !(x==y) 为 true</td> \n   </tr> \n  </tbody>\n </table> \n <br />\n <hr /> \n <h2>条件运算符</h2> \n <p>JavaScript 还包含了基于某些条件对变量进行赋值的条件运算符。</p> \n <h3>语法</h3> \n <div class=\"code notranslate\">\n  <div> \n   <em>variablename</em>=(\n   <em>condition</em>)?\n   <em>value1</em>:\n   <em>value2</em>&nbsp;\n  </div>\n </div> \n <h3>例子</h3> \n <div class=\"example\"> \n  <h2 class=\"example\">实例</h2> \n  <p class=\"example\">如果变量 age 中的值小于 18，则向变量 voteable 赋值 &quot;年龄太小&quot;，否则赋值 &quot;年龄已达到&quot;。</p> \n  <div class=\"example_code notranslate\">\n    voteable=(age&lt;18)?&quot;年龄太小&quot;:&quot;年龄已达到&quot;; \n   <br />\n  </div>\n  <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_comparison\">尝试一下 &raquo;</a> \n </div> \n</p给定<strong>', null, 'JavaScript 比较 和 逻辑运算符|比较运算符|如何使用|逻辑运算符|条件运算符|实例|');
INSERT INTO `schoolcontent` VALUES ('151', '153', '<h1>JavaScript <span class=\"color_h1\">If...Else</span> 语句</h1> \n<hr /> \n<p class=\"intro\">条件语句用于基于不同的条件来执行不同的动作。</p> \n<hr /> \n<h2>条件语句</h2> \n<p>通常在写代码时，您总是需要为不同的决定来执行不同的动作。您可以在代码中使用条件语句来完成该任务。</p> \n<p>在 JavaScript 中，我们可使用以下条件语句：</p> \n<ul> \n <li><strong>if 语句</strong> - 只有当指定条件为 true 时，使用该语句来执行代码</li> \n <li><strong>if...else 语句</strong> - 当条件为 true 时执行代码，当条件为 false 时执行其他代码</li> \n <li><strong>if...else if....else 语句</strong>- 使用该语句来选择多个代码块之一来执行</li> \n <li><strong>switch 语句</strong> - 使用该语句来选择多个代码块之一来执行</li> \n</ul> \n<hr /> \n<h2>If 语句</h2> \n<p>只有当指定条件为 true 时，该语句才会执行代码。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   if (\n  <i>condition</i>)\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp;当条件为 true 时执行的代码</i>\n  <br /> &nbsp; }\n </div>\n</div> \n<p>请使用小写的<strong> if</strong>。使用大写字母（IF）会生成 JavaScript 错误！</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">当时间小于 20:00 时，生成问候 &quot;Good day&quot;：</p> \n <div class=\"example_code notranslate\">\n   if (time&lt;20)\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;x=&quot;Good day&quot;;\n  <br /> &nbsp;&nbsp;}\n </div> \n <p<strong>\n  x 的结果是：\n  <p></p> \n  <div class=\"example_code\"> \n   <script>\r\nvar d=new Date();\r\nvar time=d.getHours();\r\nif (time <20)\r\n  {\r\n  document.write(\"Good day\");\r\n  } \r\n</script> \n  </div> \n  <br />\n  <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_ifthen\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n </p<strong>\n</div> \n<p>请注意，在这个语法中，没有 ..else..。您已经告诉浏览器只有在指定条件为 true 时才执行代码。</p> \n<hr /> \n<h2>If...else 语句</h2> \n<p>请使用 if....else 语句在条件为 true 时执行代码，在条件为 false 时执行其他代码。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\"> \n <div>\n   if (\n  <i>condition</i>)\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp; 当条件为 true 时执行的代码</i>\n  <br /> &nbsp; }\n  <br /> else\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp; 当条件不为 true 时执行的代码</i>\n  <br /> &nbsp; }\n </div> \n</div> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">当时间小于 20:00 时，生成问候 &quot;Good day&quot;，否则生成问候 &quot;Good evening&quot;。</p> \n <div class=\"example_code notranslate\">\n   if (time&lt;20)\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;x=&quot;Good day&quot;;\n  <br /> &nbsp;&nbsp;}\n  <br /> else\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;x=&quot;Good evening&quot;;\n  <br /> &nbsp;&nbsp;} \n </div> \n <p><strong>x </strong>的结果是：</p> \n <div class=\"example_code notranslate\"> \n  <script>\r\nvar d=new Date();\r\nvar time=d.getHours();\r\nif (time <20)\r\n  {\r\n  document.write(\"Good day\");\r\n  }\r\nelse\r\n  {\r\n  document.write(\"Good evening\");\r\n  }\r\n</script> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_ifthenelse\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>If...else if...else 语句</h2> \n<p>使用 if....else if...else 语句来选择多个代码块之一来执行。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   if (\n  <i>condition1</i>)\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp; 当条件 1 为 true 时执行的代码</i>\n  <br /> &nbsp; }\n  <br /> else if (\n  <i>condition2</i>)\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp;当条件 2 为 true 时执行的代码</i>\n  <br /> &nbsp; }\n  <br /> else\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp; 当条件 1 和 条件 2 都不为 true 时执行的代码</i>\n  <br /> &nbsp; }\n </div>\n</div> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">如果时间小于 10:00，则生成问候 &quot;Good morning&quot;，如果时间大于 10:00 小于 20:00，则生成问候 &quot;Good day&quot;，否则生成问候 &quot;Good evening&quot;：</p> \n <div class=\"example_code notranslate\">\n   if (time&lt;10)\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;x=&quot;Good morning&quot;;\n  <br /> &nbsp;&nbsp;}\n  <br /> else if (time&gt;=10 &amp;&amp; time&lt;20)\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;x=&quot;Good day&quot;;\n  <br /> &nbsp;&nbsp;}\n  <br /> else\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;x=&quot;Good evening&quot;;\n  <br /> &nbsp;&nbsp;} \n </div> \n <p><strong>x </strong>的结果是：</p> \n <div class=\"example_code notranslate\"> \n  <script>\r\nvar d=new Date();\r\nvar time=d.getHours();\r\nif (time < 10)\r\n  {\r\n  document.write(\"Good morning\");\r\n  }\r\nelse if (time < 20)\r\n  {\r\n  document.write(\"Good day\");\r\n  }\r\nelse\r\n  {\r\n  document.write(\"Good evening\");\r\n  }\r\n</script> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_elseif\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_randomlink\">随机链接</a><br /> 这个实例演示了一个链接，当您点击链接时，会带您到不同的地方去。每种机会都是 50% 的概率。</p>', null, 'JavaScript If...Else 语句|条件语句|If 语句|实例|If...else 语句|实例|If...else if...else 语句|实例|更多实例|');
INSERT INTO `schoolcontent` VALUES ('152', '154', '<h1>JavaScript <span class=\"color_h1\">switch</span> 语句</h1> \n<hr /> \n<p class=\"intro\">switch 语句用于基于不同的条件来执行不同的动作。</p> \n<hr /> \n<h2>JavaScript switch 语句</h2> \n<p>请使用 switch 语句来选择要执行的多个代码块之一。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   switch(n)\n  <br /> {\n  <br /> case 1:\n  <br />\n  <i>&nbsp; 执行代码块 1</i>\n  <br /> break;\n  <br /> case 2:\n  <br />\n  <i>&nbsp; 执行代码块 2</i>\n  <br /> break;\n  <br /> default:\n  <br />\n  <i>&nbsp;n 与 case 1 和 case 2 不同时执行的代码</i>\n  <br /> }\n </div>\n</div> \n<p>工作原理：首先设置表达式 <i>n</i>（通常是一个变量）。随后表达式的值会与结构中的每个 case 的值做比较。如果存在匹配，则与该 case 关联的代码块会被执行。请使用 <strong>break </strong>来阻止代码自动地向下一个 case 运行。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">显示今天的星期名称。请注意 Sunday=0, Monday=1, Tuesday=2, 等等：</p> \n <div class=\"example_code notranslate\">\n   var d=new Date().getDay(); \n  <br /> switch (d) \n  <br /> { \n  <br /> case 0:x=&quot;今天是星期日&quot;; \n  <br /> break; \n  <br /> case 1:x=&quot;今天是星期一&quot;; \n  <br /> break; \n  <br /> case 2:x=&quot;今天是星期二&quot;; \n  <br /> break; \n  <br /> case 3:x=&quot;今天是星期三&quot;; \n  <br /> break; \n  <br /> case 4:x=&quot;今天是星期四&quot;; \n  <br /> break; \n  <br /> case 5:x=&quot;今天是星期五&quot;; \n  <br /> break; \n  <br /> case 6:x=&quot;今天是星期六&quot;; \n  <br /> break; \n  <br /> } \n </div> \n <p><em>x</em> 的运行结果：</p> \n <div class=\"example_code\"> \n  <script>\r\nvar d=new Date().getDay();\r\nswitch (d)\r\n{\r\n  case 0:x=\"今天是星期日\";\r\n  break;\r\n  case 1:x=\"今天是星期一\";\r\n  break;\r\n  case 2:x=\"今天是星期二\";\r\n  break;\r\n  case 3:x=\"今天是星期三\";\r\n  break;\r\n  case 4:x=\"今天是星期四\";\r\n  break;\r\n  case 5:x=\"今天是星期五\";\r\n  break;\r\n  case 6:x=\"今天是星期六\";\r\n  break;\r\n}\r\ndocument.write(x);\r\n</script> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_switch\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<h2>default 关键词</h2> \n<p>请使用 default 关键词来规定匹配不存在时做的事情：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">如果今天不是星期六或星期日，则会输出默认的消息：</p> \n <div class=\"example_code notranslate\">\n   var d=new Date().getDay(); \n  <br /> switch (d) \n  <br /> { \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;case 6:x=&quot;今天是星期六&quot;; \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;break; \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;case 0:x=&quot;今天是星期日&quot;; \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;break; \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;default: \n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;x=&quot;期待周末&quot;; \n  <br /> } \n  <br /> document.getElementById(&quot;demo&quot;).innerHTML=x; \n </div> \n <p> <em>x</em> 的运行结果：</p> \n <div class=\"example_code notranslate\"> \n  <script>\r\nvar x;\r\nvar d=new Date().getDay();\r\nswitch (d)\r\n{\r\n  case 6:x=\"今天是星期六\";\r\n  break;\r\n  case 0:x=\"今天是星期日\";\r\n  break;\r\n  default:\r\n  x=\"期待周末\";\r\n}\r\ndocument.write(x);\r\n</script> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_switch2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript switch 语句|JavaScript switch 语句|实例|default 关键词|实例|');
INSERT INTO `schoolcontent` VALUES ('153', '155', '<h1>JavaScript <span class=\"color_h1\">for 循环</span> </h1> \n<hr /> \n<p class=\"intro\">循环可以将代码块执行指定的次数。</p> \n<hr /> \n<h2>JavaScript 循环</h2> \n<p>如果您希望一遍又一遍地运行相同的代码，并且每次的值都不同，那么使用循环是很方便的。</p> \n<p>我们可以这样输出数组的值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">一般写法：</h2> \n <div class=\"example_code notranslate\">\n   document.write(cars[0] + &quot;&lt;br&gt;&quot;); \n  <br />document.write(cars[1] + &quot;&lt;br&gt;&quot;); \n  <br /> document.write(cars[2] + &quot;&lt;br&gt;&quot;); \n  <br />document.write(cars[3] + &quot;&lt;br&gt;&quot;); \n  <br /> document.write(cars[4] + &quot;&lt;br&gt;&quot;); \n  <br />document.write(cars[5] + &quot;&lt;br&gt;&quot;); \n </div> \n <br />\n <h2 class=\"example\">使用for循环</h2> \n <div class=\"example_code notranslate\">\n   for (var i=0;i&lt;cars.length;i++)\n  <br />{ \n  <br />&nbsp;&nbsp;&nbsp;&nbsp;document.write(cars[i] + &quot;&lt;br&gt;&quot;);\n  <br /> }\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_loop_for\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>不同类型的循环</h2> \n<p>JavaScript 支持不同类型的循环：</p> \n<ul> \n <li><strong>for</strong> - 循环代码块一定的次数</li> \n <li><strong>for/in</strong> - 循环遍历对象的属性</li> \n <li><strong>while</strong> - 当指定的条件为 true 时循环指定的代码块</li> \n <li><strong>do/while</strong> - 同样当指定的条件为 true 时循环指定的代码块</li> \n</ul> \n<hr /> \n<h2>For 循环</h2> \n<p>for 循环是您在希望创建循环时常会用到的工具。 </p> \n<p>下面是 for 循环的语法：</p> \n<div class=\"code notranslate\">\n <div>\n   for (\n  <i>语句 1</i>;\n  <i> 语句 2</i>;\n  <i> 语句 3</i>)\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp; 被执行的代码块</i>\n  <br /> &nbsp; }\n  <br /> \n </div>\n</div> \n<p><strong>语句 1</strong> （代码块）开始前执行 starts.</p> \n<p><strong>语句 2</strong> 定义运行循环（代码块）的条件</p> \n<p><strong>语句 3</strong> 在循环（代码块）已被执行之后执行</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   for (var i=0; i&lt;5; i++)\n  <br /> {\n  <br />&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;x=x + &quot;The number is &quot; + i + &quot;&lt;br&gt;&quot;;\n  <br /> }\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_loop_for_ex\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>从上面的例子中，您可以看到：</p> \n<p>Statement 1 在循环开始之前设置变量 (var i=0)。</p> \n<p>Statement 2 定义循环运行的条件（i 必须小于 5）。</p> \n<p>Statement 3 在每次代码块已被执行后增加一个值 (i++)。</p> \n<hr /> \n<h2>语句 1</h2> \n<p>通常我们会使用语句 1 初始化循环中所用的变量 (var i=0)。</p> \n<p>语句 1 是可选的，也就是说不使用语句 1 也可以。</p> \n<p>您可以在语句 1 中初始化任意（或者多个）值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例:</h2> \n <div class=\"example_code notranslate\">\n   for (var i=0,len=cars.length; i&lt;len; i++)\n  <br />{ \n  <br />document.write(cars[i] + &quot;&lt;br&gt;&quot;);\n  <br /> }\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_loop_for_om1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>同时您还可以省略语句 1（比如在循环开始前已经设置了值时）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例:</h2> \n <div class=\"example_code notranslate\">\n   var i=2,len=cars.length;\n  <br />for (; i&lt;len; i++)\n  <br />{ \n  <br />document.write(cars[i] + &quot;&lt;br&gt;&quot;);\n  <br /> }\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_loop_for_om2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>语句 2</h2> \n<p>通常语句 2 用于评估初始变量的条件。</p> \n<p>语句 2 同样是可选的。</p> \n<p>如果语句 2 返回 true，则循环再次开始，如果返回 false，则循环将结束。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 如果您省略了语句 2，那么必须在循环内提供 <em>break</em>。否则循环就无法停下来。这样有可能令浏览器崩溃。请在本教程稍后的章节阅读有关 break 的内容。 </td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>语句 3</h2> \n<p>通常语句 3 会增加初始变量的值。</p> \n<p>语句 3 也是可选的。</p> \n<p>语句 3 有多种用法。增量可以是负数 (i--)，或者更大 (i=i+15)。</p> \n<p>语句 3 也可以省略（比如当循环内部有相应的代码时）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例:</h2> \n <div class=\"example_code notranslate\">\n   var i=0,len=cars.length;\n  <br />for (; i&lt;len; )\n  <br />{ \n  <br />document.write(cars[i] + &quot;&lt;br&gt;&quot;);\n  <br /> i++;\n  <br />}\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_loop_for_om3\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>For/In 循环</h2> \n<p>JavaScript for/in 语句循环遍历对象的属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var person={fname:&quot;John&quot;,lname:&quot;Doe&quot;,age:25}; \n  <br />\n  <br /> for (x in person)\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;txt=txt + person[x];\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_object_for_in\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>您将在有关 JavaScript 对象的章节学到更多有关 for / in 循环的知识。</p> \n<hr /> \n<h2>While 循环</h2> \n<p>我们将在下一章为您讲解 while 循环和 do/while 循环。</p>', null, 'JavaScript for 循环|JavaScript 循环|一般写法：|使用for循环|不同类型的循环|For 循环|实例|语句 1|实例:|实例:|语句 2|语句 3|实例:|For/In 循环|实例|While 循环|');
INSERT INTO `schoolcontent` VALUES ('154', '156', '<h1>JavaScript <span class=\"color_h1\">while 循环</span> </h1> \n<hr /> \n<p class=\"intro\">只要指定条件为 true，循环就可以一直执行代码块。</p> \n<hr /> \n<h2>while 循环</h2> \n<p>while 循环会在指定条件为真时循环执行代码块。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   while (\n  <em>条件</em>)\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp; 需要执行的代码</i>\n  <br /> &nbsp; }\n </div>\n</div> \n<h3>实例</h3> \n<p>本例中的循环将继续运行，只要变量 i 小于 5：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   while (i&lt;5)\n  <br /> &nbsp; {\n  <br /> &nbsp; x=x + &quot;The number is &quot; + i + &quot;&lt;br&gt;&quot;;\n  <br /> &nbsp; i++;\n  <br /> &nbsp; }\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_while\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 如果您忘记增加条件中所用变量的值，该循环永远不会结束。这可能导致浏览器崩溃。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>do/while 循环</h2> \n<p>do/while 循环是 while 循环的变体。该循环会在检查条件是否为真之前执行一次代码块，然后如果条件为真的话，就会重复这个循环。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   do\n  <br /> &nbsp; {\n  <br />\n  <i>&nbsp; 需要执行的代码<br /> &nbsp; </i>}\n  <br /> while (\n  <em>条件</em>);\n </div>\n</div> \n<h3>实例</h3> \n<p>下面的例子使用 do/while 循环。该循环至少会执行一次，即使条件为 false 它也会执行一次，因为代码块会在条件被测试前执行：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   do\n  <br /> &nbsp; {\n  <br /> &nbsp; x=x + &quot;The number is &quot; + i + &quot;&lt;br&gt;&quot;;\n  <br /> &nbsp; i++;\n  <br /> &nbsp; }\n  <br /> while (i&lt;5);\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_dowhile\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>别忘记增加条件中所用变量的值，否则循环永远不会结束！</p> \n<hr /> \n<h2>比较 for 和 while</h2> \n<p>如果您已经阅读了前面那一章关于 for 循环的内容，您会发现 while 循环与 for 循环很像。</p> \n<p>本例中的循环使用 <strong>for 循环</strong>来显示 cars 数组中的所有值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   cars=[&quot;BMW&quot;,&quot;Volvo&quot;,&quot;Saab&quot;,&quot;Ford&quot;];\n  <br /> var i=0;\n  <br /> for (;cars[i];)\n  <br /> {\n  <br /> document.write(cars[i] + &quot;&lt;br&gt;&quot;);\n  <br /> i++;\n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_loop_for_cars\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>本例中的循环使用 <strong>while 循环</strong>来显示 cars 数组中的所有值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   cars=[&quot;BMW&quot;,&quot;Volvo&quot;,&quot;Saab&quot;,&quot;Ford&quot;];\n  <br /> var i=0;\n  <br /> while (cars[i])\n  <br /> {\n  <br /> document.write(cars[i] + &quot;&lt;br&gt;&quot;);\n  <br /> i++;\n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_loop_while_cars\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript while 循环|while 循环|实例|do/while 循环|实例|比较 for 和 while|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('155', '157', '<h1>JavaScript <span class=\"color_h1\">Break 和 Continue 语句</span> </h1> \n<hr /> \n<p class=\"intro\">break 语句用于跳出循环。</p> \n<p class=\"intro\">continue 用于跳过循环中的一个迭代。</p> \n<hr /> \n<h2>Break 语句</h2> \n<p>我们已经在本教程之前的章节中见到过 break 语句。它用于跳出 switch() 语句。</p> \n<p>break 语句可用于跳出循环。</p> \n<p>break 语句跳出循环后，会继续执行该循环之后的代码（如果有的话）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   for (i=0;i&lt;10;i++)\n  <br /> &nbsp; {\n  <br /> &nbsp; if (i==3)\n  <br /> &nbsp;&nbsp;&nbsp; {\n  <br /> &nbsp;&nbsp;&nbsp; break;\n  <br /> &nbsp;&nbsp;&nbsp; }\n  <br /> &nbsp; x=x + &quot;The number is &quot; + i + &quot;&lt;br&gt;&quot;;\n  <br /> &nbsp; }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_break\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>由于这个 if 语句只有一行代码，所以可以省略花括号：</p> \n<div class=\"example\"> \n <div class=\"example_code notranslate\">\n   for (i=0;i&lt;10;i++)\n  <br /> &nbsp; {\n  <br /> &nbsp; if (i==3) break;\n  <br /> &nbsp; x=x + &quot;The number is &quot; + i + &quot;&lt;br&gt;&quot;;\n  <br /> &nbsp; } \n </div> \n</div> \n<br />\n<hr /> \n<h2>Continue 语句</h2> \n<p><strong>continue 语句</strong>中断循环中的迭代，如果出现了指定的条件，然后继续循环中的下一个迭代。 该例子跳过了值 3：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   for (i=0;i&lt;=10;i++)\n  <br /> &nbsp;{\n  <br /> &nbsp;if (i==3) continue;\n  <br /> &nbsp; x=x + &quot;The number is &quot; + i + &quot;&lt;br&gt;&quot;;\n  <br /> &nbsp; } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_continue\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>JavaScript 标签</h2> \n<p>正如您在 switch 语句那一章中看到的，可以对 JavaScript 语句进行标记。</p> \n<p>如需标记 JavaScript 语句，请在语句之前加上冒号：</p> \n<div class=\"example\"> \n <div class=\"example_code notranslate\">\n   label:\n  <br />statements\n </div> \n</div> \n<p>break 和 continue 语句仅仅是能够跳出代码块的语句。</p> \n<p>语法:</p> \n<div class=\"example\"> \n <div class=\"example_code notranslate\">\n   break \n  <em>labelname</em>; \n  <br />\n  <br />continue \n  <em>labelname</em>;\n </div> \n</div> \n<p>continue 语句（带有或不带标签引用）只能用在循环中。</p> \n<p>break 语句（不带标签引用），只能用在循环或 switch 中。</p> \n<p>通过标签引用，break 语句可用于跳出任何 JavaScript 代码块：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   cars=[&quot;BMW&quot;,&quot;Volvo&quot;,&quot;Saab&quot;,&quot;Ford&quot;];\n  <br />list: \n  <br />{\n  <br />document.write(cars[0] + &quot;&lt;br&gt;&quot;); \n  <br />document.write(cars[1] + &quot;&lt;br&gt;&quot;); \n  <br />document.write(cars[2] + &quot;&lt;br&gt;&quot;); \n  <br />break list;\n  <br />document.write(cars[3] + &quot;&lt;br&gt;&quot;); \n  <br />document.write(cars[4] + &quot;&lt;br&gt;&quot;); \n  <br />document.write(cars[5] + &quot;&lt;br&gt;&quot;); \n  <br />}\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_break_list\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript Break 和 Continue 语句|Break 语句|实例|Continue 语句|实例|JavaScript 标签|实例|');
INSERT INTO `schoolcontent` VALUES ('156', '158', '<h1>JavaScript <span class=\"color_h1\">typeof, null, 和 undefined</span></h1> \n<hr /> \n<p class=\"intro\">JavaScript typeof,&nbsp;null, undefined, valueOf()。<br /> </p> \n<hr /> \n<h2>typeof 操作符</h2> \n<p>你可以使用 typeof 操作符来检测变量的数据类型。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">typeof</span> \n  <span class=\"highVAL\">&quot;John&quot;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <span class=\"highCOM\">// 返回 string <br /></span> \n  <span class=\"highELE\">typeof</span> \n  <span class=\"highVAL\">3.14</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <span class=\"highCOM\">// 返回 number<br /></span> \n  <span class=\"highELE\">typeof</span> \n  <span class=\"highVAL\">false</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <span class=\"highCOM\">// 返回 boolean<br /></span> \n  <span class=\"highELE\">typeof</span> [\n  <span class=\"highVAL\">1</span>,\n  <span class=\"highVAL\">2</span>,\n  <span class=\"highVAL\">3</span>,\n  <span class=\"highVAL\">4</span>]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <span class=\"highCOM\">// 返回 object<br /></span> \n  <span class=\"highELE\">typeof</span> {name:\n  <span class=\"highVAL\">\'John\'</span>, age:34}&nbsp;\n  <span class=\"highCOM\">// 返回 object </span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof_typeof\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> </p>\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>&nbsp;在JavaScript中，数组是一种特殊的对象类型。 因此 typeof [1,2,3,4] 返回 object。&nbsp; </td> \n  </tr>\n </tbody>\n</table> \n<p></p> \n<hr /> \n<h2>Null</h2> \n<p>在 JavaScript 中 null 表示 &quot;什么都没有&quot;。</p> \n<p>null是一个只有一个值的特殊类型。表示一个空对象引用。</p> \n<p> </p>\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 用 typeof 检测 null 返回是object。</td> \n  </tr>\n </tbody>\n</table> \n<p></p> \n<p>你可以设置为 null 来清空对象:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> person = \n  <span class=\"highVAL\">null</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// Value is null, but type is still an object<br /></span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof_null\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>你可以设置为 undefined 来清空对象:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> person = undefined;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 值为 undefined, type is undefined<br /></span> \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof_undefined_1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Undefined</h2> \n<p>在 JavaScript 中, <strong>undefined</strong> 是一个没有设置值的变量。</p> \n<p> <strong>typeof</strong> 一个没有值的变量会返回 <strong> undefined</strong>。 </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> person;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// Value is undefined, type is undefined</span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof_undefined\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>任何变量都可以通过设置值为 <strong>undefined</strong> 来清空。 类型为 <strong>undefined</strong>.</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   person = undefined;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 值为 undefined, type is undefined</span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof_undefined_2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>Undefined 和 Null 的区别</h2> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highELE\">typeof</span> undefined&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// undefined<br /></span>\n  <span class=\"highELE\">typeof</span> \n  <span class=\"highVAL\">null</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// object<br /></span>\n  <span class=\"highVAL\">null</span> === undefined&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// false<br /></span>\n  <span class=\"highVAL\">null</span> == undefined&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// true</span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof_undefined_3\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript typeof, null, 和 undefined|typeof 操作符|实例|Null|实例|实例|Undefined|实例|实例|Undefined 和 Null 的区别|');
INSERT INTO `schoolcontent` VALUES ('157', '159', '<h1>JavaScript <span class=\"color_h1\">类型转换</span></h1> \n<hr /> \n<p>Number() 转换为数字， String() 转换为字符串， Boolean() 转化为布尔值。 </p> \n<hr /> \n<h2>JavaScript 数据类型</h2> \n<p>在 JavaScript 中有 5 中不同的数据类型：</p> \n<ul> \n <li>string</li> \n <li>number</li> \n <li>boolean</li> \n <li>object</li> \n <li>function</li> \n</ul> \n<p>3 种对象类型：</p> \n<ul> \n <li>Object</li> \n <li>Date</li> \n <li>Array</li> \n</ul> \n<p> 2 个不包含任何值的数据类型：</p> \n<ul> \n <li>null</li> \n <li>undefined</li> \n</ul> \n<hr /> \n<h2>typeof 操作符</h2> \n<p>你可以使用 <strong>typeof</strong> 操作符来查看 JavaScript 变量的数据类型。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">typeof</span> \n  <span class=\"highVAL\">&quot;John&quot;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 string <br /></span> \n  <span class=\"highELE\">typeof</span> \n  <span class=\"highVAL\">3.14</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 number<br /></span> \n  <span class=\"highELE\">typeof</span> NaN &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 number<br /></span>\n  <span class=\"highELE\">typeof</span> \n  <span class=\"highVAL\">false</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 boolean<br /></span>\n  <span class=\"highELE\">typeof</span> [\n  <span class=\"highVAL\">1</span>,\n  <span class=\"highVAL\">2</span>,\n  <span class=\"highVAL\">3</span>,\n  <span class=\"highVAL\">4</span>]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <span class=\"highCOM\">// 返回 object<br /></span> \n  <span class=\"highELE\">typeof</span> {name:\n  <span class=\"highVAL\">\'John\'</span>, age:34}&nbsp; \n  <span class=\"highCOM\">// 返回 object<br /></span>\n  <span class=\"highELE\">typeof</span> \n  <span class=\"highELE\">new</span> Date()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 object<br /></span>\n  <span class=\"highELE\">typeof</span> \n  <span class=\"highELE\">function</span> () {} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 function<br /></span> \n  <span class=\"highELE\">typeof</span> myCar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 undefined (if myCar is not declared)<br /></span> \n  <span class=\"highELE\">typeof</span> \n  <span class=\"highVAL\">null</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 object </span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof_all\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>请注意：</p> \n<ul> \n <li> NaN 的数据类型是 number</li> \n <li> 数组(Array)的数据类型是 object</li> \n <li> 日期(Date)的数据类型为 object</li> \n <li> null 的数据类型是 object</li> \n <li> 未定义变量的数据类型为 undefined</li> \n</ul> \n<p>如果对象是 JavaScript Array 或 JavaScript Date ，我们就无法通过 <strong>typeof</strong> 来判断他们的类型，因为都是 返回 Object。</p> \n<hr /> \n<h2>constructor 属性</h2> \n<p> <strong>constructor</strong> 属性返回所有 JavaScript 变量的构造函数。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highVAL\">&quot;John&quot;</span>.constructor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回函数 String()&nbsp; { [native code] }<br /></span> (\n  <span class=\"highVAL\">3.14</span>).constructor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回函数 Number()&nbsp; { [native code] }<br /></span> false.constructor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回函数 Boolean() { [native code] }<br /></span> [\n  <span class=\"highVAL\">1</span>,\n  <span class=\"highVAL\">2</span>,\n  <span class=\"highVAL\">3</span>,\n  <span class=\"highVAL\">4</span>].constructor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回函数 Array()&nbsp;&nbsp; { [native code] }<br /></span> {name:\n  <span class=\"highVAL\">\'John\'</span>, age:34}.constructor&nbsp; \n  <span class=\"highCOM\">// 返回函数 Object()&nbsp; { [native code] }<br /></span> \n  <span class=\"highELE\">new</span> Date().constructor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; \n  <span class=\"highCOM\">// 返回函数 Date()&nbsp; &nbsp; { [native code] }<br /></span> \n  <span class=\"highELE\">function</span> () {}.constructor &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回函数 Function(){ [native code] } </span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_constructor_all\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> 你可以使用 constructor 属性来查看是对象是否为数组 (包含字符串 &quot;Array&quot;):</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">function</span> isArray(myArray) {\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highELE\">return</span> myArray.constructor.toString().indexOf(\n  <span class=\"highVAL\">&quot;Array&quot;</span>) &gt; \n  <span class=\"highVAL\">-1</span>;\n  <br /> } \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_array_isarray\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>你可以使用 constructor 属性来查看是对象是否为日期 (包含字符串 &quot;Date&quot;):</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">function</span> isDate(myDate) {\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highELE\">return</span> myDate.constructor.toString().indexOf(\n  <span class=\"highVAL\">&quot;Date&quot;</span>) &gt; \n  <span class=\"highVAL\">-1</span>;\n  <br /> } \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_date_isdate\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>JavaScript 类型转换</h2> \n<p>JavaScript 变量可以转换为新变量或其他数据类型：</p> \n<ul> \n <li>通过使用 JavaScript 函数</li> \n <li>通过 JavaScript 自身自动转换</li> \n</ul> \n<hr /> \n<h2>将数字转换为字符串</h2> \n<p>全局方法 <strong>String()</strong> 可以将数字转换为字符串。</p> \n<p>该方法可用于任何类型的数字，字母，变量，表达式：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   String(x)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <span class=\"highCOM\">// 将变量 x 转换为字符串并返回<br /></span> String(\n  <span class=\"highVAL\">123</span>)&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 将数字 123 转换为字符串并返回<br /></span> String(\n  <span class=\"highVAL\">100</span> + \n  <span class=\"highVAL\">23</span>)&nbsp; \n  <span class=\"highCOM\">// 将数字表达式转换为字符串并返回</span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_number_string\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> Number 方法 <strong>toString()</strong> 也是有同样的效果。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   x.toString()\n  <br />(\n  <span class=\"highVAL\">123</span>).toString()\n  <br />(\n  <span class=\"highVAL\">100</span> + \n  <span class=\"highVAL\">23</span>).toString()\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_number_tostring\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>在 <a href=\"http://www.runoob.com/jsref/jsref-obj-number.html\">Number 方法</a> 章节中，你可以找到更多数字转换为字符串的方法：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%\">方法</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>toExponential()</td> \n   <td>把对象的值转换为指数计数法。</td> \n  </tr> \n  <tr> \n   <td>toFixed()</td> \n   <td>把数字转换为字符串，结果的小数点后有指定位数的数字。</td> \n  </tr> \n  <tr> \n   <td>toPrecision()</td> \n   <td>把数字格式化为指定的长度。</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>将布尔值转换为字符串</h2> \n<p>全局方法 <strong>String()</strong> 可以将布尔值转换为字符串。 </p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   String(\n  <span class=\"highVAL\">false</span>)&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 &quot;false&quot;<br /></span> String(\n  <span class=\"highVAL\">true</span>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 &quot;true&quot; </span>\n </div> \n</div> \n<p>Boolean 方法 <strong>toString()</strong> 也有相同的效果。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   false.toString()&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 &quot;false&quot;<br /></span> true.toString()&nbsp; &nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 &quot;true&quot; </span>\n </div> \n</div> \n<br /> \n<hr /> \n<h2>将日期转换为字符串</h2> \n<p>全局方法 <strong>String()</strong> 可以将日期转换为字符串。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   String(Date())&nbsp;&nbsp;&nbsp; &nbsp; \n  <span class=\"highCOM\">// 返回 Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)</span>\n </div> \n</div> \n<p> Date 方法 <strong>toString()</strong> 也有相同的效果。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   Date().toString()&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 Thu Jul 17 2014 15:38:19 GMT+0200 (W. Europe Daylight Time)</span>\n </div> \n</div> \n<p>在 <a href=\"http://www.runoob.com/jsref/jsref-obj-date.html\">Date 方法</a> 章节中，你可以查看更多关于日期转换为字符串的函数：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>方法</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>getDate()</td> \n   <td>从 Date 对象返回一个月中的某一天 (1 ~ 31)。</td> \n  </tr> \n  <tr> \n   <td>getDay()</td> \n   <td>从 Date 对象返回一周中的某一天 (0 ~ 6)。</td> \n  </tr> \n  <tr> \n   <td>getFullYear()</td> \n   <td>从 Date 对象以四位数字返回年份。</td> \n  </tr> \n  <tr> \n   <td>getHours()</td> \n   <td>返回 Date 对象的小时 (0 ~ 23)。</td> \n  </tr> \n  <tr> \n   <td>getMilliseconds()</td> \n   <td>返回 Date 对象的毫秒(0 ~ 999)。</td> \n  </tr> \n  <tr> \n   <td>getMinutes()</td> \n   <td>返回 Date 对象的分钟 (0 ~ 59)。</td> \n  </tr> \n  <tr> \n   <td>getMonth()</td> \n   <td>从 Date 对象返回月份 (0 ~ 11)。</td> \n  </tr> \n  <tr> \n   <td>getSeconds()</td> \n   <td>返回 Date 对象的秒数 (0 ~ 59)。</td> \n  </tr> \n  <tr> \n   <td>getTime()</td> \n   <td>返回 1970 年 1 月 1 日至今的毫秒数。</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>将字符串转换为数字</h2> \n<p>全局方法 <strong>Number()</strong> 可以将字符串转换为数字。</p> \n<p>字符串包含数字(如 &quot;3.14&quot;) 转换为数字 (如 3.14).</p> \n<p>空字符串转换为 0。</p> \n<p>其他的字符串会转换为 NaN (不是个数字)。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   Number(\n  <span class=\"highVAL\">&quot;3.14&quot;</span>)&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 3.14<br /></span> Number(\n  <span class=\"highVAL\">&quot; &quot;</span>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 0 <br /></span> Number(\n  <span class=\"highVAL\">&quot;&quot;</span>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 0<br /></span> Number(\n  <span class=\"highVAL\">&quot;99 88&quot;</span>)&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 NaN </span>\n </div> \n</div> \n<p>在 <a href=\"http://www.runoob.com/jsref/jsref-obj-number.html\">Number 方法</a> 章节中，你可以查看到更多关于字符串转为数字的方法：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:25%\">方法</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>parseFloat()</td> \n   <td>解析一个字符串，并返回一个浮点数。</td> \n  </tr> \n  <tr> \n   <td>parseInt()</td> \n   <td>解析一个字符串，并返回一个整数。</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>一元运算符 + </h2> \n<p> <strong>Operator + </strong> 可用于将变量转换为数字：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> y = \n  <span class=\"highVAL\">&quot;5&quot;</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// y 是一个字符串<br /></span> \n  <span class=\"highELE\">var</span> x = + y;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// x 是一个数字 </span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof3\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>如果变量不能转换，它仍然会是一个数字，但值为 NaN (不是一个数字):</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> y = \n  <span class=\"highVAL\">&quot;John&quot;</span>;&nbsp;&nbsp; \n  <span class=\"highCOM\">// y 是一个字符串<br /></span> \n  <span class=\"highELE\">var</span> x = + y;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n  <span class=\"highCOM\">// x 是一个数字 (NaN)</span>\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_typeof4\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>将布尔值转换为数字</h2> \n<p>全局方法 <strong>Number()</strong> 可将布尔值转换为数字。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   Number(\n  <span class=\"highVAL\">false</span>)&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 0<br /></span> Number(\n  <span class=\"highVAL\">true</span>)&nbsp; &nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 1 </span>\n </div> \n</div> \n<br /> \n<hr /> \n<h2>将日期转换为数字</h2> \n<p>全局方法 <strong>Number()</strong> 可将日期转换为数字。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   d = \n  <span class=\"highELE\">new</span> Date();\n  <br />Number(d)&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 1404568027739 </span>\n </div> \n</div> \n<p>日期方法 <strong>getTime()</strong> 也有相同的效果。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   d = \n  <span class=\"highELE\">new</span> Date();\n  <br />d.getTime()&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; \n  <span class=\"highCOM\">// 返回 1404568027739 </span>\n </div> \n</div> \n<br /> \n<hr /> \n<h2>自动转换类型 Type Conversion</h2> \n<p>当 JavaScript 尝试操作一个 &quot;错误&quot; 的数据类型时，会自动转换为 &quot;正确&quot; 的数据类型。</p> \n<p>以下输出结果不是你所期望的：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highVAL\">5</span> + \n  <span class=\"highVAL\">null</span>&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; because null is converted to 0<br /></span>\n  <span class=\"highVAL\">&quot;5&quot;</span> + \n  <span class=\"highVAL\">null</span>&nbsp; \n  <span class=\"highCOM\">// 返回&quot;5null&quot;&nbsp;&nbsp; because null is converted to &quot;null&quot;<br /></span> \n  <span class=\"highVAL\">&quot;5&quot;</span> + \n  <span class=\"highVAL\">1</span> &nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 &quot;51&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; because 1 is converted to &quot;1&quot;&nbsp; <br /></span> \n  <span class=\"highVAL\">&quot;5&quot;</span> - \n  <span class=\"highVAL\">1</span>&nbsp;&nbsp;&nbsp;&nbsp; \n  <span class=\"highCOM\">// 返回 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; because &quot;5&quot; is converted to 5</span>\n </div> \n</div> \n<br /> \n<hr /> \n<h2>自动转换为字符串</h2> \n<p>当你尝试输出一个对象或一个变量时 JavaScript 会自动调用变量的 toString() 方法：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   document.getElementById(\n  <span class=\"highVAL\">&quot;demo&quot;</span>).innerHTML = myVar;\n  <br />\n  <br /> \n  <span class=\"highCOM\">// if myVar = {name:&quot;Fjohn&quot;}&nbsp; // toString 转换为 &quot;[object Object]&quot;<br /></span> \n  <span class=\"highCOM\">// if myVar = [1,2,3,4]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // toString 转换为 &quot;1,2,3,4&quot;<br /></span> \n  <span class=\"highCOM\">// if myVar = new Date()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // toString 转换为 &quot;Fri Jul 18 2014 09:08:55 GMT+0200&quot;<br /></span> \n </div> \n</div> \n<p>数字和布尔值也经常相互转换：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highCOM\">// if myVar = 123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // toString 转换为 &quot;123&quot;<br /></span> \n  <span class=\"highCOM\">// if myVar = true &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // toString 转换为 &quot;true&quot;<br /></span> \n  <span class=\"highCOM\">// if myVar = false&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // toString 转换为 &quot;false&quot; </span>\n </div> \n</div>', null, 'JavaScript 类型转换|JavaScript 数据类型|typeof 操作符|实例|constructor 属性|实例|实例|实例|JavaScript 类型转换|将数字转换为字符串|实例|实例|将布尔值转换为字符串|将日期转换为字符串|实例|将字符串转换为数字|一元运算符 +|实例|实例|将布尔值转换为数字|将日期转换为数字|自动转换类型 Type Conversion|自动转换为字符串|');
INSERT INTO `schoolcontent` VALUES ('158', '160', '<h1>JavaScript <span class=\"color_h1\">正则表达式</span></h1> \n<hr /> \n<p class=\"intro\">正则表达式（英语：Regular Expression，在代码中常简写为regex、regexp或RE）使用单个字符串来描述、匹配一系列符合某个句法规则的字符串搜索模式。</p> \n<p class=\"intro\">搜索模式可用于文本搜索和文本替换。</p> \n<hr /> \n<h2>什么是正则表达式？</h2> \n<p>正则表达式是由一个字符序列形成的搜索模式。</p> \n<p>当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容。</p> \n<p>正则表达式可以是一个简单的字符，或一个更复杂的模式。</p> \n<p>正则表达式可用于所有文本搜索和文本替换的操作。</p> \n<h2>语法</h2> \n<div class=\"code\">\n <div>\n   /\n  <em>pattern</em>/\n  <em>modifiers</em>; \n </div>\n</div> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">实例：</h2> \n <div class=\"example_code\">\n   var patt = /w3cschool/i\n </div> \n</div> \n<p>实例解析：</p> \n<p><strong>/w3cschool/i</strong>&nbsp; 是一个正则表达式。</p> \n<p><strong>w3cschool</strong>&nbsp; 是一个模式 (用于检索)。</p> \n<p><strong>i</strong>&nbsp; 是一个修饰符 (搜索不区分大小写)。</p> \n<hr /> \n<h2>使用字符串方法</h2> \n<p>在 JavaScript 中，正则表达式通常用于两个字符串方法 : search() 和 replace()。</p> \n<p><strong>search() 方法</strong> 用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串，并返回子串的起始位置。</p> \n<p><strong>replace() 方法</strong> 用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</p> \n<hr /> \n<h2> search() 方法使用正则表达式</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>使用正则表达式搜索 &quot;w3cschool&quot; 字符串，且不区分大小写：</p> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> str = \n  <span class=\"highVAL\">&quot;Visit w3cschool&quot;</span>;\n  <br /> \n  <span class=\"highELE\">var</span> n = str.search(/w3cschool/i); \n </div> \n <p>输出结果为：</p> \n <div class=\"example_code\">\n   6 \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_string_search_regexp\" target=\"_blank\">尝试一下 &raquo;</a>\n</div> \n<br /> \n<hr /> \n<h2>search() 方法使用字符串</h2> \n<p>search 方法可使用字符串作为参数。字符串参数会转换为正则表达式： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>检索字符串中 &quot;w3cschool&quot; 的子串：</p> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> str = \n  <span class=\"highVAL\">&quot;Visit w3cschool!&quot;</span>;\n  <br /> \n  <span class=\"highELE\">var</span> n = str.search(\n  <span class=\"highVAL\">&quot;w3cschool&quot;</span>); \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_string_search\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>replace() 方法使用正则表达式</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>使用正则表达式且不区分大小写将字符串中的 Microsoft 替换为 w3cschool :</p> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> str = \n  <span class=\"highVAL\">&quot;Visit Microsoft!&quot;</span>;\n  <br /> \n  <span class=\"highELE\">var</span> res = str.replace(/microsoft/i, \n  <span class=\"highVAL\">&quot;w3cschool&quot;</span>); \n </div> \n <p>结果输出为:</p> \n <div class=\"example_code\">\n   Visit w3cschool!\n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_string_replace_regexp\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<h2>replace() 方法使用字符串</h2> \n<p>replace() 方法将接收字符串作为参数：</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> str = \n  <span class=\"highVAL\">&quot;Visit Microsoft!&quot;</span>;\n  <br /> \n  <span class=\"highELE\">var</span> res = str.replace(\n  <span class=\"highVAL\">&quot;Microsoft&quot;</span>, \n  <span class=\"highVAL\">&quot;w3cschool&quot;</span>); \n </div> \n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_string_replace\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>你注意到了吗？</h2> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width: 34px;\"><img style=\"width: 32px; height: 32px;\" alt=\"Note\" src=\"http://www.runoob.com/images/lamp.jpg\" /></th> \n   <td>正则表达式参数可用在以上方法中 (替代字符串参数)。<br /> 正则表达式使得搜索功能更加强大(如实例中不区分大小写)。</td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>正则表达式修饰符</h2> \n<p><strong>修饰符</strong> 可以在全局搜索中不区分大小写:</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width: 22%;\">修饰符</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>i</td> \n   <td>执行对大小写不敏感的匹配。</td> \n  </tr> \n  <tr> \n   <td>g</td> \n   <td>执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。</td> \n  </tr> \n  <tr> \n   <td>m</td> \n   <td>执行多行匹配。</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>正则表达式模式</h2> \n<p>方括号用于查找某个范围内的字符：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width: 22%;\">表达式</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>[abc]</td> \n   <td>查找方括号之间的任何字符。</td> \n  </tr>\n  <tr> \n   <td>[0-9]</td> \n   <td>查找任何从 0 至 9 的数字。</td> \n  </tr>\n  <tr> \n   <td>(x|y)</td> \n   <td>查找任何以 | 分隔的选项。 </td> \n  </tr> \n </tbody>\n</table> \n<p>元字符是拥有特殊含义的字符：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width: 22%;\">元字符</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>\\d</td> \n   <td>查找数字。</td> \n  </tr> \n  <tr> \n   <td>\\s</td> \n   <td>查找空白字符。</td> \n  </tr> \n  <tr> \n   <td>\\b</td> \n   <td>匹配单词边界。</td> \n  </tr> \n  <tr> \n   <td>\\uxxxx</td> \n   <td>查找以十六进制数 xxxx 规定的 Unicode 字符。</td> \n  </tr> \n </tbody>\n</table> \n<p>量词:</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width: 22%;\">量词</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>n+</td> \n   <td>匹配任何包含至少一个 <em>n</em> 的字符串。</td> \n  </tr> \n  <tr> \n   <td>n*</td> \n   <td>匹配任何包含零个或多个 <em>n</em> 的字符串。 </td> \n  </tr> \n  <tr> \n   <td>n?</td> \n   <td>匹配任何包含零个或一个 <em>n</em> 的字符串。</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>使用 RegExp 对象</h2> \n<p>在 JavaScript 中，RegExp 对象是一个预定义了属性和方法的正则表达式对象。 </p> \n<hr /> \n<h2>使用 test()</h2> \n<p> test() 方法是一个正则表达式方法。</p> \n<p>test() 方法用于检测一个字符串是否匹配某个模式，如果字符串中含有匹配的文本，则返回 true，否则返回 false。</p> \n<p>以下实例用于搜索字符串中的字符 &quot;e&quot;：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> patt = /e/;\n  <br /> patt.test(\n  <span class=\"highVAL\">&quot;The best things in life are free!&quot;</span>); \n </div> \n <p>字符串中含有 &quot;e&quot;，所以该实例输出为：</p> \n <div class=\"example_code\">\n   true \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_regexp_test\" target=\"_blank\">尝试一下 &raquo;</a> \n <p>你可以不用设置正则表达式的变量，以上两行代码可以合并为一行： </p> \n <div class=\"example_code\">\n   /e/.test(\n  <span class=\"highVAL\">&quot;The best things in life are free!&quot;</span>) \n </div> \n</div> \n<br /> \n<hr /> \n<h2>使用 exec()</h2> \n<p>exec() 方法是一个正则表达式方法。</p> \n<p>exec() 方法用于检索字符串中的正则表达式的匹配。</p> \n<p>该函数返回一个数组，其中存放匹配的结果。如果未找到匹配，则返回值为 null。</p> \n<p>以下实例用于搜索字符串中的字母 &quot;e&quot;:</p> \n<div class=\"example\"> \n <h2 class=\"example\">Example 1</h2> \n <div class=\"example_code\">\n   /e/.exec(\n  <span class=\"highVAL\">&quot;The best things in life are free!&quot;</span>); \n </div> \n <p>字符串中含有 &quot;e&quot;，所以该实例输出为:</p> \n <div class=\"example_code\">\n   e\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_regexp_exec\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>完整的 RegExp 参考手册</h2> \n<p>完整的 RegExp 对象参考手册，请参考我们的 <a href=\"http://www.runoob.com/jsref/jsref-obj-regexp.html\"> JavaScript RegExp 参考手册</a>。</p> \n<p>该参考手册包含了所有 RegExp 对象的方法和属性。</p>', null, 'JavaScript 正则表达式|什么是正则表达式？|语法|实例：|使用字符串方法|search() 方法使用正则表达式|实例|search() 方法使用字符串|实例|replace() 方法使用正则表达式|实例|replace() 方法使用字符串|你注意到了吗？|正则表达式修饰符|正则表达式模式|使用 RegExp 对象|使用 test()|实例|使用 exec()|Example 1|完整的 RegExp 参考手册|');
INSERT INTO `schoolcontent` VALUES ('159', '161', '<h1>JavaScript <span class=\"color_h1\">错误 - throw、try 和 catch</span> </h1> \n<hr /> \n<p class=\"intro\"><strong>try</strong> 语句测试代码块的错误。</p> \n<p class=\"intro\"><strong>catch</strong> 语句处理错误。</p> \n<p class=\"intro\"><strong>throw</strong> 语句创建自定义错误。</p> \n<hr /> \n<h2>&nbsp;JavaScript 错误</h2> \n<p>当 JavaScript 引擎执行 JavaScript 代码时，会发生各种错误。</p> \n<p>可能是语法错误，通常是程序员造成的编码错误或错别字。</p> \n<p>可能是拼写错误或语言中缺少的功能（可能由于浏览器差异）。</p> \n<p>可能是由于来自服务器或用户的错误输出而导致的错误。</p> \n<p>当然，也可能是由于许多其他不可预知的因素。</p> \n<hr /> \n<h2>JavaScript 抛出（throw）错误</h2> \n<p>当错误发生时，当事情出问题时，JavaScript 引擎通常会停止，并生成一个错误消息。</p> \n<p>描述这种情况的技术术语是：JavaScript 将<strong>抛出</strong>一个错误。</p> \n<hr /> \n<h2>JavaScript try 和 catch</h2> \n<p><strong>try</strong> 语句允许我们定义在执行时进行错误测试的代码块。</p> \n<p><strong>catch</strong> 语句允许我们定义当 try 代码块发生错误时，所执行的代码块。</p> \n<p>JavaScript 语句 <strong>try</strong> 和 <strong>catch</strong> 是成对出现的。</p> \n<h3><strong>语法</strong></h3> \n<pre>\r\ntry {\r\n	//在这里运行代码\r\n} catch(err) {\r\n	//在这里处理错误\r\n}\r\n</pre> \n<h2>实例</h2> \n<p>在下面的例子中，我们故意在 try 块的代码中写了一个错字。</p> \n<p>catch 块会捕捉到 try 块中的错误，并执行代码来处理它。</p> \n<div class=\"example\">\n <h2 class=\"example\">实例</h2>\n <div class=\"example_code\">\n  <span style=\"color: #000000\"> var&nbsp;txt=&quot;&quot;; <br />function&nbsp;message() <br />{ <br />&nbsp;&nbsp;&nbsp;&nbsp;try&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;adddlert(&quot;Welcome&nbsp;guest!&quot;); <br />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;catch(err)&nbsp;{ <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txt=&quot;本页有一个错误。\\n\\n&quot;; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txt+=&quot;错误描述：&quot;&nbsp;+&nbsp;err.message&nbsp;+&nbsp;&quot;\\n\\n&quot;; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;txt+=&quot;点击确定继续。\\n\\n&quot;; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert(txt); <br />&nbsp;&nbsp;&nbsp;&nbsp;} <br />}</span> \n </div>\n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_try_catch\" class=\"showbtn\">尝试一下 &raquo;</a>\n</div> \n<br />\n<hr /> \n<h2>Throw 语句</h2> \n<p>throw 语句允许我们创建自定义错误。</p> \n<p>正确的技术术语是：创建或<strong>抛出异常</strong>（exception）。</p> \n<p>如果把 throw 与 try 和 catch 一起使用，那么您能够控制程序流，并生成自定义的错误消息。</p> \n<h3><strong>语法</strong></h3> \n<div class=\"code\">\n <div>\n   throw \n  <i>exception</i> \n </div>\n</div> \n<p>异常可以是 JavaScript 字符串、数字、逻辑值或对象。</p> \n<h2>实例</h2> \n<p>本例检测输入变量的值。如果值是错误的，会抛出一个异常（错误）。catch 会捕捉到这个错误，并显示一段自定义的错误消息：</p> \n<pre>\r\nfunction myFunction()\r\n{\r\n	try\r\n	{ \r\n		var x=document.getElementById(&quot;demo&quot;).value;\r\n		if(x==&quot;&quot;)    throw &quot;值为空&quot;;\r\n		if(isNaN(x)) throw &quot;不是数字&quot;;\r\n		if(x &gt; 10) throw &quot;太大&quot;;\r\n		if(x &lt; 5) throw &quot;太小&quot;;\r\n	}\r\n	catch(err)\r\n	{\r\n		var y=document.getElementById(&quot;mess&quot;);\r\n		y.innerHTML=&quot;错误：&quot; + err + &quot;。&quot;;\r\n	}\r\n}\r\n</pre>\n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_throw_error\" class=\"showbtn\">尝试一下 &raquo;</a> </p> \n<p>请注意，如果 getElementById 函数出错，上面的例子也会抛出一个错误。</p>', null, 'JavaScript 错误 - throw、try 和 catch| JavaScript 错误|JavaScript 抛出（throw）错误|JavaScript try 和 catch|实例|实例|Throw 语句|实例|');
INSERT INTO `schoolcontent` VALUES ('160', '162', '<h1>JavaScript <span class=\"color_h1\">调试</span> </h1> \n<hr /> \n<p class=\"intro\">在编写 JavaScript 时，如果没有调试工具将是一件很痛苦的事情。</p> \n<hr /> \n<h2>JavaScript 调试</h2> \n<p>没有调试工具是很难去编写 JavaScript 程序的。</p> \n<p>你的代码可能包含语法错误，逻辑错误，如果没有调试工具，这些错误比较难于发现。</p> \n<p>通常，如果 JavaScript 出现错误，是不会有提示信息，这样你就无法找到代码错误的位置。</p> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /> </th> \n   <td> 通常，你在编写一个新的 JavaScript 代码过程中都会发生错误。 </td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>JavaScript 调试工具</h2> \n<p>在程序代码中寻找错误叫做代码调试。</p> \n<p>调试很难，但幸运的是，很多浏览器都内置了调试工具。</p> \n<p>内置的调试工具可以开始或关闭，严重的错误信息会发送给用户。</p> \n<p>有了调试工具，我们就可以设置断点 (代码停止执行的位置), 且可以在代码执行时检测变量。</p> \n<p>浏览器启用调试工具一般是按下 F12 键，并在调试菜单中选择 &quot;Console&quot; 。<br /></p> \n<hr /> \n<h2>console.log() 方法</h2> \n<p>如果浏览器支持调试，你可以使用 console.log() 方法在调试窗口上打印 JavaScript 值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br />&lt;body&gt;\n  <br />\n  <br />&lt;h1&gt;My First Web Page&lt;/h1&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br />a = 5;\n  <br />b = 6;\n  <br />c = a + b;\n  <br />console.log(c);\n  <br />&lt;/script&gt;\n  <br />\n  <br />&lt;/body&gt;\n  <br />&lt;/html&gt;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_console\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>设置断点</h2> \n<p>在调试窗口中，你可以设置 JavaScript 代码的断点。</p> \n<p>在每个断点上，都会停止执行 JavaScript 代码，以便于我们检查 JavaScript 变量的值。</p> \n<p>在检查完毕后，可以重新执行代码（如播放按钮）。</p> \n<hr /> \n<h2>debugger 关键字</h2> \n<p><strong>debugger</strong> 关键字用于停止执行 JavaScript，并调用调试函数。</p> \n<p>这个关键字与在调试工具中设置断点的效果是一样的。</p> \n<p>如果没有调试可用，debugger 语句将无法工作。</p> \n<p>开启 debugger ，代码在第三行前停止执行。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate jsHigh\">\n   var x = 15 * 5;\n  <br />debugger;\n  <br />document.getElementbyId(&quot;demo&quot;).innerHTML = x; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_debugger\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>主要浏览器的调试工具</h2> \n<p>通常，浏览器启用调试工具一般是按下 F12 键，并在调试菜单中选择 &quot;Console&quot; 。</p> \n<p>各浏览器的步骤如下:</p> \n<h2>Chrome 浏览器</h2> \n<ul> \n <li>打开浏览器。</li> \n <li>在菜单中选择工具。</li> \n <li>在工具中选择开发者工具。</li> \n <li>最后，选择 Console。</li> \n</ul> \n<h2>Firefox 浏览器</h2> \n<ul> \n <li>打开浏览器。</li> \n <li>访问页面: <br />http://www.getfirebug.com。</li> \n <li>按照说明 :<br />安装 Firebug。</li> \n</ul> \n<h2>Internet Explorer 浏览器。</h2> \n<ul> \n <li>打开浏览器。</li> \n <li>在菜单中选择工具。</li> \n <li>在工具中选择开发者工具。</li> \n <li>最后，选择 Console。</li> \n</ul> \n<h2>Opera</h2> \n<ul> \n <li>打开浏览器。</li> \n <li>Opera 的内置调试工具为 Dragonfly，详细说明可访问页面:<br />http://www.opera.com/dragonfly/。</li> \n</ul> \n<h2>Safari</h2> \n<ul> \n <li>打开浏览器。</li> \n <li>访问页面:<br />http://extentions.apple.com。</li> \n <li>按说明操作：<br />install Firebug Lite。</li> \n</ul>', null, 'JavaScript 调试|JavaScript 调试|JavaScript 调试工具|console.log() 方法|实例|设置断点|debugger 关键字|实例|主要浏览器的调试工具|Chrome 浏览器|Firefox 浏览器|Internet Explorer 浏览器。|Opera|Safari|');
INSERT INTO `schoolcontent` VALUES ('161', '163', '<h1>JavaScript 变量提升</h1> \n<p>JavaScript 中，函数及变量的声明都将被提升到函数的最顶部。 </p> \n<p>JavaScript 中，变量可以在使用后声明，也就是变量可以先使用再声明。</p> \n<p>以下两个实例将获得相同的结果：</p> \n<div class=\"example\"> \n <h3>实例 1</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> x = <span style=\"color:red\">5</span>; <span style=\"color:green\">// 变量 x 设置为 5<br /></span><span style=\"color:red\"> </span><br /> elem = document.getElementById(<span style=\"color:brown\">&quot;demo&quot;</span>); <span style=\"color:green\">// 查找元素 <br /></span> elem.innerHTML = x;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span><span style=\"color:green\">// 在元素中显示 x<br /></span><br /><span style=\"color:mediumblue\">var</span> x; <span style=\"color:green\">// 声明 x </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_hoisting1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<div class=\"example\"> \n <h3>实例 2</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x; <span style=\"color:green\">// 声明 x<br /></span> x = <span style=\"color:red\">5</span>; <span style=\"color:green\">// 变量 x 设置为 5<br /></span><br /> elem = document.getElementById(<span style=\"color:brown\">&quot;demo&quot;</span>); <span style=\"color:green\">// 查找元素 <br /></span>elem.innerHTML = x;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span><span style=\"color:green\">// 在元素中显示 x<br /></span> </span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_hoisting2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>要理解以上实例就需要理解 &quot;hoisting(变量提升)&quot;。</p> \n<p>变量提升：函数声明和变量声明总是会被解释器悄悄地被&quot;提升&quot;到方法体的最顶部。</p> \n<hr /> \n<h2>JavaScript 初始化不会提升</h2> \n<p>JavaScript 只有声明的变量会提升，初始化的不会。</p> \n<p>以下两个实例结果结果不相同：</p> \n<div class=\"example\"> \n <h3>实例 1</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">5</span>; <span style=\"color:green\">// 初始化 x<br /></span><span style=\"color:mediumblue\">var</span> y = <span style=\"color:red\">7</span>; <span style=\"color:green\">// 初始化 y<br /></span><br />elem = document.getElementById(<span style=\"color:brown\">&quot;demo&quot;</span>); <span style=\"color:green\">// 查找元素 <br /></span> elem.innerHTML = x + <span style=\"color:brown\">&quot; &quot;</span> + y;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green\">// 显示 x 和 y </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_hoisting4\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<div class=\"example\"> \n <h3>实例 2</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">5</span>; <span style=\"color:green\">// 初始化 x<br /></span><span style=\"color:red\"> </span><br /> elem = document.getElementById(<span style=\"color:brown\">&quot;demo&quot;</span>); <span style=\"color:green\">// 查找元素 <br /></span> elem.innerHTML = x + <span style=\"color:brown\">&quot; &quot;</span> + y;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color:green\">// 显示 x 和 y<br /></span><span style=\"color:red\"> </span><br /> <span style=\"color:mediumblue\">var</span> y = <span style=\"color:red\">7</span>; <span style=\"color:green\">// 初始化 y </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_hoisting3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>实例 2 的 y 输出了 <b>undefined</b>，这是因为变量声明 (var y) 提升了，但是初始化(y = 7) 并不会提升，所以 y 变量是一个未定义的变量。 </p> \n<p>实例 2 类似以下代码:</p> \n<pre>\r\nvar x = 5; // 初始化 x\r\nvar y;     // 声明 y\r\n\r\nelem = document.getElementById(&quot;demo&quot;); // 查找元素\r\nelem.innerHTML = x + &quot; &quot; + y;           // 显示 x 和 y\r\n\r\ny = 7;    // 设置 y 为 7\r\n</pre> \n<hr /> \n<h2>在头部声明你的变量</h2> \n<p>对于大多数程序员来说并不知道 JavaScript 变量提升。</p> \n<p> 如果程序员不能很好的理解变量提升，他们写的程序就容易出现一些问题。</p> \n<p>为了避免这些问题，通常我们在每个作用域开始前声明这些变量，这也是正常的 JavaScript 解析步骤，易于我们理解。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>JavaScript 严格模式(strict mode)不允许使用未声明的变量。<br />在下一个章节中我们将会学习到 <strong>&quot;严格模式(strict mode)&quot;</strong> 。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 变量提升|JavaScript 初始化不会提升|在头部声明你的变量|');
INSERT INTO `schoolcontent` VALUES ('162', '164', '<h1>JavaScript 严格模式(use strict)</h1> \n<p>JavaScript 严格模式（strict mode）即在严格的条件下运行。 </p> \n<hr /> \n<h2>使用 &quot;use strict&quot; 指令</h2> \n<p>&quot;use strict&quot; 指令在 JavaScript 1.8.5 (ECMAScript5) 中新增。</p> \n<p>它不是一条语句，但是是一个字面量表达式，在 JavaScript 旧版本中会被忽略。</p> \n<p>&quot;use strict&quot; 的目的是指定代码在严格条件下执行。</p> \n<p>严格模式下你不能使用未声明的变量。</p> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>支持严格模式的浏览器:<br />Internet Explorer 10 +、 Firefox 4+ Chrome 13+、 Safari 5.1+、 Opera 12+。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>严格模式声明</h2> \n<p>严格模式通过在脚本或函数的头部添加 &quot;use strict&quot;; 表达式来声明。</p> \n<p>实例中我们可以在浏览器按下 <strong>F12 (或点击&quot;工具&gt;更多工具&gt;开发者工具&quot;)</strong> 开启调试模式，查看报错信息。</p> \n<p>Gif 图演示如下：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2016/05/js-use-strict.gif\" /></p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br />x = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 (x 未定义)<br /></span> </span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_variable\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<br /> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br />myFunction();<br /><br /> <span style=\"color:mediumblue\">function</span> myFunction() {<br /><span style=\"color:red\"> </span> &nbsp;&nbsp;&nbsp; y = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// 报错 (y 未定义)<br /></span>}</span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_global\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>在函数内部声明是局部作用域 (只在函数内使用严格模式):</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> x = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 不报错 <br /></span>myFunction();<br /><br /><span style=\"color:mediumblue\">function</span> <span style=\"color:red\"> </span> myFunction() {<br /><span style=\"color:red\"> </span>&nbsp;&nbsp;&nbsp;<span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:red\"> </span> &nbsp;&nbsp;&nbsp; y = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// 报错 (y 未定义)<br /></span>}<br /> </span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_local\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<p>为什么使用严格模式:</p> \n<ul>\n  消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为; \n <li>消除代码运行的一些不安全之处，保证代码运行的安全； </li>\n <li>提高编译器效率，增加运行速度； </li>\n <li>为未来新版本的Javascript做好铺垫。 </li>\n</ul> \n<p>&quot;严格模式&quot;体现了Javascript更合理、更安全、更严谨的发展方向，包括IE 10在内的主流浏览器，都已经支持它，许多大项目已经开始全面拥抱它。 </p>\n<p> 另一方面，同样的代码，在&quot;严格模式&quot;中，可能会有不一样的运行结果；一些在&quot;正常模式&quot;下可以运行的语句，在&quot;严格模式&quot;下将不能运行。掌握这些内容，有助于更细致深入地理解Javascript，让你变成一个更好的程序员。 </p> \n<hr /> \n<h2>严格模式的限制</h2> \n<p>不允许使用未声明的变量：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /> x = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 (x 未定义) </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_variable\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 对象也是一个变量。 </td> \n  </tr>\n </tbody>\n</table>\n<br /> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /> x = <span style=\"color:red\"> </span> {p1:<span style=\"color:red\">10</span>, p2:<span style=\"color:red\">20</span>};&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 (x 未定义) </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_object\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>不允许删除变量或对象。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">3.14</span>;<br /> <span style=\"color:mediumblue\">delete</span> x;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_delete\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>不允许删除函数。</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">function</span> x(p1, p2) {}; <br /><span style=\"color:mediumblue\">delete</span> x;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// 报错&nbsp; </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_delete_function\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>不允许变量重名:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">function</span> x(p1, p1) {};&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_duplicate\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>不允许使用八进制:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">010</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_octal\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<p>不允许使用转义字符:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /> <span style=\"color:mediumblue\">var</span> x = \\010;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_escape\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>不允许对只读属性赋值:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">var</span> obj = {};<br /> Object.defineProperty(obj, <span style=\"color:brown\">&quot;x&quot;</span>, {value:<span style=\"color:red\">0</span>, writable:<span style=\"color:mediumblue\">false</span>});<br /><br /> obj.x = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_readonly\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>不允许对一个使用getter方法读取的属性进行赋值</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">var</span> obj = {get x() <span style=\"color:red\"> </span>{<span style=\"color:mediumblue\">return</span> <span style=\"color:red\">0</span>} };<br /><br />obj.x = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_getonly\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>不允许删除一个不允许删除的属性：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">delete</span> Object.prototype; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_deleteprop\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<p>变量名不能使用 &quot;eval&quot; 字符串:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">var</span> <span style=\"color:mediumblue\">eval</span> = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_eval\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<p>变量名不能使用 &quot;arguments&quot; 字符串:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">var</span> <span style=\"color:mediumblue\">arguments</span> = <span style=\"color:red\">3.14</span>;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_arguments\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<p>不允许使用以下这种语句:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">with</span> (Math){x = cos(<span style=\"color:red\">2</span>)}; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_width\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>由于一些安全原因，在作用域 eval() 创建的变量不能被调用：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">eval</span> (<span style=\"color:brown\">&quot;var x = 2&quot;</span>);<br /> alert (x);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_eval2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>禁止this关键字指向全局对象。</p> \n<pre>\r\nfunction f(){\r\n	return !this;\r\n} \r\n// 返回false，因为&quot;this&quot;指向全局对象，&quot;!this&quot;就是false\r\n\r\nfunction f(){ \r\n	&quot;use strict&quot;;\r\n	return !this;\r\n} \r\n// 返回true，因为严格模式下，this的值为undefined，所以&quot;!this&quot;为true。\r\n\r\n</pre> \n<p>因此，使用构造函数时，如果忘了加new，this不再指向全局对象，而是报错。</p> \n<pre>\r\nfunction f(){\r\n	&quot;use strict&quot;;\r\n	this.a = 1;\r\n};\r\nf();// 报错，this未定义\r\n</pre> \n<hr /> \n<h2>保留关键字</h2> \n<p>为了向将来Javascript的新版本过渡，严格模式新增了一些保留保留关键字：</p> \n<ul> \n <li>implements</li> \n <li>interface</li> \n <li>let</li> \n <li>package</li> \n <li>private</li> \n <li>protected</li> \n <li>public</li> \n <li>static</li> \n <li>yield</li> \n</ul> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:brown\">&quot;use strict&quot;</span>;<br /><span style=\"color:mediumblue\">var</span> <span style=\"color:mediumblue\">public</span> = <span style=\"color:red\">1500</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// 报错 </span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_strict_names\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> &quot;use strict&quot; 指令只运行出现在脚本或函数的开头。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 严格模式(use strict)|使用 \"use strict\" 指令|严格模式声明|严格模式的限制|保留关键字|');
INSERT INTO `schoolcontent` VALUES ('163', '165', '<h1>JavaScript <span class=\"color_h1\">使用误区</span></h1> \n<p class=\"intro\">本章节我们将讨论 JavaScript 的使用误区。</p> \n<hr /> \n<h2>赋值运算符应用错误</h2> \n<p>在 JavaScript 程序中如果你在 if 条件语句中使用赋值运算符的等号 (=) 将会产生一个错误结果, 正确的方法是使用比较运算符的两个等号 (==)。</p> \n<p><strong>if</strong> 条件语句返回 <strong>false</strong> (是我们预期的)因为 x 不等于 10:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">0</span>;<br /><span style=\"color:mediumblue\">if</span> (x == <span style=\"color:red\">10</span>) </span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_equal_1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><strong>if</strong> 条件语句返回 <strong>true</strong> (不是我们预期的)因为条件语句执行为 x 赋值 10，10 为 true:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">0</span>;<br /><span style=\"color:mediumblue\">if</span> (x = <span style=\"color:red\">10</span>) </span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_equal_2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p><strong>if</strong> 条件语句返回 <strong>false</strong> (不是我们预期的)因为条件语句执行为 x 赋值 0，0 为 false:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">0</span>;<br /><span style=\"color:mediumblue\">if</span> (x = <span style=\"color:red\">0</span>) </span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_equal_3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>赋值语句返回变量的值。</td> \n  </tr>\n </tbody>\n</table> \n<h2>比较运算符常见错误</h2> \n<p>在常规的比较中，数据类型是被忽略的，以下 if 条件语句返回 true：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">10</span>;<br /><span style=\"color:mediumblue\">var</span> y = <span style=\"color:brown\">&quot;10&quot;</span>;<br /><span style=\"color:mediumblue\">if</span> (x == y) </span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_loose_1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>在严格的比较运算中，=== 为恒等计算符，同时检查表达式的值与类型，以下 if 条件语句返回 false：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">10</span>;<br /><span style=\"color:mediumblue\">var</span> y = <span style=\"color:brown\">&quot;10&quot;</span>;<br /><span style=\"color:mediumblue\">if</span> (x === y) </span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_loose_2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>这种错误经常会在 switch 语句中出现，switch 语句会使用恒等计算符(===)进行比较:</p> \n<p>以下实例会执行 alert 弹窗：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">10</span>;<br /><span style=\"color:mediumblue\">switch</span>(x) {<br />&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">case</span> <span style=\"color:red\">10</span>: alert(<span style=\"color:brown\">&quot;Hello&quot;</span>);<br /><span style=\"color:red\"> </span> } </span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_loose_3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>以下实例由于类型不一致不会执行 alert 弹窗：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">10</span>;<br /><span style=\"color:mediumblue\">switch</span>(x) {<br />&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">case</span> <span style=\"color:brown\">&quot;10&quot;</span>: alert(<span style=\"color:brown\">&quot;Hello&quot;</span>);<br /><span style=\"color:red\"> </span> } </span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_loose_4\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>加法与连接注意事项</h2> \n<p><strong>加法</strong>是两个<strong>数字</strong>相加。</p> \n<p><strong>连接</strong>是两个<strong>字符串</strong>连接。</p> \n<p>JavaScript 的加法和连接都使用 + 运算符。</p> \n<p>接下来我们可以通过实例查看两个数字相加及数字与字符串连接的区别：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">10</span> + <span style=\"color:red\">5</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// x 的结果为 15<br /></span><span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">10</span> + <span style=\"color:brown\">&quot;5&quot;</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// x 的结果为 &quot;105&quot;</span></span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_add_1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>使用变量相加结果也不一致:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">10</span>;<br /><span style=\"color:mediumblue\">var</span> y = <span style=\"color:red\">5</span>;<br /><span style=\"color:mediumblue\">var</span> z = x + y;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// z 的结果为 15<br /></span><br /><span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">10</span>;<br /><span style=\"color:mediumblue\">var</span> y = <span style=\"color:brown\">&quot;5&quot;</span>;<br /><span style=\"color:mediumblue\">var</span> z = <span style=\"color:red\"> </span> x + y;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// z 的结果为 &quot;105&quot;</span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_add_2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>浮点型数据使用注意事项</h2> \n<p>JavaScript 中的所有数据都是以 64 位<strong>浮点型数据(float)</strong> 来存储。</p> \n<p>所有的编程语言，包括 JavaScript，对浮点型数据的精确度都很难确定：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:red\">0.1</span>;<br /><span style=\"color:mediumblue\">var</span> y = <span style=\"color:red\">0.2</span>;<br /><span style=\"color:mediumblue\">var</span> z = x + y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// z 的结果为 0.3<br /></span>if (z == <span style=\"color:red\">0.3</span>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// 返回 false</span></span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_floats\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>我解决以上问题，可以用整数的乘除法来解决：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> z = (x * <span style=\"color:red\">10</span> + y * <span style=\"color:red\">10</span>) / <span style=\"color:red\">10</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// z 的结果为 0.3</span></span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_floats_ok\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>JavaScript 字符串分行</h2> \n<p>JavaScript 运行我们在字符串中使用断行语句:</p> \n<div class=\"example\"> \n <h3>实例 1</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x =<br /><span style=\"color:brown\">&quot;Hello World!&quot;</span>;</span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_string_1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>但是，在字符串中直接使用回车换行是会报错的：</p> \n<div class=\"example\"> \n <h3>实例 2</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:brown\">&quot;Hello<br />World!&quot;</span>;</span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_string_2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>我们可以在选择开发工具或按下 F12 来查看错误信息：</p> \n<p><img height=\"70%\" src=\"http://www.runoob.com/wp-content/uploads/2016/05/js-mistake12.jpg\" /></p> \n<p>字符串断行需要使用反斜杠(\\)，如下所示:</p> \n<div class=\"example\"> \n <h3>实例 3</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> x = <span style=\"color:brown\">&quot;Hello \\<br />World!&quot;</span>;</span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_string_3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>错误的使用分号</h2> \n<p>以下实例中，由于分号使用错误，if 语句中的代码块将无法执行：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n  <span style=\"color:black\"><span style=\"color:red\"> </span> <span style=\"color:mediumblue\">if</span> (x == <span style=\"color:red\">19</span>);<br />{<br /><span style=\"color:red\"> </span>&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// code block&nbsp; <br /></span>}</span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_semicolon\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>Return 语句使用注意事项</h2> \n<p>JavaScript 默认是在代码的最后一行自动结束。</p> \n<p>以下两个实例返回结果是一样的(一个有分号一个没有):</p> \n<div class=\"example\"> \n <h3>实例 1</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">function</span> myFunction(a) {<br /><span style=\"color:red\"> </span>&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">var</span> power = <span style=\"color:red\">10</span>&nbsp; <br />&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">return</span> a * power<br />}<br /> </span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_return_1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<div class=\"example\"> \n <h3>实例 2</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">function</span> myFunction(a) {<br /><span style=\"color:red\"> </span>&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">var</span> power = <span style=\"color:red\">10</span>;<br />&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">return</span> a * power;<br />}<br /> </span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_return_2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<p>JavaScript 也可以使用多行来结束一个语句。</p> \n<p>以下实例返回相同的结果:</p> \n<div class=\"example\"> \n <h3>实例 3</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">function</span> myFunction(a) {<br /><span style=\"color:red\"> </span>&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">var</span><br />&nbsp;&nbsp;&nbsp; power = <span style=\"color:red\">10</span>;&nbsp; <br />&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">return</span> a * power;<br />}</span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_return_3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<p>但是，以下实例结果会返回 <b>undefined</b>：</p> \n<div class=\"example\"> \n <h3>实例 4</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">function</span> myFunction(a) {<br /><span style=\"color:red\"> </span>&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">var</span><br />&nbsp;&nbsp;&nbsp; power = <span style=\"color:red\">10</span>;&nbsp; <br />&nbsp;&nbsp;&nbsp; <span style=\"color:mediumblue\">return</span><br />&nbsp;&nbsp;&nbsp; a * power;<br />}</span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_return_4\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>为什么会有这样的结果呢？因为在 JavaScript 中，实例 4 的代码与下面的代码一致：</p> \n<pre>\r\nfunction myFunction(a) {\r\n    var\r\n    power = 10;  \r\n    return;       // 分号结束，返回 undefined\r\n    a * power;\r\n}\r\n</pre> \n<h3>解析</h3> \n<p> 如果是一个不完整的语句，如下所示:</p> \n<pre>\r\nvar\r\n</pre> \n<p> JavaScript 将尝试读取第二行的语句：</p> \n<pre>\r\npower = 10;\r\n</pre> \n<p> 但是由于这样的语句是完整的: </p> \n<pre>\r\nreturn\r\n</pre> \n<p> JavaScript 将自动关闭语句:</p> \n<pre>\r\nreturn;\r\n</pre> \n<p> 在 JavaScript 中，分号是可选的 。</p> \n<p>由于 return 是一个完整的语句，所以 JavaScript 将关闭 return 语句。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"> <img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> <b>注意：</b>不用对 return 语句进行断行。 </td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>数组中使用名字来索引</h2> \n<p>许多程序语言都允许使用名字来作为数组的索引。</p> \n<p>使用名字来作为索引的数组称为关联数组(或哈希)。</p> \n<p>JavaScript 不支持使用名字来索引数组，只允许使用数字索引。</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> person = [];<br /> person[<span style=\"color:red\">0</span>] = <span style=\"color:brown\">&quot;John&quot;</span>;<br /> person[<span style=\"color:red\">1</span>] = <span style=\"color:brown\">&quot;Doe&quot;</span>;<br /> person[<span style=\"color:red\">2</span>] = <span style=\"color:red\">46</span>;<br /><span style=\"color:mediumblue\">var</span> x = person.length;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// person.length 返回 3<br /></span><span style=\"color:mediumblue\">var</span> y = person[<span style=\"color:red\">0</span>];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// person[0] 返回 &quot;John&quot;</span></span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_array_associative_1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>在 JavaScript 中, <strong>对象</strong> 使用 <strong>名字作为索引</strong>。 </p> \n<p>如果你使用名字作为索引，当访问数组时，JavaScript 会把数组重新定义为标准对象。</p> \n<p>执行这样操作后，数组的方法及属性将不能再使用，否则会产生错误:</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"> <span style=\"color:mediumblue\">var</span> person = [];<br /> person[<span style=\"color:brown\">&quot;firstName&quot;</span>] = <span style=\"color:brown\">&quot;John&quot;</span>;<br /> person[<span style=\"color:brown\">&quot;lastName&quot;</span>] = <span style=\"color:brown\">&quot;Doe&quot;</span>;<br /> person[<span style=\"color:brown\">&quot;age&quot;</span>] = <span style=\"color:red\">46</span>;<br /><span style=\"color:mediumblue\">var</span> x = person.length;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// person.length 返回 0<br /></span>var y = person[<span style=\"color:red\">0</span>];&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:red\"> </span> <span style=\"color:green\">// person[0] 返回 undefined</span></span>\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_array_associative_2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>定义数组元素，最后不能添加逗号</h2> \n<p>错误的定义方式：</p> \n<pre>\r\npoints = [40, 100, 1, 5, 25, 10,];\r\n</pre> \n<p>正确的定义方式：</p> \n<pre>\r\npoints = [40, 100, 1, 5, 25, 10];\r\n</pre>\n<hr />\n<h2>定义对象，最后不能添加逗号</h2> \n<p>错误的定义方式：</p> \n<pre>\r\nwebsites = {site:&quot;菜鸟教程&quot;, url:&quot;www.runoob.com&quot;, like:460,}\r\n</pre> \n<p>正确的定义方式：</p> \n<pre>\r\nwebsites = {site:&quot;菜鸟教程&quot;, url:&quot;www.runoob.com&quot;, like:460}\r\n</pre> \n<hr /> \n<h2>Undefined 不是 Null </h2> \n<p>在 JavaScript 中, <strong>null</strong> 用于对象, <strong>undefined</strong> 用于变量，属性和方法。</p> \n<p>对象只有被定义才有可能为 null，否则为 undefined。</p> \n<p>如果我们想测试对象是否存在，在对象还没定义时将会抛出一个错误。</p> \n<p>错误的使用方式：</p> \n<pre>\r\nif (myObj !== null &amp;&amp; typeof myObj !== &quot;undefined&quot;) \r\n</pre> \n<p>正确的方式是我们需要先使用 typeof 来检测对象是否已定义：</p> \n<pre>\r\nif (typeof myObj !== &quot;undefined&quot; &amp;&amp; myObj !== null) \r\n</pre> \n<hr /> \n<h2>程序块作用域</h2> \n<p>在每个代码块中 JavaScript 不会创建一个新的作用域，一般各个代码块的作用域都是全局的。</p> \n<p>以下代码的的变量 i 返回 10，而不是 undefined：</p> \n<div class=\"example\"> \n <h3>实例</h3> \n <div class=\"example_code\">\n  <span style=\"color:black\"><span style=\"color:red\"> </span> <span style=\"color:mediumblue\">for</span> (<span style=\"color:mediumblue\">var</span> i = <span style=\"color:red\">0</span>; i &lt; <span style=\"color:red\">10</span>; i++) {<br /><span style=\"color:red\"> </span>&nbsp;&nbsp;&nbsp; <span style=\"color:green\">// some code<br /></span><span style=\"color:red\"> </span> }<br /><span style=\"color:red\"> </span> <span style=\"color:mediumblue\">return</span> i;</span>\n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_mistakes_scope\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript 使用误区|赋值运算符应用错误|比较运算符常见错误|加法与连接注意事项|浮点型数据使用注意事项|JavaScript 字符串分行|错误的使用分号|Return 语句使用注意事项|数组中使用名字来索引|定义数组元素，最后不能添加逗号|定义对象，最后不能添加逗号|Undefined 不是 Null|程序块作用域|');
INSERT INTO `schoolcontent` VALUES ('164', '166', '<h1>JavaScript <span class=\"color_h1\">表单验证</span> </h1> \n<hr /> \n<h2>JavaScript 表单验证</h2> \n<p>JavaScript 可用来在数据被送往服务器前对 HTML 表单中的这些输入数据进行验证。</p> \n<p>表单数据经常需要使用 JavaScript 来验证其正确性：</p> \n<ul> \n <br /> \n <li>验证表单数据是否为空？</li>\n <br /> \n <li>验证输入是否是一个正确的email地址？</li>\n <br /> \n <li>验证日期是否输入正确？</li>\n <br /> \n <li>验证表单输入内容是否为数字型？</li>\n <br /> \n</ul> \n<hr /> \n<h2>必填（或必选）项目</h2> \n<p>下面的函数用来检查用户是否已填写表单中的必填（或必选）项目。假如必填或必选项为空，那么警告框会弹出，并且函数的返回值为 false，否则函数的返回值则为 true（意味着数据没有问题）：</p> \n<div class=\"code notranslate\">\n <div>\n   function validateForm()\n  <br /> {\n  <br /> var x=document.forms[&quot;myForm&quot;][&quot;fname&quot;].value;\n  <br /> if (x==null || x==&quot;&quot;)\n  <br /> &nbsp; {\n  <br /> &nbsp; alert(&quot;First name must be filled out&quot;);\n  <br /> &nbsp; return false;\n  <br /> &nbsp; }\n  <br /> }\n </div>\n</div> \n<p>以上函数在 form 表单提交时被调用:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;form name=&quot;myForm&quot; action=&quot;demo_form.asp&quot; onsubmit=&quot;return validateForm()&quot; method=&quot;post&quot;&gt;\n  <br /> First name: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;\n  <br /> &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n  <br /> &lt;/form&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_form_validation\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>E-mail 验证</h2> \n<p>下面的函数检查输入的数据是否符合电子邮件地址的基本语法。 </p> \n<p>意思就是说，输入的数据必须包含 @ 符号和点号(.)。同时，@ 不可以是邮件地址的首字符，并且 @ 之后需有至少一个点号：</p> \n<pre>\r\nfunction validateForm()\r\n{\r\n	var x=document.forms[&quot;myForm&quot;][&quot;fname&quot;].value;\r\n	if (x==null || x==&quot;&quot;)\r\n	{\r\n		alert(&quot;First name must be filled out&quot;);\r\n		return false;\r\n	}\r\n}\r\n</pre> \n<p>下面是连同 HTML 表单的完整代码：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;form name=&quot;myForm&quot; action=&quot;demo_form.asp&quot; onsubmit=&quot;return validateForm();&quot; method=&quot;post&quot;&gt;\n  <br /> Email: &lt;input type=&quot;text&quot; name=&quot;email&quot;&gt;\n  <br /> &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n  <br /> &lt;/form&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_form_validate_email\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript 表单验证|JavaScript 表单验证|必填（或必选）项目|实例|E-mail 验证|实例|');
INSERT INTO `schoolcontent` VALUES ('165', '167', '<h1>JavaScript <span class=\"color_h1\">保留关键字</span></h1> \n<hr /> \n<p class=\"intro\">在 JavaScript 中，一些标识符是保留关键字，不能用作变量名或函数名。</p> \n<hr /> \n<h2>JavaScript 标准</h2> \n<p>所有的现代浏览器完全支持 ECMAScript 3（ES3，JavaScript 的第三版，从 1999 年开始）。</p> \n<p>ECMAScript 4（ES4）未通过。</p> \n<p>ECMAScript 5（ES5，2009 年发布），是 JavaScript 最新的官方版本。</p> \n<p>随着时间的推移，我们开始看到，所有的现代浏览器已经完全支持 ES5。</p> \n<hr /> \n<h2>JavaScript 保留关键字</h2> \n<p>Javascript 的保留关键字不可以用作变量、标签或者函数名。有些保留关键字是作为 Javascript 以后扩展使用。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <td>abstract</td> \n   <td>arguments</td> \n   <td>boolean</td> \n   <td>break</td> \n   <td>byte</td> \n  </tr> \n  <tr> \n   <td>case</td> \n   <td>catch</td> \n   <td>char</td> \n   <td>class*</td> \n   <td>const</td> \n  </tr> \n  <tr> \n   <td>continue</td> \n   <td>debugger</td> \n   <td>default</td> \n   <td>delete</td> \n   <td>do</td> \n  </tr> \n  <tr> \n   <td>double</td> \n   <td>else</td> \n   <td>enum*</td> \n   <td>eval</td> \n   <td>export*</td> \n  </tr> \n  <tr> \n   <td>extends*</td> \n   <td>false</td> \n   <td>final</td> \n   <td>finally</td> \n   <td>float</td> \n  </tr> \n  <tr> \n   <td>for</td> \n   <td>function</td> \n   <td>goto</td> \n   <td>if</td> \n   <td>implements</td> \n  </tr> \n  <tr> \n   <td>import*</td> \n   <td>in</td> \n   <td>instanceof</td> \n   <td>int</td> \n   <td>interface</td> \n  </tr> \n  <tr> \n   <td>let</td> \n   <td>long</td> \n   <td>native</td> \n   <td>new</td> \n   <td>null</td> \n  </tr> \n  <tr> \n   <td>package</td> \n   <td>private</td> \n   <td>protected</td> \n   <td>public</td> \n   <td>return</td> \n  </tr> \n  <tr> \n   <td>short</td> \n   <td>static</td> \n   <td>super*</td> \n   <td>switch</td> \n   <td>synchronized</td> \n  </tr> \n  <tr> \n   <td>this</td> \n   <td>throw</td> \n   <td>throws</td> \n   <td>transient</td> \n   <td>true</td> \n  </tr> \n  <tr> \n   <td>try</td> \n   <td>typeof</td> \n   <td>var</td> \n   <td>void</td> \n   <td>volatile</td> \n  </tr> \n  <tr> \n   <td>while</td> \n   <td>with</td> \n   <td>yield</td> \n   <td></td> \n   <td></td> \n  </tr> \n </tbody>\n</table> \n<p>* 标记的关键字是 ECMAScript5 中新添加的。</p> \n<hr /> \n<h2>JavaScript 对象、属性和方法</h2> \n<p>您也应该避免使用 JavaScript 内置的对象、属性和方法的名称作为 Javascript 的变量或函数名：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <td>Array</td> \n   <td>Date</td> \n   <td>eval</td> \n   <td>function</td> \n   <td>hasOwnProperty</td> \n  </tr> \n  <tr> \n   <td>Infinity</td> \n   <td>isFinite</td> \n   <td>isNaN</td> \n   <td>isPrototypeOf</td> \n   <td>length</td> \n  </tr> \n  <tr> \n   <td>Math</td> \n   <td>NaN</td> \n   <td>name</td> \n   <td>Number</td> \n   <td>Object</td> \n  </tr> \n  <tr> \n   <td>prototype</td> \n   <td>String</td> \n   <td>toString</td> \n   <td>undefined</td> \n   <td>valueOf</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>Java 保留关键字</h2> \n<p>JavaScript 经常与 Java 一起使用。您应该避免使用一些 Java 对象和属性作为 JavaScript 标识符：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <td>getClass</td> \n   <td>java</td> \n   <td>JavaArray</td> \n   <td>javaClass</td> \n   <td>JavaObject</td> \n   <td>JavaPackage</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>Windows 保留关键字</h2> \n<p>JavaScript 可以在 HTML 外部使用。它可在许多其他应用程序中作为编程语言使用。</p> \n<p>在 HTML 中，您必须（为了可移植性，您也应该这么做）避免使用 HTML 和 Windows 对象和属性的名称作为 Javascript 的变量及函数名：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <td>alert</td> \n   <td>all</td> \n   <td>anchor</td> \n   <td>anchors</td> \n   <td>area</td> \n  </tr> \n  <tr> \n   <td>assign</td> \n   <td>blur</td> \n   <td>button</td> \n   <td>checkbox</td> \n   <td>clearInterval</td> \n  </tr> \n  <tr> \n   <td>clearTimeout</td> \n   <td>clientInformation</td> \n   <td>close</td> \n   <td>closed</td> \n   <td>confirm</td> \n  </tr> \n  <tr> \n   <td>constructor</td> \n   <td>crypto</td> \n   <td>decodeURI</td> \n   <td>decodeURIComponent</td> \n   <td>defaultStatus</td> \n  </tr> \n  <tr> \n   <td>document</td> \n   <td>element</td> \n   <td>elements</td> \n   <td>embed</td> \n   <td>embeds</td> \n  </tr> \n  <tr> \n   <td>encodeURI</td> \n   <td>encodeURIComponent</td> \n   <td>escape</td> \n   <td>event</td> \n   <td>fileUpload</td> \n  </tr> \n  <tr> \n   <td>focus</td> \n   <td>form</td> \n   <td>forms</td> \n   <td>frame</td> \n   <td>innerHeight</td> \n  </tr> \n  <tr> \n   <td>innerWidth</td> \n   <td>layer</td> \n   <td>layers</td> \n   <td>link</td> \n   <td>location</td> \n  </tr> \n  <tr> \n   <td>mimeTypes</td> \n   <td>navigate</td> \n   <td>navigator</td> \n   <td>frames</td> \n   <td>frameRate</td> \n  </tr> \n  <tr> \n   <td>hidden</td> \n   <td>history</td> \n   <td>image</td> \n   <td>images</td> \n   <td>offscreenBuffering</td> \n  </tr> \n  <tr> \n   <td>open</td> \n   <td>opener</td> \n   <td>option</td> \n   <td>outerHeight</td> \n   <td>outerWidth</td> \n  </tr> \n  <tr> \n   <td>packages</td> \n   <td>pageXOffset</td> \n   <td>pageYOffset</td> \n   <td>parent</td> \n   <td>parseFloat</td> \n  </tr> \n  <tr> \n   <td>parseInt</td> \n   <td>password</td> \n   <td>pkcs11</td> \n   <td>plugin</td> \n   <td>prompt</td> \n  </tr> \n  <tr> \n   <td>propertyIsEnum</td> \n   <td>radio</td> \n   <td>reset</td> \n   <td>screenX</td> \n   <td>screenY</td> \n  </tr> \n  <tr> \n   <td>scroll</td> \n   <td>secure</td> \n   <td>select</td> \n   <td>self</td> \n   <td>setInterval</td> \n  </tr> \n  <tr> \n   <td>setTimeout</td> \n   <td>status</td> \n   <td>submit</td> \n   <td>taint</td> \n   <td>text</td> \n  </tr> \n  <tr> \n   <td>textarea</td> \n   <td>top</td> \n   <td>unescape</td> \n   <td>untaint</td> \n   <td>window</td> \n  </tr> \n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>HTML 事件句柄</h2> \n<p>除此之外，您还应该避免使用 HTML 事件句柄的名称作为 Javascript 的变量及函数名。</p> \n<p>实例：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <td>onblur</td> \n   <td>onclick</td> \n   <td>onerror</td> \n   <td>onfocus</td> \n  </tr> \n  <tr> \n   <td>onkeydown</td> \n   <td>onkeypress</td> \n   <td>onkeyup</td> \n   <td>onmouseover</td> \n  </tr> \n  <tr> \n   <td>onload</td> \n   <td>onmouseup</td> \n   <td>onmousedown</td> \n   <td>onsubmit</td> \n  </tr>\n  <tr> \n  </tr>\n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>非标准 JavaScript</h2> \n<p>除了保留关键字，在 JavaScript 实现中也有一些非标准的关键字。</p> \n<p>一个实例是 <strong>const</strong> 关键字，用于定义变量。 一些 JavaScript 引擎把 const 当作 var 的同义词。另一些引擎则把 const 当作只读变量的定义。</p> \n<p>Const 是 JavaScript 的扩展。JavaScript 引擎支持它用在 Firefox 和 Chrome 中。但是它并不是 JavaScript 标准 ES3 或 ES5 的组成部分。<strong>建议：不要使用它</strong>。</p>', null, 'JavaScript 保留关键字|JavaScript 标准|JavaScript 保留关键字|JavaScript 对象、属性和方法|Java 保留关键字|Windows 保留关键字|HTML 事件句柄|非标准 JavaScript|');
INSERT INTO `schoolcontent` VALUES ('166', '168', '<h1>JavaScript <span class=\"color_h1\">JSON</span> </h1> \n<hr /> \n<p class=\"intro\">JSON 是用于存储和传输数据的格式。</p> \n<p class=\"intro\">JSON 通常用于服务端向网页传递数据 。 </p> \n<hr /> \n<h2>什么是 JSON?</h2> \n<ul> \n <li>JSON 英文全称 <b>J</b>ava<b>S</b>cript <b>O</b>bject <b>N</b>otation</li> \n <li>JSON 是一种轻量级的数据交换格式。</li> \n <li>JSON是独立的语言 <b>*</b> </li> \n <li>JSON 易于理解。</li> \n</ul> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>* JSON 使用 JavaScript 语法，但是 JSON 格式仅仅是一个文本。<br />文本可以被任何编程语言读取及作为数据格式传递。</td> \n  </tr>\n </tbody>\n</table> \n<h2>JSON 实例</h2> \n<p>以下 JSON 语法定义了 employees 对象: 3 条员工记录（对象）的数组:</p> \n<div class=\"example\"> \n <h2 class=\"example\">JSON Example</h2> \n <div class=\"example_code\">\n   {&quot;employees&quot;:[\n  <br /> &nbsp;&nbsp;&nbsp; {&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;}, \n  <br /> &nbsp;&nbsp;&nbsp; {&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;},\n  <br /> &nbsp;&nbsp;&nbsp; {&quot;firstName&quot;:&quot;Peter&quot;, &quot;lastName&quot;:&quot;Jones&quot;}\n  <br /> ]}\n  <br /> \n </div> \n</div> \n<br />\n<hr /> \n<h2> JSON 格式化后为 JavaScript 对象</h2> \n<p> JSON 格式在语法上与创建 JavaScript 对象代码是相同的。</p> \n<p>由于它们很相似，所以 JavaScript 程序可以很容易的将 JSON 数据转换为 JavaScript 对象。 </p> \n<hr /> \n<h2>JSON 语法规则</h2> \n<ul> \n <li>数据为 键/值 对。</li> \n <li>数据由逗号分隔。</li> \n <li>大括号保存对象</li> \n <li>方括号保存数组</li> \n</ul> \n<hr /> \n<h2>JSON 数据 - 一个名称对应一个值</h2> \n<p>JSON 数据格式为 键/值 对，就像 JavaScript 对象属性。</p> \n<p> 键/值对包括字段名称（在双引号中），后面一个冒号，然后是值：</p> \n<div class=\"code\">\n <div>\n   &quot;firstName&quot;:&quot;John&quot;\n </div>\n</div> \n<br />\n<hr /> \n<h2>JSON 对象</h2> \n<p>JSON 对象保存在大括号内。</p> \n<p>就像在 JavaScript 中, 对象可以保存多个 键/值 对：</p> \n<div class=\"code\">\n <div>\n   {&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;} \n </div>\n</div> \n<br />\n<hr /> \n<h2>JSON 数组</h2> \n<p>JSON 数组保存在中括号内。</p> \n<p>就像在 JavaScript 中, 数组可以包含对象：</p> \n<div class=\"code\">\n <div>\n   &quot;employees&quot;:[\n  <br /> &nbsp;&nbsp;&nbsp; {&quot;firstName&quot;:&quot;John&quot;, &quot;lastName&quot;:&quot;Doe&quot;}, \n  <br /> &nbsp;&nbsp;&nbsp; {&quot;firstName&quot;:&quot;Anna&quot;, &quot;lastName&quot;:&quot;Smith&quot;}, \n  <br /> &nbsp;&nbsp;&nbsp; {&quot;firstName&quot;:&quot;Peter&quot;, &quot;lastName&quot;:&quot;Jones&quot;}\n  <br /> ]\n </div>\n</div> \n<p>在以上实例中，对象 &quot;employees&quot; 是一个数组。包含了三个对象。</p> \n<p>每个为个对象为员工的记录（姓和名）。</p> \n<hr /> \n<h2>JSON 字符串转换为 JavaScript 对象</h2> \n<p>通常我们从服务器中读取 JSON 数据，并在网页中显示数据。</p> \n<p>简单起见，我们网页中直接设置 JSON 字符串 (你还可以阅读我们的 <a href=\"http://www.runoob.com/json/json-tutorial.html\">JSON 教程</a>):</p> \n<p>首先，创建 JavaScript 字符串，字符串为 JSON 格式的数据：</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   var text = \'{ &quot;employees&quot; : [\' +\n  <br /> \'{ &quot;firstName&quot;:&quot;John&quot; , &quot;lastName&quot;:&quot;Doe&quot; },\' +\n  <br /> \'{ &quot;firstName&quot;:&quot;Anna&quot; , &quot;lastName&quot;:&quot;Smith&quot; },\' +\n  <br /> \'{ &quot;firstName&quot;:&quot;Peter&quot; , &quot;lastName&quot;:&quot;Jones&quot; } ]}\';\n </div> \n</div> \n<p>然后，使用 JavaScript 内置函数 JSON.parse() 将字符串转换为 JavaScript 对象:</p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   var obj = JSON.parse(text);\n </div> \n</div> \n<p>最后，在你的页面中使用新的 JavaScript 对象：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br /> document.getElementById(&quot;demo&quot;).innerHTML =\n  <br /> obj.employees[1].firstName + &quot; &quot; + obj.employees[1].lastName;\n  <br /> &lt;/script&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_json_parse\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>相关函数</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr>\n   <th>函数</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/js/javascript-json-parse.html\" target=\"_blank\">JSON.parse()</a></td>\n   <td>用于将一个 JSON 字符串转换为 JavaScript 对象。</td> \n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/js/javascript-json-stringify.html\" target=\"_blank\">JSON.stringify()</a></td>\n   <td>用于将 JavaScript 值转换为 JSON 字符串。</td> \n  </tr> \n </tbody>\n</table> \n<p>更多 JSON 信息，你可以阅读我们的 <a href=\"http://www.runoob.com/json/json-tutorial.html\">JSON 教程</a>。</p>', null, 'JavaScript JSON|什么是 JSON?|JSON 实例|JSON Example|JSON 格式化后为 JavaScript 对象|JSON 语法规则|JSON 数据 - 一个名称对应一个值|JSON 对象|JSON 数组|JSON 字符串转换为 JavaScript 对象|实例|相关函数|');
INSERT INTO `schoolcontent` VALUES ('167', '169', '<h1><span class=\"color_h1\">javascript:void(0)</span> 含义 </h1> \n<p class=\"intro\">我们经常会使用到 javascript:void(0) 这样的代码，那么在 JavaScript 中 javascript:void(0) 代表的是什么意思呢？</p> \n<p class=\"intro\">javascript:void(0) 中最关键的是 void 关键字， void 是 JavaScript 中非常重要的关键字，该操作符指定要计算一个表达式但是不返回值。 </p> \n<p>语法格式如下：</p> \n<pre>\r\n&lt;head&gt;\r\n&lt;script type=&quot;text/javascript&quot;&gt;\r\n&lt;!--\r\nvoid func()\r\njavascript:void func()\r\n\r\n或者\r\n\r\nvoid(func())\r\njavascript:void(func())\r\n//--&gt;\r\n&lt;/script&gt;\r\n&lt;/head&gt;\r\n</pre> \n<p>下面的代码创建了一个超级链接，当用户点击以后不会发生任何事。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;a href=&quot;javascript:void(0)&quot;&gt;单击此处什么也不会发生&lt;/a&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_void&amp;basepath=1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>当用户链接时，void(0) 计算为 0，但 Javascript 上没有任何效果。</p> \n<p>以下实例中，在用户点击链接后显示警告信息：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;head&gt;\n  <br /> &lt;script type=&quot;text/javascript&quot;&gt;\n  <br /> &lt;!--\n  <br /> //--&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;a href=&quot;javascript:void(alert(\'Warning!!!\'))&quot;&gt;点我!&lt;/a&gt;\n  <br /> &lt;/body&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_void1&amp;basepath=1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>以下实例中参数 a 将返回 undefined :</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;head&gt;\n  <br /> &lt;script type=&quot;text/javascript&quot;&gt;\n  <br /> &lt;!--\n  <br /> function getValue(){\n  <br /> &nbsp;&nbsp;var a,b,c;\n  <br /> &nbsp;&nbsp;a = void ( b = 5, c = 7 );\n  <br /> &nbsp;&nbsp;document.write(\'a = \' + a + \' b = \' + b +\' c = \' + c );\n  <br /> }\n  <br /> //--&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_void2&amp;basepath=1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>href=&quot;#&quot;与href=&quot;javascript:void(0)&quot;的区别</h2> \n<p><strong>#</strong> 包含了一个位置信息，默认的锚是<strong>#top</strong> 也就是网页的上端。</p> \n<p> 而javascript:void(0), 仅仅表示一个死链接。</p> \n<p>在页面很长的时候会使用 <strong>#</strong> 来定位页面的具体位置，格式为：<strong># + id</strong>。</p> \n<p>如果你要定义一个死链接请使用 javascript:void(0) 。 </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;a href=&quot;javascript:void(0);&quot;&gt;点我没有反应的!&lt;/a&gt; \n  <br /> &lt;a href=&quot;#pos&quot;&gt;点我定位到指定位置!&lt;/a&gt; \n  <br /> &lt;br&gt; \n  <br /> ... \n  <br /> &lt;br&gt; \n  <br /> &lt;p id=&quot;pos&quot;&gt;尾部定位点&lt;/p&gt; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/demo_source/tryjs_void3.htm\" target=\"_blank\">尝试一下 &raquo;</a> \n</div>', null, 'javascript:void(0) 含义|实例|实例|实例|href=\"#\"与href=\"javascript:void(0)\"的区别|实例|');
INSERT INTO `schoolcontent` VALUES ('168', '170', '<h1>JavaScript 代码规范</h1> \n<hr /> \n<p class=\"intro\">所有的 JavaScript 项目适用同一种规范。</p> \n<hr /> \n<h2>JavaScript 代码规范</h2> \n<p>代码规范通常包括以下几个方面:</p> \n<ul> \n <li>变量和函数的命名规则</li> \n <li>空格，缩进，注释的使用规则。</li> \n <li>其他常用规范……</li> \n</ul> \n<p>规范的代码可以更易于阅读与维护。</p> \n<p>代码规范一般在开发前规定，可以跟你的团队成员来协商设置。</p> \n<hr /> \n<h2>变量名</h2> \n<p>变量名推荐使用驼峰法来命名(<strong>camelCase</strong>): </p> \n<div class=\"example\"> \n <div class=\"example_code\">\n   firstName = \n  <span class=\"highVAL\">&quot;John&quot;</span>;\n  <br />lastName = \n  <span class=\"highVAL\">&quot;Doe&quot;</span>;\n  <br />\n  <br />price = \n  <span class=\"highVAL\">19.90</span>;\n  <br /> tax = \n  <span class=\"highVAL\">0.20</span>;\n  <br />\n  <br />fullPrice = price + (price * tax);\n </div> \n</div> \n<hr /> \n<h2>空格与运算符</h2> \n<p>通常运算符 ( = + - * / ) 前后需要添加空格:</p> \n<div class=\"example\"> \n <h3>实例:</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> x = y + z;\n  <br />\n  <span class=\"highELE\">var</span> values = [\n  <span class=\"highVAL\">&quot;Volvo&quot;</span>, \n  <span class=\"highVAL\">&quot;Saab&quot;</span>, \n  <span class=\"highVAL\">&quot;Fiat&quot;</span>];\n </div> \n</div> \n<hr /> \n<h2>代码缩进</h2> \n<p>通常使用 4 个空格符号来缩进代码块：</p> \n<div class=\"example\"> \n <h3>函数:</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">function</span> toCelsius(fahrenheit) {\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highELE\">return</span> (\n  <span class=\"highVAL\">5</span> / \n  <span class=\"highVAL\">9</span>) * (fahrenheit - \n  <span class=\"highVAL\">32</span>);\n  <br /> } \n </div> \n</div> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>不推荐使用 TAB 键来缩进，因为不同编辑器 TAB 键的解析不一样。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>语句规则</h2> \n<p>简单语句的通用规则:</p> \n<ul> \n <li>一条语句通常以符号作为结束符。</li> \n</ul> \n<div class=\"example\"> \n <h3>实例:</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> values = [\n  <span class=\"highVAL\">&quot;Volvo&quot;</span>, \n  <span class=\"highVAL\">&quot;Saab&quot;</span>, \n  <span class=\"highVAL\">&quot;Fiat&quot;</span>];\n  <br />\n  <br />\n  <span class=\"highELE\">var</span> person = {\n  <br />&nbsp;&nbsp;&nbsp; firstName: \n  <span class=\"highVAL\">&quot;John&quot;</span>,\n  <br />&nbsp;&nbsp;&nbsp; lastName: \n  <span class=\"highVAL\">&quot;Doe&quot;</span>,\n  <br />&nbsp;&nbsp;&nbsp; age: \n  <span class=\"highVAL\">50</span>,\n  <br />&nbsp;&nbsp;&nbsp; eyeColor: \n  <span class=\"highVAL\">&quot;blue&quot;</span>\n  <br />};\n </div> \n</div> \n<p>复杂语句的通用规则:</p> \n<ul> \n <li>将左花括号放在第一行的结尾。</li> \n <li>左花括号前添加一空格。</li> \n <li>将右花括号独立放在一行。</li> \n <li>不要以分号结束一个复杂的声明。</li> \n</ul> \n<div class=\"example\"> \n <h3>函数:</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">function</span> toCelsius(fahrenheit) {\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highELE\">return</span> (\n  <span class=\"highVAL\">5</span> / \n  <span class=\"highVAL\">9</span>) * (fahrenheit - \n  <span class=\"highVAL\">32</span>);\n  <br /> } \n </div> \n</div>\n<br /> \n<div class=\"example\"> \n <h3>循环:</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">for</span> (i = \n  <span class=\"highVAL\">0</span>; i &lt; \n  <span class=\"highVAL\">5</span>; i++) {\n  <br />&nbsp;&nbsp;&nbsp; x += i;\n  <br />}\n </div> \n</div>\n<br /> \n<div class=\"example\"> \n <h3>条件语句:</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">if</span> (time &lt; \n  <span class=\"highVAL\">20</span>) {\n  <br />&nbsp;&nbsp;&nbsp; greeting = \n  <span class=\"highVAL\">&quot;Good day&quot;</span>;\n  <br />} \n  <span class=\"highELE\">else</span> {\n  <br />&nbsp;&nbsp;&nbsp; greeting = \n  <span class=\"highVAL\">&quot;Good evening&quot;</span>;\n  <br />}\n </div> \n</div>\n<hr /> \n<h2>对象规则</h2> \n<p>对象定义的规则:</p> \n<ul> \n <li>将左花括号与类名放在同一行。</li> \n <li>冒号与属性值间有个空格。</li> \n <li>字符串使用双引号，数字不需要。</li> \n <li>最后一个属性-值对后面不要添加逗号。</li> \n <li>将右花括号独立放在一行，并以符号作为结束符号。</li> \n</ul> \n<div class=\"example\"> \n <h3>实例:</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> person = {\n  <br />&nbsp;&nbsp;&nbsp; firstName: \n  <span class=\"highVAL\">&quot;John&quot;</span>,\n  <br />&nbsp;&nbsp;&nbsp; lastName: \n  <span class=\"highVAL\">&quot;Doe&quot;</span>,\n  <br />&nbsp;&nbsp;&nbsp; age: \n  <span class=\"highVAL\">50</span>,\n  <br />&nbsp;&nbsp;&nbsp; eyeColor: \n  <span class=\"highVAL\">&quot;blue&quot;</span>\n  <br />};\n </div> \n</div> \n<p>短的对象代码可以直接写成一行:</p> \n<div class=\"example\"> \n <h3>实例:</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> person = {firstName:\n  <span class=\"highVAL\">&quot;John&quot;</span>, lastName:\n  <span class=\"highVAL\">&quot;Doe&quot;</span>, age:\n  <span class=\"highVAL\">50</span>, eyeColor:\n  <span class=\"highVAL\">&quot;blue&quot;</span>};\n </div> \n</div> \n<hr />\n<h2> 每行代码字符小于 80</h2> \n<p>为了便于阅读每行字符建议小于数 80 个。</p> \n<p>如果一个 JavaScript 语句超过了 80 个字符，建议在 运算符或者逗号后换行。</p> \n<div class=\"example\"> \n <h3>实例:</h3> \n <div class=\"example_code\">\n   document.getElementById(\n  <span class=\"highVAL\">&quot;demo&quot;</span>).innerHTML =\n  <br /> &nbsp;&nbsp;&nbsp; \n  <span class=\"highVAL\">&quot;Hello Runoob.&quot;</span>; \n </div>\n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_line_break\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>命名规则</h2> \n<p>一般很多代码语言的命名规则都是类似的，例如:</p> \n<ul> \n <li>变量和函数为驼峰法（ <strong>camelCase</strong>）</li> \n <li>全局变量为大写 (<strong>UPPERCASE </strong>)</li> \n <li>常量 (如 PI) 为大写 (<strong>UPPERCASE </strong>)</li> \n</ul> \n<p>变量命名你是否使用这几种规则： <strong>hyp-hens</strong>, <strong>camelCase</strong>, 或 <strong>under_scores</strong> ?</p> \n<p><strong>HTML 和 CSS 的横杆(-)字符:</strong></p> \n<p>HTML5 属性可以以 data- (如：data-quantity, data-price) 作为前缀。</p> \n<p>CSS 使用 - 来连接属性名 (font-size)。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td style=\"width: 888px\"> - 通常在 JavaScript 中被认为是减法，所以不允许使用。</td> \n  </tr>\n </tbody>\n</table>\n<p> <strong>下划线:</strong></p> \n<p>很多程序员比较喜欢使用下划线(如：date_of_birth), 特别是在 SQL 数据库中。</p> \n<p>PHP 语言通常都使用下划线。</p> \n<p><strong>帕斯卡拼写法(PascalCase):</strong></p> \n<p>帕斯卡拼写法(PascalCase) 在 C 语言中语言较多。</p> \n<p>驼峰法：</p> \n<p> JavaScript 中通常推荐使用驼峰法，jQuery 及其他 JavaScript 库都使用驼峰法。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>变量名不要以 $ 作为开始标记，会与很多 JavaScript 库冲突。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>HTML 载入外部 JavaScript 文件</h2> \n<p>使用简洁的格式载入 JavaScript 文件 ( type 属性不是必须的):</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <span class=\"highLT\">&lt;</span>\n  <span class=\"highELE\">script</span> \n  <span class=\"highATT\">src=</span>\n  <span class=\"highVAL\">&quot;myscript.js&quot;</span>\n  <span class=\"highGT\">&gt;</span> \n </div> \n</div> \n<hr /> \n<h2>使用 JavaScript 访问 HTML 元素</h2> \n<p>一个糟糕的 HTML 格式可能会导致 JavaScript 执行错误。</p> \n<p>以下两个 JavaScript 语句会输出不同结果:</p> \n<div class=\"example\">\n <h3>实例</h3> \n <div class=\"example_code\"> \n  <span class=\"highELE\">var</span> obj = getElementById(\n  <span class=\"highVAL\">&quot;Demo&quot;</span>)\n  <br />\n  <br />\n  <span class=\"highELE\">var</span> obj = getElementById(\n  <span class=\"highVAL\">&quot;demo&quot;</span>) \n </div>\n <br /> \n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryhtml_syntax_javascript\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>HTML 与 JavaScript 尽量使用相同的命名规则。</p> \n<p><a href=\"http://www.runoob.com/html/html5-syntax.html\">访问 HTML(5) 代码规范</a>。</p> \n<hr /> \n<h2>文件扩展名</h2> \n<p>HTML 文件后缀可以是 <strong>.html</strong> (或r <strong>.htm</strong>)。</p> \n<p>CSS 文件后缀是 <strong>.css</strong> 。</p> \n<p>JavaScript 文件后缀是 <strong>.js</strong> 。</p>\n<hr />\n<h2>使用小写文件名</h2> \n<p> 大多 Web 服务器 (Apache, Unix) 对大小写敏感： london.jpg 不能通过 London.jpg 访问。 </p> \n<p> 其他 Web 服务器 (Microsoft, IIS) 对大小写不敏感： london.jpg 可以通过 London.jpg 或 london.jpg 访问。 </p> \n<p> 你必须保持统一的风格，我们建议统一使用小写的文件名。</p>', null, 'JavaScript 代码规范|JavaScript 代码规范|变量名|空格与运算符|代码缩进|语句规则|对象规则|每行代码字符小于 80|命名规则|HTML 载入外部 JavaScript 文件|使用 JavaScript 访问 HTML 元素|文件扩展名|使用小写文件名|');
INSERT INTO `schoolcontent` VALUES ('169', '171', '<h1>JavaScript <span class=\"color_h1\">函数定义</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 使用关键字 <strong>function</strong> 定义函数。</p> \n<p class=\"intro\">函数可以通过声明定义，也可以是一个表达式。</p> \n<hr /> \n<h2>函数声明</h2> \n<p>在之前的教程中，你已经了解了函数声明的语法 :</p> \n<div class=\"code\"> \n <div>\n   function \n  <em>functionName</em>(\n  <em>parameters</em>) {\n  <br /> &nbsp; \n  <em>执行的代码</em>\n  <br /> } \n </div> \n</div> \n<p>函数声明后不会立即执行，会在我们需要的时候调用到。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br /> &nbsp;&nbsp;&nbsp; return a * b;\n  <br />}\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_return\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 分号是用来分隔可执行JavaScript语句。 <br /> 由于函数声明不是一个可执行语句，所以不以分号结束。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>函数表达式</h2> \n<p>JavaScript 函数可以通过一个表达式定义。</p> \n<p>函数表达式可以存储在变量中：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var x = function (a, b) {return a * b}; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_expression\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>在函数表达式存储在变量后，变量也可作为一个函数使用：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var x = function (a, b) {return a * b};\n  <br /> var z = x(4, 3);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_expression_variable\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>以上函数实际上是一个 <strong>匿名函数</strong> (函数没有名称)。</p> \n<p>函数存储在变量中，不需要函数名称，通常通过变量名来调用。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>上述函数以分号结尾，因为它是一个执行语句。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>Function() 构造函数</h2> \n<p>在以上实例中，我们了解到函数通过关键字 <strong>function</strong> 定义。</p> \n<p>函数同样可以通过内置的 JavaScript 函数构造器（Function()）定义。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var myFunction = new Function(&quot;a&quot;, &quot;b&quot;, &quot;return a * b&quot;);\n  <br />\n  <br /> var x = myFunction(4, 3);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_constructor\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>实际上，你不必使用构造函数。上面实例可以写成：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var myFunction = function (a, b) {return a * b}\n  <br />\n  <br /> var x = myFunction(4, 3);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_constructor2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>在 JavaScript 中，很多时候，你需要避免使用 <strong>new</strong> 关键字。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>函数提升（Hoisting）</h2> \n<p>在之前的教程中我们已经了解了 &quot;hoisting(提升)&quot;。</p> \n<p>提升（Hoisting）是 JavaScript 默认将当前作用域提升到前面去的的行为。</p> \n<p>提升（Hoisting）应用在变量的声明与函数的声明。</p> \n<p>因此，函数可以在声明之前调用：</p> \n<div class=\"code\"> \n <div>\n   myFunction(5);\n  <br />\n  <br /> function myFunction(y) {\n  <br /> &nbsp;&nbsp;&nbsp; return y * y;\n  <br /> } \n </div> \n</div> \n<p>使用表达式定义函数时无法提升。</p> \n<hr /> \n<h2>自调用函数</h2> \n<p>函数表达式可以 &quot;自调用&quot;。</p> \n<p>自调用表达式会自动调用。</p> \n<p>如果表达式后面紧跟 () ，则会自动调用。</p> \n<p>不能自调用声明的函数。</p> \n<p>通过添加括号，来说明它是一个函数表达式：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   (function () {\n  <br /> &nbsp;&nbsp;&nbsp; var x = &quot;Hello!!&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 我将调用自己\n  <br /> })(); \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_expression_self\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>以上函数实际上是一个 <strong>匿名自我调用的函数</strong> (没有函数名)。</p> \n<hr /> \n<h2>函数可作为一个值使用</h2> \n<p>JavaScript 函数作为一个值使用：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br />&nbsp;&nbsp;&nbsp; return a * b;\n  <br />}\n  <br />\n  <br /> var x = myFunction(4, 3);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_value\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>JavaScript 函数可作为表达式使用：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br />&nbsp;&nbsp;&nbsp; return a * b;\n  <br />}\n  <br />\n  <br /> var x = myFunction(4, 3) * 2;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_value2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>函数是对象</h2> \n<p>在 JavaScript 中使用 <strong>typeof</strong> 操作符判断函数类型将返回 &quot;function&quot; 。</p> \n<p>但是JavaScript 函数描述为一个对象更加准确。</p> \n<p>JavaScript 函数有 <strong>属性</strong> 和 <strong> 方法</strong>。</p> \n<p>arguments.length 属性返回函数调用过程接收到的参数个数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br />&nbsp;&nbsp;&nbsp; return arguments.length;\n  <br />}\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_length\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>toString() 方法将函数作为一个字符串返回:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br />&nbsp;&nbsp;&nbsp; return a * b;\n  <br />}\n  <br />\n  <br />var txt = myFunction.toString();\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_tostring\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>函数定义作为对象的属性，称之为对象方法。<br />函数如果用于创建新的对象，称之为对象的构造函数。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 函数定义|函数声明|实例|函数表达式|实例|实例|Function() 构造函数|实例|实例|函数提升（Hoisting）|自调用函数|实例|函数可作为一个值使用|实例|实例|函数是对象|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('170', '172', '<h1>JavaScript <span class=\"color_h1\">函数参数</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 函数对参数的值(arguments)没有进行任何的检查。</p> \n<hr /> \n<h2>函数显式参数与隐藏参数(arguments)</h2> \n<p>在先前的教程中，我们已经学习了函数的显式参数:</p> \n<div class=\"example\"> \n <div class=\"example_code\"> \n  <em>functionName</em>(\n  <em>parameter1, parameter2, parameter3</em>) {\n  <br /> &nbsp;&nbsp;&nbsp; \n  <em>code to be executed</em>\n  <br /> } \n </div> \n</div> \n<p>函数显式参数在函数定义时列出。</p> \n<p>函数隐藏参数(arguments)在函数调用时传递给函数真正的值。</p> \n<hr /> \n<h2>参数规则</h2> \n<p>JavaScript 函数定义时参数没有指定数据类型。</p> \n<p>JavaScript 函数对隐藏参数(arguments)没有进行检测。</p> \n<p>JavaScript 函数对隐藏参数(arguments)的个数没有进行检测。</p> \n<hr /> \n<h2>默认参数</h2> \n<p>如果函数在调用时缺少参数，参数会默认设置为： <strong>undefined</strong> </p> \n<p>有时这是可以接受的，但是建议最好为参数设置一个默认值： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function myFunction(x, y) {\n  <br /> &nbsp;&nbsp;&nbsp; if (y === undefined) {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y = 0;\n  <br /> &nbsp;&nbsp;&nbsp; } \n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_undefined\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>或者，更简单的方式：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function myFunction(x, y) {\n  <br /> &nbsp;&nbsp;&nbsp; y = y || 0;\n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_undefined2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>如果y已经定义 ， y || 返回 y, 因为 y 是 true, 否则返回 0, 因为 undefined 为 false。</td> \n  </tr>\n </tbody>\n</table> \n<p>如果函数调用时设置了过多的参数，参数将无法被引用，因为无法找到对应的参数名。 只能使用 arguments 对象来调用。</p> \n<hr /> \n<h2> Arguments 对象</h2> \n<p>JavaScript 函数有个内置的对象 arguments 对象.</p> \n<p> argument 对象包含了函数调用的参数数组。</p> \n<p>通过这种方式你可以很方便的找到最后一个参数的值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   x = findMax(1, 123, 500, 115, 44, 88);\n  <br />\n  <br />function findMax() {\n  <br /> &nbsp;&nbsp;&nbsp; var i, max = 0;\n  <br /> &nbsp;&nbsp;&nbsp; for (i = 0; i &lt; arguments.length; i++) {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (arguments[i] &gt; max) {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; max = arguments[i];\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }\n  <br /> &nbsp;&nbsp;&nbsp; }\n  <br /> &nbsp;&nbsp;&nbsp; return max;\n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_arguments\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>或者创建一个函数用来统计所有数值的和：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   x = sumAll(1, 123, 500, 115, 44, 88);\n  <br />\n  <br /> function sumAll() {\n  <br /> &nbsp;&nbsp;&nbsp; var i, sum = 0;\n  <br /> &nbsp;&nbsp;&nbsp; for (i = 0; i &lt; arguments.length; i++) {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum += arguments[i];\n  <br /> &nbsp;&nbsp;&nbsp; }\n  <br /> &nbsp;&nbsp;&nbsp; return sum;\n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_arguments_sum\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>通过值传递参数</h2> \n<p>在函数中调用的参数是函数的参数。</p> \n<p>如果函数修改参数的值，将不会修改参数的初始值（在函数外定义）。</p> \n<p>函数参数的改变不会影响函数外部的变量（局部变量）。</p> \n<hr /> \n<h2>通过对象传递参数</h2> \n<p>在JavaScript中，可以引用对象的值。</p> \n<p>因此我们在函数内部修改对象的属性就会修改其初始的值。</p> \n<p>修改对象属性可作用于函数外部（全局变量）。</p>', null, 'JavaScript 函数参数|函数显式参数与隐藏参数(arguments)|参数规则|默认参数|实例|实例|Arguments 对象|实例|实例|通过值传递参数|通过对象传递参数|');
INSERT INTO `schoolcontent` VALUES ('171', '173', '<h1>JavaScript <span class=\"color_h1\">函数调用</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 函数有 4 种调用方式。</p> \n<p class=\"intro\">每种方式的不同方式在于 <strong>this</strong> 的初始化。 </p> \n<hr /> \n<h2> <em><strong>this</strong></em> 关键字</h2> \n<p>一般而言，在Javascript中，this指向函数执行时的当前对象。</p> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>注意 <strong>this</strong> 是保留关键字，你不能修改 <strong>this</strong> 的值。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>调用 JavaScript 函数</h2> \n<p>在之前的章节中我们已经学会了如何创建函数。 </p> \n<p>函数中的代码在函数被调用后执行。</p> \n<hr /> \n<h2>作为一个函数调用</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br /> &nbsp; &nbsp; return a * b;\n  <br /> }\n  <br /> myFunction(10, 2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // myFunction(10, 2) 返回 20 \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_invoke_function\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>以上函数不属于任何对象。但是在 JavaScript 中它始终是默认的全局对象。</p> \n<p>在 HTML 中默认的全局对象是 HTML 页面本身，所以函数是属于 HTML 页面。</p> \n<p>在浏览器中的页面对象是浏览器窗口(window 对象)。以上函数会自动变为 window 对象的函数。</p> \n<p>myFunction() 和 window.myFunction() 是一样的：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br /> &nbsp; &nbsp; return a * b;\n  <br /> }\n  <br />window.myFunction(10, 2);&nbsp;&nbsp;&nbsp; // window.myFunction(10, 2) 返回 20 \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_invoke_function_2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>这是调用 JavaScript 函数常用的方法， 但不是良好的编程习惯 <br />全局变量，方法或函数容易造成命名冲突的bug。 </td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>全局对象</h2> \n<p>当函数没有被自身的对象调用时， <strong>this</strong> 的值就会变成全局对象。</p> \n<p>在 web 浏览器中全局对象是浏览器窗口（window 对象）。</p> \n<p>该实例返回 <strong>this</strong> 的值是 window 对象:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction() {\n  <br /> &nbsp; &nbsp; return this;\n  <br /> }\n  <br /> myFunction();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 返回 window 对象 \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_invoke_function_3\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>函数作为全局对象调用，会使 <strong>this</strong> 的值成为全局对象。<br />使用 window 对象作为一个变量容易造成程序崩溃。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>函数作为方法调用</h2> \n<p>在 JavaScript 中你可以将函数定义为对象的方法。</p> \n<p>以下实例创建了一个对象 (<strong>myObject</strong>), 对象有两个属性 (<strong>firstName</strong> 和 <strong>lastName</strong>), 及一个方法 (<strong>fullName</strong>):</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var myObject = {\n  <br /> &nbsp;&nbsp;&nbsp; firstName:&quot;John&quot;,\n  <br /> &nbsp;&nbsp;&nbsp; lastName: &quot;Doe&quot;,\n  <br /> &nbsp;&nbsp;&nbsp; fullName: function () {\n  <br /> &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this.firstName + &quot; &quot; + this.lastName;\n  <br /> &nbsp;&nbsp;&nbsp; }\n  <br /> }\n  <br /> myObject.fullName();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 返回 &quot;John Doe&quot; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_invoke_method\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p><strong>fullName</strong> 方法是一个函数。函数属于对象。 <strong>myObject</strong> 是函数的所有者。</p> \n<p> <strong>this</strong>对象，拥有 JavaScript 代码。实例中 <strong>this</strong> 的值为 <strong>myObject</strong> 对象。 </p> \n<p>测试以下！修改 <strong>fullName</strong> 方法并返回 <strong>this</strong> 值:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var myObject = {\n  <br />&nbsp;&nbsp;&nbsp; firstName:&quot;John&quot;,\n  <br /> &nbsp;&nbsp;&nbsp; lastName: &quot;Doe&quot;,\n  <br /> &nbsp;&nbsp;&nbsp; fullName: function () {\n  <br /> &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this;\n  <br /> &nbsp;&nbsp;&nbsp; }\n  <br />}\n  <br /> myObject.fullName();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 返回 [object Object] (所有者对象) \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_invoke_method_2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>函数作为对象方法调用，会使得 <strong>this</strong> 的值成为对象本身。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>使用构造函数调用函数</h2> \n<p>如果函数调用前使用了 <strong>new</strong> 关键字, 则是调用了构造函数。</p> \n<p>这看起来就像创建了新的函数，但实际上 JavaScript 函数是重新创建的对象：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   // 构造函数:\n  <br />function myFunction(arg1, arg2) {\n  <br /> &nbsp;&nbsp;&nbsp; this.firstName = arg1;\n  <br /> &nbsp;&nbsp;&nbsp; this.lastName&nbsp; = arg2;\n  <br /> }\n  <br />\n  <br /> // This creates a new object\n  <br /> var x = new myFunction(&quot;John&quot;,&quot;Doe&quot;);\n  <br /> x.firstName;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 返回 &quot;John&quot; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_invoke_constructor\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p> 构造函数的调用会创建一个新的对象。新对象会继承构造函数的属性和方法。 </p> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>构造函数中 <strong>this</strong> 关键字没有任何的值。<br /> <strong>this</strong> 的值在函数调用时实例化对象(new object)时创建。</td> \n  </tr>\n </tbody>\n</table> \n<hr /> \n<h2>作为函数方法调用函数</h2> \n<p>在 JavaScript 中, 函数是对象。JavaScript 函数有它的属性和方法。</p> \n<p><strong>call()</strong> 和 <strong>apply()</strong> 是预定义的函数方法。 两个方法可用于调用函数，两个方法的第一个参数必须是对象本身。 </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br /> &nbsp; &nbsp; return a * b;\n  <br /> }\n  <br />myFunction.call(myObject, 10, 2);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 返回 20 \n </div> \n</div> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction(a, b) {\n  <br /> &nbsp; &nbsp; return a * b;\n  <br /> }\n  <br />myArray = [10,2];\n  <br /> myFunction.apply(myObject, myArray);&nbsp;&nbsp;&nbsp;// 返回 20 \n </div> \n</div> \n<p> 两个方法都使用了对象本身作为第一个参数。 两者的区别在于第二个参数： apply传入的是一个参数数组，也就是将多个参数组合成为一个数组传入，而call则作为call的参数传入（从第二个参数开始）。 </p> \n<p> 在 JavaScript 严格模式(strict mode)下, 在调用函数时第一个参数会成为 <strong>this</strong> 的值， 即使该参数不是一个对象。</p> \n<p>在 JavaScript 非严格模式(non-strict mode)下, 如果第一个参数的值是 null 或 undefined, 它将使用全局对象替代。 </p> \n<p> </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>通过 call() 或 apply() 方法你可以设置 <strong>this</strong> 的值, 且作为已存在对象的新方法调用。</td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 函数调用|this 关键字|调用 JavaScript 函数|作为一个函数调用|实例|实例|全局对象|实例|函数作为方法调用|实例|实例|使用构造函数调用函数|实例|作为函数方法调用函数|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('172', '174', '<h1>JavaScript <span class=\"color_h1\">闭包</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 变量可以是局部变量或全局变量。</p> \n<p class=\"intro\">私有变量可以用到闭包。</p> \n<hr /> \n<h2>全局变量</h2> \n<p>函数可以访问由函数内部定义的变量，如：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function myFunction() {\n  <br /> &nbsp;&nbsp;&nbsp; var a = 4;\n  <br /> &nbsp;&nbsp;&nbsp; return a * a;\n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_scope2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>函数也可以访问函数外部定义的变量，如：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var a = 4;\n  <br />function myFunction() {\n  <br /> &nbsp;&nbsp;&nbsp; return a * a;\n  <br /> } \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_scope1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>后面一个实例中， <strong>a</strong> 是一个 <strong>全局</strong> 变量。 </p> \n<p>在web页面中全局变量属于 window 对象。</p> \n<p>全局变量可应用于页面上的所有脚本。</p> \n<p>在第一个实例中， <strong>a</strong> 是一个 <strong>局部</strong> 变量。</p> \n<p>局部变量只能用于定义它函数内部。对于其他的函数或脚本代码是不可用的。</p> \n<p>全局和局部变量即便名称相同，它们也是两个不同的变量。修改其中一个，不会影响另一个的值。 </p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>变量声明是如果不使用 <strong>var</strong> 关键字，那么它就是一个全局变量，即便它在函数内定义。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>变量生命周期</h2> \n<p>全局变量的作用域是全局性的，即在整个JavaScript程序中，全局变量处处都在。</p> \n<p>而在函数内部声明的变量，只在函数内部起作用。这些变量是局部变量，作用域是局部性的；函数的参数也是局部性的，只在函数内部起作用。</p> \n<hr /> \n<h2>计数器困境</h2> \n<p>设想下如果你想统计一些数值，且该计数器在所有函数中都是可用的。</p> \n<p>你可以使用全局变量，函数设置计数器递增：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var counter = 0;\n  <br />\n  <br /> function add() {\n  <br /> &nbsp;&nbsp;&nbsp; counter += 1;\n  <br /> }\n  <br />\n  <br /> add();\n  <br /> add();\n  <br /> add();\n  <br />\n  <br /> // 计数器现在为 3 \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_counter\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>计数器数值在执行 add() 函数时发生变化。</p> \n<p>但问题来了，页面上的任何脚本都能改变计数器，即便没有调用 add() 函数。</p> \n<p>如果我在函数内声明计数器，如果没有调用函数将无法修改计数器的值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function add() {\n  <br /> &nbsp;&nbsp;&nbsp; var counter = 0;\n  <br /> &nbsp;&nbsp;&nbsp; counter += 1;\n  <br /> }\n  <br />\n  <br /> add();\n  <br /> add();\n  <br /> add();\n  <br />\n  <br /> // 本意是想输出 3, 但事与愿违，输出的都是 1 ! \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_counter2\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>以上代码将无法正确输出，每次我调用 add() 函数，计数器都会设置为 1。</p> \n<p><strong> JavaScript 内嵌函数可以解决该问题。</strong></p> \n<hr /> \n<h2>JavaScript 内嵌函数</h2> \n<p>所有函数都能访问全局变量。&nbsp;&nbsp; </p> \n<p>实际上，在 JavaScript 中，所有函数都能访问它们上一层的作用域。</p> \n<p>JavaScript 支持嵌套函数。嵌套函数可以访问上一层的函数变量。 </p> \n<p>该实例中，内嵌函数 <strong>plus()</strong> 可以访问父函数的 <strong>counter</strong> 变量：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   function add() {\n  <br /> &nbsp;&nbsp;&nbsp; var counter = 0;\n  <br /> &nbsp;&nbsp;&nbsp; function plus() {counter += 1;}\n  <br />&nbsp;&nbsp;&nbsp; plus();&nbsp;&nbsp;&nbsp; \n  <br />&nbsp;&nbsp;&nbsp; return counter; \n  <br />}\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_counter1\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>如果我们能在外部访问 <strong>plus()</strong> 函数，这样就能解决计数器的困境。 </p> \n<p>我们同样需要确保 <strong>counter = 0</strong> 只执行一次。</p> \n<p><strong>我们需要闭包。</strong></p> \n<hr /> \n<h2>JavaScript 闭包</h2> \n<p>还记得函数自我调用吗？该函数会做什么？</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var add = (function () {\n  <br />&nbsp;&nbsp;&nbsp; var counter = 0;\n  <br />&nbsp;&nbsp;&nbsp; return function () {return counter += 1;}\n  <br />})();\n  <br />\n  <br />add();\n  <br /> add();\n  <br /> add();\n  <br />\n  <br /> // 计数器为 3 \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_counter3\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<h2>实例解析</h2> \n<p>变量 <strong>add</strong> 指定了函数自我调用的返回字值。 </p> \n<p>自我调用函数只执行一次。设置计数器为 0。并返回函数表达式。</p> \n<p>add变量可以作为一个函数使用。非常棒的部分是它可以访问函数上一层作用域的计数器。 </p> \n<p>这个叫作 JavaScript <strong>闭包。</strong>它使得函数拥有私有变量变成可能。</p> \n<p>计数器受匿名函数的作用域保护，只能通过 add 方法修改。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td> 闭包是可访问上一层函数作用域里变量的函数，即便上一层函数已经关闭。 </td> \n  </tr>\n </tbody>\n</table>', null, 'JavaScript 闭包|全局变量|实例|实例|变量生命周期|计数器困境|实例|实例|JavaScript 内嵌函数|实例|JavaScript 闭包|实例|实例解析|');
INSERT INTO `schoolcontent` VALUES ('173', '175', '<h1>JavaScript <span class=\"color_h1\">HTML DOM</span> </h1> \n<hr /> \n<p class=\"intro\">通过 HTML DOM，可访问 JavaScript HTML 文档的所有元素。</p> \n<hr /> \n<h2>HTML DOM (文档对象模型)</h2> \n<p>当网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）。 </p> \n<p><strong>HTML DOM</strong> 模型被构造为<strong>对象</strong>的树：</p> \n<div class=\"example\"> \n <h2 class=\"example_head\"> HTML DOM 树</h2> \n <div class=\"example_code notranslate\" style=\"text-align:center\"> \n  <img border=\"0\" src=\"http://www.runoob.com/images/pic_htmltree.gif\" alt=\"DOM HTML tree\" width=\"486\" height=\"266\" /> \n </div> \n</div> \n<p>通过可编程的对象模型，JavaScript 获得了足够的能力来创建动态的 HTML。 </p> \n<ul> \n <li>JavaScript 能够改变页面中的所有 HTML 元素</li> \n <li>JavaScript 能够改变页面中的所有 HTML 属性</li> \n <li>JavaScript 能够改变页面中的所有 CSS 样式</li> \n <li>JavaScript 能够对页面中的所有事件做出反应</li> \n</ul> \n<hr /> \n<h2>查找 HTML 元素</h2> \n<p>通常，通过 JavaScript，您需要操作 HTML 元素。</p> \n<p>为了做到这件事情，您必须首先找到该元素。有三种方法来做这件事：</p> \n<ul> \n <li>通过 id 找到 HTML 元素</li> \n <li>通过标签名找到 HTML 元素</li> \n <li>通过类名找到 HTML 元素</li> \n</ul> \n<hr /> \n<h2>通过 id 查找 HTML 元素</h2> \n<p>在 DOM 中查找 HTML 元素的最简单的方法，是通过使用元素的 id。</p> \n<p>本例查找 id=&quot;intro&quot; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var x=document.getElementById(&quot;intro&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=try_dom_getelementbyid\">尝试一下 &raquo;</a> \n</div> \n<p>如果找到该元素，则该方法将以对象（在 x 中）的形式返回该元素。</p> \n<p>如果未找到该元素，则 x 将包含 null。</p> \n<hr /> \n<h2>通过标签名查找 HTML 元素</h2> \n<p>本例查找 id=&quot;main&quot; 的元素，然后查找 id=&quot;main&quot; 元素中的所有 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var x=document.getElementById(&quot;main&quot;);\n  <br />var y=x.getElementsByTagName(&quot;p&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=try_dom_getelementsbytagname\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>通过类名找到 HTML 元素</h2> \n<p>本例通过 <b><a href=\"http://www.runoob.com/jsref/met-document-getelementsbyclassname.html\" target=\"_blank\">getElementsByClassName</a></b> 函数来查找 class=&quot;intro&quot; 的元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var x=document.getElementsByClassName(&quot;intro&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=try_dom_getelementsbyclassname\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<hr /> \n<h2>HTML DOM 教程</h2> \n<p>在本教程接下来的篇幅中，您将学到：</p> \n<ul> \n <li>如何改变 HTML 元素的内容 (innerHTML)</li> \n <li>如何改变 HTML 元素的样式 (CSS)</li> \n <li>如何对 HTML DOM 事件对出反应</li> \n <li>如何添加或删除 HTML 元素</li> \n</ul>', null, 'JavaScript HTML DOM|HTML DOM (文档对象模型)|HTML DOM 树|查找 HTML 元素|通过 id 查找 HTML 元素|实例|通过标签名查找 HTML 元素|实例|通过类名找到 HTML 元素|实例|HTML DOM 教程|');
INSERT INTO `schoolcontent` VALUES ('174', '176', '<h1>JavaScript <span class=\"color_h1\">HTML DOM - 改变 HTML</span> </h1> \n<hr /> \n<p class=\"intro\">HTML DOM 允许 JavaScript 改变 HTML 元素的内容。</p> \n<hr /> \n<h2>改变 HTML 输出流</h2> \n<p>JavaScript 能够创建动态的 HTML 内容：</p> \n<p><b>今天的日期是： <script>\r\ndocument.write(Date());\r\n</script> </b></p> \n<p>在 JavaScript 中，document.write() 可用于直接向 HTML 输出流写内容。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br /> document.write(Date());\n  <br /> &lt;/script&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_date\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td>绝对不要在文档加载完成之后使用 document.write()。这会覆盖该文档。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>改变 HTML 内容</h2> \n<p>修改 HTML 内容的最简单的方法时使用 innerHTML 属性。</p> \n<p>如需改变 HTML 元素的内容，请使用这个语法：</p> \n<div class=\"code notranslate\"> \n <div>\n   document.getElementById(\n  <i>id</i>).innerHTML=\n  <i>new HTML</i> \n </div> \n</div> \n<p>本例改变了 &lt;p&gt;元素的内容： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;p id=&quot;p1&quot;&gt;Hello World!&lt;/p&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br /> document.getElementById(&quot;p1&quot;).innerHTML=&quot;New text!&quot;;\n  <br /> &lt;/script&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_change_innerhtml\">尝试一下 &raquo;</a> \n</div> \n<p>本例改变了 &lt;h1&gt; 元素的内容：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;h1 id=&quot;header&quot;&gt;Old Header&lt;/h1&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br /> var element=document.getElementById(&quot;header&quot;);\n  <br />element.innerHTML=&quot;New Header&quot;;\n  <br /> &lt;/script&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_dom_innertext\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>实例讲解：</p> \n<ul> \n <li>上面的 HTML 文档含有 id=&quot;header&quot; 的 &lt;h1&gt; 元素</li>\n <br /> \n <li>我们使用 HTML DOM 来获得 id=&quot;header&quot; 的元素</li>\n <br /> \n <li>JavaScript 更改此元素的内容 (innerHTML)</li>\n <br /> \n</ul> \n<hr /> \n<h2>改变 HTML 属性</h2> \n<p>如需改变 HTML 元素的属性，请使用这个语法： </p> \n<div class=\"code notranslate\"> \n <div>\n   document.getElementById(\n  <i>id</i>).\n  <i>attribute=new value</i> \n </div> \n</div> \n<p>本例改变了 &lt;img&gt; 元素的 src 属性： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;img id=&quot;image&quot; src=&quot;smiley.gif&quot;&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br /> document.getElementById(&quot;image&quot;).src=&quot;landscape.jpg&quot;;\n  <br /> &lt;/script&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_dom_image\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>实例讲解：</p> \n<ul> \n <li>上面的 HTML 文档含有 id=&quot;image&quot; 的 &lt;img&gt; 元素</li> \n <li>我们使用 HTML DOM 来获得 id=&quot;image&quot; 的元素</li> \n <li>JavaScript 更改此元素的属性（把 &quot;smiley.gif&quot; 改为 &quot;landscape.jpg&quot;）</li> \n</ul>', null, 'JavaScript HTML DOM - 改变 HTML|改变 HTML 输出流|实例|改变 HTML 内容|实例|实例|改变 HTML 属性|实例|');
INSERT INTO `schoolcontent` VALUES ('175', '177', '<h1>JavaScript <span class=\"color_h1\">HTML DOM - 改变CSS</span> </h1> \n<hr /> \n<p class=\"intro\">HTML DOM 允许 JavaScript 改变 HTML 元素的样式。</p> \n<hr /> \n<h2>改变 HTML 样式</h2> \n<p>如需改变 HTML 元素的样式，请使用这个语法：</p> \n<div class=\"code notranslate\">\n <div>\n   document.getElementById(\n  <i>id</i>).style.\n  <i>property</i>=\n  <i>new style</i> \n </div>\n</div> \n<p>下面的例子会改变 &lt;p&gt; 元素的样式：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;p id=&quot;p2&quot;&gt;Hello World!&lt;/p&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br /> document.getElementById(&quot;p2&quot;).style.color=&quot;blue&quot;;\n  <br /> &lt;/script&gt;\n  <br />\n  <br /> &lt;p&gt;以上段落通过脚本修改。&lt;/p&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_change_style\">尝试一下 &raquo;</a> \n</div>\n<hr /> \n<h2>使用事件</h2> \n<p>HTML DOM 允许我们通过触发事件来执行代码。</p> \n<p>比如以下事件：</p> \n<ul> \n <li>元素被点击。</li> \n <li>页面加载完成。</li> \n <li>输入框被修改。</li> \n <li>……</li> \n</ul> \n<p>在接下来的章节，你会学到更多关于事件的知识。</p> \n<p>本例改变了 id=&quot;id1&quot; 的 HTML 元素的样式，当用户点击按钮时：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br />&lt;body&gt;\n  <br />\n  <br />&lt;h1 id=&quot;id1&quot;&gt;My Heading 1&lt;/h1&gt;\n  <br /> &lt;button type=&quot;button&quot; \n  <br />onclick=&quot;document.getElementById(\'id1\').style.color=\'red\'&quot;&gt;\n  <br /> Click Me!&lt;/button&gt;\n  <br />\n  <br />&lt;/body&gt;\n  <br />&lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_dom_color2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>更多实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_visibility\">Visibility</a><br /> 如何使元素不可见。您希望元素显示或消失吗？</p>', null, 'JavaScript HTML DOM - 改变CSS|改变 HTML 样式|实例|使用事件|实例|更多实例|');
INSERT INTO `schoolcontent` VALUES ('176', '178', '<script type=\"text/javascript\">function clickMeEvent(obj){if(obj.innerHTML==\"Goodbye\"){obj.style.display=\"none\";}else if(obj.innerHTML==\"Thank You\"){obj.innerHTML=\"Goodbye\";}else if(obj.innerHTML==\"Click Me<br>Click Me Again<br>And Again\"){obj.innerHTML=\"Thank You\";}else if(obj.innerHTML==\"Click Me<br>Click Me Again\"){obj.innerHTML=obj.innerHTML+\"<br>And Again\";}else\r\n{obj.innerHTML=obj.innerHTML+\"<br>Click Me Again\";}}</script> \n<script type=\"text/javascript\">function mDown(obj){obj.style.backgroundColor=\"#1ec5e5\";obj.innerHTML=\"Release Me\"}function mUp(obj){obj.style.backgroundColor=\"#D94A38\";obj.innerHTML=\"Thank You\"}</script> \n<h1>JavaScript <span class=\"color_h1\">HTML DOM 事件</span> </h1> \n<hr /> \n<p class=\"intro\">HTML DOM 使 JavaScript 有能力对 HTML 事件做出反应。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <div style=\"width:100%;height:140px;\"> \n   <div style=\"background-color:#D94A38;width:170px;height:80px;margin:20px;padding-top:20px;color:#ffffff;font-weight:bold;font-size:18px;float:left;text-align:center;\" onmouseover=\"this.innerHTML=\'Thank You\'\" onmouseout=\"this.innerHTML=\'Mouse Over Me\'\">\n    Mouse Over Me\n   </div> \n   <div style=\"background-color:#D94A38;width:170px;height:80px;margin:20px;padding-top:20px;color:#ffffff;font-weight:bold;font-size:18px;float:left;text-align:center;\" onclick=\"clickMeEvent(this)\">\n    Click Me\n   </div> \n  </div> \n </div> \n</div> \n<br />\n<hr /> \n<h2>对事件做出反应</h2> \n<p>我们可以在事件发生时执行 JavaScript，比如当用户在 HTML 元素上点击时。</p> \n<p>如需在用户点击某个元素时执行代码，请向一个 HTML 事件属性添加 JavaScript 代码：</p> \n<div class=\"code\">\n <div>\n   onclick=\n  <i>JavaScript</i> \n </div>\n</div> \n<p>HTML 事件的例子：</p> \n<ul> \n <li>当用户点击鼠标时</li> \n <li>当网页已加载时</li> \n <li>当图像已加载时</li> \n <li>当鼠标移动到元素上时</li> \n <li>当输入字段被改变时</li> \n <li>当提交 HTML 表单时</li> \n <li>当用户触发按键时</li> \n</ul> \n<p>在本例中，当用户在 &lt;h1&gt; 元素上点击时，会改变其内容：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;h1 onclick=&quot;this.innerHTML=\'Ooops!\'&quot;&gt;点击文本!&lt;/h1&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_event_onclick2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>本例从事件处理器调用一个函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script&gt;\n  <br /> function changetext(id)\n  <br /> {\n  <br /> id.innerHTML=&quot;Ooops!&quot;;\n  <br /> }\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;h1 onclick=&quot;changetext(this)&quot;&gt;Click on this text!&lt;/h1&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_event_onclick3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML 事件属性</h2> \n<p>如需向 HTML 元素分配 事件，您可以使用事件属性。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">向 button 元素分配 onclick 事件：</p> \n <div class=\"example_code\">\n   &lt;button \n  <span class=\"marked\">onclick</span>=&quot;\n  <span class=\"marked\">displayDate()</span>&quot;&gt;Try it&lt;/button&gt;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_events1\">尝试一下 &raquo;</a> \n</div> \n<p>在上面的例子中，名为 displayDate 的函数将在按钮被点击时执行。</p> \n<hr /> \n<h2>使用 HTML DOM 来分配事件</h2> \n<p>HTML DOM 允许您使用 JavaScript 来向 HTML 元素分配事件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">向 button 元素分配 onclick 事件：</p> \n <div class=\"example_code\">\n   &lt;script&gt;\n  <br />document.getElementById(&quot;myBtn&quot;).\n  <span class=\"marked\">onclick</span>=function(){\n  <span class=\"marked\">displayDate()</span>};\n  <br /> &lt;/script&gt; \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_events2\">尝试一下 &raquo;</a> \n</div> \n<p>在上面的例子中，名为 displayDate 的函数被分配给 id=myButn&quot; 的 HTML 元素。</p> \n<p>按钮点击时Javascript函数将会被执行。</p> \n<hr /> \n<h2>onload 和 onunload 事件</h2> \n<p>onload 和 onunload 事件会在用户进入或离开页面时被触发。</p> \n<p>onload 事件可用于检测访问者的浏览器类型和浏览器版本，并基于这些信息来加载网页的正确版本。</p> \n<p>onload 和 onunload 事件可用于处理 cookie。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;body \n  <span class=\"marked\">onload</span>=&quot;checkCookies()&quot;&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_events_onload\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>onchange 事件</h2> \n<p>onchange 事件常结合对输入字段的验证来使用。</p> \n<p>下面是一个如何使用 onchange 的例子。当用户改变输入字段的内容时，会调用 upperCase() 函数。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;input type=&quot;text&quot; id=&quot;fname&quot; \n  <span class=\"marked\">onchange</span>=&quot;upperCase()&quot;&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_onchange\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>onmouseover 和 onmouseout 事件</h2> \n<p>onmouseover 和 onmouseout 事件可用于在用户的鼠标移至 HTML 元素上方或移出元素时触发函数。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>一个简单的 onmouseover-onmouseout 实例：</p> \n <div class=\"example_code\"> \n  <div style=\"width:100%;height:140px;\"> \n   <div style=\"background-color:#D94A38;width:170px;height:80px;margin:20px;padding-top:20px;color:#ffffff;font-weight:bold;font-size:18px;float:left;text-align:center;\" onmouseover=\"this.innerHTML=\'Thank You\'\" onmouseout=\"this.innerHTML=\'Mouse Over Me\'\">\n    Mouse Over Me\n   </div> \n  </div> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_events_mouseover\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>onmousedown、onmouseup 以及 onclick 事件</h2> \n<p>onmousedown, onmouseup 以及 onclick 构成了鼠标点击事件的所有部分。首先当点击鼠标按钮时，会触发 onmousedown 事件，当释放鼠标按钮时，会触发 onmouseup 事件，最后，当完成鼠标点击时，会触发 onclick 事件。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>一个简单的 onmousedown-onmouseup 实例：</p> \n <div class=\"example_code\"> \n  <div style=\"width:100%;height:140px;\"> \n   <div onmousedown=\"mDown(this)\" onmouseup=\"mUp(this)\" style=\"background-color: rgb(217, 74, 56); width: 170px; height: 80px; margin: 20px; padding-top: 20px; color: rgb(255, 255, 255); font-weight: bold; font-size: 18px; float: left; text-align: center;\">\n    Thank You\n   </div> \n  </div> \n </div> \n</div> \n<br />\n<hr /> \n<h2>更多实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_event_onmousedown\">onmousedown 和onmouseup</a><br /> 当用户按下鼠标按钮时，更换一幅图像。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_event_onload\">onload</a><br /> 当页面完成加载时，显示一个提示框。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_onfocus\">onfocus</a><br /> 当输入字段获得焦点时，改变其背景色。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=trydhtml_event_onmouse\">鼠标事件</a><br /> 当指针移动到元素上方时，改变其颜色；当指针移出文本后，会再次改变其颜色。</p>', null, 'JavaScript HTML DOM 事件|实例|对事件做出反应|实例|实例|HTML 事件属性|实例|使用 HTML DOM 来分配事件|实例|onload 和 onunload 事件|实例|onchange 事件|实例|onmouseover 和 onmouseout 事件|实例|onmousedown、onmouseup 以及 onclick 事件|实例|更多实例|');
INSERT INTO `schoolcontent` VALUES ('177', '179', '<h1>JavaScript <span class=\"color_h1\">HTML DOM EventListener</span> </h1> \n<hr /> \n<h2> addEventListener() 方法</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>在用户点击按钮时触发监听事件：</p> \n <div class=\"example_code\">\n   document.getElementById(&quot;myBtn&quot;).addEventListener(&quot;click&quot;, displayDate);\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_displaydate\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p> addEventListener() 方法用于向指定元素添加事件句柄。</p> \n<p> addEventListener() 方法添加的事件句柄不会覆盖已存在的事件句柄。</p> \n<p> 你可以向一个元素添加多个事件句柄。</p> \n<p> 你可以向同个元素添加多个同类型的事件句柄，如：两个 &quot;click&quot; 事件。</p> \n<p> 你可以向任何 DOM 对象添加事件监听，不仅仅是 HTML 元素。如： window 对象。</p> \n<p> addEventListener() 方法可以更简单的控制事件（冒泡与捕获）。</p> \n<p> 当你使用 addEventListener() 方法时, JavaScript 从 HTML 标记中分离开来，可读性更强， 在没有控制HTML标记时也可以添加事件监听。</p> \n<p> 你可以使用 removeEventListener() 方法来移除事件的监听。<br /></p> \n<hr /> \n<h2>语法</h2> \n<div class=\"code\">\n <div> \n  <em>element</em>.addEventListener(\n  <em>event, function, useCapture</em>);\n </div>\n</div> \n<p> 第一个参数是事件的类型 (如 &quot;click&quot; 或 &quot;mousedown&quot;). </p> \n<p> 第二个参数是事件触发后调用的函数。 </p> \n<p> 第三个参数是个布尔值用于描述事件是冒泡还是捕获。该参数是可选的。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>注意:不要使用 &quot;on&quot; 前缀。 例如，使用 &quot;click&quot; ,而不是使用 &quot;onclick&quot;。 </td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>向原元素添加事件句柄</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>当用户点击元素时弹出 &quot;Hello World!&quot; :</p> \n <div class=\"example_code\"> \n  <em>element</em>.addEventListener(&quot;click&quot;, function(){ alert(&quot;Hello World!&quot;); });\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_add\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>你可以使用函数名，来引用外部函数:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>当用户点击元素时弹出 &quot;Hello World!&quot; :</p> \n <div class=\"example_code\"> \n  <em>element</em>.addEventListener(&quot;click&quot;, myFunction);\n  <br />\n  <br />function myFunction() {\n  <br />&nbsp;&nbsp;&nbsp; alert (&quot;Hello World!&quot;);\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_add2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>向同一个元素中添加多个事件句柄</h2> \n<p> addEventListener() 方法允许向同个元素添加多个事件，且不会覆盖已存在的事件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <em>element</em>.addEventListener(&quot;click&quot;, myFunction);\n  <br />\n  <em>element</em>.addEventListener(&quot;click&quot;, mySecondFunction);\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_add_many\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>你可以向同个元素添加不同类型的事件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <em>element</em>.addEventListener(&quot;mouseover&quot;, myFunction);\n  <br />\n  <em>element</em>.addEventListener(&quot;click&quot;, mySecondFunction);\n  <br />\n  <em>element</em>.addEventListener(&quot;mouseout&quot;, myThirdFunction);\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_add_many2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>向 Window 对象添加事件句柄</h2> \n<p> addEventListener() 方法允许你在 HTML DOM 对象添加事件监听， HTML DOM 对象如： HTML 元素, HTML 文档, window 对象。或者其他支出的事件对象如: xmlHttpRequest 对象。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p class=\"example\">当用户重置窗口大小时添加事件监听：</p> \n <div class=\"example_code\">\n   window.addEventListener(&quot;resize&quot;, function(){\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;demo&quot;).innerHTML = \n  <em>sometext</em>;\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_dom\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>传递参数</h2> \n<p>当传递参数值时，使用&quot;匿名函数&quot;调用带参数的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <em>element</em>.addEventListener(&quot;click&quot;, function(){ myFunction(p1, p2); });\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_parameters\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>事件冒泡或事件捕获？</h2> \n<p>事件传递有两种方式：冒泡与捕获。</p> \n<p>事件传递定义了元素事件触发的顺序。 如果你将 &lt;p&gt; 元素插入到 &lt;div&gt; 元素中，用户点击 &lt;p&gt; 元素, 哪个元素的 &quot;click&quot; 事件先被触发呢？</p> \n<p>在 <em> 冒泡 </em>中，内部元素的事件会先被触发，然后再触发外部元素，即： &lt;p&gt; 元素的点击事件先触发，然后会触发 &lt;div&gt; 元素的点击事件。</p> \n<p>在 <em> 捕获 </em>中，外部元素的事件会先被触发，然后才会触发内部元素的事件，即： &lt;div&gt; 元素的点击事件先触发 ，然后再触发 &lt;p&gt; 元素的点击事件。</p> \n<p> addEventListener() 方法可以指定 &quot;useCapture&quot; 参数来设置传递类型：</p> \n<div class=\"code\">\n <div>\n   addEventListener(\n  <em>event</em>, \n  <em>function</em>, \n  <span class=\"marked\"><em>useCapture</em></span>);\n </div>\n</div> \n<p>默认值为 false, 即冒泡传递，当值为 true 时, 事件使用捕获传递。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   document.getElementById(&quot;myDiv&quot;).addEventListener(&quot;click&quot;, myFunction, true);\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_usecapture\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2> removeEventListener() 方法</h2> \n<p> removeEventListener() 方法移除由 addEventListener() 方法添加的事件句柄:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\"> \n  <em>element</em>.removeEventListener(&quot;mousemove&quot;, myFunction);\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_remove\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>浏览器支持</h2> \n<p>表格中的数字表示支持该方法的第一个浏览器的版本号。</p> \n<table class=\"browserref\"> \n <tbody>\n  <tr> \n   <th style=\"width:20%;font-size:16px;text-align:left\">方法</th> \n   <th style=\"width:16%\" class=\"bsChrome\" title=\"Chrome\"></th> \n   <th style=\"width:16%\" class=\"bsIE\" title=\"Internet Explorer\"></th> \n   <th style=\"width:16%\" class=\"bsFirefox\" title=\"Firefox\"></th> \n   <th style=\"width:16%\" class=\"bsSafari\" title=\"Safari\"></th> \n   <th style=\"width:16%\" class=\"bsOpera\" title=\"Opera\"></th> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">addEventListener()</td> \n   <td>1.0</td> \n   <td>9.0</td> \n   <td>1.0</td> \n   <td>1.0</td> \n   <td>7.0</td> \n  </tr> \n  <tr> \n   <td style=\"text-align:left\">removeEventListener()</td> \n   <td>1.0</td> \n   <td>9.0</td> \n   <td>1.0</td> \n   <td>1.0</td> \n   <td>7.0</td> \n  </tr> \n </tbody>\n</table> \n<p><strong>注意：</strong> IE 8 及更早 IE 版本，Opera 7.0及其更早版本不支持 addEventListener() 和 removeEventListener() 方法。但是，对于这类浏览器版本可以使用 detachEvent() 方法来移除事件句柄:</p> \n<div class=\"code\">\n <div> \n  <em>element.attachEvent(event, function);<br />element.detachEvent(event, function);</em> \n </div>\n</div> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>跨浏览器解决方法:</p> \n <div class=\"example_code\">\n   var x = document.getElementById(&quot;myBtn&quot;);\n  <br />if (x.addEventListener) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 所有主流浏览器，除了 IE 8 及更早版本\n  <br />&nbsp;&nbsp;&nbsp; x.addEventListener(&quot;click&quot;, myFunction);\n  <br />} else if (x.attachEvent) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // IE 8 及更早版本\n  <br />&nbsp;&nbsp;&nbsp; x.attachEvent(&quot;onclick&quot;, myFunction);\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_addeventlistener_crossbrowser\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>HTML DOM 事件对象参考手册</h2> \n<p>所有 HTML DOM 事件，可以查看我们完整的<a href=\"http://www.runoob.com/jsref/dom-obj-event.html\"> HTML DOM Event 对象参考手册</a>。 </p>', null, 'JavaScript HTML DOM EventListener|addEventListener() 方法|实例|语法|向原元素添加事件句柄|实例|实例|向同一个元素中添加多个事件句柄|实例|实例|向 Window 对象添加事件句柄|实例|传递参数|实例|事件冒泡或事件捕获？|实例|removeEventListener() 方法|实例|浏览器支持|实例|HTML DOM 事件对象参考手册|');
INSERT INTO `schoolcontent` VALUES ('178', '180', '<h1>JavaScript <span class=\"color_h1\">HTML DOM 元素(节点)</span> </h1> \n<hr /> \n<p class=\"intro\">创建新的 HTML 元素</p> \n<hr /> \n<h2>创建新的 HTML 元素</h2>如需向 HTML DOM 添加新元素，您必须首先创建该元素（元素节点），然后向一个已存在的元素追加该元素。 \n<p></p> \n<div class=\"example\"> \n <h2 class=\"example\">&nbsp;实例</h2> \n <div class=\"example_code\">\n   &lt;div id=&quot;div1&quot;&gt;\n  <br /> &lt;p id=&quot;p1&quot;&gt;这是一个段落。&lt;/p&gt;\n  <br /> &lt;p id=&quot;p2&quot;&gt;这是另一个段落。&lt;/p&gt;\n  <br /> &lt;/div&gt;\n  <br />\n  <br />&lt;script&gt;\n  <br /> var para=document.createElement(&quot;p&quot;);\n  <br /> var node=document.createTextNode(&quot;这是一个新段落。&quot;);\n  <br /> para.appendChild(node);\n  <br />\n  <br /> var element=document.getElementById(&quot;div1&quot;);\n  <br /> element.appendChild(para);\n  <br /> &lt;/script&gt;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=try_elementcreate\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>例子解析：&nbsp;</h2> \n<p>这段代码创建新的&lt;p&gt; 元素： </p> \n<div class=\"code notranslate\"> \n <div>\n   var para=document.createElement(&quot;p&quot;);\n </div> \n</div> \n<p>如需向 &lt;p&gt; 元素添加文本，您必须首先创建文本节点。这段代码创建了一个文本节点：</p> \n<div class=\"code\"> \n <div>\n   var node=document.createTextNode(&quot;这是一个新段落。&quot;);\n </div> \n</div> \n<p>然后您必须向 &lt;p&gt; 元素追加这个文本节点：</p> \n<div class=\"code\"> \n <div>\n   para.appendChild(node);\n </div> \n</div> \n<p>最后您必须向一个已有的元素追加这个新元素。 </p> \n<p>这段代码找到一个已有的元素：</p> \n<div class=\"code\"> \n <div>\n   var element=document.getElementById(&quot;div1&quot;);\n </div> \n</div> \n<p>以下代码在已存在的元素后添加新元素：</p> \n<div class=\"code\"> \n <div>\n   element.appendChild(para);\n </div> \n</div> \n<br />\n<hr /> \n<h2>删除已有的 HTML 元素</h2> \n<p>以下代码演示了如何删除元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;div id=&quot;div1&quot;&gt;\n  <br /> &lt;p id=&quot;p1&quot;&gt;这是一个段落。&lt;/p&gt;\n  <br /> &lt;p id=&quot;p2&quot;&gt;这是另一个段落。&lt;/p&gt;\n  <br /> &lt;/div&gt;\n  <p>&lt;script&gt;<br /> var parent=document.getElementById(&quot;div1&quot;);<br /> var child=document.getElementById(&quot;p1&quot;);<br /> parent.removeChild(child);<br /> &lt;/script&gt;</p> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=try_elementremove\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>实例解析&nbsp;</h2> \n<p>这个 HTML 文档含有拥有两个子节点（两个 &lt;p&gt; 元素）的 &lt;div&gt; 元素：</p> \n<div class=\"code notranslate\"> \n <div>\n   &lt;div id=&quot;div1&quot;&gt;\n  <br /> &lt;p id=&quot;p1&quot;&gt;这是一个段落。&lt;/p&gt;\n  <br /> &lt;p id=&quot;p2&quot;&gt;这是另一个段落。&lt;/p&gt;\n  <br /> &lt;/div&gt;\n </div> \n</div> \n<p>找到 id=&quot;div1&quot; 的元素：</p> \n<div class=\"code\"> \n <div>\n   var parent=document.getElementById(&quot;div1&quot;);\n </div> \n</div> \n<p>找到 id=&quot;p1&quot; 的 &lt;p&gt; 元素： </p> \n<div class=\"code notranslate\"> \n <div>\n   var child=document.getElementById(&quot;p1&quot;);\n </div> \n</div> \n<p>从父元素中删除子元素：</p> \n<div class=\"code notranslate\"> \n <div>\n   parent.removeChild(child);\n </div> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td>如果能够在不引用父元素的情况下删除某个元素，就太好了。<br />不过很遗憾。DOM 需要清楚您需要删除的元素，以及它的父元素。</td> \n  </tr>\n </tbody>\n</table> \n<p>这是常用的解决方案：找到您希望删除的子元素，然后使用其 parentNode 属性来找到父元素：</p> \n<div class=\"code notranslate\"> \n <div class=\"auto-style1\">\n   var child=document.getElementById(&quot;p1&quot;);\n  <br />child.parentNode.removeChild(child);\n </div> \n</div> \n<br />\n<hr /> \n<h2>HTML DOM 教程</h2> \n<p>在我们的 JavaScript 教程的 HTML DOM 部分，您已经学到了：</p> \n<ul> \n <li>如何改变 HTML 元素的内容 (innerHTML)</li> \n <li>如何改变 HTML 元素的样式 (CSS)</li> \n <li>如何对 HTML DOM 事件作出反应</li> \n <li>如何添加或删除 HTML 元素</li> \n</ul> \n<p>如果您希望学到更多有关使用 JavaScript 访问 HTML DOM 的知识，请访问我们完整的 <a href=\"http://www.runoob.com/htmldom/htmldom-tutorial.html\" title=\"HTML DOM 教程\">HTML DOM 教程</a>。</p>', null, 'JavaScript HTML DOM 元素(节点)|创建新的 HTML 元素| 实例|例子解析： |删除已有的 HTML 元素|实例|实例解析 |HTML DOM 教程|');
INSERT INTO `schoolcontent` VALUES ('179', '181', '<h1>JavaScript <span class=\"color_h1\">对象</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 中的所有事物都是对象：字符串、数值、数组、函数... </p> \n<p class=\"intro\">此外，JavaScript 允许自定义对象。</p> \n<hr /> \n<h2>所有事物都是对象</h2> \n<p>JavaScript 提供多个内建对象，比如 String、Date、Array 等等。 对象只是带有属性和方法的特殊数据类型。</p> \n<ul> \n <li>布尔型可以是一个对象。</li> \n <li>数字型可以是一个对象。</li> \n <li>字符串也可以是一个对象</li> \n <li>日期是一个对象</li> \n <li>数学和正则表达式也是对象</li> \n <li>数组是一个对象</li> \n <li>甚至函数也可以是对象</li> \n</ul> \n<hr /> \n<h2>JavaScript 对象</h2> \n<p>对象只是一种特殊的数据。对象拥有<strong>属性</strong>和<strong>方法</strong>。</p> \n<hr /> \n<h2>访问对象的属性</h2> \n<p>属性是与对象相关的值。</p> \n<p>访问对象属性的语法是：</p> \n<div class=\"code \">\n <div> \n  <i>objectName.propertyName</i> \n </div>\n</div> \n<p>这个例子使用了 String 对象的 length 属性来获得字符串的长度：</p> \n<div class=\"code notranslate\"> \n <div>\n   var message=&quot;Hello World!&quot;;\n  <br /> var x=message.length;\n </div> \n</div> \n<p>在以上代码执行后，x 的值将是：</p> \n<div class=\"code notranslate\">\n <div>\n   12\n </div>\n</div> \n<br />\n<hr /> \n<h2>访问对象的方法</h2> \n<p>方法是能够在对象上执行的动作。</p> \n<p>您可以通过以下语法来调用方法：</p> \n<div class=\"code notranslate\">\n <div> \n  <i>objectName.methodName()</i> \n </div>\n</div> \n<p>这个例子使用了 String 对象的 toUpperCase() 方法来将文本转换为大写：</p> \n<div class=\"code notranslate\"> \n <div>\n   var message=&quot;Hello world!&quot;;\n  <br /> var x=message.toUpperCase();\n </div> \n</div> \n<p>在以上代码执行后，x 的值将是：</p> \n<div class=\"code notranslate\">\n <div>\n   HELLO WORLD!\n </div>\n</div> \n<br />\n<hr /> \n<h2>创建 JavaScript 对象</h2> \n<p>通过 JavaScript，您能够定义并创建自己的对象。</p> \n<p>创建新对象有两种不同的方法：</p> \n<ul> \n <li>定义并创建对象的实例</li> \n <li>使用函数来定义对象，然后创建新的对象实例</li> \n</ul> \n<hr /> \n<h2>创建直接的实例</h2> \n<p>这个例子创建了对象的一个新实例，并向其添加了四个属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   person=new Object();\n  <br /> person.firstname=&quot;John&quot;;\n  <br /> person.lastname=&quot;Doe&quot;;\n  <br /> person.age=50;\n  <br /> person.eyecolor=&quot;blue&quot;; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_create_object\">尝试一下 &raquo;</a> \n</div> \n<p>替代语法（使用对象 literals）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   person={firstname:&quot;John&quot;,lastname:&quot;Doe&quot;,age:50,eyecolor:&quot;blue&quot;}; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_create_object1\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>使用对象构造器</h2> \n<p>本例使用函数来构造对象：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function person(firstname,lastname,age,eyecolor)\n  <br /> {\n  <br /> this.firstname=firstname;\n  <br /> this.lastname=lastname;\n  <br /> this.age=age;\n  <br /> this.eyecolor=eyecolor;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_create_object2\">尝试一下 &raquo;</a> \n</div> \n<p>在JavaScript中，this通常指向的是我们正在执行的函数本身，或者是指向该函数所属的对象（运行时）</p> \n<hr /> \n<h2>创建 JavaScript 对象实例</h2> \n<p>一旦您有了对象构造器，就可以创建新的对象实例，就像这样：</p> \n<div class=\"code notranslate\">\n <div>\n   var myFather=new person(&quot;John&quot;,&quot;Doe&quot;,50,&quot;blue&quot;);\n  <br /> var myMother=new person(&quot;Sally&quot;,&quot;Rally&quot;,48,&quot;green&quot;);\n </div>\n</div> \n<br />\n<hr /> \n<h2>把属性添加到 JavaScript 对象</h2> \n<p>您可以通过为对象赋值，向已有对象添加新属性：</p> \n<p>假设 personObj 已存在 - 您可以为其添加这些新属性：firstname、lastname、age 以及 eyecolor：</p> \n<div class=\"code notranslate\">\n <div>\n   person.firstname=&quot;John&quot;;\n  <br /> person.lastname=&quot;Doe&quot;;\n  <br /> person.age=30;\n  <br /> person.eyecolor=&quot;blue&quot;;\n  <br />\n  <br /> x=person.firstname;\n </div>\n</div> \n<p>T在以上代码执行后，x 的值将是：</p> \n<div class=\"code notranslate\">\n <div>\n   John\n </div>\n</div> \n<br />\n<hr /> \n<h2>把方法添加到 JavaScript 对象</h2> \n<p>方法只不过是附加在对象上的函数。</p> \n<p>在构造器函数内部定义对象的方法：</p> \n<div class=\"code notranslate\">\n <div>\n   function person(firstname,lastname,age,eyecolor)\n  <br /> {\n  <br /> this.firstname=firstname;\n  <br /> this.lastname=lastname;\n  <br /> this.age=age;\n  <br /> this.eyecolor=eyecolor;\n  <br />\n  <br /> this.changeName=changeName;\n  <br /> function changeName(name)\n  <br /> {\n  <br /> this.lastname=name;\n  <br /> }\n  <br /> }\n </div>\n</div> \n<p>changeName() 函数 name 的值赋给 person 的 lastname 属性。 </p> \n<div class=\"example\"> \n <h2 class=\"example\">现在您可以试一下：</h2> \n <div class=\"example_code notranslate\">\n   myMother.changeName(&quot;Doe&quot;);\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_create_object3\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>JavaScript 类</h2> \n<p>JavaScript 是面向对象的语言，但 JavaScript 不使用类。</p> \n<p>在 JavaScript 中，不会创建类，也不会通过类来创建对象（就像在其他面向对象的语言中那样）。</p> \n<p>JavaScript 基于 prototype，而不是基于类的。</p> \n<hr /> \n<h2>JavaScript for...in 循环</h2> \n<p>JavaScript for...in 语句循环遍历对象的属性。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   for (\n  <i>variable</i> in \n  <i>object</i>)\n  <br /> &nbsp; {\n  <br /> \n  <i>&nbsp; code to be executed</i>\n  <br /> &nbsp; }\n </div>\n</div> \n<p><b>注意： </b>for...in 循环中的代码块将针对每个属性执行一次。</p> \n<h3>实例</h3> \n<p>循环遍历对象的属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var person={fname:&quot;John&quot;,lname:&quot;Doe&quot;,age:25}; \n  <br /> \n  <br /> for (x in person)\n  <br /> &nbsp; {\n  <br /> &nbsp; txt=txt + person[x];\n  <br /> &nbsp; }\n </div> \n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_object_for_in\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript 对象|所有事物都是对象|JavaScript 对象|访问对象的属性|访问对象的方法|创建 JavaScript 对象|创建直接的实例|实例|实例|使用对象构造器|实例|创建 JavaScript 对象实例|把属性添加到 JavaScript 对象|把方法添加到 JavaScript 对象|现在您可以试一下：|JavaScript 类|JavaScript for...in 循环|实例|');
INSERT INTO `schoolcontent` VALUES ('180', '182', '<h1>JavaScript <span class=\"color_h1\">Number</span> 对象</h1> \n<hr /> \n<p class=\"intro\">JavaScript 只有一种数字类型。</p> \n<p class=\"intro\"> 可以使用也可以不使用小数点来书写数字。</p> \n<hr /> \n<h2>JavaScript 数字</h2> \n<p>JavaScript 数字可以使用也可以不使用小数点来书写：<br /></p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var pi=3.14;&nbsp;&nbsp;&nbsp; // 使用小数点\n  <br /> var x=34;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 不使用小数点\n </div> \n</div> \n<p>极大或极小的数字可通过科学（指数）计数法来写：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var y=123e5;&nbsp;&nbsp;&nbsp; // 12300000\n  <br /> var z=123e-5;&nbsp;&nbsp; // 0.00123\n </div> \n</div> \n<br />\n<hr /> \n<h2>所有 JavaScript 数字均为 64 位</h2> \n<p>JavaScript 不是类型语言。与许多其他编程语言不同，JavaScript 不定义不同类型的数字，比如整数、短、长、浮点等等。</p> \n<p>在JavaScript中，数字不分为整数类型和浮点型类型，所有的数字都是由 浮点型类型。JavaScript采用IEEE754标准定义的64位浮点格式表示数字，它能表示最大值为&plusmn;1.7976931348623157 x 10308，最小值为&plusmn;5 x 10 -324 </p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>值 (aka Fraction/Mantissa)</th> \n   <th>指数</th> \n   <th>Sign</th> \n  </tr> \n  <tr> \n   <td>52 bits (0 - 51)&nbsp;</td> \n   <td>11 bits (50 - 62)</td> \n   <td>1 bit (63)</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>精度</h2> \n<p>整数（不使用小数点或指数计数法）最多为 15 位。</p> \n<p>小数的最大位数是 17，但是浮点运算并不总是 100% 准确：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x = 0.2+0.1; // result will be 0.30000000000000004\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_inaccurate\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>八进制和十六进制</h2> \n<p>如果前缀为 0，则 JavaScript 会把数值常量解释为八进制数，如果前缀为 0 和 &quot;x&quot;，则解释为十六进制数。 </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var y = 0377; \n  <br /> var z = 0xFF;\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_octal_hex\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> 绝不要在数字前面写零，除非您需要进行八进制转换。&nbsp; </td> \n  </tr>\n </tbody>\n</table> \n<p> 默认情况下，JavaScript 数字为十进制显示。</p> \n<p>但是你可以使用 toString() 方法 输出16进制、8进制、2进制。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var myNumber=128;\n  <br />myNumber.toString(16);&nbsp;&nbsp; // returns 80\n  <br /> myNumber.toString(8);&nbsp;&nbsp;&nbsp; // returns 200\n  <br /> myNumber.toString(2);&nbsp;&nbsp;&nbsp; // returns 10000000\n  <br /> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_tostring\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>无穷大（Infinity）</h2> \n<p>当数字运算结果超过了JavaScript所能表示的数字上限（溢出），结果为一个特殊的无穷大（infinity）值，在JavaScript中以Infinity表示。同样地，当负数的值超过了JavaScript所能表示的负数范围，结果为负无穷大，在JavaScript中以-Infinity表示。无穷大值的行为特性和我们所期望的是一致的：基于它们的加、减、乘和除运算结果还是无穷大（当然还保留它们的正负号）。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   myNumber=2;\n  <br />while (myNumber!=Infinity)\n  <br />{\n  <br /> myNumber=myNumber*myNumber; // Calculate until Infinity\n  <br />} \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_infinity\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>除以0也产生了无限:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x = 2/0;\n  <br />var y = -2/0; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_infinity_zero\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>NaN - 非数字值</h2> \n<p>NaN 属性是代表非数字值的特殊值。该属性用于指示某个值不是数字。可以把 Number 对象设置为该值，来指示其不是数字值。</p> \n<p>你可以使用 isNaN() 全局函数来判断一个值是否是 NaN 值。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x = 1000 / &quot;Apple&quot;;\n  <br />isNaN(x); // returns true\n  <br />var y = 100 / &quot;1000&quot;;\n  <br />isNaN(y); // returns false\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_isnan_false\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>除以0是无穷大，无穷大是一个数字:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x = 1000 / 0;\n  <br />isNaN(x); // returns false\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_isnan_true\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>数字可以是数字或者对象</h2> \n<p>数字可以私有数据进行初始化，就像 x = 123;</p> \n<p>JavaScript 数字对象初始化数据， var y = new Number(123);</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x = 123;\n  <br />var y = new Number(123);\n  <br />typeof(x) // returns Number\n  <br /> typeof(y) // returns Object\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_object_number_type\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var x = 123;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <br />var y = new Number(123);\n  <br />(x === y) // is false because x is a number and y is an object.\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_object_number\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>数字属性</h2> \n<ul> \n <li>MAX_VALUE</li> \n <li>MIN_VALUE</li> \n <li>NEGATIVE_INFINITY</li> \n <li>POSITIVE_INFINITY</li> \n <li>NaN</li> \n <li>prototype</li> \n <li>constructor</li> \n</ul> \n<hr /> \n<h2>数字方法</h2> \n<ul> \n <li>toExponential()</li> \n <li>toFixed()</li> \n <li>toPrecision()</li> \n <li>toString()</li> \n <li>valueOf()</li> \n</ul>', null, 'JavaScript Number 对象|JavaScript 数字|实例|实例|所有 JavaScript 数字均为 64 位|精度|实例|八进制和十六进制|实例|实例|无穷大（Infinity）|实例|实例|NaN - 非数字值|实例|实例|数字可以是数字或者对象|实例|实例|数字属性|数字方法|');
INSERT INTO `schoolcontent` VALUES ('181', '183', '<h1>JavaScript <span class=\"color_h1\">字符串（String）</span> 对象</h1> \n<hr /> \n<p class=\"intro\">String 对象用于处理已有的字符块。</p> \n<hr /> \n<h2>JavaScript 字符串</h2> \n<p>一个字符串用于存储一系列字符就像 &quot;John Doe&quot;.</p> \n<p>一个字符串可以使用单引号或双引号：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code \">\n   var carname=&quot;Volvo XC60&quot;;\n  <br /> var carname=\'Volvo XC60\';\n </div> \n</div> \n<p>你使用位置（索引）可以访问字符串中任何的字符：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var character=carname[7];\n </div> \n</div> \n<p>字符串的索引从零开始, 所以字符串第一字符为 [0],第二个字符为 [1], 等等。</p> \n<p>你可以在字符串中使用引号，如下实例：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var answer=&quot;It\'s alright&quot;;\n  <br /> var answer=&quot;He is called \'Johnny\'&quot;;\n  <br /> var answer=\'He is called &quot;Johnny&quot;\';\n </div> \n</div> \n<p>或者你可以在字符串中使用转义字符使用引号：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var answer=\'It\'s alright\';\n  <br /> var answer=&quot;He is called &quot;Johnny&quot;&quot;;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_datatypes_string\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>字符串（String）</h2> \n<p>字符串（String）使用长度属性<strong>length</strong>来计算字符串的长度：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var txt=&quot;Hello World!&quot;;\n  <br />document.write(txt.length);\n  <br />\n  <br />var txt=&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;\n  <br />document.write(txt.length);\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_string_length\">尝试一下 &raquo;</a> \n</div> \n<hr /> \n<h2>在字符串中查找字符串</h2> \n<p>字符串使用 indexOf() 来定位字符串中某一个指定的字符首次出现的位置：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var str=&quot;Hello world, welcome to the universe.&quot;;\n  <br />var n=str.indexOf(&quot;welcome&quot;);\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_string_indexof\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<p>如果没找到对应的字符函数返回-1</p> \n<p> lastIndexOf() 方法在字符串末尾开始查找字符串出现的位置。</p> \n<hr /> \n<h2>内容匹配</h2> \n<p><strong>match()</strong>函数用来查找字符串中特定的字符，并且如果找到的话，则返回这个字符。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var str=&quot;Hello world!&quot;;\n  <br />document.write(str.match(&quot;world&quot;) + &quot;&lt;br&gt;&quot;);\n  <br /> document.write(str.match(&quot;World&quot;) + &quot;&lt;br&gt;&quot;);\n  <br />document.write(str.match(&quot;world!&quot;));\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_string_match\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>替换内容</h2> \n<p><strong>replace()</strong> 方法在字符串中用某些字符替换另一些字符。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   str=&quot;Please visit Microsoft!&quot;\n  <br />var n=str.replace(&quot;Microsoft&quot;,&quot;w3cschool&quot;);\n  <br /> \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_string_replace\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>字符串大小写转换</h2> \n<p>字符串大小写转换使用函数 <strong>toUpperCase() </strong> /<strong> toLowerCase()</strong>:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var txt=&quot;Hello World!&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // String\n  <br /> var txt1=txt.toUpperCase();&nbsp;&nbsp; // txt1 is txt converted to upper\n  <br /> var txt2=txt.toLowerCase();&nbsp;&nbsp; // txt2 is txt converted to lower\n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_string_toupper\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>字符串转为数组</h2> \n<p>字符串使用strong&gt;split()函数转为数组:</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   txt=&quot;a,b,c,d,e&quot;&nbsp;&nbsp; // String\n  <br /> txt.split(&quot;,&quot;);&nbsp;&nbsp; // Split on commas\n  <br />txt.split(&quot; &quot;);&nbsp;&nbsp; // Split on spaces\n  <br />txt.split(&quot;|&quot;);&nbsp;&nbsp; // Split on pipe&nbsp; \n </div> \n <br />\n <a class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_string_split\" target=\"_blank\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>特殊字符</h2> \n<p>Javascript 中可以使用反斜线（\\）插入特殊符号，如：撇号,引号等其他特殊符号。</p> \n<p>查看如下 JavaScript 代码:</p> \n<div class=\"code notranslate\">\n <div>\n   var txt=&quot;We are the so-called &quot;Vikings&quot; from the north.&quot;;\n  <br /> document.write(txt);\n </div>\n</div> \n<p>在JavaScript中，字符串的开始和停止使用单引号或双引号。这意味着，上面的字符串将被切成： We are the so-called</p> \n<p>解决以上的问题可以使用反斜线来转义引号：</p> \n<div class=\"code\">\n <div>\n   var txt=&quot;We are the so-called \\&quot;Vikings\\&quot; from the north.&quot;;\n  <br /> document.write(txt);\n </div>\n</div> \n<p>JavaScript将输出正确的文本字符串：We are the so-called &quot;Vikings&quot; from the north.</p> \n<p>下表列出其他特殊字符，可以使用反斜线转义特殊字符：</p> \n<table class=\"reference \"> \n <tbody>\n  <tr> \n   <th align=\"left\">代码</th> \n   <th align=\"left\">输出</th> \n  </tr> \n  <tr> \n   <td>\\\'</td> \n   <td>单引号</td> \n  </tr> \n  <tr> \n   <td>\\&quot;</td> \n   <td>双引号</td> \n  </tr> \n  <tr> \n   <td>\\\\</td> \n   <td>斜杆</td> \n  </tr> \n  <tr> \n   <td>\\n</td> \n   <td>换行</td> \n  </tr> \n  <tr> \n   <td>\\r</td> \n   <td>回车</td> \n  </tr> \n  <tr> \n   <td>\\t</td> \n   <td>tab</td> \n  </tr> \n  <tr> \n   <td>\\b</td> \n   <td>空格</td> \n  </tr> \n  <tr> \n   <td>\\f</td> \n   <td>换页</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>字符串属性和方法</h2> \n<p>属性:</p> \n<ul> \n <li>length</li> \n <li>prototype</li> \n <li>constructor</li> \n</ul> \n<p>方法:</p> \n<ul> \n <li>charAt()</li> \n <li>charCodeAt()</li> \n <li>concat()</li> \n <li>fromCharCode()</li> \n <li>indexOf()</li> \n <li>lastIndexOf()</li> \n <li>match()</li> \n <li>replace()</li> \n <li>search()</li> \n <li>slice()</li> \n <li>split()</li> \n <li>substr()</li> \n <li>substring()</li> \n <li>toLowerCase()</li> \n <li>toUpperCase()</li> \n <li>valueOf()</li> \n</ul>', null, 'JavaScript 字符串（String） 对象|JavaScript 字符串|实例|实例|实例|实例|字符串（String）|实例|在字符串中查找字符串|实例|内容匹配|实例|替换内容|实例|字符串大小写转换|实例|字符串转为数组|实例|特殊字符|字符串属性和方法|');
INSERT INTO `schoolcontent` VALUES ('182', '184', '<h1>JavaScript <span class=\"color_h1\">Date（日期）</span> 对象</h1> \n<hr /> \n<p class=\"intro\">日期对象用于处理日期和时间。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_date\" 返回当日的日期和时间<=\"\"><br /> 如何使用 Date() 方法获得当日的日期。</a></p>\n<a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_date\" 返回当日的日期和时间<=\"\"> </a>\n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_date\" 返回当日的日期和时间<=\"\"></a><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_getfullyear\">getFullYear()</a><br /> 使用 getFullYear() 获取年份。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_gettime\">getTime()</a><br /> getTime() 返回从 1970 年 1 月 1 日至今的毫秒数。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_setfullyear2\">setFullYear()</a><br /> 如何使用 setFullYear() 设置具体的日期。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_toutcstring\">toUTCString()</a><br /> 如何使用 toUTCString() 将当日的日期（根据 UTC）转换为字符串。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_date_weekday\">getDay()</a><br /> 如何使用 getDay() 和数组来显示星期，而不仅仅是数字。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing_clock\">Display a clock</a><br /> 如何在网页上显示一个钟表。</p> \n<hr /> \n<h2>完整的 Date 对象参考手册</h2> \n<p>我们提供 JavaScript Date 对象参考手册，其中包括所有可用于日期对象的属性和方法。<a href=\"jsref-obj-date.html\">JavaScript Date 对象参考手册</a>。</p> \n<p>该手册包含了对每个属性和方法的详细描述以及相关实例。</p> \n<hr /> \n<h2>创建日期</h2> \n<p>Date 对象用于处理日期和时间。&nbsp;</p> \n<p>可以通过 new 关键词来定义 Date 对象。以下代码定义了名为 myDate 的 Date 对象：</p> \n<p>有四种方式初始化日期:</p> \n<div class=\"code notranslate\">\n <div>\n   new Date() // 当前日期和时间\n  <br /> new Date(milliseconds) //返回从 1970 年 1 月 1 日至今的毫秒数\n  <br /> new Date(dateString)\n  <br /> new Date(year, month, day, hours, minutes, seconds, milliseconds)\n </div>\n</div> \n<p>上面的参数大多数都是可选的，在不指定的情况下，默认参数是0。</p> \n<p从 1970=\"\" 年=\"\" 1=\"\" 月=\"\" 日通用一天计算为86,400,000毫秒<=\"\"> \n <p>实例化一个日期的一些例子：</p> \n <div class=\"code notranslate\">\n  <div>\n    var today = new Date()\n   <br /> var d1 = new Date(&quot;October 13, 1975 11:13:00&quot;)\n   <br /> var d2 = new Date(79,5,24)\n   <br /> var d3 = new Date(79,5,24,11,33,0)\n  </div>\n </div> \n <br />\n <hr /> \n <h2>设置日期</h2> \n <p>通过使用针对日期对象的方法，我们可以很容易地对日期进行操作。</p> \n <p>在下面的例子中，我们为日期对象设置了一个特定的日期 (2010 年 1 月 14 日)：</p> \n <div class=\"code notranslate\">\n  <div>\n    var myDate=new Date();\n   <br /> myDate.setFullYear(2010,0,14);\n  </div>\n </div> \n <p>在下面的例子中，我们将日期对象设置为 5 天后的日期：</p> \n <div class=\"code notranslate\">\n  <div>\n    var myDate=new Date();\n   <br /> myDate.setDate(myDate.getDate()+5);\n  </div>\n </div> \n <p><b>注意:</b> 如果增加天数会改变月份或者年份，那么日期对象会自动完成这种转换。</p> \n <hr /> \n <h2>两个日期比较</h2> \n <p>日期对象也可用于比较两个日期。</p> \n <p>下面的代码将当前日期与 2100 年 1 月 14 日做了比较：</p> \n <div class=\"code\">\n  <div>\n    var x=new Date();\n   <br /> x.setFullYear(2100,0,14);\n   <br />var today = new Date();\n   <br />\n   <br /> if (x&gt;today)\n   <br /> &nbsp; {\n   <br /> &nbsp; alert(&quot;Today is before 14th January 2100&quot;);\n   <br /> &nbsp; }\n   <br /> else\n   <br /> &nbsp; {\n   <br /> &nbsp; alert(&quot;Today is after 14th January 2100&quot;);\n   <br /> &nbsp; }\n  </div>\n </div> \n</p从>', null, 'JavaScript Date（日期） 对象|在线实例|完整的 Date 对象参考手册|创建日期|设置日期|两个日期比较|');
INSERT INTO `schoolcontent` VALUES ('183', '185', '<h1>JavaScript <span class=\"color_h1\">Array（数组）</span> 对象</h1> \n<hr /> \n<p class=\"intro\">数组对象的作用是：使用单独的变量名来存储一系列的值。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p>创建数组, 为其赋值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var mycars = new Array();\n  <br /> mycars[0] = &quot;Saab&quot;;\n  <br /> mycars[1] = &quot;Volvo&quot;;\n  <br /> mycars[2] = &quot;BMW&quot;;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_array\">尝试一下 &raquo;</a> \n</div> \n<p>页面底部你可以找到更多的实例。</p> \n<hr /> \n<h2>什么是数组?</h2> \n<p>数组对象是使用单独的变量名来存储一系列的值。</p> \n<p>如果你有一组数据（例如：车名字），存在单独变量如下所示：</p> \n<div class=\"code notranslate\">\n <div>\n   var car1=&quot;Saab&quot;;\n  <br /> var car2=&quot;Volvo&quot;;\n  <br /> var car3=&quot;BMW&quot;; \n </div>\n</div> \n<p>然而，如果你想从中找出某一辆车？并且不是3辆，而是300辆呢？这将不是一件容易的事！</p> \n<p>最好的方法就是用数组。</p> \n<p>数组可以用一个变量名存储所有的值，并且可以用变量名访问任何一个值。</p> \n<p>数组中的每个元素都有自己的的ID，以便它可以很容易地被访问到。</p> \n<hr /> \n<h2>创建一个数组</h2> \n<p>创建一个数组，有三种方法。 </p> \n<p>下面的代码定义了一个名为 myCars的数组对象：</p> \n<p>1: 常规方式:</p> \n<div class=\"code notranslate\">\n <div>\n   var myCars=new Array(); \n  <br /> myCars[0]=&quot;Saab&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <br /> myCars[1]=&quot;Volvo&quot;;\n  <br /> myCars[2]=&quot;BMW&quot;;\n </div>\n</div> \n<p>2: 简洁方式:</p> \n<div class=\"code notranslate\">\n <div>\n   var myCars=new Array(&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;);\n </div>\n</div> \n<p>3: 字面:</p> \n<div class=\"code notranslate\">\n <div>\n   var myCars=[&quot;Saab&quot;,&quot;Volvo&quot;,&quot;BMW&quot;];\n </div>\n</div> \n<br />\n<hr /> \n<h2>访问数组</h2> \n<p>通过指定数组名以及索引号码，你可以访问某个特定的元素。</p> \n<p>以下实例可以访问myCars数组的第一个值：</p> \n<div class=\"code notranslate\"> \n <div>\n   var name=myCars[0];\n </div> \n</div> \n<p>以下实例修改了数组 myCars 的第一个元素:</p> \n<div class=\"code notranslate\">\n <div>\n   myCars[0]=&quot;Opel&quot;;\n </div>\n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> [0] 是数组的第一个元素。[1] 是数组的第二个元素。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>在一个数组中你可以有不同的对象</h2> \n<p>所有的JavaScript变量都是对象。数组元素是对象。函数是对象。</p> \n<p>因此，你可以在数组中有不同的变量类型。</p> \n<p>你可以在一个数组中包含对象元素、函数、数组：</p> \n<div class=\"code\"> \n <div>\n   myArray[0]=Date.now;\n  <br /> myArray[1]=myFunction;\n  <br /> myArray[2]=myCars;\n </div> \n</div> \n<br />\n<hr /> \n<h2>数组方法和属性</h2> \n<p>使用数组对象预定义属性和方法：</p> \n<div class=\"code notranslate\"> \n <div>\n   var x=myCars.length&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // the number of elements in myCars\n  <br /> var y=myCars.indexOf(&quot;Volvo&quot;)&nbsp;&nbsp; // the index position of &quot;Volvo&quot;\n </div> \n</div> \n<br />\n<hr /> \n<h2>完整的数组对象参考手册</h2> \n<p>你可以参考本站关于数组的所有属性和方法的完整参考手册。</p> \n<p>参考手册包含了所有属性和方法的描述（和更多的例子）。</p> \n<p><a href=\"jsref-obj-array.html\">完整数组对象参考手册</a></p> \n<hr /> \n<h2>创建新方法</h2> \n<p>原型是JavaScript全局构造函数。它可以构建新Javascript对象的属性和方法。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例：创建一个新的方法。</h2> \n <div class=\"example_code notranslate\">\n   Array.prototype.ucase=function()\n  <br /> {\n  <br /> &nbsp; for (i=0;i&lt;this.length;i++)\n  <br /> &nbsp; {this[i]=this[i].toUpperCase();}\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_prototype_array\">尝试一下 &raquo;</a> \n</div> \n<p>上面的例子创建了新的数组方法用于将数组小写字符转为大写字符。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_concat\">合并两个数组 - concat()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_concat2\">合并三个数组 - concat()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_join\">用数组的元素组成字符串 - join()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_pop\">删除数组的最后一个元素 - pop()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_push\">数组的末尾添加新的元素 - push()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_reverse\">将一个数组中的元素的顺序反转排序 - reverse()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_shift\">删除数组的第一个元素 - shift()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_slice_array\">从一个数组中选择元素 - slice()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_sort\">数组排序（按字母顺序升序）- sort()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_sort2\">数字排序（按数字顺序升序）- sort()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_sort3\">数字排序（按数字顺序降序）- sort()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_splice\">在数组的第2位置添加一个元素 - splice()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_tostring_array\">转换数组到字符串 -toString()</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_unshift\">在数组的开头添加新元素 - unshift()</a></p>', null, 'JavaScript Array（数组） 对象|在线实例|实例|什么是数组?|创建一个数组|访问数组|在一个数组中你可以有不同的对象|数组方法和属性|完整的数组对象参考手册|创建新方法|实例：创建一个新的方法。|更多实例|');
INSERT INTO `schoolcontent` VALUES ('184', '186', '<h1>JavaScript <span class=\"color_h1\">Boolean（布尔）</span> 对象</h1> \n<hr /> \n<p class=\"intro\">TBoolean（布尔）对象用于将非布尔值转换为布尔值（true 或者 false）。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_boolean\">检查布尔值</a><br /> 检查布尔对象是 true 还是 false。</p> \n<hr /> \n<h2>完整的 Boolean（布尔） 对象参考手册</h2> \n<p>我们提供 <a href=\"http://www.runoob.com/jsref/jsref-obj-boolean.html\">JavaScript Boolean 对象参考手册</a>，其中包括所有可用于布尔对象的属性和方法。</p> \n<p>该手册包含了对每个属性和方法的详细描述以及相关实例。</p> \n<hr /> \n<h2>创建 Boolean 对象</h2> \n<p>Boolean 对象代表两个值:&quot;true&quot; 或者 &quot;false&quot;</p> \n<p>下面的代码定义了一个名为 myBoolean 的布尔对象：</p> \n<div class=\"code notranslate\">\n <div>\n   var myBoolean=new Boolean();\n </div>\n</div> \n<p>如果布尔对象无初始值或者其值为:</p> \n<ul> \n <li>0</li> \n <li>-0</li> \n <li>null</li> \n <li>&quot;&quot;</li> \n <li>false</li> \n <li>undefined</li> \n <li>NaN </li> \n</ul> \n<p>那么对象的值为 false。否则，其值为 true（即使当自变量为字符串 &quot;false&quot; 时）！</p>', null, 'JavaScript Boolean（布尔） 对象|在线实例|完整的 Boolean（布尔） 对象参考手册|创建 Boolean 对象|');
INSERT INTO `schoolcontent` VALUES ('185', '187', '<h1>JavaScript <span class=\"color_h1\">Math（算数）</span> 对象</h1> \n<hr /> \n<p class=\"intro\">Math（算数）对象的作用是：执行常见的算数任务。</p> \n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>在线实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_round\">round()</a><br /> 如何使用 round()。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_random\">random()</a><br /> 如何使用 random() 来返回 0 到 1 之间的随机数。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_max\">max()</a><br /> 如何使用 max() 来返回两个给定的数中的较大的数。（在 ECMASCript v3 之前，该方法只有两个参数。）</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_min\">min()</a><br /> 如何使用 min() 来返回两个给定的数中的较小的数。（在 ECMASCript v3 之前，该方法只有两个参数。）</p> \n<hr /> \n<h2>完整的 Math 对象参考手册</h2> \n<p>我们提供 <a href=\"http://www.runoob.com/jsref/jsref-obj-math.html\">JavaScript Math 对象的参考手册</a>，其中包括所有可用于算术对象的属性和方法。</p> \n<p>该手册包含了对每个属性和方法的详细描述以及相关实例。</p> \n<hr /> \n<h2>Math 对象</h2> \n<p>Math（算数）对象的作用是：执行普通的算数任务。 </p> \n<p>Math 对象提供多种算数值类型和函数。无需在使用这个对象之前对它进行定义。</p> \n<p><b>使用Math的属性/方法的语法：</b></p> \n<div class=\"code\">\n <div>\n   var x=Math.PI;\n  <br /> var y=Math.sqrt(16);\n </div>\n</div> \n<p><b>注意：</b> Math对象无需在使用这个对象之前对它进行定义。</p> \n<hr /> \n<h2>算数值</h2> \n<p>JavaScript 提供 8 种可被 Math 对象访问的算数值：</p> \n<p>你可以参考如下Javascript常量使用方法：</p> \n<div class=\"code\">\n <div>\n   Math.E\n  <br /> Math.PI\n  <br /> Math.SQRT2\n  <br /> Math.SQRT1_2\n  <br /> Math.LN2\n  <br /> Math.LN10\n  <br /> Math.LOG2E\n  <br /> Math.LOG10E\n </div>\n</div> \n<br />\n<hr /> \n<h2>算数方法</h2> \n<p>除了可被 Math 对象访问的算数值以外，还有几个函数（方法）可以使用。</p> \n<p>下面的例子使用了 Math 对象的 round 方法对一个数进行四舍五入。</p> \n<div class=\"code\">\n <div>\n   document.write(Math.round(4.7));\n </div>\n</div> \n<p>上面的代码输出为：</p> \n<div class=\"code\">\n <div>\n   5\n </div>\n</div> \n<p>下面的例子使用了 Math 对象的 random() 方法来返回一个介于 0 和 1 之间的随机数：</p> \n<div class=\"code\">\n <div>\n   document.write(Math.random());\n </div>\n</div> \n<p>上面的代码输出为：</p> \n<div class=\"code\">\n <div> \n  <script>\r\ndocument.write(Math.random())\r\n</script> \n </div>\n</div> \n<p>下面的例子使用了 Math 对象的 floor() 方法和 random() 来返回一个介于 0 和 11 之间的随机数：</p> \n<div class=\"code\">\n <div>\n   document.write(Math.floor(Math.random()*11));\n </div>\n</div> \n<p>上面的代码输出为：</p> \n<div class=\"code\">\n <div> \n  <script>\r\n  document.write(Math.floor(Math.random()*11))\r\n</script> \n </div>\n</div>', null, 'JavaScript Math（算数） 对象|在线实例|完整的 Math 对象参考手册|Math 对象|算数值|算数方法|');
INSERT INTO `schoolcontent` VALUES ('186', '188', '<h1>JavaScript <span class=\"color_h1\">RegExp</span> 对象</h1> \n<hr /> \n<p class=\"intro\">RegExp：是正则表达式（regular expression）的简写。 </p> \n<hr /> \n<h2>完整 RegExp 对象参考手册</h2> \n<p> 请查看我们的 <a href=\"http://www.runoob.com/jsref/jsref-obj-regexp.html\">JavaScript RegExp 对象的参考手册</a>，其中提供了可以与字符串对象一同使用的所有的属性和方法。</p> \n<p>这个手册包含的关于每个属性和方法的用法的详细描述和实例。</p> \n<hr /> \n<h2>什么是 RegExp？</h2> \n<p>正则表达式描述了字符的模式对象。</p> \n<p>当您检索某个文本时，可以使用一种模式来描述要检索的内容。RegExp 就是这种模式。</p> \n<p>简单的模式可以是一个单独的字符。</p> \n<p>更复杂的模式包括了更多的字符，并可用于解析、格式检查、替换等等。</p> \n<p>您可以规定字符串中的检索位置，以及要检索的字符类型，等等。</p> \n<h2>语法</h2> \n<div class=\"code notranslate\">\n <div>\n   var patt=new RegExp(pattern,modifiers);\n  <br />\n  <br /> 或更简单的方法\n  <br />\n  <br /> var patt=/pattern/modifiers; \n </div>\n</div> \n<ul> \n <li>模式描述了一个表达式模型。</li> \n <li>修饰符(modifiers)描述了检索是否是全局，区分大小写等。</li> \n</ul> \n<blockquote> \n <p><strong>注意：</strong>当使用构造函数创造正则对象时，需要常规的字符转义规则（在前面加反斜杠 \\）。比如，以下是等价的： </p> \n <pre>\r\nvar re = new RegExp(&quot;\\\\w+&quot;);\r\nvar re = /\\w+/;\r\n</pre> \n</blockquote> \n<hr /> \n<h2>RegExp 修饰符</h2> \n<p>修饰符用于执行不区分大小写和全文的搜索。</p> \n<p><strong>i</strong> - 修饰符是用来执行不区分大小写的匹配。</p> \n<p><strong>g</strong> - 修饰符是用于执行全文的搜索（而不是在找到第一个就停止查找,而是找到所有的匹配）。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例 1</h2> \n <p>在字符串中不区分大小写找&quot;W3CSchool&quot;</p> \n <div class=\"example_code notranslate\">\n   var str=&quot;Visit W3CSchool&quot;;\n  <br /> var patt1=/w3cschool/i; \n </div> \n <p>以下<span class=\"marked\">标记</span>的文本是获得的匹配的表达式：</p> \n <div class=\"example_code \">\n   Visit \n  <span class=\"marked\">W3CSchool</span> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_regexp_i\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例 2</h2> \n <p>全文查找 &quot;is&quot;</p> \n <div class=\"example_code notranslate\">\n   var str=&quot;Is this all there is?&quot;;\n  <br /> var patt1=/is/g;\n </div> \n <p>以下<span class=\"marked\">标记</span>的文本是获得的匹配的表达式：</p> \n <div class=\"example_code notranslate\">\n   Is th\n  <span class=\"marked\">is</span> all there \n  <span class=\"marked\">is</span>? \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_regexp_g\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">实例 3</h2> \n <p>全文查找和不区分大小写搜索 &quot;is&quot;</p> \n <div class=\"example_code notranslate\">\n   var str=&quot;Is this all there is?&quot;;\n  <br /> var patt1=/is/gi;\n </div> \n <p>以下 <span class=\"marked\">标记</span>的文本是获得的匹配的表达式： </p> \n <div class=\"example_code notranslate\"> \n  <span class=\"marked\">Is</span> th\n  <span class=\"marked\">is</span> all there \n  <span class=\"marked\">is</span>? \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjsref_regexp_g_2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>test()</h2> \n<p>test()方法搜索字符串指定的值，根据结果并返回真或假。</p> \n<p>下面的示例是从字符串中搜索字符 &quot;e&quot; ：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code \">\n   var patt1=new RegExp(&quot;e&quot;);\n  <br />document.write(patt1.test(&quot;The best things in life are free&quot;));\n </div> \n <p>由于该字符串中存在字母 &quot;e&quot;，以上代码的输出将是：</p> \n <div class=\"example_code notranslate\">\n   true \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_regexp_test\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p> 当使用构造函数创造正则对象时，需要常规的字符转义规则（在前面加反斜杠 \\） </p>\n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code \">\n   var re = new RegExp(&quot;\\\\w+&quot;);\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_regexp_test1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>exec()</h2> \n<p>exec() 方法检索字符串中的指定值。返回值是被找到的值。如果没有发现匹配，则返回 null。</p> \n<p>下面的示例是从字符串中搜索字符 &quot;e&quot; ：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例 1</h2> \n <div class=\"example_code notranslate\">\n   var patt1=new RegExp(&quot;e&quot;);\n  <br />document.write(patt1.exec(&quot;The best things in life are free&quot;));\n </div> \n <p>由于该字符串中存在字母 &quot;e&quot;，以上代码的输出将是：</p> \n <div class=\"example_code\">\n   e\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_regexp_exec\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript RegExp 对象|完整 RegExp 对象参考手册|什么是 RegExp？|语法|RegExp 修饰符|实例 1|实例 2|实例 3|test()|实例|实例|exec()|实例 1|');
INSERT INTO `schoolcontent` VALUES ('187', '189', '<h1>JavaScript <span class=\"color_h1\">Window - 浏览器对象模型</span> </h1> \n<hr /> \n<p class=\"intro\">浏览器对象模型 (BOM) 使 JavaScript 有能力与浏览器&quot;对话&quot;。</p> \n<hr /> \n<h2>浏览器对象模型 (BOM)</h2> \n<p>浏览器对象模型（<strong>B</strong>rowser <strong>O</strong>bject <strong>M</strong>odel (BOM)）尚无正式标准。</p> \n<p>由于现代浏览器已经（几乎）实现了 JavaScript 交互性方面的相同方法和属性，因此常被认为是 BOM 的方法和属性。</p> \n<hr /> \n<h2>Window 对象</h2> \n<p>所有浏览器都支持 window 对象。它表示浏览器窗口。</p> \n<p>所有 JavaScript 全局对象、函数以及变量均自动成为 window 对象的成员。</p> \n<p>全局变量是 window 对象的属性。</p> \n<p>全局函数是 window 对象的方法。</p> \n<p>甚至 HTML DOM 的 document 也是 window 对象的属性之一：</p> \n<div class=\"code notranslate\"> \n <div>\n   window.document.getElementById(&quot;header&quot;); \n </div> \n</div> \n<p>与此相同：</p> \n<div class=\"code notranslate\"> \n <div>\n   document.getElementById(&quot;header&quot;); \n </div> \n</div> \n<br />\n<hr /> \n<h2>Window 尺寸</h2> \n<p>有三种方法能够确定浏览器窗口的尺寸（浏览器的视口，不包括工具栏和滚动条）。</p> \n<p>对于Internet Explorer、Chrome、Firefox、Opera 以及 Safari：</p> \n<ul> \n <li>window.innerHeight - 浏览器窗口的内部高度</li> \n <li>window.innerWidth - 浏览器窗口的内部宽度</li> \n</ul> \n<p>对于 Internet Explorer 8、7、6、5：</p> \n<ul> \n <li>document.documentElement.clientHeight</li> \n <li>document.documentElement.clientWidth</li> \n</ul> \n<p>或者</p> \n<ul> \n <li>document.body.clientHeight</li> \n <li>document.body.clientWidth</li> \n</ul> \n<p>实用的 JavaScript 方案（涵盖所有浏览器）： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var w=window.innerWidth\n  <br />|| document.documentElement.clientWidth\n  <br />|| document.body.clientWidth;\n  <br />\n  <br />var h=window.innerHeight\n  <br />|| document.documentElement.clientHeight\n  <br />|| document.body.clientHeight; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_win_inner\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p> 该例显示浏览器窗口的高度和宽度：（不包括工具栏/滚动条）</p> \n<hr /> \n<h2>其他 Window 方法</h2> \n<p>一些其他方法：</p> \n<ul> \n <li>window.open() - 打开新窗口</li> \n <li>window.close() - 关闭当前窗口</li> \n <li>window.moveTo() - 移动当前窗口</li> \n <li>window.resizeTo() - 调整当前窗口的尺寸</li> \n</ul>', null, 'JavaScript Window - 浏览器对象模型|浏览器对象模型 (BOM)|Window 对象|Window 尺寸|实例|其他 Window 方法|');
INSERT INTO `schoolcontent` VALUES ('188', '190', '<h1>JavaScript <span class=\"color_h1\">Window Screen</span> </h1> \n<hr /> \n<p class=\"intro\">window.screen 对象包含有关用户屏幕的信息。</p> \n<hr /> \n<h2>Window Screen</h2> \n<p><strong>window.screen</strong>对象在编写时可以不使用 window 这个前缀。</p> \n<p>一些属性：</p> \n<ul> \n <li>screen.availWidth - 可用的屏幕宽度</li> \n <li>screen.availHeight - 可用的屏幕高度</li> \n</ul> \n<hr /> \n<h2>Window Screen 可用宽度</h2> \n<p>screen.availWidth 属性返回访问者屏幕的宽度，以像素计，减去界面特性，比如窗口任务栏。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>返回您的屏幕的可用宽度：</p> \n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br />\n  <br /> document.write(&quot;Available Width: &quot; + screen.availWidth);\n  <br />\n  <br /> &lt;/script&gt; \n </div> \n <p>以上代码输出为：</p> \n <div class=\"example_code notranslate\"> \n  <script>\r\ndocument.write(\"Available Width: \" + screen.availWidth);\r\n</script> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_screen_availwidth\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>Window Screen 可用高度</h2> \n<p>screen.availHeight 属性返回访问者屏幕的高度，以像素计，减去界面特性，比如窗口任务栏。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>返回您的屏幕的可用高度：</p> \n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br />\n  <br /> document.write(&quot;Available Height: &quot; + screen.availHeight);\n  <br />\n  <br /> &lt;/script&gt; \n </div> \n <p>以上代码将输出：</p> \n <div class=\"example_code notranslate\"> \n  <script>\r\ndocument.write(\"Available Height: \" + screen.availHeight);\r\n</script> \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_screen_availheight\">尝试一下 &raquo;</a> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_screen_all\">所有 screen 属性实例</a></p>', null, 'JavaScript Window Screen|Window Screen|Window Screen 可用宽度|实例|Window Screen 可用高度|实例|');
INSERT INTO `schoolcontent` VALUES ('189', '191', '<h1>JavaScript <span class=\"color_h1\">Window Location</span> </h1> \n<hr /> \n<p class=\"intro\">window.location 对象用于获得当前页面的地址 (URL)，并把浏览器重定向到新的页面。</p> \n<hr /> \n<h2>Window Location</h2> \n<p> <strong>window.location</strong> 对象在编写时可不使用 window 这个前缀。 一些例子：</p> \n<p>一些实例:</p> \n<ul> \n <li>location.hostname 返回 web 主机的域名</li> \n <li>location.pathname 返回当前页面的路径和文件名</li> \n <li>location.port 返回 web 主机的端口 （80 或 443）</li> \n <li>location.protocol 返回所使用的 web 协议（http:// 或 https://）</li> \n</ul> \n<hr /> \n<h2>Window Location Href</h2> \n<p>location.href 属性返回当前页面的 URL。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>返回（当前页面的）整个 URL： </p>\n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br />\n  <br /> document.write(location.href);\n  <br />\n  <br /> &lt;/script&gt; \n </div> \n <p>以上代码输出为：</p> \n <div class=\"example_code notranslate\"> \n  <script>\r\ndocument.write(location.href);\r\n</script> \n </div> \n <br /> \n</div> \n<br />\n<hr /> \n<h2>Window Location Pathname</h2> \n<p>location.pathname 属性返回 URL 的路径名。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>返回当前 URL 的路径名：</p> \n <div class=\"example_code notranslate\">\n   &lt;script&gt;\n  <br />\n  <br /> document.write(location.pathname);\n  <br />\n  <br /> &lt;/script&gt; \n </div> \n <p>以上代码输出为：</p> \n <div class=\"example_code notranslate\"> \n  <script>\r\ndocument.write(location.pathname);\r\n</script> \n </div> \n <br /> \n</div> \n<br />\n<hr /> \n<h2>Window Location Assign</h2> \n<p>location.assign() 方法加载新的文档。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>加载一个新的文档：</p> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script&gt;\n  <br /> function newDoc()\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;window.location.assign(&quot;http://www.w3cschool.cc&quot;)\n  <br /> &nbsp;&nbsp;}\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;input type=&quot;button&quot; value=&quot;Load new document&quot; onclick=&quot;newDoc()&quot;&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_loc_assign\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript Window Location|Window Location|Window Location Href|实例|Window Location Pathname|实例|Window Location Assign|实例|');
INSERT INTO `schoolcontent` VALUES ('190', '192', '<h1>JavaScript <span class=\"color_h1\">Window History</span> </h1> \n<hr /> \n<p class=\"intro\">window.history 对象包含浏览器的历史。</p> \n<hr /> \n<h2>Window History</h2> \n<p><strong>window.history</strong>对象在编写时可不使用 window 这个前缀。</p> \n<p>为了保护用户隐私，对 JavaScript 访问该对象的方法做出了限制。</p> \n<p>一些方法：</p> \n<ul> \n <li>history.back() - 与在浏览器点击后退按钮相同</li> \n <li>history.forward() - 与在浏览器中点击按钮向前相同</li> \n</ul> \n<hr /> \n<h2>Window History Back</h2> \n<p>history.back() 方法加载历史列表中的前一个 URL。 </p> \n<p>这与在浏览器中点击后退按钮是相同的：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>在页面上创建后退按钮：</p> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script&gt;\n  <br /> function goBack()\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;window.history.back()\n  <br /> &nbsp;&nbsp;}\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;input type=&quot;button&quot; value=&quot;Back&quot; onclick=&quot;goBack()&quot;&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n <p>以上代码输出为：</p> \n <div class=\"example_code notranslate\"> \n  <input type=\"button\" value=\"返回上一页\" onclick=\"goBack()\" /> \n  <script>\r\nfunction goBack()\r\n {\r\n window.history.back()\r\n }\r\n</script> \n </div> \n</div> \n<br />\n<hr /> \n<h2>Window History Forward</h2> \n<p>history forward() 方法加载历史列表中的下一个 URL。</p> \n<p>这与在浏览器中点击前进按钮是相同的：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>在页面上创建一个向前的按钮：</p> \n <div class=\"example_code notranslate\">\n   &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script&gt;\n  <br /> function goForward()\n  <br /> &nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;window.history.forward()\n  <br /> &nbsp;&nbsp;}\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;input type=&quot;button&quot; value=&quot;Forward&quot; onclick=&quot;goForward()&quot;&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n <p>以上代码输出为：</p> \n <div class=\"example_code notranslate\"> \n  <input type=\"button\" value=\"返回下一页\" onclick=\"goForward()\" /> \n  <script>\r\nfunction goForward()\r\n {\r\n window.history.forward()\r\n }\r\n</script> \n </div> \n</div> \n<br />\n<br />', null, 'JavaScript Window History|Window History|Window History Back|实例|Window History Forward|实例|');
INSERT INTO `schoolcontent` VALUES ('191', '193', '<h1>JavaScript <span class=\"color_h1\">Window Navigator</span> </h1> \n<hr /> \n<p class=\"intro\">window.navigator 对象包含有关访问者浏览器的信息。</p> \n<hr /> \n<h2>Window Navigator</h2> \n<p><strong>window.navigator</strong> 对象在编写时可不使用 window 这个前缀。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;div id=&quot;example&quot;&gt;&lt;/div&gt;\n  <br />\n  <br /> &lt;script&gt;\n  <br />\n  <br /> txt = &quot;&lt;p&gt;Browser CodeName: &quot; + navigator.appCodeName + &quot;&lt;/p&gt;&quot;;\n  <br /> txt+= &quot;&lt;p&gt;Browser Name: &quot; + navigator.appName + &quot;&lt;/p&gt;&quot;;\n  <br /> txt+= &quot;&lt;p&gt;Browser Version: &quot; + navigator.appVersion + &quot;&lt;/p&gt;&quot;;\n  <br /> txt+= &quot;&lt;p&gt;Cookies Enabled: &quot; + navigator.cookieEnabled + &quot;&lt;/p&gt;&quot;;\n  <br /> txt+= &quot;&lt;p&gt;Platform: &quot; + navigator.platform + &quot;&lt;/p&gt;&quot;;\n  <br /> txt+= &quot;&lt;p&gt;User-agent header: &quot; + navigator.userAgent + &quot;&lt;/p&gt;&quot;;\n  <br /> txt+= &quot;&lt;p&gt;User-agent language: &quot; + navigator.systemLanguage + &quot;&lt;/p&gt;&quot;;\n  <br />\n  <br /> document.getElementById(&quot;example&quot;).innerHTML=txt;\n  <br />\n  <br /> &lt;/script&gt;\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=try_nav_all\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>警告!!!</h2> \n<p>来自 navigator 对象的信息具有误导性，不应该被用于检测浏览器版本，这是因为：</p> \n<ul> \n <li>navigator 数据可被浏览器使用者更改</li> \n <li>一些浏览器对测试站点会识别错误</li> \n <li>浏览器无法报告晚于浏览器发布的新操作系统</li> \n</ul> \n<hr /> \n<h2>浏览器检测</h2> \n<p>由于 navigator 可误导浏览器检测，使用对象检测可用来嗅探不同的浏览器。</p> \n<p>由于不同的浏览器支持不同的对象，您可以使用对象来检测浏览器。例如，由于只有 Opera 支持属性 &quot;window.opera&quot;，您可以据此识别出 Opera。</p> \n<p>例子：if (window.opera) {...some action...}</p>', null, 'JavaScript Window Navigator|Window Navigator|实例|警告!!!|浏览器检测|');
INSERT INTO `schoolcontent` VALUES ('192', '194', '<h1>JavaScript <span class=\"color_h1\">弹窗</span> </h1> \n<hr /> \n<p class=\"intro\">可以在 JavaScript 中创建三种消息框：警告框、确认框、提示框。</p> \n<hr /> \n<h2>警告框</h2> \n<p>警告框经常用于确保用户可以得到某些信息。</p> \n<p>当警告框出现后，用户需要点击确定按钮才能继续进行操作。 </p> \n<h3><b>语法</b></h3> \n<div class=\"code notranslate\">\n <div>\n   window.alert(&quot;\n  <i>sometext</i>&quot;);\n </div>\n</div> \n<p><strong>window.alert()</strong> 方法可以不带上window对象，直接使用<strong>alert()</strong>方法。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   &lt;!DOCTYPE html&gt;\n  <br />&lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script&gt;\n  <br /> function myFunction()\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;alert(&quot;你好，我是一个警告框！&quot;);\n  <br /> }\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br />\n  <br /> &lt;input type=&quot;button&quot; onclick=&quot;myFunction()&quot; value=&quot;显示警告框&quot;&gt;\n  <br />\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_alert\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>确认框</h2> \n<p>确认框通常用于验证是否接受用户操作。</p> \n<p>当确认卡弹出时，用户可以点击 &quot;确认&quot; 或者 &quot;取消&quot; 来确定用户操作。 </p> \n<p>当你点击 &quot;确认&quot;, 确认框返回 true， 如果点击 &quot;取消&quot;, 确认框返回 false。</p> \n<h3><b>语法</b></h3> \n<div class=\"code \">\n <div>\n   window.confirm(&quot;\n  <i>sometext</i>&quot;);\n </div>\n</div> \n<p><strong>window.confirm()</strong> 方法可以不带上window对象，直接使用<strong>confirm()</strong>方法。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var r=confirm(&quot;按下按钮&quot;);\n  <br /> if (r==true)\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;x=&quot;你按下了\\&quot;确定\\&quot;按钮!&quot;;\n  <br /> }\n  <br /> else\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;x=&quot;你按下了\\&quot;取消\\&quot;按钮!&quot;;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_confirm\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>提示框</h2> \n<p>提示框经常用于提示用户在进入页面前输入某个值。</p> \n<p>当提示框出现后，用户需要输入某个值，然后点击确认或取消按钮才能继续操纵。</p> \n<p>如果用户点击确认，那么返回值为输入的值。如果用户点击取消，那么返回值为 null。</p> \n<h3><b>语法</b></h3> \n<div class=\"code notranslate\">\n <div>\n   window.prompt(&quot;\n  <i>sometext</i>&quot;,&quot;\n  <i>defaultvalue</i>&quot;);\n </div>\n</div> \n<p><strong>window.prompt()</strong> 方法可以不带上window对象，直接使用<strong>prompt()</strong>方法。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   var person=prompt(&quot;请输入你的名字&quot;,&quot;Harry Potter&quot;);\n  <br /> if (person!=null &amp;&amp; person!=&quot;&quot;)\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;x=&quot;你好 &quot; + person + &quot;! 今天感觉如何?&quot;;\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;document.getElementById(&quot;demo&quot;).innerHTML=x;\n  <br /> } \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_prompt\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>换行</h2> \n<p>弹窗使用 反斜杠 + &quot;n&quot;(\\n) 来设置换行。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   alert(&quot;Hello\\nHow are you?&quot;);\n  <br /> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_alert2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>', null, 'JavaScript 弹窗|警告框|实例|确认框|实例|提示框|实例|换行|实例|');
INSERT INTO `schoolcontent` VALUES ('193', '195', '<script>\r\n\r\nvar H=\'....\';\r\nvar H=H.split(\'\');\r\nvar M=\'.....\';\r\nvar M=M.split(\'\');\r\nvar S=\'......\';\r\nvar S=S.split(\'\');\r\nvar Ypos=0;\r\nvar Xpos=0;\r\nvar Ybase=8;\r\nvar Xbase=8;\r\nvar dots=12;\r\n\r\nfunction clock(){\r\nvar time=new Date ();\r\nvar secs=time.getSeconds();\r\nvar sec=-1.57 + Math.PI * secs/30;\r\nvar mins=time.getMinutes();\r\nvar min=-1.57 + Math.PI * mins/30;\r\nvar hr=time.getHours();\r\nvar hrs=-1.57 + Math.PI * hr/6 + Math.PI*parseInt(time.getMinutes())/360;\r\nfor (i=0; i < dots; ++i){\r\ndocument.getElementById(\"dig\" + (i+1)).style.top=0-15+40*Math.sin(-0.49+dots+i/1.9).toString() + \"px\";\r\ndocument.getElementById(\"dig\" + (i+1)).style.left=0-14+40*Math.cos(-0.49+dots+i/1.9).toString() + \"px\";\r\n}\r\nfor (i=0; i < S.length; i++){\r\ndocument.getElementById(\"sec\" + (i+1)).style.top =Ypos+i*Ybase*Math.sin(sec).toString() + \"px\";\r\ndocument.getElementById(\"sec\" + (i+1)).style.left=Xpos+i*Xbase*Math.cos(sec).toString() + \"px\";\r\n}\r\nfor (i=0; i < M.length; i++){\r\ndocument.getElementById(\"min\" + (i+1)).style.top =Ypos+i*Ybase*Math.sin(min).toString() + \"px\";\r\ndocument.getElementById(\"min\" + (i+1)).style.left=Xpos+i*Xbase*Math.cos(min).toString() + \"px\";\r\n}\r\nfor (i=0; i < H.length; i++){\r\ndocument.getElementById(\"hour\" + (i+1)).style.top =Ypos+i*Ybase*Math.sin(hrs).toString() + \"px\";\r\ndocument.getElementById(\"hour\" + (i+1)).style.left=Xpos+i*Xbase*Math.cos(hrs).toString() + \"px\";\r\n} \r\nsetTimeout(\'clock()\',50);\r\n}\r\nwindow.onload=clock;\r\n\r\n</script> \n<style type=\"text/css\">\r\ndiv.dig, div.hour, div.min, div.sec\r\n{\r\nposition:absolute;\r\n}\r\ndiv.hour, div.min, div.sec\r\n{\r\nwidth:2px;\r\nheight:2px;\r\nfont-size:2px;\r\n}\r\ndiv.dig\r\n{\r\nwidth:30px;\r\nheight:30px;\r\nfont-family:arial,verdana,sans-serif;\r\nfont-size:10px;\r\ncolor:#000000;\r\ntext-align:center;\r\npadding-top:10px\r\n}\r\ndiv.min\r\n{\r\nbackground:#0000FF;\r\n}\r\ndiv.hour\r\n{\r\nbackground:#000000;\r\n}\r\ndiv.sec\r\n{\r\nbackground:#FF0000;\r\n}\r\n</style> \n<h1>JavaScript <span class=\"color_h1\">计时事件</span> </h1> \n<hr /> \n<div class=\"example\"> \n <table>\n  <tbody>\n   <tr> \n    <td> \n     <div style=\"width:120px;height:100px;position:relative;left:58px;top:50px;\"> \n      <div id=\"dig1\" class=\"dig\">\n       1\n      </div> \n      <div id=\"dig2\" class=\"dig\">\n       2\n      </div> \n      <div id=\"dig3\" class=\"dig\">\n       3\n      </div> \n      <div id=\"dig4\" class=\"dig\">\n       4\n      </div> \n      <div id=\"dig5\" class=\"dig\">\n       5\n      </div> \n      <div id=\"dig6\" class=\"dig\">\n       6\n      </div> \n      <div id=\"dig7\" class=\"dig\">\n       7\n      </div> \n      <div id=\"dig8\" class=\"dig\">\n       8\n      </div> \n      <div id=\"dig9\" class=\"dig\">\n       9\n      </div> \n      <div id=\"dig10\" class=\"dig\">\n       10\n      </div> \n      <div id=\"dig11\" class=\"dig\">\n       11\n      </div> \n      <div id=\"dig12\" class=\"dig\">\n       12\n      </div> \n      <div id=\"hour1\" class=\"hour\"></div> \n      <div id=\"hour2\" class=\"hour\"></div> \n      <div id=\"hour3\" class=\"hour\"></div> \n      <div id=\"hour4\" class=\"hour\"></div> \n      <div id=\"min1\" class=\"min\"></div> \n      <div id=\"min2\" class=\"min\"></div> \n      <div id=\"min3\" class=\"min\"></div> \n      <div id=\"min4\" class=\"min\"></div> \n      <div id=\"min5\" class=\"min\"></div> \n      <div id=\"sec1\" class=\"sec\"></div> \n      <div id=\"sec2\" class=\"sec\"></div> \n      <div id=\"sec3\" class=\"sec\"></div> \n      <div id=\"sec4\" class=\"sec\"></div> \n      <div id=\"sec5\" class=\"sec\"></div> \n      <div id=\"sec6\" class=\"sec\"></div> \n     </div> </td> \n    <td> <p class=\"tutintro\">JavaScript 一个设定的时间间隔之后来执行代码</p> <p class=\"tutintro\">我们称之为计时事件</p> </td> \n   </tr>\n  </tbody>\n </table> \n</div> \n<hr /> \n<h2>JavaScript 计时事件</h2> \n<p>通过使用 JavaScript，我们有能力作到在一个设定的时间间隔之后来执行代码，而不是在函数被调用后立即执行。我们称之为计时事件。 </p> \n<p>在 JavaScritp 中使用计时事件是很容易的，两个关键方法是:</p> \n<ul> \n <li>setInterval() - 间隔指定的毫秒数不停地执行指定的代码。</li> \n <li>setTimeout() - 暂停指定的毫秒数后执行指定的代码</li> \n</ul> \n<p><b>Note:</b> setInterval() 和 setTimeout() 是 HTML DOM Window对象的两个方法。</p> \n<hr /> \n<h2>setInterval() 方法</h2> \n<p> setInterval() 间隔指定的毫秒数不停地执行指定的代码</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   window.setInterval(&quot;\n  <i>javascript function</i>&quot;,\n  <i>milliseconds</i>);\n </div>\n</div> \n<p><strong>window.setInterval()</strong> 方法可以不使用window前缀，直接使用函数<strong>setInterval()</strong>。</p> \n<p>setInterval() 第一个参数是函数（function）。</p> \n<p>第二个参数间隔的毫秒数</p> \n<p><b>注意:</b> 1000 毫秒是一秒。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>每三秒弹出 &quot;hello&quot; ：</p> \n <div class=\"example_code notranslate\">\n   setInterval(function(){alert(&quot;Hello&quot;)},3000);\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_setinterval1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>实例展示了如何使用 setInterval() 方法，但是每三秒弹出一次对用户体验并不好。</p> \n<p>以下实例将显示当前时间。 setInterval() 方法设置每秒钟执行一次代码，就是手表一样。 </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>显示当前时间</p> \n <div class=\"example_code notranslate\">\n   var myVar=setInterval(function(){myTimer()},1000);\n  <br />\n  <br />function myTimer()\n  <br />{\n  <br />var d=new Date();\n  <br />var t=d.toLocaleTimeString();\n  <br />document.getElementById(&quot;demo&quot;).innerHTML=t;\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_setinterval2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>如何停止执行?</h2> \n<p>clearInterval() 方法用于停止 setInterval() 方法执行的函数代码。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   window.clearInterval(\n  <em>intervalVariable</em>)\n </div>\n</div> \n<p><strong>window.clearInterval()</strong> 方法可以不使用window前缀，直接使用函数<strong>clearInterval()</strong>。</p> \n<p>要使用 clearInterval() 方法, 在创建计时方法时你必须使用全局变量：</p> \n<div class=\"code notranslate\">\n <div>\n   myVar=setInterval(&quot;\n  <i>javascript function</i>&quot;,\n  <i>milliseconds</i>);\n </div>\n</div> \n<p>然后你可以使用clearInterval() 方法来停止执行。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>以下例子,我们添加了 &quot;Stop time&quot; 按钮：</p> \n <div class=\"example_code notranslate\">\n   &lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;\n  <br />&lt;button onclick=&quot;myStopFunction()&quot;&gt;Stop time&lt;/button&gt;\n  <br />\n  <br />&lt;script&gt;\n  <br />var myVar=setInterval(function(){myTimer()},1000);\n  <br /> function myTimer()\n  <br />{\n  <br />var d=new Date();\n  <br />var t=d.toLocaleTimeString();\n  <br /> document.getElementById(&quot;demo&quot;).innerHTML=t;\n  <br />}\n  <br />function myStopFunction()\n  <br /> {\n  <br />clearInterval(myVar);\n  <br />}\n  <br />&lt;/script&gt;\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_setinterval3\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>setTimeout() 方法</h2> \n<h3>语法</h3> \n<div class=\"code notranslate\">\n <div>\n   window.setTimeout(&quot;\n  <i>javascript 函数</i>&quot;,\n  <i>毫秒数</i>);\n </div>\n</div> \n<p>setTimeout() 方法会返回某个值。在上面的语句中，值被储存在名为 t 的变量中。假如你希望取消这个 setTimeout()，你可以使用这个变量名来指定它。</p> \n<p>setTimeout() 的第一个参数是含有 JavaScript 语句的字符串。这个语句可能诸如 &quot;alert(\'5 seconds!\')&quot;，或者对函数的调用，诸如 alertMsg()&quot;。</p> \n<p>第二个参数指示从当前起多少毫秒后执行第一个参数。</p> \n<p class=\"tip\"><span>提示：</span>1000 毫秒等于一秒。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>等待3秒，然后弹出 &quot;Hello&quot;:</p> \n <div class=\"example_code notranslate\">\n   setTimeout(function(){alert(&quot;Hello&quot;)},3000);\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing1\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>如何停止执行?</h2> \n<p> clearTimeout() 方法用于停止执行setTimeout()方法的函数代码。</p> \n<h3>语法</h3> \n<div class=\"code notranslate\"> \n <div>\n   window.clearTimeout(\n  <em>timeoutVariable</em>)\n </div> \n</div> \n<p><strong>window.clearTimeout()</strong> 方法可以不使用window 前缀。</p> \n<p>要使用clearTimeout() 方法, 你必须在创建超时方法中（setTimeout）使用全局变量:</p> \n<div class=\"code \"> \n <div>\n   myVar=setTimeout(&quot;\n  <i>javascript function</i>&quot;,\n  <i>milliseconds</i>);\n </div> \n</div> \n<p>如果函数还未被执行，你可以使用 clearTimeout() 方法来停止执行函数代码。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <p>以下是同一个实例, 但是添加了 &quot;Stop the alert&quot; 按钮:</p> \n <div class=\"example_code notranslate\">\n   var myVar;\n  <br />\n  <br />function myFunction()\n  <br /> {\n  <br /> myVar=setTimeout(function(){alert(&quot;Hello&quot;)},3000);\n  <br /> }\n  <br />\n  <br />function myStopFunction()\n  <br />{\n  <br />clearTimeout(myVar);\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_settimeout2\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<div class=\"tryit_ex\"> \n <img src=\"http://www.runoob.com/images/tryitimg.gif\" width=\"40\" height=\"46px\" alt=\"Examples\" />\n <h2>更多实例</h2> \n</div> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing2\">另一个简单的计时</a></p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing_clock\" 使用计时创建时钟。<=\"\"></a></p>\n<a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing_clock\" 使用计时创建时钟。<=\"\"> </a>', null, 'JavaScript 计时事件|JavaScript 计时事件|setInterval() 方法|实例|实例|如何停止执行?|实例|setTimeout() 方法|实例|如何停止执行?|实例|更多实例|');
INSERT INTO `schoolcontent` VALUES ('194', '196', '<h1>JavaScript <span class=\"color_h1\">Cookies</span></h1> \n<script>\r\nfunction displayCookies()\r\n{\r\nvar fname=getCookie(\"firstname\");\r\nif (fname==null) {fname=\"\";}\r\nif (fname!=\"\") {fname=\"firstname=\"+fname;}\r\nvar lname=getCookie(\"lastname\");\r\nif (lname==null) {lname=\"\";}\r\nif (lname!=\"\") {lname=\"; lastname=\"+lname;}\r\nalert (fname + lname);\r\n}\r\nfunction getCookie(name)\r\n{\r\nvar nameEQ = name + \"=\";\r\nvar ca = document.cookie.split(\';\');\r\nfor(var i=0;i < ca.length;i++) {\r\nvar c = ca[i].trim();\r\nif (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\r\n}\r\nreturn null;\r\n} \r\n</script> \n<hr /> \n<p class=\"intro\">Cookies 用于存储 web 页面的用户信息。</p> \n<hr /> \n<h2>什么是 Cookies？</h2> \n<p>Cookies 是一些数据, 存储于你电脑上的文本文件中。</p> \n<p>当 web 服务器向浏览器发送 web 页面时，在连接关闭后，服务端不会记录用户的信息。</p> \n<p>Cookies 的作用就是用于解决 &quot;如何记录客户端的用户信息&quot;:</p> \n<ul> \n <li>当用户访问 web 页面时，他的名字可以记录在 cookie 中。</li> \n <li>在用户下一次访问该页面时，可以在 cookie 中读取用户访问记录。</li> \n</ul> \n<p>Cookies 以名/值对形式存储，如下所示:</p> \n<div class=\"code notranslate\"> \n <div>\n   username=John Doe \n </div> \n</div> \n<p>当浏览器从服务器上请求 web 页面时， 属于该页面的 cookies 会被添加到该请求中。服务端通过这种方式来获取用户的信息。</p> \n<hr /> \n<h2>使用 JavaScript 创建Cookie</h2> \n<p>JavaScript 可以使用 <strong>document.cookie</strong> 属性来创建 、读取、及删除 cookies。</p> \n<p>JavaScript 中，创建 cookie 如下所示：</p> \n<div class=\"code notranslate\"> \n <div>\n   document.cookie=&quot;username=John Doe&quot;;\n </div> \n</div> \n<p>您还可以为 cookie 添加一个过期时间（以 UTC 或 GMT 时间）。默认情况下，cookie 在浏览器关闭时删除：</p> \n<div class=\"code notranslate\"> \n <div>\n   document.cookie=&quot;username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 GMT&quot;;\n </div> \n</div> \n<p>您可以使用 path 参数告诉浏览器 cookie 的路径。默认情况下，cookie 属于当前页面。 </p> \n<div class=\"code notranslate\"> \n <div>\n   document.cookie=&quot;username=John Doe; expires=Thu, 18 Dec 2013 12:00:00 GMT; path=/&quot;;\n </div> \n</div> \n<hr /> \n<h2>使用 JavaScript 读取 Cookie</h2> \n<p>在 JavaScript 中, 可以使用以下代码来读取 cookies：</p> \n<div class=\"code notranslate\"> \n <div>\n   var x = document.cookie;\n </div> \n</div> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th style=\"width:34px\"><img src=\"http://www.runoob.com/images/lamp.jpg\" alt=\"Note\" style=\"height:32px;width:32px\" /></th> \n   <td>document.cookie 将以字符串的方式返回所有的 cookies，类型格式： cookie1=value; cookie2=value; cookie3=value;</td> \n  </tr>\n </tbody>\n</table> \n<br /> \n<hr /> \n<h2>使用 JavaScript 修改 Cookie</h2> \n<p>在 JavaScript 中，修改 cookies 类似于创建 cookies，如下所示：</p> \n<div class=\"code notranslate\"> \n <div>\n   document.cookie=&quot;username=John Smith; expires=Thu, 18 Dec 2013 12:00:00 GMT; path=/&quot;;\n </div> \n</div> \n<p>旧的 cookie 将被覆盖。</p> \n<hr /> \n<h2>使用 JavaScript 删除 Cookie</h2> \n<p>删除 cookie 非常简单。您只需要设置 expires 参数为以前的时间即可，如下所示，设置为 Thu, 01 Jan 1970 00:00:00 GMT:</p> \n<div class=\"code notranslate\"> \n <div>\n   document.cookie = &quot;username=; expires=Thu, 01 Jan 1970 00:00:00 GMT&quot;; \n </div> \n</div> \n<p>注意，当您删除时不必指定 cookie 的值。</p> \n<hr /> \n<h2>Cookie 字符串</h2> \n<p>document.cookie 属性看起来像一个普通的文本字符串，其实它不是。</p> \n<p>即使您在 document.cookie 中写入一个完整的 cookie 字符串, 当您重新读取该 cookie 信息时，cookie 信息是以名/值对的形式展示的。</p> \n<p>如果您设置了新的 cookie，旧的 cookie 不会被覆盖。 新 cookie 将添加到 document.cookie 中，所以如果您重新读取document.cookie，您将获得如下所示的数据：</p> \n<p>cookie1=value; cookie2=value;</p> \n<p> <button type=\"button\" onclick=\"displayCookies();\">显示所有 Cookie</button>&nbsp; <button type=\"button\" onclick=\"document.cookie=\'firstname=John\'\">创建 Cookie 1</button>&nbsp; <button type=\"button\" onclick=\"document.cookie=\'lastname=Smith\'\">创建 Cookie 2</button> <button type=\"button\" onclick=\"document.cookie=\'firstname=John;expires=Thu, 01 Jan 1970 00:00:00 GMT\'\">删除 Cookie 1</button>&nbsp; <button type=\"button\" onclick=\"document.cookie=\'lastname=Smith;expires=Thu, 01 Jan 1970 00:00:00 GMT\'\">删除 Cookie 2</button> </p> \n<p>如果您需要查找一个指定 cookie 值，您必须创建一个JavaScript 函数在 cookie 字符串中查找 cookie 值。</p> \n<hr /> \n<h2>JavaScript Cookie 实例</h2> \n<p>在以下实例中，我们将创建 cookie 来存储访问者名称。</p> \n<p>首先，访问者访问 web 页面, 他将被要求填写自己的名字。该名字会存储在 cookie 中。</p> \n<p>访问者下一次访问页面时，他会看到一个欢迎的消息。</p> \n<p>在这个实例中我们会创建 3 个 JavaScript 函数:</p> \n<ol> \n <li>设置 cookie 值的函数</li> \n <li>获取 cookie 值的函数</li> \n <li>检测 cookie 值的函数</li> \n</ol> \n<hr /> \n<h2>设置 cookie 值的函数</h2> \n<p>首先，我们创建一个函数用于存储访问者的名字：</p> \n<div class=\"code notranslate\" style=\"color: #404040\">\n <div>\n   function setCookie(cname,cvalue,exdays)\n  <br />{\n  <br /> var d = new Date();\n  <br />d.setTime(d.getTime()+(exdays*24*60*60*1000));\n  <br />var expires = &quot;expires=&quot;+d.toGMTString();\n  <br />document.cookie = cname + &quot;=&quot; + cvalue + &quot;; &quot; + expires;\n  <br />} \n </div>\n</div> \n<p><strong>函数解析：</strong></p> \n<p>以上的函数参数中，cookie 的名称为 cname，cookie 的值为 cvalue，并设置了 cookie 的过期时间 expires。</p> \n<p>该函数设置了 cookie 名、cookie 值、cookie过期时间。</p> \n<hr /> \n<h2>获取 cookie 值的函数</h2> \n<p>然后，我们创建一个函数用户返回指定 cookie 的值：</p> \n<div class=\"code notranslate\">\n <div>\n   function getCookie(cname)\n  <br /> {\n  <br /> var name = cname + &quot;=&quot;;\n  <br /> var ca = document.cookie.split(\';\');\n  <br /> for(var i=0; i&lt;ca.length; i++) \n  <br /> &nbsp; {\n  <br /> &nbsp; var c = ca[i].trim();\n  <br /> &nbsp; if (c.indexOf(name)==0) return c.substring(name.length,c.length);\n  <br />&nbsp; }\n  <br /> return &quot;&quot;;\n  <br /> } \n </div> \n</div> \n<p><strong>函数解析：</strong></p> \n<p>cookie 名的参数为 cname。</p> \n<p>创建一个文本变量用于检索指定 cookie :cname + &quot;=&quot;。</p> \n<p>使用分号来分割 document.cookie 字符串，并将分割后的字符串数组赋值给 ca (ca = document.cookie.split(\';\'))。</p> \n<p>循环 ca 数组 (i=0;i&lt;ca.length;i++)，然后读取数组中的每个值，并去除前后空格 (c=ca[i].trim())。</p> \n<p>如果找到 cookie(c.indexOf(name) == 0)，返回 cookie 的值 (c.substring(name.length,c.length)。</p> \n<p>如果没有找到 cookie, 返回 &quot;&quot;。</p> \n<hr /> \n<h2>检测 cookie 值的函数</h2> \n<p>最后，我们可以创建一个检测 cookie 是否创建的函数。</p> \n<p>如果设置了 cookie，将显示一个问候信息。</p> \n<p>如果没有设置 cookie，将会显示一个弹窗用于询问访问者的名字，并调用 setCookie 函数将访问者的名字存储 365 天：</p> \n<div class=\"code notranslate\">\n <div>\n   function checkCookie()\n  <br />{\n  <br />var username=getCookie(&quot;username&quot;);\n  <br />if (username!=&quot;&quot;)\n  <br />&nbsp; {\n  <br />&nbsp; alert(&quot;Welcome again &quot; + username);\n  <br />&nbsp; }\n  <br />else \n  <br />&nbsp; {\n  <br />&nbsp; username = prompt(&quot;Please enter your name:&quot;,&quot;&quot;);\n  <br />&nbsp; if (username!=&quot;&quot; &amp;&amp; username!=null)\n  <br />&nbsp;&nbsp;&nbsp; {\n  <br />&nbsp;&nbsp;&nbsp; setCookie(&quot;username&quot;,username,365);\n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />&nbsp; }\n  <br />} \n </div> \n</div> \n<br /> \n<hr /> \n<h2>完整实例</h2> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function setCookie(cname,cvalue,exdays)\n  <br />{\n  <br />var d = new Date();\n  <br /> d.setTime(d.getTime()+(exdays*24*60*60*1000));\n  <br />var expires = &quot;expires=&quot;+d.toGMTString();\n  <br />document.cookie = cname + &quot;=&quot; + cvalue + &quot;; &quot; + expires;\n  <br /> }\n  <br />\n  <br />function getCookie(cname)\n  <br />{\n  <br />var name = cname + &quot;=&quot;;\n  <br />var ca = document.cookie.split(\';\');\n  <br />for(var i=0; i&lt;ca.length; i++) \n  <br />&nbsp; {\n  <br />&nbsp; var c = ca[i].trim();\n  <br />&nbsp; if (c.indexOf(name)==0) return c.substring(name.length,c.length);\n  <br />}\n  <br />return &quot;&quot;;\n  <br />}\n  <br />\n  <br />function checkCookie()\n  <br />{\n  <br />var user=getCookie(&quot;username&quot;);\n  <br />if (user!=&quot;&quot;)\n  <br />&nbsp; {\n  <br />&nbsp; alert(&quot;Welcome again &quot; + user);\n  <br />&nbsp; }\n  <br />else \n  <br />&nbsp; {\n  <br />&nbsp; user = prompt(&quot;Please enter your name:&quot;,&quot;&quot;);\n  <br />&nbsp; if (user!=&quot;&quot; &amp;&amp; user!=null)\n  <br />&nbsp;&nbsp;&nbsp; {\n  <br />&nbsp;&nbsp;&nbsp; setCookie(&quot;username&quot;,user,365);\n  <br />&nbsp;&nbsp;&nbsp; }\n  <br />&nbsp; }\n  <br />}\n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/tryit.php?filename=tryjs_cookie_username\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<p>以下实例在页面载入时执行 checkCookie() 函数。</p>', null, 'JavaScript Cookies|什么是 Cookies？|使用 JavaScript 创建Cookie|使用 JavaScript 读取 Cookie|使用 JavaScript 修改 Cookie|使用 JavaScript 删除 Cookie|Cookie 字符串|JavaScript Cookie 实例|设置 cookie 值的函数|获取 cookie 值的函数|检测 cookie 值的函数|完整实例|实例|');
INSERT INTO `schoolcontent` VALUES ('195', '197', '<h1>JavaScript <span class=\"color_h1\">库</span> </h1> \n<hr /> \n<p class=\"intro\">JavaScript 库 - jQuery、Prototype、MooTools。</p> \n<hr /> \n<h2>JavaScript 框架（库）</h2> \n<p>JavaScript 高级程序设计（特别是对浏览器差异的复杂处理），通常很困难也很耗时。</p> \n<p>为了应对这些调整，许多的 <strong>JavaScript (helper)</strong> 库应运而生。 </p> \n<p>这些 JavaScript 库常被称为 <strong>JavaScript 框架</strong>。</p> \n<p>在本教程中，我们将了解到一些广受欢迎的 JavaScript 框架：</p> \n<ul> \n <li>jQuery</li> \n <li>Prototype</li> \n <li>MooTools</li> \n</ul> \n<p>所有这些框架都提供针对常见 JavaScript 任务的函数，包括动画、DOM 操作以及 Ajax 处理。</p> \n<p>在本教程中，您将学习到如何开始使用它们，来使得 JavaScript 编程更容易、更安全且更有乐趣。</p> \n<hr /> \n<h2>jQuery</h2> \n<p>jQuery 是目前最受欢迎的 JavaScript 框架。</p> \n<p>它使用 CSS 选择器来访问和操作网页上的 HTML 元素（DOM 对象）。</p> \n<p>jQuery 同时提供 companion UI（用户界面）和插件。</p> \n<p>许多大公司在网站上使用 jQuery：</p> \n<ul> \n <li>Google</li> \n <li>Microsoft</li> \n <li>IBM</li> \n <li>Netflix</li> \n</ul> \n<p>如需更深入地学习 jQuery，请访问我们的 <a href=\"http://www.runoob.com/jquery/jquery-tutorial.html\" target=\"_blank\">jQuery 教程</a>。 </p> \n<hr /> \n<h2>Prototype</h2> \n<p><strong>Prototype</strong> 是一种库，提供用于执行常见 web 任务的简单 API。</p> \n<p><strong>API</strong> 是应用程序编程接口（Application Programming Interface）的缩写。它是包含属性和方法的库，用于操作 HTML DOM。</p> \n<p>Prototype 通过提供类和继承，实现了对 JavaScript 的增强。</p> \n<hr /> \n<h2>MooTools</h2> \n<p><strong>MooTools</strong> 也是一个框架，提供了可使常见的 JavaScript 编程更为简单的 API。</p> \n<p>MooTools 也含有一些轻量级的效果和动画函数。</p> \n<hr /> \n<h2>其他框架</h2> \n<p>下面是其他一些在上面未涉及的框架：</p> \n<p><strong>YUI</strong> - Yahoo! User Interface Framework，涵盖大量函数的大型库，从简单的 JavaScript 功能到完整的 internet widget。</p> \n<p><strong>Ext JS</strong> - 可定制的 widget，用于构建富因特网应用程序（rich Internet applications）。</p> \n<p><strong>Dojo</strong> - 用于 DOM 操作、事件、widget 等的工具包。</p> \n<p><strong>script.aculo.us</strong> - 开源的 JavaScript 框架，针对可视效果和界面行为。</p> \n<p><strong>UIZE</strong> - Widget、AJAX、DOM、模板等等。</p> \n<hr /> \n<h2>CDN -内容分发网络</h2> \n<p>您总是希望网页可以尽可能地快。您希望页面的容量尽可能地小，同时您希望浏览器尽可能多地进行缓存。</p> \n<p>如果许多不同的网站使用相同的 JavaScript 框架，那么把框架库存放在一个通用的位置供每个网页分享就变得很有意义了。</p> \n<p>CDN (Content Delivery Network) 解决了这个问题。CDN 是包含可分享代码库的服务器网络。</p> \n<p>Google 为一系列 JavaScript 库提供了免费的 CDN，包括：</p> \n<ul> \n <li>jQuery</li> \n <li>Prototype</li> \n <li>MooTools</li> \n <li>Dojo</li> \n <li>Yahoo! YUI</li> \n</ul> \n<p>但是由于 Google 在中国经常被GFW（防火长城，英文名称Great Firewall of China，简写为Great Firewall，缩写GFW）屏蔽，造成访问不稳定，所以建议使用百度静态资源公共库:<a href=\"http://cdn.code.baidu.com/\" target=\"_blank\">http://cdn.code.baidu.com/</a>。</p> \n<p>如需在您的网页中使用 JavaScript 框架库，只需在 &lt;script&gt; 标签中引用该库即可：</p> \n<div class=\"example\"> \n <h2 class=\"example\">引用 jQuery</h2> \n <div class=\"example_code notranslate\">\n   &lt;script src=&quot;http://apps.bdimg.com/libs/jquery/2.1.1/jquery.min.js&quot;&gt;\n  <br /> &lt;/script&gt; \n </div> \n</div> \n<br />\n<hr /> \n<h2>使用框架</h2> \n<p>在您决定为网页使用 JavaScript 框架之前，首先对框架进行测试是明智的。</p> \n<p>JavaScript 框架很容易进行测试。您无需在计算机上安装它们，同时也没有安装程序。</p> \n<p>通常您只需从网页中引用一个库文件。</p> \n<p>在本教程的下一章，我们会为您完整地讲解 jQuery 的测试过程。</p>', null, 'JavaScript 库|JavaScript 框架（库）|jQuery|Prototype|MooTools|其他框架|CDN -内容分发网络|引用 jQuery|使用框架|');
INSERT INTO `schoolcontent` VALUES ('196', '198', '<h1>JavaScript <span class=\"color_h1\">- 测试 jQuery</span> </h1> \n<hr /> \n<p class=\"intro\">测试 JavaScript 框架库 - jQuery</p> \n<hr /> \n<h2>引用 jQuery</h2> \n<p>如需测试 JavaScript 库，您需要在网页中引用它。</p> \n<p>为了引用某个库，请使用 &lt;script&gt; 标签，其 src 属性设置为库的 URL：</p> \n<div class=\"example\"> \n <h2 class=\"example\">引用 jQuery</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script src=&quot;http://apps.bdimg.com/libs/jquery/2.1.1/jquery.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n</div> \n<br />\n<hr /> \n<h2> jQuery 描述</h2> \n<p>主要的 jQuery 函数是 $() 函数（jQuery 函数）。如果您向该函数传递 DOM 对象，它会返回 jQuery 对象，带有向其添加的 jQuery 功能。</p> \n<p>jQuery 允许您通过 CSS 选择器来选取元素。</p> \n<p>在 JavaScript 中，您可以分配一个函数以处理窗口加载事件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">JavaScript 方式：</h2> \n <div class=\"example_code notranslate\">\n   function myFunction()\n  <br /> {\n  <br /> var obj=document.getElementById(&quot;h01&quot;);\n  <br /> obj.innerHTML=&quot;Hello jQuery&quot;;\n  <br /> }\n  <br /> onload=myFunction;\n </div> \n</div> \n<p>等价的 jQuery 是不同的：</p> \n<div class=\"example\"> \n <h2 class=\"example\">jQuery 方式：</h2> \n <div class=\"example_code notranslate\">\n   function myFunction()\n  <br /> {\n  <br /> $(&quot;#h01&quot;).html(&quot;Hello jQuery&quot;);\n  <br /> }\n  <br /> $(document).ready(myFunction);\n </div> \n</div> \n<p>上面代码的最后一行，HTML DOM 文档对象被传递到 jQuery ：$(document)。</p> \n<p>当您向 jQuery 传递 DOM 对象时，jQuery 会返回以 HTML DOM 对象包装的 jQuery 对象。</p> \n<p>jQuery 函数会返回新的 jQuery 对象，其中的 ready() 是一个方法。</p> \n<p>由于在 JavaScript 中函数就是变量，因此可以把 myFunction 作为变量传递给 jQuery 的 ready 方法。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td>jQuery 返回 jQuery 对象，与已传递的 DOM 对象不同。<br />jQuery 对象拥有的属性和方法，与 DOM 对象的不同。<br />您不能在 jQuery 对象上使用 HTML DOM 的属性和方法。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2> 测试 jQuery</h2> \n<p> 请试一下下面这个例子：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script src=&quot;http://apps.bdimg.com/libs/jquery/2.1.1/jquery.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;script&gt;\n  <br /> function myFunction()\n  <br /> {\n  <br /> $(&quot;#h01&quot;).html(&quot;Hello jQuery&quot;)\n  <br /> }\n  <br /> $(document).ready(myFunction);\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;h1 id=&quot;h01&quot;&gt;&lt;/h1&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_lib_jquery\">尝试一下 &raquo;</a> \n</div> \n<p> 请再试一下这个例子：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br />&lt;head&gt;\n  <br /> &lt;script src=&quot;http://apps.bdimg.com/libs/jquery/2.1.1/jquery.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;script&gt;\n  <br /> function myFunction()\n  <br /> {\n  <br /> $(&quot;#h01&quot;).attr(&quot;style&quot;,&quot;color:red&quot;).html(&quot;Hello jQuery&quot;)\n  <br /> }\n  <br /> $(document).ready(myFunction);\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;h1 id=&quot;h01&quot;&gt;&lt;/h1&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_lib_jquery2\">尝试一下 &raquo;</a> \n</div> \n<p>正如您在上面的例子中看到的，jQuery 允许链接（链式语法）。</p> \n<p>链接（Chaining）是一种在同一对象上执行多个任务的便捷方法。</p> \n<p>需要学习更多内容吗？W3School 为您提供了非常棒的 <a href=\"http://www.runoob.com/jquery/\" title=\"jQuery 教程\">jQuery 教程</a>。</p>', null, 'JavaScript - 测试 jQuery|引用 jQuery|引用 jQuery|jQuery 描述|JavaScript 方式：|jQuery 方式：|测试 jQuery|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('197', '199', '<h1>JavaScript <span class=\"color_h1\">- 测试 Prototype</span> </h1> \n<hr /> \n<p class=\"intro\">测试 JavaScript 框架库 - Prototype</p> \n<hr /> \n<h2>引用 Prototype</h2> \n<p>如需测试 JavaScript 库，您需要在网页中引用它。</p> \n<p>为了引用某个库，请使用 &lt;script&gt; 标签，其 src 属性设置为库的 URL：</p> \n<div class=\"example\"> \n <h2 class=\"example\">引用 Prototype</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;head&gt;\n  <br /> &lt;script\n  <br /> src=&quot;http://apps.bdimg.com/libs/prototype/1.7.1.0/prototype.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt;\n </div> \n</div> \n<br />\n<hr /> \n<h2> Prototype 描述</h2> \n<p>Prototype 提供的函数可使 HTML DOM 编程更容易。</p> \n<p>与 jQuery 类似，Prototype 也有自己的 $() 函数。</p> \n<p>$() 函数接受 HTML DOM 元素的 id 值（或 DOM 元素），并会向 DOM 对象添加新的功能。</p> \n<p>与 jQuery 不同，Prototype 没有用以取代 window.onload() 的 ready() 方法。相反，Prototype 会向浏览器及 HTML DOM 添加扩展。</p> \n<p>在 JavaScript 中，您可以分配一个函数以处理窗口加载事件：</p> \n<div class=\"example\"> \n <h2 class=\"example\">JavaScript 方式：</h2> \n <div class=\"example_code notranslate\">\n   function myFunction()\n  <br /> {\n  <br /> var obj=document.getElementById(&quot;h01&quot;);\n  <br /> obj.innerHTML=&quot;Hello Prototype&quot;;\n  <br /> }\n  <br /> onload=myFunction;\n </div> \n</div> \n<p>等价的 Prototype 是不同的：</p> \n<div class=\"example\"> \n <h2 class=\"example\">Prototype 方式：</h2> \n <div class=\"example_code notranslate\">\n   function myFunction()\n  <br /> {\n  <br /> $(&quot;h01&quot;).insert(&quot;Hello Prototype!&quot;);\n  <br /> }\n  <br /> Event.observe(window,&quot;load&quot;,myFunction);\n </div> \n</div> \n<p>Event.observe() 接受三个参数： </p> \n<ul> \n <li>您希望处理的 HTML DOM 或 BOM（浏览器对象模型）对象</li> \n <li>您希望处理的事件</li> \n <li>您希望调用的函数</li> \n</ul> \n<hr /> \n<h2>测试 Prototype</h2> \n<p> 请试一下下面这个例子：</p> \n<div class=\"example\"> \n <h2 class=\"example\">Example</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;script\n  <br /> src=&quot;http://apps.bdimg.com/libs/prototype/1.7.1.0/prototype.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;script&gt;\n  <br /> function myFunction()\n  <br /> {\n  <br /> $(&quot;h01&quot;).insert(&quot;Hello Prototype!&quot;);\n  <br /> }\n  <br /> Event.observe(window,&quot;load&quot;,myFunction);\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;h1 id=&quot;h01&quot;&gt;&lt;/h1&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_lib_prototype\">尝试一下 &raquo;</a> \n</div> \n<p> 请再试一下这个例子：</p> \n<div class=\"example\"> \n <h2 class=\"example\">Example</h2> \n <div class=\"example_code notranslate\">\n   &lt;!DOCTYPE html&gt;\n  <br /> &lt;html&gt;\n  <br /> &lt;script\n  <br /> src=&quot;http://apps.bdimg.com/libs/prototype/1.7.1.0/prototype.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;script&gt;\n  <br /> function myFunction()\n  <br /> {\n  <br /> $(&quot;h01&quot;).writeAttribute(&quot;style&quot;,&quot;color:red&quot;).insert(&quot;Hello Prototype!&quot;);\n  <br /> }\n  <br /> Event.observe(window,&quot;load&quot;,myFunction);\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt;\n  <br /> &lt;body&gt;\n  <br /> &lt;h1 id=&quot;h01&quot;&gt;&lt;/h1&gt;\n  <br /> &lt;/body&gt;\n  <br /> &lt;/html&gt; \n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjs_lib_prototype2\">测试一下 &raquo;</a> \n</div> \n<p> 正如您在上面的例子中看到的，与 jQuery 相同，Prototype 允许链式语法。</p> \n<p> 链接（Chaining）是一种在同一对象上执行多个任务的便捷方法。</p>', null, 'JavaScript - 测试 Prototype|引用 Prototype|引用 Prototype|Prototype 描述|JavaScript 方式：|Prototype 方式：|测试 Prototype|Example|Example|');
INSERT INTO `schoolcontent` VALUES ('198', '200', '<h2>基础 JavaScript 实例</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_write\" target=\"_blank\">用JavaScript输出文本</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_dom\" target=\"_blank\">用JavaScript改变HTML元素</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_externalexample\" target=\"_blank\">一个外部JavaScript</a></li> \n <br /> \n <li><a href=\"js-howto.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>JavaScript 语句、注释和代码块</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_statements\" target=\"_blank\">JavaScript 语句</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_blocks\" target=\"_blank\">JavaScript 代码块</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments1\" target=\"_blank\">JavaScript 单行注释</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments2\" target=\"_blank\">JavaScript 多行注释</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments3\" target=\"_blank\">使用单行注释来防止执行</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_comments4\" target=\"_blank\">使用多行注释来防止执行</a></li> \n <br /> \n <li><a href=\"js-statements.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>JavaScript 变量</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_variable\" target=\"_blank\">声明一个变量，为它赋值，然后显示出来</a></li> \n <br /> \n <li><a href=\"js-variable.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>JavaScript 条件语句 If ... Else</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_ifthen\" target=\"_blank\">If 语句</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_ifthenelse\" target=\"_blank\">If...else 语句</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_randomlink\" target=\"_blank\">随机链接</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_switch\" target=\"_blank\">Switch 语句</a></li> \n <br /> \n <li><a href=\"js-if-else.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>JavaScript 消息框</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_alert\" target=\"_blank\">Alert(警告)框</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_alert2\" target=\"_blank\">带有换行的警告框</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_confirm\" target=\"_blank\">确认框</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_prompt\" target=\"_blank\">提示框</a></li> \n <br /> \n <li><a href=\"js-popup.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>JavaScript 函数</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_function1\" target=\"_blank\">函数</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_function2\" target=\"_blank\">带有参数的函数</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_functionarg2\" target=\"_blank\">带有参数的函数 2</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_return2\" target=\"_blank\">返回值的函数</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_function_return\" target=\"_blank\">带有参数并返回值的函数</a></li> \n <br /> \n <li><a href=\"js-function.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>JavaScript 循环</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_fornext\" target=\"_blank\">For 循环</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_fornext_header\" target=\"_blank\">循环输出 HTML 标题</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_while\" target=\"_blank\">While 循环</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_dowhile\" target=\"_blank\">Do while 循环</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_break\" target=\"_blank\">break 语句</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_continue\" target=\"_blank\">continue 语句</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_object_for_in\" target=\"_blank\">使用 For...In 声明来遍历数组内的元素</a></li> \n <br /> \n <li><a href=\"js-loop-for.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>JavaScript 事件</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_events\" target=\"_blank\">onclick事件</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_imagemap\" target=\"_blank\">onmouseover 事件</a></li> \n <br /> \n <li><a href=\"js-htmldom-events.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>JavaScript 错误处理</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_try_catch\" target=\"_blank\">try...catch 语句</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_try_catch2\" target=\"_blank\">带有确认框的 try...catch 语句</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_onerror\" target=\"_blank\">onerror 事件</a></li> \n <br /> \n <li><a href=\"js-errors.html\"><b>实例解析</b></a></li> \n</ul> \n<h2>高级 JavaScript 实例</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_cookie_username\" target=\"_blank\">创建一个欢迎 cookie</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing1\" target=\"_blank\">简单的计时</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing2\" target=\"_blank\">另一个简单的计时</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing_infinite\" target=\"_blank\">在一个无穷循环中的计时事件</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing_stop\" target=\"_blank\">带有停止按钮的无穷循环中的计时事件</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing_clock\" target=\"_blank\">使用计时事件制作的钟表</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_create_object1\" target=\"_blank\">创建对象的实例</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_create_object2\" target=\"_blank\">创建用于对象的模板</a></li> \n</ul>', null, '基础 JavaScript 实例|JavaScript 语句、注释和代码块|JavaScript 变量|JavaScript 条件语句 If ... Else|JavaScript 消息框|JavaScript 函数|JavaScript 循环|JavaScript 事件|JavaScript 错误处理|高级 JavaScript 实例|');
INSERT INTO `schoolcontent` VALUES ('199', '201', '<h1>JavaScript <span class=\"color_h1\">对象</span> 实例</h1> \n<hr /> \n<p class=\"intro\">使用内置的JavaScript对象实例。</p> \n<h2 class=\"tutheader\">String（字符串）对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_length_string\" target=\"_blank\">返回字符串的长度</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_str_style\" target=\"_blank\">为字符串添加样式</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_indexof\" target=\"_blank\">返回字符串中指定文本首次出现的位置 - indexOf()方法</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_match\" target=\"_blank\">查找字符串中特定的字符，若找到，则返回该字符 - match() 方法</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_replace\" target=\"_blank\">替换字符串中的字符 - replace()</a></li> \n <br /> \n <li>更多的字符串对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-obj-string.html\" target=\"_blank\">JavaScript String 对象参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Date（日期）对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_date\" target=\"_blank\">使用 Date() 方法来返回今天的日期和时间</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_gettime\" target=\"_blank\">使用 getTime() 计算从1970年到今天有多少毫秒</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_setfullyear2\" target=\"_blank\">使用 setFullYear() 设置具体的日期</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_toutcstring\" target=\"_blank\">使用 toUTCString() 把当日的日期（根据 UTC）转换为字符串</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_date_weekday\" target=\"_blank\">使用 getDay() 来显示星期，而不仅仅是数字</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing_clock\" target=\"_blank\">显示一个钟表</a></li> \n <br /> \n <li>更多的Date（日期）对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-obj-date.html\" target=\"_blank\">JavaScript Date 对象参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Array（数组）对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_array\" target=\"_blank\">创建数组</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_concat\" target=\"_blank\">合并两个数组 - concat()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_concat2\" target=\"_blank\">合并三个数组 - concat()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_join\" target=\"_blank\">用数组的元素组成字符串 - join()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_pop\" target=\"_blank\">删除数组的最后一个元素 - pop()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_push\" target=\"_blank\">数组的末尾添加新的元素 - push()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_reverse\" target=\"_blank\">反转一个数组中的元素的顺序 - reverse()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_shift\" target=\"_blank\">删除数组的第一个元素 - shift()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_slice_array\" target=\"_blank\">从一个数组中的选择元素 - slice()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_sort\" target=\"_blank\">数组排序（按字母顺序升序）- sort()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_sort2\" target=\"_blank\">数字排序（按数字顺序升序）- sort()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_sort3\" target=\"_blank\">数字排序（按数字顺序降序）- sort()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_splice\" target=\"_blank\">在数组的第2位置添加一个元素 - splice()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_tostring_array\" target=\"_blank\">转换数组到字符串 -toString()</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_unshift\" target=\"_blank\">在数组的开头添加新元素 - unshift()</a></li> \n <br /> \n <li>更多的Array（数组）对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-obj-array.html\" target=\"_blank\">JavaScript Array 对象的参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Boolean（布尔）对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_boolean\" target=\"_blank\">检查逻辑值</a></li> \n <br /> \n <li>更多的Boolean（布尔）对象对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-obj-boolean.html\" target=\"_blank\">JavaScript Boolean 对象的参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Math（算数）对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_round\" target=\"_blank\">使用 round() 对数字进行舍入</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_random\" target=\"_blank\">使用 random() 来返回 0 到 1 之间的随机数</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_max\" target=\"_blank\">使用 max() 来返回两个给定的数中的较大的数</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_min\" target=\"_blank\">使用 min() 来返回两个给定的数中的较小的数</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_celsius\" target=\"_blank\">摄氏度与华氏转换</a></li> \n</ul> \n<h2 class=\"tutheader\">一般</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_object_for_in\" target=\"_blank\">通过对象元素使用for...in语句</a></li> \n <br /> \n <li>更多Math 对象实例在我们的<a href=\"http://www.runoob.com/jsref/jsref-obj-math.html\" target=\"_blank\"><b>JavaScript Math 对象的参考手册。</b></a></li> \n</ul>', null, 'JavaScript 对象 实例|String（字符串）对象|Date（日期）对象|Array（数组）对象|Boolean（布尔）对象|Math（算数）对象|一般|');
INSERT INTO `schoolcontent` VALUES ('200', '202', '<h1>JavaScript <span class=\"color_h1\">Browser 对象</span> 实例</h1> \n<hr /> \n<p class=\"intro\">使用JavaScript来访问和控制浏览器对象实例。</p> \n<h2 class=\"tutheader\">Window 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_alert\" target=\"_blank\">弹出一个警告框</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_alert2\" target=\"_blank\">弹出一个带折行的警告框</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_confirm\" target=\"_blank\">弹出一个确认框，并提醒访客点击的内容</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_prompt\" target=\"_blank\">弹出一个提示框</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_openwindow\" target=\"_blank\">点击一个按钮时，打开一个新窗口</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_openallwindow\" target=\"_blank\">打开一个新窗口，并控制其外观</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_multiwindows\" target=\"_blank\">打开多个新窗口</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_multiwindows\" target=\"_blank\">确保新的窗口没有获得焦点</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_win_focus\" target=\"_blank\">确保新的窗口获得焦点</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_win_close\" target=\"_blank\">关闭新窗口</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_win_closed\" target=\"_blank\">检查新的窗口是否已关闭</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_win_name\" target=\"_blank\">返回新窗口的名字</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_win_opener\" target=\"_blank\">传输一些文本到源（父）窗口</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_win_moveby\" target=\"_blank\">相对于当前位置移动新窗口</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_win_moveto\" target=\"_blank\">移动新窗口到指定位置</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_print\" target=\"_blank\">打印当前页面</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_window_resizeby\" target=\"_blank\">用像素指定窗口大小</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_window_resizeto\" target=\"_blank\">指定窗口大小</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_window_scrollby\" target=\"_blank\">由指定的像素数滚动内容</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_window_scrollto\" target=\"_blank\">滚动到指定内容处</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing2\" target=\"_blank\">一个简单的时钟</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_timing_stop\" target=\"_blank\">用setTimeout() 和 clearTimeout()设置和停止定时器</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_setinterval\" target=\"_blank\">用setInterval() 和 clearInterval()设置和停止定时器</a></li> \n <br /> \n <li>更多的Window 对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\">JavaScript&nbsp; 参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Navigator 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_nav_all\" target=\"_blank\">访问者的浏览器的详细</a></li> \n <br /> \n <li>更多的Navigator 对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\">JavaScript&nbsp; 参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Screen 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_screen_all\" target=\"_blank\">访问者的屏幕的详细</a></li> \n <br /> \n <li>更多的Screen 对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\">JavaScript 参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">History 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_his_length\" target=\"_blank\">返回一个url的历史清单</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_his_back\" target=\"_blank\">创建一个后退按钮</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_his_forward\" target=\"_blank\">创建一个前进按钮</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_his_go\" target=\"_blank\">从url的历史清单转到指定的url</a></li> \n <br /> \n <li>更多的History 对象对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\">JavaScript 参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Location 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_loc_host\" target=\"_blank\">返回主机名和当前url的端口号</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_loc_href\" target=\"_blank\">返回当前页面的整个URL</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_loc_pathname\" target=\"_blank\">返回当前url的路径名</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_loc_protocol\" target=\"_blank\">返回当前URL的协议部分</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_loc_assign\" target=\"_blank\">加载个新文档</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_loc_reload\" target=\"_blank\">重新载入当前文档</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_loc_replace\" target=\"_blank\">替代当前文档</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_breakout\" target=\"_blank\">跳出框架</a></li> \n <br /> \n <li>更多Location 对象实例在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\"><b>JavaScript 参考手册。</b></a></li> \n</ul>', null, 'JavaScript Browser 对象 实例|Window 对象|Navigator 对象|Screen 对象|History 对象|Location 对象|');
INSERT INTO `schoolcontent` VALUES ('201', '203', '<h1>JavaScript <span class=\"color_h1\">对象</span> 实例</h1> \n<hr /> \n<p class=\"intro\">使用内置JavaScript的对象实例。</p> \n<h2 class=\"tutheader\">Document 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_text\" target=\"_blank\">使用 document.write() 输出文本</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjs_formattext\" target=\"_blank\">使用 document.write() 输出 HTML</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_anchors\" target=\"_blank\">返回文档中锚的数目</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_anchors2\" target=\"_blank\">返回文档中第一个锚的 innerHTML</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_forms\" target=\"_blank\">返回文档中表单的数目</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_forms2\" target=\"_blank\">返回文档中第一个表单的名字</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_images\" target=\"_blank\">返回文档中的图像数</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_images2\" target=\"_blank\">返回文档中第一个图像的ID</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_links\" target=\"_blank\">返回文档中的链接数</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_links2\" target=\"_blank\">返回文档中的第一个链接的ID</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_cookie\" target=\"_blank\">返回文档中的所有cookies的名称/值对</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_domain\" target=\"_blank\">返回加载的文档的服务器域名</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_lastmodified\" target=\"_blank\">返回文档的最后一次修改时间</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_referrer\" target=\"_blank\">返回加载的当前文档的URL</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_title\" target=\"_blank\">返回文档的标题</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_url\" target=\"_blank\">返回文档的完整的URL</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_open\" target=\"_blank\">打开输出流，向流中输入文本</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_writeln\" target=\"_blank\">write() 和 writeln()的不同</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_getelementbyid\" target=\"_blank\">用指定的ID弹出一个元素的innerHTML</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_getelementsbyname\" target=\"_blank\">用指定的Name弹出元素的数量</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_doc_getelementsbytagname\" target=\"_blank\">用指定的tagname弹出元素的数量</a></li> \n <br /> \n <li>更多的Document 对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\">JavaScript&nbsp; 参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Anchor 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_anchor_charset\" target=\"_blank\">返回和设置链接的charset属性</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_anchor_href\" target=\"_blank\">返回和设置链接的href属性</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_anchor_hreflang\" target=\"_blank\">返回和设置链接的hreflang属性</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_anchor_name\" target=\"_blank\">返回一个锚的名字</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_anchor_rel\" target=\"_blank\">返回当前的文件和链接的文档之间的关系</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_anchor_target\" target=\"_blank\">改变链接的target属性</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_anchor_type\" target=\"_blank\">返回一个链接的type属性的值</a></li> \n <br /> \n <li>更多的Anchor 对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\">JavaScript&nbsp; 参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Area 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_alt\" target=\"_blank\">返回图像映射某个区域的替代文字</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_coords\" target=\"_blank\">返回图像映射某个区域的坐标</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_hash\" target=\"_blank\">返回一个区域的href属性的锚部分</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_host\" target=\"_blank\">返回的主机名：图像映射的某个区域的端口</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_hostname\" target=\"_blank\">返回图像映射的某个区域的hostname</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_port\" target=\"_blank\">返回图像映射的某个区域的port</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_href\" target=\"_blank\">返回图像映射的某个区域的href</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_pathname\" target=\"_blank\">返回图像映射的某个区域的pathname</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_protocol\" target=\"_blank\">返回图像映射的某个区域的protocol</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_search\" target=\"_blank\">返回一个区域的href属性的querystring部分</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_shape\" target=\"_blank\">返回图像映射的某个区域的shape</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_area_target\" target=\"_blank\">返回图像映射的某个区域的target的值</a></li> \n <br /> \n <li>更多的Area 对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\">JavaScript 参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Base 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_base_href\" target=\"_blank\">返回页面上所有相对URL的基URL</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_base_target\" target=\"_blank\">返回页面上所有相对链接的基链接</a></li> \n <br /> \n <li>更多的Base 对象对象的例子，在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\">JavaScript 参考手册。</a></li> \n</ul> \n<h2 class=\"tutheader\">Button 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_button_disabled\" target=\"_blank\">当点击完button不可用</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_button_name\" target=\"_blank\">返回一个button的name</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_button_type\" target=\"_blank\">返回一个button的type</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_button_value\" target=\"_blank\">返回一个button的value</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_button_form\" target=\"_blank\">返回一个button所属表的ID</a></li> \n <br /> \n <li>更多Button 对象实例在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\"><b>JavaScript 参考手册。</b></a></li> \n</ul> \n<h2 class=\"tutheader\">Form 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_elements\" target=\"_blank\">返回一个表单中所有元素的value</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_acceptcharset\" target=\"_blank\">返回一个表单acceptCharset属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_action\" target=\"_blank\">返回一个表单action属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_enctype\" target=\"_blank\">返回表单中的enctype属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_length\" target=\"_blank\">返回一个表单中元素的数量</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_method\" target=\"_blank\">返回发送表单数据的方法</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_name\" target=\"_blank\">返回一个表单的name</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_target\" target=\"_blank\">返回一个表单target属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_reset\" target=\"_blank\">重置表单</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_form_submit\" target=\"_blank\">提交表单</a></li> \n <br /> \n <li>更多Button 对象实例在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\"><b>JavaScript 参考手册。</b></a></li> \n</ul> \n<h2 class=\"tutheader\">Frame/IFrame 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_align\" target=\"_blank\">对iframe排版</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_contentdocument\" target=\"_blank\">改变一个包含在iframe中的文档的背景颜色</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_frameborder\" target=\"_blank\">返回一个iframe中的frameborder属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_frameborder2\" target=\"_blank\">删除iframe的frameborder</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_height\" target=\"_blank\">改变iframe的高度和宽度</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_longdesc\" target=\"_blank\">返回一个iframe中的longdesc属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_marginheight\" target=\"_blank\">返回一个iframe中的marginheight属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_marginwidth\" target=\"_blank\">返回一个iframe中的marginwidth属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_name\" target=\"_blank\">返回一个iframe中的name属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_scrolling\" target=\"_blank\">返回和设置一个iframe中的scrolling属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_iframe_src\" target=\"_blank\">改变一个iframe的src</a></li> \n <br /> \n <li>更多Frame/IFrame 对象实例在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\"><b>JavaScript 参考手册。</b></a></li> \n</ul> \n<h2 class=\"tutheader\">Image 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_align\" target=\"_blank\">对image排版</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_alt\" target=\"_blank\">返回image的替代文本</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_border\" target=\"_blank\">给image加上border</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_height\" target=\"_blank\">改变image的高度和宽度</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_hspace\" target=\"_blank\">设置image的hspace和vspace属性</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_longdesc\" target=\"_blank\">返回image的longdesc属性的值</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_lowsrc\" target=\"_blank\">创建一个链接指向一个低分辨率的image</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_name\" target=\"_blank\">返回image的name</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_src\" target=\"_blank\">改变image的src</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=tryjsref_img_usemap\" target=\"_blank\">返回一个客户端图像映射的usemap的值</a></li> \n <br /> \n <li>更多Image 对象实例在我们的<a href=\"http://www.runoob.com/jsref/jsref-tutorial.html\" target=\"_blank\"><b>JavaScript 参考手册。</b></a></li> \n</ul> \n<h2 class=\"tutheader\">Event 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_event_keycode\" target=\"_blank\">被按下的键盘键的keycode？</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_event_clientxy\" target=\"_blank\">鼠标的坐标？</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_event_screenxy\" target=\"_blank\">鼠标相对于屏幕的坐标？</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_event_shiftkey\" target=\"_blank\">shift键被按下了吗？</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_event_type\" target=\"_blank\">哪个事件发生了？</a></li> \n</ul> \n<h2 class=\"tutheader\">Option and Select 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_select_disabled\" target=\"_blank\">禁用和启用下拉列表</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_select_form\" target=\"_blank\">获得有下拉列表的表单的ID</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_select_length\" target=\"_blank\">获得下拉列表的选项数量</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_select_size\" target=\"_blank\">将下拉列表变成多行列表</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_select_multiple\" target=\"_blank\">在下拉列表中选择多个选项</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_select_options\" target=\"_blank\">弹出下拉列表中被选中的选项</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_option_index\" target=\"_blank\">弹出下拉列表中被选中的选项的索引</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_option_settext\" target=\"_blank\">改变下拉列表中被选中的选项的文本</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_select_remove\" target=\"_blank\">删除下拉列表中的选项</a></li> \n</ul> \n<h2 class=\"tutheader\">Table, TableHeader, TableRow, TableData 对象</h2> \n<ul class=\"dd\"> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_border\" target=\"_blank\">改变表格边框的宽度</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_paddspac\" target=\"_blank\">改变表格的cellpadding和cellspacing</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_frame\" target=\"_blank\">指定表格的frame</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_rules\" target=\"_blank\">为表格指定规则</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_rows\" target=\"_blank\">一个行的innerHTML</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_cells\" target=\"_blank\">一个单元格的innerHTML</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_createcaption\" target=\"_blank\">为表格创建一个标题</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_deleterow\" target=\"_blank\">删除表格中的行</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_table_insertrow\" target=\"_blank\">添加表格中的行</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_tablerow_insertcell\" target=\"_blank\">添加表格行中的单元格</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_tablerow_align\" target=\"_blank\">单元格内容水平对齐</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_tablerow_valign\" target=\"_blank\">单元格内容垂直对齐</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_tablecell_align\" target=\"_blank\">对单个单元格的内容水平对齐</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_tablecell_valign\" target=\"_blank\">对单个单元格的内容垂直对齐</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_tablerow_cells\" target=\"_blank\">改变单元格的内容</a></li> \n <li><a href=\"http://www.runoob.com/try/try.php?filename=try_dom_tablecell_colspan\" target=\"_blank\">改变行的内容</a></li> \n</ul>', null, 'JavaScript 对象 实例|Document 对象|Anchor 对象|Area 对象|Base 对象|Button 对象|Form 对象|Frame/IFrame 对象|Image 对象|Event 对象|Option and Select 对象|Table, TableHeader, TableRow, TableData 对象|');
INSERT INTO `schoolcontent` VALUES ('202', '204', '<h1>现在您已经学习了 JavaScript， <span class=\"color_h1\">接下来该学习什么呢？</span> </h1> \n<hr /> \n<h2>JavaScript 总结</h2> \n<p>本教程中我们向您讲授了如何向 html 页面添加 JavaScript，使得网站的动态性和交互性更强。</p> \n<p>你已经学习了如何创建对事件的响应，验证表单，以及如何根据不同的情况运行不同的脚本。</p> \n<p>你也学到了如何创建和使用对象，以及如何使用 JavaScript 的内置对象。</p> \n<p>如需更多关于 JavaScript 的信息和知识，请参阅我们的 <a href=\"http://www.runoob.com/js/js-examples.html\">JavaScript 实例</a> 和 <a href=\"http://www.runoob.com/jsref/\">JavaScript 参考手册</a>。</p> \n<hr /> \n<h2>现在已经你已经学习了 JavaScript，接下来该学习什么呢？</h2> \n<p>下一步应该学习 HTML DOM 和 DHTML。</p> \n<p>如果你希望学习关于服务器端脚本的知识，那么下一步应该学习 ASP,PHP, .Net。</p> \n<p><b>HTML DOM</b></p> HTML DOM 定义了访问和操作 HTML 文档的标准方法。 HTML DOM 独立于平台和语言，可被任何编程语言使用，比如 Java、JavaScript 和 VBscript。 假如希望了解更多关于 DOM 的知识，请访问我们的 \n<a href=\"http://www.runoob.com/htmldom/\">HTML DOM 教程</a>。\n<p></p> \n<p><b>jQuery</b></p> \n<p>jQuery 是一个 JavaScript 库。</p> \n<p>jQuery 极大地简化了 JavaScript 编程。</p> \n<p>jQuery 很容易学习。</p> \n<p>假如希望了解更多关于 jQuery 的知识，请访问我们的 <a href=\"http://www.runoob.com/jquery/\">jQuery 教程</a>。</p> \n<p><b>AJAX</b></p> \n<p>AJAX = 异步 JavaScript 和 XML。</p> \n<p>AJAX 不是一种新的编程语言，而是一种使用现有标准的新方法。</p> \n<p>通过与服务器进行数据交换，AJAX 可以在不重新加载整个网页的情况下，对网页的某部分进行更新。</p> \n<p>有很多使用 AJAX 的应用程序案例：新浪微博、Google 地图、开心网等等。</p> \n<p>假如您希望学习更多关于 AJAX 的知识，请访问我们的 <a href=\"http://www.runoob.com/ajax/\">AJAX 教程</a>。</p> \n<p><b>ASP / PHP / .NET</b></p> \n<p>和 HTML 文档中的脚本运行于客户端（浏览器）不同，ASP/PHP 文件中的脚本在服务器上运行。</p> \n<p>使用 ASP，你可以动态地编辑、改变或者添加网站内容，对由 HTML 表单提交而来的数据进行响应，访问数据或者数据库并向浏览器返回结果，或者定制对不同的用户来说更有帮助的网页。</p> \n<p>由于 ASP/PHP 文件返回的是纯粹的 HTML，因此可显示在任何浏览器中。</p> \n<p>如果希望学习更多关于 ASP 的知识，请访问我们的 <a href=\"http://www.runoob.com/asp/\">ASP 教程</a>。</p> \n<p>如果希望学习更多关于 PHP 的知识，请访问我们的 <a href=\"http://www.runoob.com/php/\">PHP 教程</a>。</p> \n<p>如果希望学习更多关于 .NET 的知识，请访问我们的<a href=\"http://www.runoob.com/aspnet/\">.NET 实例/教程</a></p>', null, '现在您已经学习了 JavaScript， 接下来该学习什么呢？|JavaScript 总结|现在已经你已经学习了 JavaScript，接下来该学习什么呢？|');
INSERT INTO `schoolcontent` VALUES ('203', '205', '<h1>JavaScript 和 HTML DOM <span class=\"color_h1\">参考手册</span> </h1> \n<p这部分包含了完整的参考： <=\"\"> \n <p>所有内置的JavaScript对象</p>\n <p> 所有浏览器对象</p> \n <p>所有HTML DOM对象</p> \n <hr /> \n <h2>JavaScript Objects 参考手册</h2> \n <p>参考手册描述了每个对象的属性和方法，并提供了在线实例。</p> \n <ul> \n  <li><a href=\"jsref-obj-array.html\">Array 对象</a></li> \n  <li><a href=\"jsref-obj-boolean.html\">Boolean 对象</a></li> \n  <li><a href=\"jsref-obj-date.html\">Date 对象</a></li> \n  <li><a href=\"jsref-obj-math.html\">Math 对象</a></li> \n  <li><a href=\"jsref-obj-number.html\">Number 对象</a></li> \n  <li><a href=\"jsref-obj-string.html\">String 对象</a></li> \n  <li><a href=\"jsref-obj-regexp.html\">RegExp 对象</a></li> \n  <li><a href=\"jsref-obj-global.html\">全局属性和函数</a></li> \n </ul> \n <hr /> \n <h2>Browser Objects 参考手册</h2> \n <p>参考手册描述了每个对象的属性和方法，并提供了在线实例。</p> \n <ul> \n  <li><a href=\"obj-window.html\">Window 对象</a></li> \n  <li><a href=\"obj-navigator.html\">Navigator 对象</a></li> \n  <li><a href=\"obj-screen.html\">Screen 对象</a></li> \n  <li><a href=\"obj-history.html\">History 对象</a></li> \n  <li><a href=\"obj-location.html\">Location 对象</a></li> \n </ul> \n <hr /> \n <h2>HTML DOM 参考手册</h2> \n <p>参考手册描述了 HTML DOM 的属性和方法，并提供在线实例。</p> \n <ul> \n  <li><a href=\"dom-obj-document.html\">HTML Document</a></li> \n  <li><a href=\"dom-obj-all.html\">HTML Element</a></li> \n  <li><a href=\"dom-obj-attributes.html\">HTML Attributes</a></li> \n  <li><a href=\"dom-obj-event.html\">HTML Events</a></li> \n </ul> \n <hr /> \n <h2>HTML DOM Element Objects 参考手册</h2> \n <p>参考手册描述了每个对象的属性和方法，并提供了在线实例。</p> \n <ul> \n  <li><a href=\"dom-obj-anchor.html\">Anchor 对象</a></li> \n  <li><a href=\"dom-obj-area.html\">Area 对象</a></li> \n  <li><a href=\"dom-obj-base.html\">Base 对象</a></li> \n  <li><a href=\"dom-obj-body.html\">Body 对象</a></li> \n  <li><a href=\"dom-obj-pushbutton.html\">Button 对象</a></li> \n  <li><a href=\"dom-obj-form.html\">Form 对象</a></li> \n  <li><a href=\"dom-obj-frame.html\">Frame/IFrame 对象</a></li> \n  <li><a href=\"dom-obj-frameset.html\">Frameset 对象</a></li> \n  <li><a href=\"dom-obj-image.html\">Image 对象</a></li> \n  <li><a href=\"dom-obj-button.html\">Input Button 对象</a></li> \n  <li><a href=\"dom-obj-checkbox.html\">Input Checkbox 对象</a></li> \n  <li><a href=\"dom-obj-fileupload.html\">Input File 对象</a></li> \n  <li><a href=\"dom-obj-hidden.html\">Input Hidden 对象</a></li> \n  <li><a href=\"dom-obj-password.html\">Input Password 对象</a></li> \n  <li><a href=\"dom-obj-radio.html\">Input Radio 对象</a></li> \n  <li><a href=\"dom-obj-reset.html\">Input Reset 对象</a></li> \n  <li><a href=\"dom-obj-submit.html\">Input Submit 对象</a></li> \n  <li><a href=\"dom-obj-text.html\">Input Text 对象</a></li> \n  <li><a href=\"dom-obj-link.html\">Link 对象</a></li> \n  <li><a href=\"dom-obj-meta.html\">Meta 对象</a></li> \n  <li><a href=\"dom-obj-object.html\">Object 对象</a></li> \n  <li><a href=\"dom-obj-option.html\">Option 对象</a></li> \n  <li><a href=\"dom-obj-select.html\">Select 对象</a></li> \n  <li><a href=\"dom-obj-style.html\">Style 对象</a></li> \n  <li><a href=\"dom-obj-table.html\">Table 对象</a></li> \n  <li><a href=\"dom-obj-tabledata.html\">td / th 对象</a></li> \n  <li><a href=\"dom-obj-tablerow.html\">tr 对象</a></li> \n  <li><a href=\"dom-obj-textarea.html\">Textarea 对象</a></li> \n </ul> \n</p这部分包含了完整的参考：>', null, 'JavaScript 和 HTML DOM 参考手册|JavaScript Objects 参考手册|Browser Objects 参考手册|HTML DOM 参考手册|HTML DOM Element Objects 参考手册|');
INSERT INTO `schoolcontent` VALUES ('204', '206', '<h1> HTML DOM <span class=\"color_h1\">Document</span> 对象</h1> \n<hr /> \n<h2>HTML DOM 节点</h2> \n<p>在 HTML DOM (Document Object Model) 中 , 每一个元素都是 <strong>节点</strong>: </p> \n<ul> \n <li>文档是一个文档。</li> \n <li>所有的HTML元素都是元素节点。</li> \n <li>所有 HTML 属性都是属性节点。</li> \n <li>文本插入到 HTML 元素是文本节点。are text nodes。</li> \n <li>注释是注释节点。</li> \n</ul> \n<hr /> \n<h2>Document 对象</h2> \n<p>当浏览器载入 HTML 文档, 它就会成为 <strong>document 对象</strong>。</p> \n<p>document 对象是HTML文档的根节点与所有其他节点（元素节点，文本节点，属性节点, 注释节点）。</p> \n<p>Document 对象使我们可以从脚本中对 HTML 页面中的所有元素进行访问。</p> \n<p><b>提示：</b>Document 对象是 Window 对象的一部分，可通过 window.document 属性对其进行访问。</p> \n<hr /> \n<h2>浏览器支持</h2> \n<p> <img src=\"http://www.runoob.com/images/compatible_ie.gif\" width=\"31\" height=\"30\" alt=\"Internet Explorer\" title=\"Internet Explorer\" /><img src=\"http://www.runoob.com/images/compatible_firefox.gif\" width=\"31\" height=\"30\" alt=\"Firefox\" title=\"Firefox\" /><img src=\"http://www.runoob.com/images/compatible_opera.gif\" width=\"28\" height=\"30\" alt=\"Opera\" title=\"Opera\" /><img src=\"http://www.runoob.com/images/compatible_chrome.gif\" width=\"31\" height=\"30\" alt=\"Google Chrome\" title=\"Google Chrome\" /><img src=\"http://www.runoob.com/images/compatible_safari.gif\" width=\"28\" height=\"30\" alt=\"Safari\" title=\"Safari\" /></p> \n<p>所有主要浏览器都支持 Document 对象。</p> \n<hr /> \n<h2>Document 对象属性和方法</h2> \n<p>HTML文档中可以使用以上属性和方法:</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"35%\" align=\"left\">属性 / 方法</th> \n   <th align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"prop-document-activeelement.html\">document.activeElement</a></td> \n   <td>返回当前获取焦点元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-addeventlistener.html\">document.addEventListener()</a></td> \n   <td>向文档添加句柄</td> \n  </tr> \n  <tr> \n   <td>document.adoptNode(node)</td> \n   <td>从另外一个文档返回 adapded 节点到当前文档。</td> \n  </tr> \n  <tr> \n   <td><a href=\"coll-doc-anchors.html\">document.anchors</a></td> \n   <td>返回对文档中所有 Anchor 对象的引用。</td> \n  </tr> \n  <tr> \n   <td>document.applets</td> \n   <td>返回对文档中所有 Applet 对象的引用。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-baseuri.html\">document.baseURI</a></td> \n   <td>返回文档的绝对基础 URI</td> \n  </tr> \n  <tr> \n   <td>document.body</td> \n   <td>返回文档的body元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-doc-close.html\">document.close()</a></td> \n   <td>关闭用 document.open() 方法打开的输出流，并显示选定的数据。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-cookie.html\">document.cookie</a></td> \n   <td>设置或返回与当前文档有关的所有 cookie。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-createattribute.html\">document.createAttribute()</a></td> \n   <td>创建一个属性节点</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-createcomment.html\">document.createComment()</a></td> \n   <td>createComment() 方法可创建注释节点。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-createdocumentfragment.html\">document.createDocumentFragment()</a></td> \n   <td>创建空的 DocumentFragment 对象，并返回此对象。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-createelement.html\">document.createElement()</a></td> \n   <td>创建元素节点。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-createtextnode.html\">document.createTextNode()</a></td> \n   <td>创建文本节点。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-document-doctype.html\">document.doctype</a></td> \n   <td>返回与文档相关的文档类型声明 (DTD)。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-document-documentelement.html\">document.documentElement</a></td> \n   <td>返回文档的根节点</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-documentmode.html\">document.documentMode</a></td> \n   <td>返回用于通过浏览器渲染文档的模式</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-document-documenturi.html\">document.documentURI</a></td> \n   <td>设置或返回文档的位置</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-domain.html\">document.domain</a></td> \n   <td>返回当前文档的域名。</td> \n  </tr> \n  <tr> \n   <td>document.domConfig</td> \n   <td>返回normalizeDocument()被调用时所使用的配置</td> \n  </tr> \n  <tr> \n   <td>document.embeds</td> \n   <td>返回文档中所有嵌入的内容（embed）集合</td> \n  </tr> \n  <tr> \n   <td><a href=\"coll-doc-forms.html\">document.forms</a></td> \n   <td>返回对文档中所有 Form 对象引用。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-getelementsbyclassname.html\">document. getElementsByClassName()</a></td> \n   <td>返回文档中所有指定类名的元素集合，作为 NodeList 对象。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-getelementbyid.html\">document.getElementById()</a></td> \n   <td>返回对拥有指定 id 的第一个对象的引用。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-doc-getelementsbyname.html\">document.getElementsByName()</a></td> \n   <td>返回带有指定名称的对象集合。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-getelementsbytagname.html\">document.getElementsByTagName()</a></td> \n   <td>返回带有指定标签名的对象集合。</td> \n  </tr> \n  <tr> \n   <td><a href=\"coll-doc-images.html\">document.images</a></td> \n   <td>返回对文档中所有 Image 对象引用。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-document-implementation.html\">document.implementation</a></td> \n   <td>返回处理该文档的 DOMImplementation 对象。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-importnode.html\">document.importNode()</a></td> \n   <td>把一个节点从另一个文档复制到该文档以便应用。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-document-inputencoding.html\">document.inputEncoding</a></td> \n   <td>返回用于文档的编码方式（在解析时）。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-lastmodified.html\">document.lastModified</a></td> \n   <td>返回文档被最后修改的日期和时间。</td> \n  </tr> \n  <tr> \n   <td><a href=\"coll-doc-links.html\">document.links</a></td> \n   <td>返回对文档中所有 Area 和 Link 对象引用。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-normalize.html\">document.normalize()</a></td> \n   <td>删除空文本节点，并连接相邻节点</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-normalizedocument.html\">document.normalizeDocument()</a></td> \n   <td>删除空文本节点，并连接相邻节点的</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-doc-open.html\">document.open()</a></td> \n   <td>打开一个流，以收集来自任何 document.write() 或 document.writeln() 方法的输出。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-queryselector.html\">document.querySelector()</a></td> \n   <td>返回文档中匹配指定的CSS选择器的第一元素</td> \n  </tr> \n  <tr> \n   <td>document.querySelectorAll()</td> \n   <td>document.querySelectorAll() 是 HTML5中引入的新方法，返回文档中匹配的CSS选择器的所有元素节点列表</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-readystate.html\">document.readyState</a></td> \n   <td>返回文档状态 (载入中……) </td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-referrer.html\">document.referrer</a></td> \n   <td>返回载入当前文档的文档的 URL。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-removeeventlistener.html\">document.removeEventListener()</a></td> \n   <td>移除文档中的事件句柄(由 addEventListener() 方法添加)</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-document-renamenode.html\">document.renameNode()</a></td> \n   <td>重命名元素或者属性节点。</td> \n  </tr> \n  <tr> \n   <td>document.scripts</td> \n   <td>返回页面中所有脚本的集合。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-document-stricterrorchecking.html\">document.strictErrorChecking</a></td> \n   <td>设置或返回是否强制进行错误检查。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-title.html\">document.title</a></td> \n   <td>返回当前文档的标题。</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-doc-url.html\">document.URL</a></td> \n   <td>返回文档完整的URL</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-doc-write.html\">document.write()</a></td> \n   <td>向文档写 HTML 表达式 或 JavaScript 代码。</td> \n  </tr> \n  <tr> \n   <td><a href=\"met-doc-writeln.html\">document.writeln()</a></td> \n   <td>等同于 write() 方法，不同的是在每个表达式之后写一个换行符。</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>警告 !!!</h2> \n<p>在 W3C DOM核心，文档对象 继承节点对象的所有属性和方法。</p> \n<p>很多属性和方法在文档中是没有意义的。</p> \n<p><strong>HTML 文档对象可以避免使用这些节点对象和属性：</strong></p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"30%\" align=\"left\">&nbsp;属性 / 方法</th> \n   <th align=\"left\">避免的原因</th> \n  </tr> \n  <tr> \n   <td>document.attributes</td> \n   <td>文档没有该属性</td> \n  </tr> \n  <tr> \n   <td>document.hasAttributes()</td> \n   <td>文档没有该属性</td> \n  </tr> \n  <tr> \n   <td>document.nextSibling</td> \n   <td>文档没有下一节点</td> \n  </tr> \n  <tr> \n   <td>document.nodeName</td> \n   <td>这个通常是 #document</td> \n  </tr> \n  <tr> \n   <td>document.nodeType</td> \n   <td>这个通常是 9(DOCUMENT_NODE) </td> \n  </tr> \n  <tr> \n   <td>document.nodeValue</td> \n   <td>文档没有一个节点值</td> \n  </tr> \n  <tr> \n   <td>document.ownerDocument</td> \n   <td>文档没有主文档</td> \n  </tr> \n  <tr> \n   <td>document.ownerElement</td> \n   <td>文档没有自己的节点</td> \n  </tr> \n  <tr> \n   <td>document.parentNode</td> \n   <td>文档没有父节点</td> \n  </tr> \n  <tr> \n   <td>document.previousSibling</td> \n   <td>文档没有兄弟节点</td> \n  </tr> \n  <tr> \n   <td>document.textContent</td> \n   <td>文档没有文本节点</td> \n  </tr> \n </tbody>\n</table>', null, 'HTML DOM Document 对象|HTML DOM 节点|Document 对象|浏览器支持|Document 对象属性和方法|警告 !!!|');
INSERT INTO `schoolcontent` VALUES ('205', '207', '<h1>jQuery <span class=\"color_h1\">教程</span> </h1> \n<div class=\"tutintro\"> \n <p>jQuery 是一个 JavaScript 库。</p> \n <p>jQuery 极大地简化了 JavaScript 编程。</p> \n <p>jQuery 很容易学习。</p>\n <p> </p>\n</div> \n<h2 class=\"tutheader\">本章节的每一篇都包含了在线实例</h2> \n<p>通过本站的在线编辑器，你可以在线运行修改后的代码，并查看运行结果。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br /> &nbsp; $(&quot;p&quot;).click(function(){\n  <br /> &nbsp;&nbsp;&nbsp; $(this).hide();\n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide\">尝试一下 &raquo;</a> \n</div> \n<p><b>点击 &quot;尝试一下&quot; 按钮查看运行结果。</b></p> \n<h2 class=\"tutheader\">jQuery 实例</h2> \n<p>在本教程中，您将通过教程以及许多在线实例，学到如何通过使用 jQuery 应用 JavaScript 效果。</p> \n<ul> \n <li><a href=\"jquery-examples.html\">jQuery 在线实例</a></li> \n</ul> \n<hr />\n<h2>jQuery 测验</h2> \n<p>在w3cschool上测试你的 jQuery 技能!</p> \n<ul> \n <li><a href=\"http://www.runoob.com/quiz/jquery-quiz.html\">jQuery 测验</a></li> \n</ul> \n<br />\n<h2 class=\"tutheader\">jQuery 参考手册</h2> \n<p>在本教程中，你将学习到更多的jquery的使用方法。</p> \n<ul> \n <li><a href=\"jquery-ref-selectors.html\">jQuery 参考手册</a></li> \n <li><a href=\"http://www.runoob.com/manual/jquery/\">jQuery API 手册</a></li> \n</ul> \n<br />', null, 'jQuery 教程|本章节的每一篇都包含了在线实例|实例|jQuery 实例|jQuery 测验|jQuery 参考手册|');
INSERT INTO `schoolcontent` VALUES ('206', '208', '<h1>jQuery <span class=\"color_h1\">简介</span> </h1> \n<hr /> \n<p class=\"intro\">jQuery 库可以通过一行简单的标记被添加到网页中。</p> \n<hr /> \n<h2>您需要具备的基础知识</h2> \n<p>在您开始学习 jQuery 之前，您应该对以下知识有基本的了解：</p> \n<ul> \n <li>HTML</li> \n <li>CSS</li> \n <li>JavaScript</li> \n</ul> \n<p>如果您需要首先学习这些科目，请在我们的<a href=\"http://w3cschool.cc\"> 首页 </a>查找这些教程。</p> \n<hr /> \n<h2>什么是 jQuery ？</h2> \n<p>jQuery是一个JavaScript函数库。</p> \n<p>jQuery是一个轻量级的&quot;写的少，做的多&quot;的JavaScript库。</p> \n<p>jQuery库包含以下功能：</p> \n<ul> \n <li>HTML 元素选取</li> \n <li>HTML 元素操作</li> \n <li>CSS 操作</li> \n <li>HTML 事件函数</li> \n <li>JavaScript 特效和动画</li> \n <li>HTML DOM 遍历和修改</li> \n <li>AJAX</li> \n <li>Utilities</li> \n</ul> \n<p><b>提示：</b> 除此之外，Jquery还提供了大量的插件。</p> \n<hr /> \n<h2>为什么使用 jQuery ？</h2> \n<p>目前网络上有大量开源的 JS 框架, 但是 jQuery 是目前最流行的 JS 框架，而且提供了大量的扩展。</p> \n<p>很多大公司都在使用 jQuery， 例如:</p> \n<ul> \n <li>Google</li> \n <li>Microsoft</li> \n <li>IBM</li> \n <li>Netflix</li> \n</ul> \n<table class=\"lamp\" id=\"table1\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <b>jQuery是否适用于所有浏览器?<br /></b><br />jQuery 团体知道JS在不同浏览器中存在着大量的兼容性问题，目前jQuery兼容于所有主流浏览器, 包括Internet Explorer 6!</td> \n  </tr>\n </tbody>\n</table>', null, 'jQuery 简介|您需要具备的基础知识|什么是 jQuery ？|为什么使用 jQuery ？|');
INSERT INTO `schoolcontent` VALUES ('207', '209', '<h1>jQuery <span class=\"color_h1\">安装</span> </h1> \n<hr /> \n<h2>网页中添加 jQuery</h2> \n<p>可以通过多种方法在网页中添加 jQuery。 您可以使用以下方法：</p> \n<ul> \n <li>从 <a target=\"_blank\" href=\"http://jquery.com/download/\">jquery.com</a> 下载 jQuery 库</li> \n <li>从 CDN 中载入 jQuery, 如从 Google 中加载 jQuery</li> \n</ul> \n<hr /> \n<h2>下载 jQuery</h2> \n<p>有两个版本的 jQuery 可供下载：</p> \n<ul> \n <li>Production version - 用于实际的网站中，已被精简和压缩。</li> \n <li>Development version - 用于测试和开发（未压缩，是可读的代码）</li> \n</ul> \n<p>以上两个版本都可以从 <a target=\"_blank\" href=\"http://jquery.com/download/\">jquery.com</a> 中下载。</p> \n<p>jQuery 库是一个 JavaScript 文件，您可以使用 HTML 的 &lt;script&gt; 标签引用它：</p> \n<div class=\"code\">\n <div>\n   &lt;head&gt;\n  <br /> &lt;script src=&quot;jquery-1.10.2.min.js&quot;&gt;&lt;/script&gt;\n  <br /> &lt;/head&gt; \n </div>\n</div> \n<p><b>提示：</b> 将下载的文件放在网页的同一目录下，就可以使用jQuery。<br /></p> \n<table class=\"lamp\" id=\"table1\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <b>您是否很疑惑为什么我们没有在 &lt;script&gt; 标签中使用 type=&quot;text/javascript&quot; ？</b><br /><br /> 在 HTML5 中，不必那样做了。JavaScript 是 HTML5 以及所有现代浏览器中的默认脚本语言！</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>替代方案</h2> \n<p>如果您不希望下载并存放 jQuery，那么也可以通过 CDN（内容分发网络） 引用它。</p> \n<p>百度、又拍云、新浪、谷歌和微软的服务器都存有 jQuery 。</p> \n<p>如果你的站点用户是国内的，建议使用百度、又拍云、新浪等国内CDN地址，如果你站点用户是国外的可以使用谷歌和微软。</p> \n<p><strong>注：</strong>本站实例均采用百度 jQuery CDN库。</p> \n<p>如需从百度、又拍云、新浪、谷歌或微软引用 jQuery，请使用以下代码之一：</p> \n<div class=\"example\"> \n <h2 class=\"example\">Baidu CDN:</h2> \n <div class=\"example_code\">\n   &lt;head&gt;\n  <br /> &lt;script src=&quot;http://libs.baidu.com/jquery/1.10.2/jquery.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_lib_baidu\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">又拍云 CDN:</h2> \n <div class=\"example_code\">\n   &lt;head&gt;\n  <br /> &lt;script src=&quot;http://upcdn.b0.upaiyun.com/libs/jquery/jquery-2.0.2.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_lib_upcdn\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div>\n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">新浪 CDN:</h2> \n <div class=\"example_code\">\n   &lt;head&gt;\n  <br /> &lt;script src=&quot;http://lib.sinaapp.com/js/jquery/2.0.2/jquery-2.0.2.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_lib_sina\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br /> \n<div class=\"example\"> \n <h2 class=\"example\">Google CDN:</h2> \n <div class=\"example_code\">\n   &lt;head&gt;\n  <br /> &lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_lib_google\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <b>通过 Google CDN 来获得最新可用的版本：</b><br /><br /> 不大推荐使用Google CDN来获取版本，因为Google产品在中国很不稳定。<br /> 如果您观察上什么的 Google URL - 在 URL 中规定了 jQuery 版本 (1.8.0)。如果您希望使用最新版本的 jQuery，也可以从版本字符串的末尾（比如本例 1.8）删除一个数字，谷歌会返回 1.8 系列中最新的可用版本（1.8.0、1.8.1 等等），或者也可以只剩第一个数字，那么谷歌会返回 1 系列中最新的可用版本（从 1.1.0 到 1.9.9）。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<div class=\"example\"> \n <h2 class=\"example\">Microsoft CDN:</h2> \n <div class=\"example_code\">\n   &lt;head&gt;\n  <br /> &lt;script src=&quot;http://ajax.htmlnetcdn.com/ajax/jQuery/jquery-1.10.2.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br /> &lt;/head&gt; \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_lib_microsoft\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <b>使用百度、又拍云、新浪、谷歌或微软的 jQuery，有一个很大的优势：</b><br /><br /> 许多用户在访问其他站点时，已经从百度、又拍云、新浪、谷歌或微软加载过 jQuery。所有结果是，当他们访问您的站点时，会从缓存中加载 jQuery，这样可以减少加载时间。同时，大多数 CDN 都可以确保当用户向其请求文件时，会从离用户最近的服务器上返回响应，这样也可以提高加载速度。</td> \n  </tr>\n </tbody>\n</table>', null, 'jQuery 安装|网页中添加 jQuery|下载 jQuery|替代方案|Baidu CDN:|又拍云 CDN:|新浪 CDN:|Google CDN:|Microsoft CDN:|');
INSERT INTO `schoolcontent` VALUES ('208', '210', '<h1>jQuery <span class=\"color_h1\">语法</span> </h1> \n<hr /> \n<p class=\"intro\">通过 jQuery，您可以选取（查询，query） HTML 元素，并对它们执行&quot;操作&quot;（actions）。</p> \n<hr /> \n<h2>jQuery 语法</h2> \n<p>jQuery 语法是通过选取 HTML 元素，并对选取的元素执行某些操作。</p> \n<p>基础语法： <b>$(<i>selector</i>).<i>action</i>()</b></p> \n<ul> \n <li>美元符号定义 jQuery</li> \n <li>选择符（selector）&quot;查询&quot;和&quot;查找&quot; HTML 元素</li> \n <li>jQuery 的 action() 执行对元素的操作</li> \n</ul> \n<p>实例:</p>\n<ul>\n <li> <p>$(this).hide() - 隐藏当前元素</p> </li>\n <li> <p>$(&quot;p&quot;).hide() - 隐藏所有 &lt;p&gt; 元素</p> </li>\n <li> <p>$(&quot;p.test&quot;).hide() - 隐藏所有 class=&quot;test&quot; 的 &lt;p&gt; 元素</p> </li>\n <li> <p>$(&quot;#test&quot;).hide() - 隐藏所有 id=&quot;test&quot; 的元素</p></li>\n</ul> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <b>你对 CSS 选择器熟悉吗？</b><br /><br /> jQuery 使用的语法是 XPath 与 CSS 选择器语法的组合。在本教程接下来的章节，您将学习到更多有关选择器的语法。</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>文档就绪事件</h2> \n<p>您也许已经注意到在我们的实例中的所有 jQuery 函数位于一个 document ready 函数中：</p> \n<div class=\"code notranslate\"> \n <div>\n   $(document).ready(function(){\n  <br />\n  <br />&nbsp;&nbsp; \n  <i>// jQuery methods go here...</i>\n  <br />\n  <br /> }); \n </div> \n</div> \n<p>这是为了防止文档在完全加载（就绪）之前运行 jQuery 代码。</p> \n<p>如果在文档没有完全加载之前就运行函数，操作可能失败。下面是两个具体的例子：</p> \n<ul> \n <li>试图隐藏一个不存在的元素</li> \n <li>获得未完全加载的图像的大小</li> \n</ul> \n<p><b>提示：</b>简洁写法（与以上写法效果相同）:</p> \n<div class=\"code notranslate\"> \n <div>\n   $(function(){\n  <br />\n  <br />&nbsp;&nbsp; \n  <i>// jQuery methods go here...</i>\n  <br />\n  <br /> }); \n </div> \n</div> \n<p>以上两种方式你可以选择你喜欢的方式实现文档就绪后执行jQuery方法。</p>', null, 'jQuery 语法|jQuery 语法|文档就绪事件|');
INSERT INTO `schoolcontent` VALUES ('209', '211', '<h1>jQuery <span class=\"color_h1\">选择器</span> </h1> \n<hr /> \n<p class=\"intro\">jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。</p> \n<hr /> \n<h2>jQuery 选择器</h2> \n<p>jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。</p> \n<p>jQuery 选择器基于元素的 id、类、类型、属性、属性值等&quot;查找&quot;（或选择）HTML 元素。 它基于已经存在的 <a href=\"http://www.runoob.com/cssref/css-selectors.html\">CSS 选择器</a>，除此之外，它还有一些自定义的选择器。</p> \n<p>jQuery 中所有选择器都以美元符号开头：$()。</p> \n<hr /> \n<h2>元素选择器</h2> \n<p> jQuery 元素选择器基于元素名选取元素。</p> \n<p>在页面中选取所有 &lt;p&gt; 元素:</p> \n<div class=\"code notranslate\"> \n <div>\n   $(&quot;p&quot;) \n </div> \n</div> \n<p><b>实例</b></p> \n<p>用户点击按钮后，所有 &lt;p&gt; 元素都隐藏： </p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br /> &nbsp; $(&quot;button&quot;).click(function(){\n  <br /> &nbsp;&nbsp;&nbsp; $(&quot;p&quot;).hide();\n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_p\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2> #id 选择器</h2> \n<p>jQuery #id 选择器通过 HTML 元素的 id 属性选取指定的元素。</p> \n<p>页面中元素的 id 应该是唯一的，所以您要在页面中选取唯一的元素需要通过 #id 选择器。</p> \n<p>通过 id 选取元素语法如下：</p> \n<div class=\"code notranslate\"> \n <div>\n   $(&quot;#test&quot;) \n </div> \n</div> \n<p><b>实例</b></p> \n<p>当用户点击按钮后，有 id=&quot;test&quot; 属性的元素将被隐藏：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br /> &nbsp; $(&quot;button&quot;).click(function(){\n  <br /> &nbsp;&nbsp;&nbsp; $(&quot;#test&quot;).hide();\n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_id\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2> .class 选择器</h2> \n<p>jQuery 类选择器可以通过指定的 class 查找元素。</p> \n<p>语法如下：</p> \n<div class=\"code notranslate\"> \n <div>\n   $(&quot;.test&quot;) \n </div> \n</div> \n<p><b>实例</b></p> \n<p>用户点击按钮后所有带有 class=&quot;test&quot; 属性的元素都隐藏：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br /> &nbsp; $(&quot;button&quot;).click(function(){\n  <br /> &nbsp;&nbsp;&nbsp; $(&quot;.test&quot;).hide();\n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_class\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>更多实例</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"25%\" align=\"left\">语法</th> \n   <th width=\"65%\" align=\"left\">描述</th> \n   <th width=\"10%\" align=\"left\">实例</th> \n  </tr> \n  <tr> \n   <td>$(&quot;*&quot;)</td> \n   <td>选取所有元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_all2\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(this)</td> \n   <td>选取当前 HTML 元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_this\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;p.intro&quot;)</td> \n   <td>选取 class 为 intro 的 &lt;p&gt; 元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_pclass\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;p:first&quot;)</td> \n   <td>选取第一个 &lt;p&gt; 元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_pfirst\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;ul li:first&quot;)</td> \n   <td>选取第一个 &lt;ul&gt; 元素的第一个 &lt;li&gt; 元素 </td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_ullifirst\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;ul li:first-child&quot;)</td> \n   <td>选取每个 &lt;ul&gt; 元素的第一个 &lt;li&gt; 元素 </td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_ullifirstchild\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;[href]&quot;)</td> \n   <td>选取带有 href 属性的元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_hrefattr\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;a[target=\'_blank\']&quot;)</td> \n   <td>选取所有 target 属性值等于 &quot;_blank&quot; 的 &lt;a&gt; 元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_hrefattrblank\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;a[target!=\'_blank\']&quot;)</td> \n   <td>选取所有 target 属性值不等于 &quot;_blank&quot; 的 &lt;a&gt; 元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_hrefattrnotblank\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;:button&quot;)</td> \n   <td>选取所有 type=&quot;button&quot; 的 &lt;input&gt; 元素 和 &lt;button&gt; 元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_button2\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;tr:even&quot;)</td> \n   <td>选取偶数位置的 &lt;tr&gt; 元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_even\">在线实例</a></td> \n  </tr> \n  <tr> \n   <td>$(&quot;tr:odd&quot;)</td> \n   <td>选取奇数位置的 &lt;tr&gt; 元素</td> \n   <td><a target=\"_blank\" class=\"tryitbtn\" style=\"width:55px;padding-top:0px;padding-bottom:1px\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_sel_odd\">在线实例</a></td> \n  </tr> \n </tbody>\n</table> \n<hr /> \n<h2>独立文件中使用 jQuery 函数</h2> \n<p>如果您的网站包含许多页面，并且您希望您的 jQuery 函数易于维护，那么请把您的 jQuery 函数放到独立的 .js 文件中。</p> \n<p>当我们在教程中演示 jQuery 时，会将函数直接添加到 &lt;head&gt; 部分中。不过，把它们放到一个单独的文件中会更好，就像这样（通过 src 属性来引用文件）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   &lt;head&gt;\n  <br /> &lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js&quot;&gt;\n  <br /> &lt;/script&gt;\n  <br />\n  <span class=\"marked\">&lt;script src=&quot;my_jquery_functions.js&quot;&gt;&lt;/script&gt;</span>\n  <br /> &lt;/head&gt; \n </div> \n <br /> \n</div>', null, 'jQuery 选择器|jQuery 选择器|元素选择器|实例|#id 选择器|实例|.class 选择器|实例|更多实例|独立文件中使用 jQuery 函数|实例|');
INSERT INTO `schoolcontent` VALUES ('210', '212', '<h1>jQuery <span class=\"color_h1\">事件</span> </h1> \n<hr /> \n<p class=\"intro\">jQuery 是为事件处理特别设计的。</p> \n<hr /> \n<h2>什么是事件？</h2> \n<p>页面对不同访问者的响应叫做事件。</p> \n<p>事件处理程序指的是当 HTML 中发生某些事件时所调用的方法。</p> \n<p>实例：</p> \n<ul> \n <li>在元素上移动鼠标。</li> \n <li>选取单选按钮</li> \n <li>点击元素</li> \n</ul> \n<p>在事件中经常使用术语&quot;触发&quot;（或&quot;激发&quot;）例如： &quot;当您按下按键时触发 keypress 事件&quot;。</p> \n<p>常见 DOM 事件：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"23%\" align=\"left\">鼠标事件</th> \n   <th width=\"25%\" align=\"left\">键盘事件</th> \n   <th width=\"22%\" align=\"left\">表单事件</th> \n   <th width=\"30%\" align=\"left\">文档/窗口事件</th> \n  </tr> \n  <tr> \n   <td>click</td> \n   <td>keypress</td> \n   <td>submit</td> \n   <td>load</td> \n  </tr> \n  <tr> \n   <td>dblclick</td> \n   <td>keydown</td> \n   <td>change</td> \n   <td>resize</td> \n  </tr> \n  <tr> \n   <td>mouseenter</td> \n   <td>keyup</td> \n   <td>focus</td> \n   <td>scroll</td> \n  </tr> \n  <tr> \n   <td>mouseleave</td> \n   <td>&nbsp;</td> \n   <td>blur</td> \n   <td>unload</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>jQuery 事件方法语法</h2> \n<p>在 jQuery 中，大多数 DOM 事件都有一个等效的 jQuery 方法。</p> \n<p>页面中指定一个点击事件：</p> \n<div class=\"code notranslate\"> \n <div>\n   $(&quot;p&quot;).click(); \n </div> \n</div> \n<p>下一步是定义什么时间触发事件。您可以通过一个事件函数实现：</p> \n<div class=\"code notranslate\"> \n <div>\n   $(&quot;p&quot;).click(function(){\n  <br /> &nbsp; // action goes here!!\n  <br /> }); \n </div> \n</div> \n<br />\n<hr /> \n<h2>常用的 jQuery 事件方法</h2> \n<p><b>$(document).ready()</b></p> \n<p>$(document).ready() 方法允许我们在文档完全加载完后执行函数。该事件方法在 <a href=\"jquery-syntax.html\">jQuery 语法</a> 章节中已经提到过。 </p> \n<p><b>click()</b></p> \n<p>click() 方法是当按钮点击事件被触发时会调用一个函数。</p> \n<p>该函数在用户点击 HTMl 元素时执行。</p> \n<p>在下面的实例中，当点击事件在某个 &lt;p&gt; 元素上触发时，隐藏当前的 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;p&quot;).click(function(){\n  <br /> &nbsp; $(this).hide();\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_click\">尝试一下 &raquo;</a> \n</div> \n<p><b>dblclick()</b></p> \n<p>当双击元素时，会发生 dblclick 事件。</p> \n<p>dblclick() 方法触发 dblclick 事件，或规定当发生 dblclick 事件时运行的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;p&quot;).dblclick(function(){\n  <br /> &nbsp; $(this).hide();\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dblclick\">尝试一下 &raquo;</a> \n</div> \n<p><b>mouseenter()</b></p> \n<p>当鼠标指针穿过元素时，会发生 mouseenter 事件。</p> \n<p>mouseenter() 方法触发 mouseenter 事件，或规定当发生 mouseenter 事件时运行的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#p1&quot;).mouseenter(function(){\n  <br /> &nbsp; alert(&quot;You entered p1!&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_mouseenter\">尝试一下 &raquo;</a> \n</div> \n<p><b>mouseleave()</b></p> \n<p>当鼠标指针离开元素时，会发生 mouseleave 事件。</p> \n<p>mouseleave() 方法触发 mouseleave 事件，或规定当发生 mouseleave 事件时运行的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#p1&quot;).mouseleave(function(){\n  <br /> &nbsp; alert(&quot;Bye! You now leave p1!&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_mouseleave\">尝试一下 &raquo;</a> \n</div> \n<p><b>mousedown()</b></p> \n<p>当鼠标指针移动到元素上方，并按下鼠标按键时，会发生 mousedown 事件。</p> \n<p>mousedown() 方法触发 mousedown 事件，或规定当发生 mousedown 事件时运行的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#p1&quot;).mousedown(function(){\n  <br /> &nbsp; alert(&quot;Mouse down over p1!&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_mousedown\">尝试一下 &raquo;</a> \n</div> \n<p><b>mouseup()</b></p> \n<p>当在元素上松开鼠标按钮时，会发生 mouseup 事件。</p> \n<p>mouseup() 方法触发 mouseup 事件，或规定当发生 mouseup 事件时运行的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#p1&quot;).mouseup(function(){\n  <br /> &nbsp; alert(&quot;Mouse up over p1!&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_mouseup\">尝试一下 &raquo;</a> \n</div> \n<p><b>hover()</b></p> \n<p>hover()方法用于模拟光标悬停事件。</p> \n<p>当鼠标移动到元素上时，会触发指定的第一个函数(mouseenter);当鼠标移出这个元素时，会触发指定的第二个函数(mouseleave)。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#p1&quot;).hover(function(){\n  <br /> &nbsp; alert(&quot;You entered p1!&quot;);\n  <br /> &nbsp; },\n  <br /> &nbsp; function(){\n  <br /> &nbsp; alert(&quot;Bye! You now leave p1!&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hover\">尝试一下 &raquo;</a> \n</div> \n<p><b>focus()</b></p> \n<p>当元素获得焦点时，发生 focus 事件。</p> \n<p>当通过鼠标点击选中元素或通过 tab 键定位到元素时，该元素就会获得焦点。</p> \n<p>focus() 方法触发 focus 事件，或规定当发生 focus 事件时运行的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;input&quot;).focus(function(){\n  <br /> &nbsp; $(this).css(&quot;background-color&quot;,&quot;#cccccc&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_focus_blur\">尝试一下 &raquo;</a> \n</div> \n<p><b>blur()</b></p> \n<p>当元素失去焦点时，发生 blur 事件。</p> \n<p>blur() 方法触发 blur 事件，或规定当发生 blur 事件时运行的函数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;input&quot;).blur(function(){\n  <br /> &nbsp; $(this).css(&quot;background-color&quot;,&quot;#ffffff&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_focus_blur\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr />', null, 'jQuery 事件|什么是事件？|jQuery 事件方法语法|常用的 jQuery 事件方法|实例|实例|实例|实例|实例|实例|实例|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('211', '213', '<script> \r\n$(document).ready(function(){\r\n$(\".flip\").click(function(){\r\n$(\".panel\").toggle();\r\n});\r\n});\r\n</script> \n<style type=\"text/css\"> \r\ndiv.panel,p.flip\r\n{\r\nwidth:90%;\r\nmargin:auto;\r\npadding:5px;\r\ntext-align:center;\r\nbackground:#e5eecc;\r\nborder:solid 1px #c3c3c3;\r\n}\r\ndiv.panel\r\n{\r\nheight:100px;\r\ndisplay:none;\r\n}\r\n</style> \n<h1>jQuery 效果- <span class=\"color_h1\">隐藏和显示</span> </h1> \n<hr /> \n<p class=\"intro\">隐藏、显示、切换，滑动，淡入淡出，以及动画，哇哦！</p> \n<p class=\"flip\">点击 显示/隐藏面板</p> \n<div class=\"panel\"> \n <p>因为时间是宝贵的，我们提供快捷方便的学习方法。</p> \n <p>在菜鸟教程,你可以学习需要的知识。</p> \n</div> \n<hr /> \n<h2>实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide\">jQuery hide()</a><br /> 简单的jQuery hide()方法演示。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_explanations\">jQuery hide()</a><br /> 另一个hide()实例。演示如何隐藏文本。</p> \n<hr /> \n<h2>jQuery hide() 和 show()</h2> \n<p>通过 jQuery，您可以使用 hide() 和 show() 方法来隐藏和显示 HTML 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#hide&quot;).click(function(){\n  <br /> &nbsp; $(&quot;p&quot;).hide();\n  <br /> });\n  <br />\n  <br /> $(&quot;#show&quot;).click(function(){\n  <br /> &nbsp; $(&quot;p&quot;).show();\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_show\">尝试一下 &raquo;</a> \n</div> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).hide(\n  <i>speed,callback</i>);\n  <br />\n  <br /> $(\n  <i>selector</i>).show(\n  <i>speed,callback</i>); \n </div>\n</div> \n<p>可选的 speed 参数规定隐藏/显示的速度，可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</p> \n<p>可选的 callback 参数是隐藏或显示完成后所执行的函数名称。</p> \n<p>下面的例子演示了带有 speed 参数的 hide() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;p&quot;).hide(1000);\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_slow\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery toggle()</h2> \n<p>通过 jQuery，您可以使用 toggle() 方法来切换 hide() 和 show() 方法。 </p> \n<p>显示被隐藏的元素，并隐藏已显示的元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;p&quot;).toggle();\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_toggle\">尝试一下 &raquo;</a> \n</div> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).toggle(\n  <i>speed,callback</i>); \n </div>\n</div> \n<p>可选的 speed 参数规定隐藏/显示的速度，可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。 </p> \n<p>可选的 callback 参数是 toggle() 方法完成后所执行的函数名称。</p>', null, 'jQuery 效果- 隐藏和显示|实例|jQuery hide() 和 show()|实例|实例|jQuery toggle()|实例|');
INSERT INTO `schoolcontent` VALUES ('212', '214', '<script> \r\n$(document).ready(function(){\r\n$(\".flip\").click(function(){\r\n$(\".panel\").fadeToggle(1000);\r\n});\r\n});\r\n</script> \n<style type=\"text/css\"> \r\ndiv.panel,p.flip\r\n{\r\nwidth:90%;\r\nmargin:auto;\r\npadding:5px;\r\ntext-align:center;\r\nbackground:#e5eecc;\r\nborder:solid 1px #c3c3c3;\r\n}\r\ndiv.panel\r\n{\r\nheight:100px;\r\ndisplay:none;\r\n}\r\n</style> \n<h1>jQuery 效果 - <span class=\"color_h1\">淡入淡出</span> </h1> \n<hr /> \n<p class=\"intro\">通过 jQuery，您可以实现元素的淡入淡出效果。</p> \n<p class=\"flip\">点击展示 <strong>淡入/淡出</strong> 面板</p> \n<div class=\"panel\"> \n <p>因为时间是宝贵的，我们提供快捷方便的学习方法。 </p> \n <p>在 W3CSchool,你可以学习需要的知识。</p> \n</div> \n<hr /> \n<h2>实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadein\">jQuery fadeIn()</a><br /> 演示 jQuery fadeIn() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadeout\">jQuery fadeOut()</a><br /> 演示 jQuery fadeOut() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadetoggle\">jQuery fadeToggle()</a><br /> 演示 jQuery fadeToggle() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadeto\">jQuery fadeTo()</a><br /> 演示 jQuery fadeTo() 方法。</p> \n<hr /> \n<h2>jQuery Fading 方法</h2> \n<p>通过 jQuery，您可以实现元素的淡入淡出效果。</p> \n<p>jQuery 拥有下面四种 fade 方法：</p> \n<ul> \n <li>fadeIn()</li> \n <li>fadeOut()</li> \n <li>fadeToggle()</li> \n <li>fadeTo()</li> \n</ul> \n<hr /> \n<h2>jQuery fadeIn() 方法</h2> \n<p>jQuery fadeIn() 用于淡入已隐藏的元素。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).fadeIn(\n  <i>speed,callback</i>);\n </div>\n</div> \n<p>可选的 speed 参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。.</p> \n<p>可选的 callback 参数是 fading 完成后所执行的函数名称。</p> \n<p>下面的例子演示了带有不同参数的 fadeIn() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#div1&quot;).fadeIn();\n  <br /> &nbsp; $(&quot;#div2&quot;).fadeIn(&quot;slow&quot;);\n  <br /> &nbsp; $(&quot;#div3&quot;).fadeIn(3000);\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadein\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery fadeOut() 方法</h2> \n<p>jQuery fadeOut() 方法用于淡出可见元素。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).fadeOut(\n  <i>speed,callback</i>);\n </div>\n</div> \n<p>可选的 speed 参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</p> \n<p>可选的 callback 参数是 fading 完成后所执行的函数名称。 </p> \n<p>下面的例子演示了带有不同参数的 fadeOut() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#div1&quot;).fadeOut();\n  <br /> &nbsp; $(&quot;#div2&quot;).fadeOut(&quot;slow&quot;);\n  <br /> &nbsp; $(&quot;#div3&quot;).fadeOut(3000);\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadeout\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery fadeToggle() 方法</h2> \n<p>jQuery fadeToggle() 方法可以在 fadeIn() 与 fadeOut() 方法之间进行切换。</p> \n<p>如果元素已淡出，则 fadeToggle() 会向元素添加淡入效果。</p> \n<p>如果元素已淡入，则 fadeToggle() 会向元素添加淡出效果。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).fadeToggle(\n  <i>speed,callback</i>);\n </div>\n</div> \n<p>可选的 speed 参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</p> \n<p>可选的 callback 参数是 fading 完成后所执行的函数名称。</p> \n<p>下面的例子演示了带有不同参数的 fadeToggle() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#div1&quot;).fadeToggle();\n  <br /> &nbsp; $(&quot;#div2&quot;).fadeToggle(&quot;slow&quot;);\n  <br /> &nbsp; $(&quot;#div3&quot;).fadeToggle(3000);\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadetoggle\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery fadeTo() 方法</h2> \n<p>jQuery fadeTo() 方法允许渐变为给定的不透明度（值介于 0 与 1 之间）。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).fadeTo(\n  <i>speed,opacity,callback</i>);\n </div>\n</div> \n<p>必需的 speed 参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</p> \n<p>fadeTo() 方法中必需的 opacity 参数将淡入淡出效果设置为给定的不透明度（值介于 0 与 1 之间）。</p> \n<p>可选的 callback 参数是该函数完成后所执行的函数名称。</p> \n<p>下面的例子演示了带有不同参数的 fadeTo() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#div1&quot;).fadeTo(&quot;slow&quot;,0.15);\n  <br /> &nbsp; $(&quot;#div2&quot;).fadeTo(&quot;slow&quot;,0.4);\n  <br /> &nbsp; $(&quot;#div3&quot;).fadeTo(&quot;slow&quot;,0.7);\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadeto\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery 效果 - 淡入淡出|实例|jQuery Fading 方法|jQuery fadeIn() 方法|实例|jQuery fadeOut() 方法|实例|jQuery fadeToggle() 方法|实例|jQuery fadeTo() 方法|实例|');
INSERT INTO `schoolcontent` VALUES ('213', '215', '<script> \r\n$(document).ready(function(){\r\n$(\".flip\").click(function(){\r\n$(\".panel\").slideToggle(\"slow\");\r\n});\r\n});\r\n</script> \n<style type=\"text/css\"> \r\ndiv.panel,p.flip\r\n{\r\nwidth:90%;\r\nmargin:auto;\r\npadding:5px;\r\ntext-align:center;\r\nbackground:#e5eecc;\r\nborder:solid 1px #c3c3c3;\r\n}\r\ndiv.panel\r\n{\r\nheight:100px;\r\ndisplay:none;\r\n}\r\n</style> \n<h1>jQuery 效果 - <span class=\"color_h1\">滑动</span> </h1> \n<hr /> \n<p class=\"intro\">jQuery 滑动方法可使元素上下滑动。</p> \n<p class=\"flip\">点击这里，隐藏/显示面板</p> \n<div class=\"panel\"> \n <p>一寸光阴一寸金，因此，我们为您提供快捷易懂的学习内容。 </p> \n <p>在这里，您可以通过一种易懂的便利的模式获得您需要的任何知识。</p> \n</div> \n<hr /> \n<h2>实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_down\">jQuery slideDown()</a><br /> 演示 jQuery slideDown() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_up\">jQuery slideUp()</a><br /> 演示 jQuery slideUp() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_toggle\">jQuery slideToggle()</a><br /> 演示 jQuery slideToggle() 方法。</p> \n<hr /> \n<h2>jQuery 滑动方法</h2> \n<p>通过 jQuery，您可以在元素上创建滑动效果。</p> \n<p>jQuery 拥有以下滑动方法：</p> \n<ul> \n <li>slideDown()</li> \n <li>slideUp()</li> \n <li>slideToggle()</li> \n</ul> \n<hr /> \n<h2>jQuery slideDown() 方法</h2> \n<p>jQuery slideDown() 方法用于向下滑动元素。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).slideDown(\n  <i>speed,callback</i>);\n </div>\n</div> \n<p>可选的 speed 参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</p> \n<p>可选的 callback 参数是滑动完成后所执行的函数名称。</p> \n<p>下面的例子演示了 slideDown() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#flip&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#panel&quot;).slideDown();\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_down\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery slideUp() 方法</h2> \n<p>jQuery slideUp() 方法用于向上滑动元素。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).slideUp(\n  <i>speed,callback</i>);\n </div>\n</div> \n<p>可选的 speed 参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</p> \n<p>可选的 callback 参数是滑动完成后所执行的函数名称。</p> \n<p>下面的例子演示了 slideUp() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#flip&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#panel&quot;).slideUp();\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_up\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery slideToggle() 方法</h2> \n<p>jQuery slideToggle() 方法可以在 slideDown() 与 slideUp() 方法之间进行切换。</p> \n<p>如果元素向下滑动，则 slideToggle() 可向上滑动它们。</p> \n<p>如果元素向上滑动，则 slideToggle() 可向下滑动它们。</p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).slideToggle(\n  <i>speed,callback</i>);\n </div>\n</div> \n<p>可选的 speed 参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</p> \n<p>可选的 callback 参数是滑动完成后所执行的函数名称。</p> \n<p>下面的例子演示了 slideToggle() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#flip&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#panel&quot;).slideToggle();\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_toggle\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery 效果 - 滑动|实例|jQuery 滑动方法|jQuery slideDown() 方法|实例|jQuery slideUp() 方法|实例|jQuery slideToggle() 方法|实例|');
INSERT INTO `schoolcontent` VALUES ('214', '216', '<script> \r\n$(document).ready(function(){\r\n  $(\"button#bDemo\").click(function(){\r\n    $(\"div#divDemo\").animate({left:\"170px\",opacity:\"0.5\"},\"slow\");\r\n    $(\"div#divDemo\").animate({fontSize:\"5em\"},\"slow\");\r\n  });\r\n});\r\n</script> \n<h1>jQuery 效果- <span class=\"color_h1\">动画</span> </h1> \n<hr /> \n<p class=\"intro\">jQuery animate() 方法允许您创建自定义的动画。</p> \n<button id=\"bDemo\">jQuery 动画实例</button>\n<br />\n<br />\n<div id=\"divDemo\" style=\"background:#98bf21;height:100px;width:210px\">\n jQuery\n</div> \n<hr /> \n<h2>jQuery 动画 - animate() 方法</h2> \n<p>jQuery animate() 方法用于创建自定义动画。</p> \n<p><b>语法：</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).animate({\n  <i>params</i>}\n  <i>,speed,callback</i>);\n </div>\n</div> \n<p>必需的 params 参数定义形成动画的 CSS 属性。</p> \n<p>可选的 speed 参数规定效果的时长。它可以取以下值：&quot;slow&quot;、&quot;fast&quot; 或毫秒。</p> \n<p>可选的 callback 参数是动画完成后所执行的函数名称。</p> \n<p>下面的例子演示 animate() 方法的简单应用。它把 &lt;div&gt; 元素往右边移动了 250 像素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;div&quot;).animate({left:\'250px\'});\n  <br /> });&nbsp; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation1\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td>默认情况下，所有 HTML 元素都有一个静态位置，且无法移动。<br /> 如需对位置进行操作，要记得首先把元素的 CSS position 属性设置为 relative、fixed 或 absolute！</td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>jQuery animate() - 操作多个属性</h2> \n<p>请注意，生成动画的过程中可同时使用多个属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;div&quot;).animate({\n  <br /> &nbsp;&nbsp;&nbsp; left:\'250px\',\n  <br /> &nbsp;&nbsp;&nbsp; opacity:\'0.5\',\n  <br /> &nbsp;&nbsp;&nbsp; height:\'150px\',\n  <br /> &nbsp;&nbsp;&nbsp; width:\'150px\'\n  <br /> &nbsp; });\n  <br /> });&nbsp; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation1_multicss\">尝试一下 &raquo;</a> \n</div> \n<br />\n<table class=\"lamp\" id=\"table1\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <b>可以用 animate() 方法来操作所有 CSS 属性吗？</b><br /><br /> <p>是的，几乎可以！不过，需要记住一件重要的事情：当使用 animate() 时，必须使用 Camel 标记法书写所有的属性名，比如，必须使用 paddingLeft 而不是 padding-left，使用 marginRight 而不是 margin-right，等等。</p> <p>同时，色彩动画并不包含在核心 jQuery 库中。</p> <p>如果需要生成颜色动画，您需要从 <a target=\"_blank\" href=\"http://jquery.com/download/\">jquery.com</a> 下载 <a target=\"_blank\" href=\"http://plugins.jquery.com/project/color\">Color Animations</a><a></a> 插件。</p> </td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>jQuery animate() - 使用相对值</h2> \n<p>也可以定义相对值（该值相对于元素的当前值）。需要在值的前面加上 += 或 -=：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;div&quot;).animate({\n  <br /> &nbsp;&nbsp;&nbsp; left:\'250px\',\n  <br /> &nbsp;&nbsp;&nbsp; height:\'+=150px\',\n  <br /> &nbsp;&nbsp;&nbsp; width:\'+=150px\'\n  <br /> &nbsp; });\n  <br /> });&nbsp; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation1_relative\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery animate() - 使用预定义的值</h2> \n<p>您甚至可以把属性的动画值设置为 &quot;show&quot;、&quot;hide&quot; 或 &quot;toggle&quot;：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;div&quot;).animate({\n  <br /> &nbsp;&nbsp;&nbsp; height:\'toggle\'\n  <br /> &nbsp; });\n  <br /> });&nbsp; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation1_toggle\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery animate() - 使用队列功能</h2> \n<p>默认地，jQuery 提供针对动画的队列功能。</p> \n<p>这意味着如果您在彼此之后编写多个 animate() 调用，jQuery 会创建包含这些方法调用的&quot;内部&quot;队列。然后逐一运行这些 animate 调用。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例 1</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; var div=$(&quot;div&quot;);\n  <br /> &nbsp; div.animate({height:\'300px\',opacity:\'0.4\'},&quot;slow&quot;);\n  <br /> &nbsp; div.animate({width:\'300px\',opacity:\'0.8\'},&quot;slow&quot;);\n  <br /> &nbsp; div.animate({height:\'100px\',opacity:\'0.4\'},&quot;slow&quot;);\n  <br /> &nbsp; div.animate({width:\'100px\',opacity:\'0.8\'},&quot;slow&quot;);\n  <br /> });&nbsp; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation\">尝试一下 &raquo;</a> \n</div> \n<p>下面的例子把 &lt;div&gt; 元素往右边移动了 100 像素，然后增加文本的字号：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例 2</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; var div=$(&quot;div&quot;);\n  <br /> &nbsp; div.animate({left:\'100px\'},&quot;slow&quot;);\n  <br /> &nbsp; div.animate({fontSize:\'3em\'},&quot;slow&quot;);\n  <br /> });&nbsp; \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation2\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery 效果- 动画|jQuery 动画 - animate() 方法|实例|jQuery animate() - 操作多个属性|实例|jQuery animate() - 使用相对值|实例|jQuery animate() - 使用预定义的值|实例|jQuery animate() - 使用队列功能|实例 1|实例 2|');
INSERT INTO `schoolcontent` VALUES ('215', '217', '<script> \r\n$(document).ready(function(){\r\n  $(\".flip\").click(function(){\r\n    $(\".panel\").slideToggle(5000);\r\n  });\r\n  $(\"#stop\").click(function(){\r\n    $(\".panel\").stop();\r\n  });\r\n});\r\n</script> \n<style type=\"text/css\"> \r\n#stop\r\n{\r\nmargin-left:25px;\r\n}\r\ndiv.panel,p.flip\r\n{\r\nwidth:90%;\r\nmargin:auto;\r\npadding:5px;\r\ntext-align:center;\r\nbackground:#e5eecc;\r\nborder:solid 1px #c3c3c3;\r\n}\r\ndiv.panel\r\n{\r\nheight:100px;\r\ndisplay:none;\r\n}\r\n</style> \n<h1>jQuery <span class=\"color_h1\">停止动画</span> </h1> \n<hr /> \n<p class=\"intro\">jQuery stop() 方法用于在动画或效果完成前对它们进行停止。</p> \n<button id=\"stop\">停止滑动</button> \n<p class=\"flip\">点击这里，向上/向下滑动面板</p> \n<div class=\"panel\"> \n <p>时间是宝贵的，因此，我们为您提供快捷易懂的学习内容。</p> \n <p>在这里，您可以通过一种易懂的便利的模式获得您需要的任何知识。</p> \n</div> \n<hr /> \n<h2>实例</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_stop_slide\">jQuery stop() 滑动</a><br /> 演示 jQuery stop() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_stop_params\">jQuery stop() 动画(带参数)</a><br /> 演示 jQuery stop() 方法</p> \n<hr /> \n<h2>jQuery stop() 方法</h2> \n<p>jQuery stop() 方法用于停止动画或效果，在它们完成之前。</p> \n<p>stop() 方法适用于所有 jQuery 效果函数，包括滑动、淡入淡出和自定义动画。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\">\n <div>\n   $(\n  <i>selector</i>).stop(\n  <i>stopAll,goToEnd</i>);\n </div>\n</div> \n<p>可选的 stopAll 参数规定是否应该清除动画队列。默认是 false，即仅停止活动的动画，允许任何排入队列的动画向后执行。</p> \n<p>可选的 goToEnd 参数规定是否立即完成当前动画。默认是 false。</p> \n<p>因此，默认地，stop() 会清除在被选元素上指定的当前动画。</p> \n<p>下面的例子演示 stop() 方法，不带参数：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#stop&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#panel&quot;).stop();\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_stop_slide\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery 停止动画|实例|jQuery stop() 方法|实例|');
INSERT INTO `schoolcontent` VALUES ('216', '218', '<h1>jQuery <span class=\"color_h1\">Callback</span> 方法</h1> \n<hr /> \n<p class=\"intro\">Callback 函数在当前动画 100% 完成之后执行。</p> \n<hr /> \n<h2>jQuery 动画的问题</h2> \n<p>许多 jQuery 函数涉及动画。这些函数也许会将 <i>speed</i> 或 <i>duration</i> 作为可选参数。</p> \n<p>例子：<em>$(&quot;p&quot;).hide(&quot;slow&quot;)</em></p> \n<p><i>speed</i> 或 <i>duration</i> 参数可以设置许多不同的值，比如 &quot;slow&quot;, &quot;fast&quot;, &quot;normal&quot; 或毫秒。</p> \n<p><b>实例</b></p> \n<p>以下实例在隐藏效果完全实现后回调函数:</p> \n<div class=\"example\"> \n <h2 class=\"example\">使用 callback 实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;p&quot;).hide(&quot;slow&quot;,function(){\n  <br /> &nbsp;&nbsp;&nbsp; alert(&quot;The paragraph is now hidden&quot;);\n  <br /> &nbsp; });\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_callback\">尝试一下 </a> \n</div> \n<p>以下实例没有回调函数，警告框会在隐藏效果完成前弹出：</p> \n<div class=\"example\"> \n <h2 class=\"example\">没有 callback(回调)</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;p&quot;).hide(1000);\n  <br /> &nbsp; alert(&quot;The paragraph is now hidden&quot;);\n  <br /> });\n </div> \n <br /> \n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_no_callback\">在线实例 &raquo;</a> \n</div>', null, 'jQuery Callback 方法|jQuery 动画的问题|使用 callback 实例|没有 callback(回调)|');
INSERT INTO `schoolcontent` VALUES ('217', '219', '<h1>jQuery - <span class=\"color_h1\">Chaining</span> </h1> \n<hr /> \n<p class=\"intro\">通过 jQuery，可以把动作/方法链接在一起。</p> \n<p class=\"intro\">Chaining 允许我们在一条语句中运行多个 jQuery 方法（在相同的元素上）。</p> \n<hr /> \n<h2>jQuery 方法链接</h2> \n<p>直到现在，我们都是一次写一条 jQuery 语句（一条接着另一条）。</p> \n<p>不过，有一种名为链接（chaining）的技术，允许我们在相同的元素上运行多条 jQuery 命令，一条接着另一条。</p> \n<p><b>提示：</b> 这样的话，浏览器就不必多次查找相同的元素。</p> \n<p>如需链接一个动作，您只需简单地把该动作追加到之前的动作上。</p> \n<p>下面的例子把 css()、slideUp() 和 slideDown() 链接在一起。&quot;p1&quot; 元素首先会变为红色，然后向上滑动，再然后向下滑动：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#p1&quot;).css(&quot;color&quot;,&quot;red&quot;).slideUp(2000).slideDown(2000);\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_chaining\">尝试一下 &raquo;</a> \n</div> \n<p>如果需要，我们也可以添加多个方法调用。</p> \n<p><b>提示：</b>当进行链接时，代码行会变得很差。不过，jQuery 语法不是很严格；您可以按照希望的格式来写，包含换行和缩进。</p> \n<p>如下书写也可以很好地运行：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#p1&quot;).css(&quot;color&quot;,&quot;red&quot;)\n  <br /> &nbsp; .slideUp(2000)\n  <br /> &nbsp; .slideDown(2000);\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_chaining2\">尝试一下 &raquo;</a> \n</div> \n<p>jQuery 会抛掉多余的空格，并当成一行长代码来执行上面的代码行。</p>', null, 'jQuery - Chaining|jQuery 方法链接|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('218', '220', '<h1>jQuery - <span class=\"color_h1\">获取内容和属性</span> </h1> \n<hr /> \n<p class=\"intro\">jQuery 拥有可操作 HTML 元素和属性的强大方法。</p> \n<hr /> \n<h2>jQuery DOM 操作</h2> \n<p>jQuery 中非常重要的部分，就是操作 DOM 的能力。</p> \n<p>jQuery 提供一系列与 DOM 相关的方法，这使访问和操作元素和属性变得很容易。</p> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <b>DOM = Document Object Model（文档对象模型）</b><br /><br /> <p>DOM 定义访问 HTML 和 XML 文档的标准：</p> <p>&quot;W3C 文档对象模型独立于平台和语言的界面，允许程序和脚本动态访问和更新文档的内容、结构以及样式。&quot;</p> </td> \n  </tr>\n </tbody>\n</table> \n<br />\n<hr /> \n<h2>获得内容 - text()、html() 以及 val()</h2> \n<p>三个简单实用的用于 DOM 操作的 jQuery 方法：</p> \n<ul> \n <li>text() - 设置或返回所选元素的文本内容</li> \n <li>html() - 设置或返回所选元素的内容（包括 HTML 标记）</li> \n <li>val() - 设置或返回表单字段的值</li> \n</ul> \n<p>下面的例子演示如何通过 jQuery text() 和 html() 方法来获得内容：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#btn1&quot;).click(function(){\n  <br /> &nbsp; alert(&quot;Text: &quot; + $(&quot;#test&quot;).text());\n  <br /> });\n  <br /> $(&quot;#btn2&quot;).click(function(){\n  <br /> &nbsp; alert(&quot;HTML: &quot; + $(&quot;#test&quot;).html());\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_html_get\">尝试一下 &raquo;</a> \n</div> \n<p>下面的例子演示如何通过 jQuery val() 方法获得输入字段的值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#btn1&quot;).click(function(){\n  <br /> &nbsp; alert(&quot;Value: &quot; + $(&quot;#test&quot;).val());\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_val_get\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>获取属性 - attr()</h2> \n<p>jQuery attr() 方法用于获取属性值。</p> \n<p> 下面的例子演示如何获得链接中 href 属性的值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; alert($(&quot;#w3s&quot;).attr(&quot;href&quot;));\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_attr_get\">尝试一下 &raquo;</a> \n</div> \n<p>下一章会讲解如何设置（改变）内容和属性值。</p>', null, 'jQuery - 获取内容和属性|jQuery DOM 操作|获得内容 - text()、html() 以及 val()|实例|实例|获取属性 - attr()|实例|');
INSERT INTO `schoolcontent` VALUES ('219', '221', '<h1>jQuery - <span class=\"color_h1\">设置内容和属性</span> </h1> \n<hr /> \n<h2>设置内容 - text()、html() 以及 val()</h2> \n<p>我们将使用前一章中的三个相同的方法来设置内容：</p> \n<ul> \n <li>text() - 设置或返回所选元素的文本内容</li> \n <li>html() - 设置或返回所选元素的内容（包括 HTML 标记）</li> \n <li>val() - 设置或返回表单字段的值</li> \n</ul> \n<p>下面的例子演示如何通过 text()、html() 以及 val() 方法来设置内容：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#btn1&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#test1&quot;).text(&quot;Hello world!&quot;);\n  <br /> });\n  <br /> $(&quot;#btn2&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#test2&quot;).html(&quot;&lt;b&gt;Hello world!&lt;/b&gt;&quot;);\n  <br /> });\n  <br /> $(&quot;#btn3&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#test3&quot;).val(&quot;Dolly Duck&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_html_set\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>text()、html() 以及 val() 的回调函数</h2> \n<p>上面的三个 jQuery 方法：text()、html() 以及 val()，同样拥有回调函数。回调函数由两个参数：被选元素列表中当前元素的下标，以及原始（旧的）值。然后以函数新值返回您希望使用的字符串。</p> \n<p>下面的例子演示带有回调函数的 text() 和 html()：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#btn1&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#test1&quot;).text(function(i,origText){\n  <br /> &nbsp;&nbsp;&nbsp; return &quot;Old text: &quot; + origText + &quot; New text: Hello world!\n  <br /> &nbsp;&nbsp;&nbsp; (index: &quot; + i + &quot;)&quot;; \n  <br /> &nbsp; });\n  <br /> });\n  <br />\n  <br /> $(&quot;#btn2&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#test2&quot;).html(function(i,origText){\n  <br /> &nbsp;&nbsp;&nbsp; return &quot;Old html: &quot; + origText + &quot; New html: Hello &lt;b&gt;world!&lt;/b&gt;\n  <br /> &nbsp;&nbsp;&nbsp; (index: &quot; + i + &quot;)&quot;; \n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_html_callback\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>设置属性 - attr()</h2> \n<p>jQuery attr() 方法也用于设置/改变属性值。</p> \n<p>下面的例子演示如何改变（设置）链接中 href 属性的值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#w3s&quot;).attr(&quot;href&quot;,&quot;http://www.w3cschool.cc/jquery&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_attr_set\">尝试一下 &raquo;</a> \n</div> \n<p>attr() 方法也允许您同时设置多个属性。 </p> \n<p>下面的例子演示如何同时设置 href 和 title 属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#w3s&quot;).attr({\n  <br /> &nbsp;&nbsp;&nbsp; &quot;href&quot; : &quot;http://www.w3cschool.cc/jquery&quot;,\n  <br /> &nbsp;&nbsp;&nbsp; &quot;title&quot; : &quot;W3Schools jQuery Tutorial&quot;\n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_attr_set2\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>attr() 的回调函数</h2> \n<p>jQuery 方法 attr()，也提供回调函数。回调函数由两个参数：被选元素列表中当前元素的下标，以及原始（旧的）值。然后以函数新值返回您希望使用的字符串。</p> \n<p>下面的例子演示带有回调函数的 attr() 方法：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#w3s&quot;).attr(&quot;href&quot;, function(i,origValue){\n  <br /> &nbsp;&nbsp;&nbsp; return origValue + &quot;/jquery&quot;; \n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_attr_callback\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery - 设置内容和属性|设置内容 - text()、html() 以及 val()|实例|text()、html() 以及 val() 的回调函数|实例|设置属性 - attr()|实例|实例|attr() 的回调函数|实例|');
INSERT INTO `schoolcontent` VALUES ('220', '222', '<h1>jQuery - <span class=\"color_h1\">添加元素</span> </h1> \n<hr /> \n<p class=\"intro\">通过 jQuery，可以很容易地添加新元素/内容。</p> \n<hr /> \n<h2>添加新的 HTML 内容</h2> \n<p>我们将学习用于添加新内容的四个 jQuery 方法：</p> \n<ul> \n <li>append() - 在被选元素的结尾插入内容</li> \n <li>prepend() - 在被选元素的开头插入内容</li> \n <li>after() - 在被选元素之后插入内容</li> \n <li>before() - 在被选元素之前插入内容</li> \n</ul> \n<hr /> \n<h2>jQuery append() 方法</h2> \n<p>jQuery append() 方法在被选元素的结尾插入内容。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;p&quot;).append(&quot;Some appended text.&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_append\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery prepend() 方法</h2> \n<p>jQuery prepend() 方法在被选元素的开头插入内容。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;p&quot;).prepend(&quot;Some prepended text.&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_prepend\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>通过 append() 和 prepend() 方法添加若干新元素</h2> \n<p>在上面的例子中，我们只在被选元素的开头/结尾插入文本/HTML。</p> \n<p>不过，append() 和 prepend() 方法能够通过参数接收无限数量的新元素。可以通过 jQuery 来生成文本/HTML（就像上面的例子那样），或者通过 JavaScript 代码和 DOM 元素。</p> \n<p>在下面的例子中，我们创建若干个新元素。这些元素可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建。然后我们通过 append() 方法把这些新元素追加到文本中（对 prepend() 同样有效）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function appendText()\n  <br /> {\n  <br /> var txt1=&quot;&lt;p&gt;Text.&lt;/p&gt;&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create element with HTML&nbsp; \n  <br /> var txt2=$(&quot;&lt;p&gt;&lt;/p&gt;&quot;).text(&quot;Text.&quot;);&nbsp;&nbsp; // Create with jQuery\n  <br /> var txt3=document.createElement(&quot;p&quot;);&nbsp; // Create with DOM\n  <br /> txt3.innerHTML=&quot;Text.&quot;;\n  <br /> $(&quot;p&quot;).append(txt1,txt2,txt3);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Append the new elements \n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_append2\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery after() 和 before() 方法</h2> \n<p>jQuery after() 方法在被选元素之后插入内容。</p> \n<p>jQuery before() 方法在被选元素之前插入内容。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;img&quot;).after(&quot;Some text after&quot;);\n  <br />\n  <br /> $(&quot;img&quot;).before(&quot;Some text before&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_after\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>通过 after() 和 before() 方法添加若干新元素</h2> \n<p>after() 和 before() 方法能够通过参数接收无限数量的新元素。可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建新元素。</p> \n<p>在下面的例子中，我们创建若干新元素。这些元素可以通过 text/HTML、jQuery 或者 JavaScript/DOM 来创建。然后我们通过 after() 方法把这些新元素插到文本中（对 before() 同样有效）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   function afterText()\n  <br /> {\n  <br /> var txt1=&quot;&lt;b&gt;I &lt;/b&gt;&quot;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Create element with HTML&nbsp; \n  <br /> var txt2=$(&quot;&lt;i&gt;&lt;/i&gt;&quot;).text(&quot;love &quot;);&nbsp;&nbsp;&nbsp;&nbsp; // Create with jQuery\n  <br /> var txt3=document.createElement(&quot;big&quot;);&nbsp; // Create with DOM\n  <br /> txt3.innerHTML=&quot;jQuery!&quot;;\n  <br /> $(&quot;img&quot;).after(txt1,txt2,txt3);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Insert new elements after img\n  <br /> }\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_after2\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery - 添加元素|添加新的 HTML 内容|jQuery append() 方法|实例|jQuery prepend() 方法|实例|通过 append() 和 prepend() 方法添加若干新元素|实例|jQuery after() 和 before() 方法|实例|通过 after() 和 before() 方法添加若干新元素|实例|');
INSERT INTO `schoolcontent` VALUES ('221', '223', '<h1>jQuery - <span class=\"color_h1\">删除元素</span> </h1> \n<hr /> \n<p class=\"intro\">通过 jQuery，可以很容易地删除已有的 HTML 元素。</p> \n<hr /> \n<h2>删除元素/内容</h2> \n<p>如需删除元素和内容，一般可使用以下两个 jQuery 方法：</p> \n<ul> \n <li>remove() - 删除被选元素（及其子元素）</li> \n <li>empty() - 从被选元素中删除子元素</li> \n</ul> \n<hr /> \n<h2>jQuery remove() 方法</h2> \n<p>jQuery remove() 方法删除被选元素及其子元素。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#div1&quot;).remove(); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_remove\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery empty() 方法</h2> \n<p>jQuery empty() 方法删除被选元素的子元素。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#div1&quot;).empty();\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_empty\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>过滤被删除的元素</h2> \n<p>jQuery remove() 方法也可接受一个参数，允许您对被删元素进行过滤。</p> \n<p>该参数可以是任何 jQuery 选择器的语法。</p> \n<p>下面的例子删除 class=&quot;italic&quot; 的所有 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;p&quot;).remove(&quot;.italic&quot;);\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_remove2\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery - 删除元素|删除元素/内容|jQuery remove() 方法|实例|jQuery empty() 方法|实例|过滤被删除的元素|实例|');
INSERT INTO `schoolcontent` VALUES ('222', '224', '<script> \r\n$(document).ready(function(){\r\n  $(\"#btnEx\").click(function(){\r\n    $(\"#test\").toggleClass(\"important\");\r\n  });\r\n});\r\n</script> \n<style type=\"text/css\">\r\n.important\r\n{\r\nfont-size:x-large;\r\nfont-weight:bold;\r\ncolor:#c3c3c3;\r\n}\r\n</style> \n<h1>jQuery - <span class=\"color_h1\">获取并设置 CSS 类</span> </h1> \n<hr /> \n<p id=\"test\">通过 jQuery，可以很容易地对 CSS 元素进行操作。 <button id=\"btnEx\">切换 CSS 类</button></p> \n<hr /> \n<h2>jQuery 操作 CSS</h2> \n<p>jQuery 拥有若干进行 CSS 操作的方法。我们将学习下面这些：</p> \n<ul> \n <li>addClass() - 向被选元素添加一个或多个类</li> \n <li>removeClass() - 从被选元素删除一个或多个类</li> \n <li>toggleClass() - 对被选元素进行添加/删除类的切换操作</li> \n <li>css() - 设置或返回样式属性</li> \n</ul> \n<hr /> \n<h2>实例样式表</h2> \n<p>下面的样式表将用于本页的所有例子：</p> \n<div class=\"code notranslate\">\n <div>\n   .important\n  <br /> {\n  <br /> font-weight:bold;\n  <br /> font-size:xx-large;\n  <br /> }\n  <br />\n  <br /> .blue\n  <br /> {\n  <br /> color:blue;\n  <br /> }\n </div>\n</div> \n<br />\n<hr /> \n<h2>jQuery addClass() 方法</h2> \n<p>下面的例子展示如何向不同的元素添加 class 属性。当然，在添加类时，您也可以选取多个元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;h1,h2,p&quot;).addClass(&quot;blue&quot;);\n  <br /> &nbsp; $(&quot;div&quot;).addClass(&quot;important&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_addclass\">尝试一下 &raquo;</a> \n</div> \n<p>您也可以在 addClass() 方法中规定多个类：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#div1&quot;).addClass(&quot;important blue&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_addclass2\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery removeClass() 方法</h2> \n<p>下面的例子演示如何在不同的元素中删除指定的 class 属性：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;h1,h2,p&quot;).removeClass(&quot;blue&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_removeclass\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery toggleClass() 方法</h2> \n<p>下面的例子将展示如何使用 jQuery toggleClass() 方法。该方法对被选元素进行添加/删除类的切换操作：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;h1,h2,p&quot;).toggleClass(&quot;blue&quot;);\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_toggleclass\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery css() 方法</h2> \n<p>我们将在下一章讲解 jQuery css() 方法。</p>', null, 'jQuery - 获取并设置 CSS 类|jQuery 操作 CSS|实例样式表|jQuery addClass() 方法|实例|实例|jQuery removeClass() 方法|实例|jQuery toggleClass() 方法|实例|jQuery css() 方法|');
INSERT INTO `schoolcontent` VALUES ('223', '225', '<h1>jQuery - <span class=\"color_h1\">css() 方法</span> </h1> \n<hr /> \n<h2>jQuery css() Method</h2> \n<p>css() 方法设置或返回被选元素的一个或多个样式属性。</p> \n<hr /> \n<h2>返回 CSS 属性</h2> \n<p>如需返回指定的 CSS 属性的值，请使用如下语法：</p> \n<div class=\"code notranslate\">\n <div>\n   css(&quot;\n  <i>propertyname</i>&quot;);\n </div>\n</div> \n<p>下面的例子将返回首个匹配元素的 background-color 值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;p&quot;).css(&quot;background-color&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_css_getcolor\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>设置 CSS 属性</h2> \n<p>如需设置指定的 CSS 属性，请使用如下语法：</p> \n<div class=\"code notranslate\">\n <div>\n   css(&quot;\n  <i>propertyname</i>&quot;,&quot;\n  <i>value</i>&quot;);\n </div>\n</div> \n<p>下面的例子将为所有匹配元素设置 background-color 值：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;p&quot;).css(&quot;background-color&quot;,&quot;yellow&quot;); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_css_setcolor\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>设置多个 CSS 属性</h2> \n<p>如需设置多个 CSS 属性，请使用如下语法：</p> \n<div class=\"code notranslate\">\n <div>\n   css({&quot;\n  <i>propertyname</i>&quot;:&quot;\n  <i>value</i>&quot;,&quot;\n  <i>propertyname</i>&quot;:&quot;\n  <i>value</i>&quot;,...});\n </div>\n</div> \n<p>下面的例子将为所有匹配元素设置 background-color 和 font-size：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;p&quot;).css({&quot;background-color&quot;:&quot;yellow&quot;,&quot;font-size&quot;:&quot;200%&quot;}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_css_set_multiple\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery - css() 方法|jQuery css() Method|返回 CSS 属性|实例|设置 CSS 属性|实例|设置多个 CSS 属性|实例|');
INSERT INTO `schoolcontent` VALUES ('224', '226', '<h1>jQuery - <span class=\"color_h1\">尺寸</span> </h1> \n<hr /> \n<p class=\"intro\">通过 jQuery，很容易处理元素和浏览器窗口的尺寸。</p> \n<hr /> \n<h2>jQuery 尺寸 方法</h2> \n<p>jQuery 提供多个处理尺寸的重要方法：</p> \n<ul> \n <li>width()</li> \n <li>height()</li> \n <li>innerWidth()</li> \n <li>innerHeight()</li> \n <li>outerWidth()</li> \n <li>outerHeight()</li> \n</ul> \n<hr /> \n<h2>jQuery 尺寸</h2> \n<p style=\"text-align:center\"> <img border=\"0\" alt=\"jQuery Dimensions\" src=\"http://www.runoob.com/images/img_jquerydim.gif\" width=\"488\" height=\"340\" /></p> \n<hr /> \n<h2>jQuery width() 和 height() 方法</h2> \n<p>width() 方法设置或返回元素的宽度（不包括内边距、边框或外边距）。</p> \n<p>height() 方法设置或返回元素的高度（不包括内边距、边框或外边距）。</p> \n<p>下面的例子返回指定的 &lt;div&gt; 元素的宽度和高度：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; var txt=&quot;&quot;;\n  <br /> &nbsp; txt+=&quot;Width: &quot; + $(&quot;#div1&quot;).width() + &quot;&lt;/br&gt;&quot;;\n  <br /> &nbsp; txt+=&quot;Height: &quot; + $(&quot;#div1&quot;).height();\n  <br /> &nbsp; $(&quot;#div1&quot;).html(txt);\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_width_height\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery innerWidth() 和 innerHeight() 方法</h2> \n<p>innerWidth() 方法返回元素的宽度（包括内边距）。</p> \n<p>innerHeight() 方法返回元素的高度（包括内边距）。</p> \n<p>下面的例子返回指定的 &lt;div&gt; 元素的 inner-width/height：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; var txt=&quot;&quot;;\n  <br /> &nbsp; txt+=&quot;Inner width: &quot; + $(&quot;#div1&quot;).innerWidth() + &quot;&lt;/br&gt;&quot;;\n  <br /> &nbsp; txt+=&quot;Inner height: &quot; + $(&quot;#div1&quot;).innerHeight();\n  <br /> &nbsp; $(&quot;#div1&quot;).html(txt);\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_innerwidth_height\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery outerWidth() 和 outerHeight() 方法</h2> \n<p>outerWidth() 方法返回元素的宽度（包括内边距和边框）。</p> \n<p>outerHeight() 方法返回元素的高度（包括内边距和边框）。</p> \n<p>下面的例子返回指定的 &lt;div&gt; 元素的 outer-width/height：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; var txt=&quot;&quot;;\n  <br /> &nbsp; txt+=&quot;Outer width: &quot; + $(&quot;#div1&quot;).outerWidth() + &quot;&lt;/br&gt;&quot;;\n  <br /> &nbsp; txt+=&quot;Outer height: &quot; + $(&quot;#div1&quot;).outerHeight();\n  <br /> &nbsp; $(&quot;#div1&quot;).html(txt);\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_outerwidth_height\"> 尝试一下 </a>\n</div>', null, 'jQuery - 尺寸|jQuery 尺寸 方法|jQuery 尺寸|jQuery width() 和 height() 方法|实例|jQuery innerWidth() 和 innerHeight() 方法|实例|jQuery outerWidth() 和 outerHeight() 方法|实例|');
INSERT INTO `schoolcontent` VALUES ('225', '227', '<h1>jQuery <span class=\"color_h1\">遍历</span></h1> \n<hr /> \n<h2>什么是遍历？</h2> \n<p>jQuery 遍历，意为&quot;移动&quot;，用于根据其相对于其他元素的关系来&quot;查找&quot;（或选取）HTML 元素。以某项选择开始，并沿着这个选择移动，直到抵达您期望的元素为止。</p> \n<p>下图展示了一个家族树。通过 jQuery 遍历，您能够从被选（当前的）元素开始，轻松地在家族树中向上移动（祖先），向下移动（子孙），水平移动（同胞）。这种移动被称为对 DOM 进行遍历。</p> \n<p style=\"text-align:center;\"> <img border=\"0\" alt=\"jQuery Dimensions\" src=\"http://www.runoob.com/images/img_travtree.png\" width=\"350\" height=\"165\" data-pinit=\"registered\" /></p> \n<p>图示解析：</p> \n<ul> \n <li>&lt;div&gt; 元素是 &lt;ul&gt; 的父元素，同时是其中所有内容的祖先。</li> \n <li>&lt;ul&gt; 元素是 &lt;li&gt; 元素的父元素，同时是 &lt;div&gt; 的子元素</li> \n <li>左边的 &lt;li&gt; 元素是 &lt;span&gt; 的父元素，&lt;ul&gt; 的子元素，同时是 &lt;div&gt; 的后代。</li> \n <li>&lt;span&gt; 元素是 &lt;li&gt; 的子元素，同时是 &lt;ul&gt; 和 &lt;div&gt; 的后代。</li> \n <li>两个 &lt;li&gt; 元素是同胞（拥有相同的父元素）。</li> \n <li>右边的 &lt;li&gt; 元素是 &lt;b&gt; 的父元素，&lt;ul&gt; 的子元素，同时是 &lt;div&gt; 的后代。</li> \n <li>&lt;b&gt; 元素是右边的 &lt;li&gt; 的子元素，同时是 &lt;ul&gt; 和 &lt;div&gt; 的后代。</li> \n</ul> \n<br /> \n<table class=\"lamp\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td>祖先是父、祖父、曾祖父等等。后代是子、孙、曾孙等等。同胞拥有相同的父。</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<hr /> \n<h2>遍历 DOM</h2> \n<p>jQuery 提供了多种遍历 DOM 的方法。</p> \n<p>遍历方法中最大的种类是树遍历（tree-traversal）。</p> \n<p>下一章会讲解如何在 DOM 树中向上、下以及同级移动。</p>', null, 'jQuery 遍历|什么是遍历？|遍历 DOM|');
INSERT INTO `schoolcontent` VALUES ('226', '228', '<h1>jQuery 遍历 - <span class=\"color_h1\">祖先</span> </h1> \n<hr /> \n<p class=\"intro\">祖先是父、祖父或曾祖父等等。 </p> \n<p class=\"intro\">通过 jQuery，您能够向上遍历 DOM 树，以查找元素的祖先。</p> \n<hr /> \n<h2>向上遍历 DOM 树</h2> \n<p>这些 jQuery 方法很有用，它们用于向上遍历 DOM 树：</p> \n<ul> \n <li>parent()</li> \n <li>parents()</li> \n <li>parentsUntil()</li> \n</ul> \n<hr /> \n<h2>jQuery parent() 方法</h2> \n<p>parent() 方法返回被选元素的直接父元素。</p> \n<p>该方法只会向上一级对 DOM 树进行遍历。</p> \n<p>下面的例子返回每个 &lt;span&gt; 元素的的直接父元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;span&quot;).parent();\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_parent\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery parents() 方法</h2> \n<p>parents() 方法返回被选元素的所有祖先元素，它一路向上直到文档的根元素 (&lt;html&gt;)。</p> \n<p>下面的例子返回所有 &lt;span&gt; 元素的所有祖先：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;span&quot;).parents();\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_parents\">尝试一下 &raquo;</a> \n</div> \n<p>您也可以使用可选参数来过滤对祖先元素的搜索。</p> \n<p>下面的例子返回所有 &lt;span&gt; 元素的所有祖先，并且它是 &lt;ul&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;span&quot;).parents(&quot;ul&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_parents2\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery parentsUntil() 方法</h2> \n<p>parentsUntil() 方法返回介于两个给定元素之间的所有祖先元素。</p> \n<p>下面的例子返回介于 &lt;span&gt; 与 &lt;div&gt; 元素之间的所有祖先元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;span&quot;).parentsUntil(&quot;div&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_parentsuntil\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery 遍历 - 祖先|向上遍历 DOM 树|jQuery parent() 方法|实例|jQuery parents() 方法|实例|实例|jQuery parentsUntil() 方法|实例|');
INSERT INTO `schoolcontent` VALUES ('227', '229', '<h1>jQuery 遍历 - <span class=\"color_h1\">后代</span> </h1> \n<hr /> \n<p class=\"intro\">后代是子、孙、曾孙等等。 </p> \n<p class=\"intro\">通过 jQuery，您能够向下遍历 DOM 树，以查找元素的后代。</p> \n<hr /> \n<h2>向下遍历 DOM 树</h2> \n<p>下面是两个用于向下遍历 DOM 树的 jQuery 方法：</p> \n<ul> \n <li>children()</li> \n <li>find()</li> \n</ul> \n<hr /> \n<h2>jQuery children() 方法</h2> \n<p>children() 方法返回被选元素的所有直接子元素。</p> \n<p>该方法只会向下一级对 DOM 树进行遍历。</p> \n<p>下面的例子返回每个 &lt;div&gt; 元素的所有直接子元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;div&quot;).children();\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_children\">尝试一下 &raquo;</a> \n</div> \n<p>您也可以使用可选参数来过滤对子元素的搜索。</p> \n<p>下面的例子返回类名为 &quot;1&quot; 的所有 &lt;p&gt; 元素，并且它们是 &lt;div&gt; 的直接子元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;div&quot;).children(&quot;p.1&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_children2\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery find() 方法</h2> \n<p>find() 方法返回被选元素的后代元素，一路向下直到最后一个后代。</p> \n<p>下面的例子返回属于 &lt;div&gt; 后代的所有 &lt;span&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;div&quot;).find(&quot;span&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_find\">尝试一下 &raquo;</a> \n</div> \n<p>下面的例子返回 &lt;div&gt; 的所有后代：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;div&quot;).find(&quot;*&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_find2\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery 遍历 - 后代|向下遍历 DOM 树|jQuery children() 方法|实例|实例|jQuery find() 方法|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('228', '230', '<h1>jQuery 遍历 - <span class=\"color_h1\">同胞(siblings)</span> </h1> \n<hr /> \n<p class=\"intro\">同胞拥有相同的父元素。 </p> \n<p class=\"intro\">通过 jQuery，您能够在 DOM 树中遍历元素的同胞元素。</p> \n<hr /> \n<h2>在 DOM 树中水平遍历</h2> \n<p>有许多有用的方法让我们在 DOM 树进行水平遍历：</p> \n<ul> \n <li>siblings()</li> \n <li>next()</li> \n <li>nextAll()</li> \n <li>nextUntil()</li> \n <li>prev()</li> \n <li>prevAll()</li> \n <li>prevUntil()</li> \n</ul> \n<hr /> \n<h2>jQuery siblings() 方法</h2> \n<p>siblings() 方法返回被选元素的所有同胞元素。</p> \n<p>下面的例子返回 &lt;h2&gt; 的所有同胞元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;h2&quot;).siblings();\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_siblings\">尝试一下 &raquo;</a> \n</div> \n<p>您也可以使用可选参数来过滤对同胞元素的搜索。</p> \n<p>下面的例子返回属于 &lt;h2&gt; 的同胞元素的所有 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;h2&quot;).siblings(&quot;p&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_siblings2\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery next() 方法</h2> \n<p>next() 方法返回被选元素的下一个同胞元素。</p> \n<p>该方法只返回一个元素。</p> \n<p>下面的例子返回 &lt;h2&gt; 的下一个同胞元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;h2&quot;).next();\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_next\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery nextAll() 方法</h2> \n<p>nextAll() 方法返回被选元素的所有跟随的同胞元素。</p> \n<p>下面的例子返回 &lt;h2&gt; 的所有跟随的同胞元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;h2&quot;).nextAll();\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_nextall\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery nextUntil() 方法</h2> \n<p>nextUntil() 方法返回介于两个给定参数之间的所有跟随的同胞元素。</p> \n<p>下面的例子返回介于 &lt;h2&gt; 与 &lt;h6&gt; 元素之间的所有同胞元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;h2&quot;).nextUntil(&quot;h6&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_nextuntil\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery prev(), prevAll() &amp; prevUntil() 方法</h2> \n<p>prev(), prevAll() 以及 prevUntil() 方法的工作方式与上面的方法类似，只不过方向相反而已：它们返回的是前面的同胞元素（在 DOM 树中沿着同胞元素向后遍历，而不是向前）。</p>', null, 'jQuery 遍历 - 同胞(siblings)|在 DOM 树中水平遍历|jQuery siblings() 方法|实例|实例|jQuery next() 方法|实例|jQuery nextAll() 方法|实例|jQuery nextUntil() 方法|实例|jQuery prev(), prevAll() & prevUntil() 方法|');
INSERT INTO `schoolcontent` VALUES ('229', '231', '<h1>jQuery 遍历- <span class=\"color_h1\">过滤</span> </h1> \n<hr /> \n<h2>缩写搜索元素的范围</h2> \n<p>三个最基本的过滤方法是：first(), last() 和 eq()，它们允许您基于其在一组元素中的位置来选择一个特定的元素。</p> \n<p>其他过滤方法，比如 filter() 和 not() 允许您选取匹配或不匹配某项指定标准的元素。</p> \n<hr /> \n<h2>jQuery first() 方法</h2> \n<p>first() 方法返回被选元素的首个元素。</p> \n<p>下面的例子选取首个 &lt;div&gt; 元素内部的第一个 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;div p&quot;).first();\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_first\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery last() 方法</h2> \n<p>last() 方法返回被选元素的最后一个元素。</p> \n<p>下面的例子选择最后一个 &lt;div&gt; 元素中的最后一个 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;div p&quot;).last();\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_last\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery eq() 方法</h2> \n<p>eq() 方法返回被选元素中带有指定索引号的元素。</p> \n<p>索引号从 0 开始，因此首个元素的索引号是 0 而不是 1。下面的例子选取第二个 &lt;p&gt; 元素（索引号 1）：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;p&quot;).eq(1);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_eq\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery filter() 方法</h2> \n<p>filter() 方法允许您规定一个标准。不匹配这个标准的元素会被从集合中删除，匹配的元素会被返回。</p> \n<p>下面的例子返回带有类名 &quot;intro&quot; 的所有 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;p&quot;).filter(&quot;.intro&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_filter\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>jQuery not() 方法</h2> \n<p>not() 方法返回不匹配标准的所有元素。</p> \n<p class=\"tip\"><span>提示：</span>not() 方法与 filter() 相反。</p> \n<p>下面的例子返回不带有类名 &quot;intro&quot; 的所有 &lt;p&gt; 元素：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(document).ready(function(){\n  <br />&nbsp; $(&quot;p&quot;).not(&quot;.intro&quot;);\n  <br />}); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_not\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery 遍历- 过滤|缩写搜索元素的范围|jQuery first() 方法|实例|jQuery last() 方法|实例|jQuery eq() 方法|实例|jQuery filter() 方法|实例|jQuery not() 方法|实例|');
INSERT INTO `schoolcontent` VALUES ('230', '232', '<h1>jQuery - <span class=\"color_h1\">AJAX 简介</span> </h1> \n<hr /> \n<p class=\"intro\">AJAX 是与服务器交换数据的技术，它在不重载全部页面的情况下，实现了对部分网页的更新。</p> \n<div class=\"example\"> \n <h2 class=\"example\">jQuery AJAX 实例</h2> \n <script src=\"http://libs.baidu.com/jquery/1.10.2/jquery.min.js\">\r\n</script> \n <script>\r\n$(document).ready(function(){\r\n  $(\"button\").click(function(){\r\n    $(\"#div1\").load(\"/try/ajax/demo_test.txt\");\r\n  });\r\n});\r\n</script> \n <div class=\"example_code notranslate\"> \n  <div id=\"div1\">\n   <h2>使用 jQuery AJAX 修改文本内容</h2>\n  </div> \n  <button id=\"btn1\" type=\"button\">获取外部内容</button> \n </div> \n <br />\n <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_load\" class=\"tryitbtn\">尝试一下 &raquo;</a> \n</div> \n<br />\n<hr /> \n<h2>什么是 AJAX？</h2> \n<p>AJAX = 异步 JavaScript 和 XML（Asynchronous JavaScript and XML）。</p> \n<p>简短地说，在不重载整个网页的情况下，AJAX 通过后台加载数据，并在网页上进行显示。</p> \n<p>使用 AJAX 的应用程序案例：谷歌地图、腾讯微博、优酷视频、人人网等等。</p> \n<p>您可以在我们的 <a href=\"http://www.w3cschool.cc/jquery/ajax-ajax.html\">jQuery Ajax 参考手册</a>学会 jQuery Ajax 的具体应用。</p> \n<p>您可以在我们的 <a href=\"http://www.runoob.com/ajax/\">AJAX 教程</a>中学到更多有关 AJAX 的知识。</p> \n<hr /> \n<h2>关于 jQuery 与 AJAX</h2> \n<p>jQuery 提供多个与 AJAX 有关的方法。</p> \n<p>通过 jQuery AJAX 方法，您能够使用 HTTP Get 和 HTTP Post 从远程服务器上请求文本、HTML、XML 或 JSON - 同时您能够把这些外部数据直接载入网页的被选元素中。</p> \n<table class=\"lamp\" id=\"table1\">\n <tbody>\n  <tr> \n   <th width=\"34\"><img src=\"http://www.runoob.com/images/lamp.jpg\" width=\"32\" height=\"32\" alt=\"lamp\" /></th> \n   <td> <b>如果没有 jQuery，AJAX 编程还是有些难度的。</b><p></p> <p>编写常规的 AJAX 代码并不容易，因为不同的浏览器对 AJAX 的实现并不相同。这意味着您必须编写额外的代码对浏览器进行测试。不过，jQuery 团队为我们解决了这个难题，我们只需要一行简单的代码，就可以实现 AJAX 功能。</p></td> \n  </tr>\n </tbody>\n</table>', null, 'jQuery - AJAX 简介|jQuery AJAX 实例|使用 jQuery AJAX 修改文本内容|什么是 AJAX？|关于 jQuery 与 AJAX|');
INSERT INTO `schoolcontent` VALUES ('231', '233', '<h1>jQuery - <span class=\"color_h1\">AJAX load() 方法</span> </h1> \n<hr /> \n<h2>jQuery load() 方法</h2> \n<p>jQuery load() 方法是简单但强大的 AJAX 方法。</p> \n<p>load() 方法从服务器加载数据，并把返回的数据放入被选元素中。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\"> \n <div>\n   $(\n  <i>selector</i>).load(\n  <i>URL,data,callback</i>); \n </div> \n</div> \n<p>必需的 <i>URL</i> 参数规定您希望加载的 URL。</p> \n<p>可选的 <i>data</i> 参数规定与请求一同发送的查询字符串键/值对集合。</p> \n<p>可选的 <i>callback</i> 参数是 load() 方法完成后所执行的函数名称。</p> \n<p><span class=\"marked\">这是示例文件（&quot;demo_test.txt&quot;）的内容：</span></p> \n<div class=\"code notranslate\"> \n <div>\n   &lt;h2&gt;jQuery and AJAX is FUN!!!&lt;/h2&gt;\n  <br /> &lt;p id=&quot;p1&quot;&gt;This is some text in a paragraph.&lt;/p&gt;\n </div> \n</div> \n<p>下面的例子会把文件 &quot;demo_test.txt&quot; 的内容加载到指定的 &lt;div&gt; 元素中：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#div1&quot;).load(&quot;demo_test.txt&quot;);\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_load\">尝试一下 &raquo;</a> \n</div> \n<p>也可以把 jQuery 选择器添加到 URL 参数。</p> \n<p>下面的例子把 &quot;demo_test.txt&quot; 文件中 id=&quot;p1&quot; 的元素的内容，加载到指定的 &lt;div&gt; 元素中：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;#div1&quot;).load(&quot;demo_test.txt #p1&quot;);\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_load2\">尝试一下 &raquo;</a> \n</div> \n<p>可选的 callback 参数规定当 load() 方法完成后所要允许的回调函数。回调函数可以设置不同的参数：</p> \n<ul> \n <li><i>responseTxt</i> - 包含调用成功时的结果内容</li> \n <li><i>statusTXT</i> - 包含调用的状态</li> \n <li><i>xhr</i> - 包含 XMLHttpRequest 对象</li> \n</ul> \n<p>下面的例子会在 load() 方法完成后显示一个提示框。如果 load() 方法已成功，则显示&quot;外部内容加载成功！&quot;，而如果失败，则显示错误消息：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $(&quot;#div1&quot;).load(&quot;demo_test.txt&quot;,function(responseTxt,statusTxt,xhr){\n  <br /> &nbsp;&nbsp;&nbsp; if(statusTxt==&quot;success&quot;)\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(&quot;External content loaded successfully!&quot;);\n  <br /> &nbsp;&nbsp;&nbsp; if(statusTxt==&quot;error&quot;)\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert(&quot;Error: &quot;+xhr.status+&quot;: &quot;+xhr.statusText);\n  <br /> &nbsp; });\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_load_callback\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery - AJAX load() 方法|jQuery load() 方法|实例|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('232', '234', '<h1>jQuery - <span class=\"color_h1\">AJAX get() 和 post() 方法</span> </h1> \n<hr /> \n<p class=\"intro\">jQuery get() 和 post() 方法用于通过 HTTP GET 或 POST 请求从服务器请求数据。</p> \n<hr /> \n<h2>HTTP 请求：GET vs. POST</h2> \n<p>两种在客户端和服务器端进行请求-响应的常用方法是：GET 和 POST。</p> \n<ul> \n <li><em>GET</em> - 从指定的资源请求数据</li> \n <li><em>POST</em> - 向指定的资源提交要处理的数据</li> \n</ul> \n<p>GET 基本上用于从服务器获得（取回）数据。注释：GET 方法可能返回缓存数据。</p> \n<p>POST 也可用于从服务器获取数据。不过，POST 方法不会缓存数据，并且常用于连同请求一起发送数据。</p> \n<p>如需学习更多有关 GET 和 POST 以及两方法差异的知识，请阅读我们的 <a href=\"http://www.runoob.com/tags/html-httpmethods.html\" title=\"HTTP 方法：GET 对比 POST\">HTTP 方法 - GET 对比 POST</a>。</p> \n<hr /> \n<h2>jQuery $.get() 方法</h2> \n<p>$.get() 方法通过 HTTP GET 请求从服务器上请求数据。</p> \n<h3>语法：</h3> \n<div class=\"code notranslate\"> \n <div>\n   $.get(\n  <i>URL</i>,\n  <i>callback</i>);\n </div>\n</div> \n<p>必需的 <i>URL</i> 参数规定您希望请求的 URL。</p> \n<p>可选的 <i>callback</i> 参数是请求成功后所执行的函数名。</p> \n<p>下面的例子使用 $.get() 方法从服务器上的一个文件中取回数据：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $.get(&quot;demo_test.php&quot;,function(data,status){\n  <br /> &nbsp;&nbsp;&nbsp; alert(&quot;Data: &quot; + data + &quot;nStatus: &quot; + status);\n  <br /> &nbsp; });\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_get\">尝试一下 &raquo;</a> \n</div> \n<p>$.get() 的第一个参数是我们希望请求的 URL（&quot;demo_test.php&quot;）。</p> \n<p>第二个参数是回调函数。第一个回调参数存有被请求页面的内容，第二个回调参数存有请求的状态。</p> \n<p><b>提示：</b> 这个 PHP 文件 (&quot;demo_test.php&quot;) 类似这样：</p> \n<div class=\"code notranslate\"> \n <div>\n   &lt;?php\n  <br /> echo &quot;This is some text from an external PHP file.&quot;;\n  <br /> ?&gt;\n </div> \n</div> \n<br />\n<hr /> \n<h2>jQuery $.post() 方法</h2> \n<p>$.post() 方法通过 HTTP POST 请求从服务器上请求数据。</p> \n<p><b>语法:</b></p> \n<div class=\"code notranslate\"> \n <div>\n   $.post(\n  <i>URL,data,callback</i>); \n </div> \n</div> \n<p>必需的 <i>URL</i> 参数规定您希望请求的 URL。</p> \n<p>可选的 <i>data</i> 参数规定连同请求发送的数据。</p> \n<p>可选的 <i>callback</i> 参数是请求成功后所执行的函数名。</p> \n<p>下面的例子使用 $.post() 连同请求一起发送数据：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $(&quot;button&quot;).click(function(){\n  <br /> &nbsp; $.post(&quot;demo_test_post.html&quot;,\n  <br /> &nbsp; {\n  <br /> &nbsp;&nbsp;&nbsp; name:&quot;Donald Duck&quot;,\n  <br /> &nbsp;&nbsp;&nbsp; city:&quot;Duckburg&quot;\n  <br /> &nbsp; },\n  <br /> &nbsp; function(data,status){\n  <br /> &nbsp;&nbsp;&nbsp; alert(&quot;Data: &quot; + data + &quot;nStatus: &quot; + status);\n  <br /> &nbsp; });\n  <br /> });\n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_post\">尝试一下 &raquo;</a> \n</div> \n<p>$.post() 的第一个参数是我们希望请求的 URL (&quot;demo_test_post.php&quot;)。</p> \n<p>然后我们连同请求（name 和 city）一起发送数据。</p> \n<p>&quot;demo_test_post.php&quot; 中的 PHP 脚本读取这些参数，对它们进行处理，然后返回结果。</p> \n<p>第三个参数是回调函数。第一个回调参数存有被请求页面的内容，而第二个参数存有请求的状态。</p> \n<p><b>提示：</b> 这个 PHP 文件 (&quot;demo_test_post.php&quot;) 类似这样：</p> \n<div class=\"code notranslate\"> \n <div>\n   &lt;?php\n  <br /> $name = isset($_POST[\'name\']) ? htmlspecialchars($_POST[\'name\']) : \'\';\n  <br /> $city = isset($_POST[\'city\']) ? htmlspecialchars($_POST[\'city\']) : \'\';\n  <br /> echo \'Dear \' . $name;\n  <br /> echo \'Hope you live well in \' . $city;\n  <br /> ?&gt;\n </div> \n</div>', null, 'jQuery - AJAX get() 和 post() 方法|HTTP 请求：GET vs. POST|jQuery $.get() 方法|实例|jQuery $.post() 方法|实例|');
INSERT INTO `schoolcontent` VALUES ('233', '235', '<h1>jQuery - <span class=\"color_h1\">noConflict() 方法</span> </h1> \n<hr /> \n<p class=\"intro\">如何在页面上同时使用 jQuery 和其他框架？</p> \n<hr /> \n<h2>jQuery 和其他 JavaScript 框架</h2> \n<p>正如您已经了解到的，jQuery 使用 $ 符号作为 jQuery 的简写。</p> \n<p><span class=\"marked\">如果其他 JavaScript 框架也使用 $ 符号作为简写怎么办？</span></p> \n<p>其他一些 JavaScript 框架包括：MooTools、Backbone、Sammy、Cappuccino、Knockout、JavaScript MVC、Google Web Toolkit、Google Closure、Ember、Batman 以及 Ext JS。</p> \n<p>其中某些框架也使用 $ 符号作为简写（就像 jQuery），如果您在用的两种不同的框架正在使用相同的简写符号，有可能导致脚本停止运行。</p> \n<p>jQuery 的团队考虑到了这个问题，并实现了 noConflict() 方法。</p> \n<hr /> \n<h2>jQuery noConflict() 方法</h2> \n<p>noConflict() 方法会释放会 $ 标识符的控制，这样其他脚本就可以使用它了。</p> \n<p>当然，您仍然可以通过全名替代简写的方式来使用 jQuery：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $.noConflict();\n  <br /> jQuery(document).ready(function(){\n  <br /> &nbsp; jQuery(&quot;button&quot;).click(function(){\n  <br /> &nbsp;&nbsp;&nbsp; jQuery(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);\n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_noconflict\">尝试一下 &raquo;</a> \n</div> \n<p>您也可以创建自己的简写。noConflict() 可返回对 jQuery 的引用，您可以把它存入变量，以供稍后使用。请看这个例子：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   var jq = $.noConflict();\n  <br /> jq(document).ready(function(){\n  <br /> &nbsp; jq(&quot;button&quot;).click(function(){\n  <br /> &nbsp;&nbsp;&nbsp; jq(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);\n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_noconflict2\">尝试一下 &raquo;</a> \n</div> \n<p>如果你的 jQuery 代码块使用 $ 简写，并且您不愿意改变这个快捷方式，那么您可以把 $ 符号作为变量传递给 ready 方法。这样就可以在函数内使用 $ 符号了 - 而在函数外，依旧不得不使用 &quot;jQuery&quot;：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code notranslate\">\n   $.noConflict();\n  <br /> jQuery(document).ready(function($){\n  <br /> &nbsp; $(&quot;button&quot;).click(function(){\n  <br /> &nbsp;&nbsp;&nbsp; $(&quot;p&quot;).text(&quot;jQuery is still working!&quot;);\n  <br /> &nbsp; });\n  <br /> }); \n </div> \n <br />\n <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_noconflict3\">尝试一下 &raquo;</a> \n</div>', null, 'jQuery - noConflict() 方法|jQuery 和其他 JavaScript 框架|jQuery noConflict() 方法|实例|实例|实例|');
INSERT INTO `schoolcontent` VALUES ('234', '236', '<h1>JSONP 教程</h1> \n<p>本章节我们将向大家介绍 JSONP 的知识。</p> \n<p>Jsonp(JSON with Padding) 是 json 的一种&quot;使用模式&quot;，可以让网页从别的域名（网站）那获取资料，即跨域读取数据。</p> \n<p> 为什么我们从不同的域（网站）访问数据需要一个特殊的技术(JSONP )呢？这是因为同源策略。 </p>\n<p>同源策略，它是由Netscape提出的一个著名的安全策略，现在所有支持JavaScript 的浏览器都会使用这个策略。</p> \n<hr /> \n<h2>JSONP 应用</h2> \n<h3>1. 服务端JSONP格式数据</h3> \n<p>如客户想访问 : http://www.runoob.com/try/ajax/jsonp.php?jsonp=callbackFunction。</p> \n<p>假设客户期望返回JSON数据：[&quot;customername1&quot;,&quot;customername2&quot;]。</p> \n<p>真正返回到客户端的数据显示为: callbackFunction([&quot;customername1&quot;,&quot;customername2&quot;])。</p> \n<p>服务端文件jsonp.php代码为：</p> \n<pre>\r\n&lt;?php\r\nheader(\'Content-type: application/json\');\r\n//获取回调函数名\r\n$jsoncallback = htmlspecialchars($_REQUEST [\'jsoncallback\']);\r\n//json数据\r\n$json_data = \'[&quot;customername1&quot;,&quot;customername2&quot;]\';\r\n//输出jsonp格式的数据\r\necho $jsoncallback . &quot;(&quot; . $json_data . &quot;)&quot;;\r\n?&gt;\r\n</pre> \n<h3>2. 客户端实现 callbackFunction 函数</h3> \n<pre>\r\n&lt;script type=&quot;text/javascript&quot;&gt;\r\nfunction callbackFunction(result, methodName)\r\n{\r\n    var html = \'&lt;ul&gt;\';\r\n    for(var i = 0; i &lt; result.length; i++)\r\n    {\r\n        html += \'&lt;li&gt;\' + result[i] + \'&lt;/li&gt;\';\r\n    }\r\n    html += \'&lt;/ul&gt;\';\r\n    document.getElementById(\'divCustomers\').innerHTML = html;\r\n}\r\n&lt;/script&gt;\r\n</pre> \n<h3>页面展示</h3> \n<pre>\r\n&lt;div id=&quot;divCustomers&quot;&gt;&lt;/div&gt;\r\n</pre> \n<h3>客户端页面完整代码</h3> \n<pre>\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;\r\n&lt;head&gt;\r\n    &lt;title&gt;JSONP 实例&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n    &lt;div id=&quot;divCustomers&quot;&gt;&lt;/div&gt;\r\n    &lt;script type=&quot;text/javascript&quot;&gt;\r\n        function callbackFunction(result, methodName)\r\n        {\r\n            var html = \'&lt;ul&gt;\';\r\n            for(var i = 0; i &lt; result.length; i++)\r\n            {\r\n                html += \'&lt;li&gt;\' + result[i] + \'&lt;/li&gt;\';\r\n            }\r\n            html += \'&lt;/ul&gt;\';\r\n            document.getElementById(\'divCustomers\').innerHTML = html;\r\n        }\r\n    &lt;/script&gt;\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.runoob.com/try/ajax/jsonp.php?jsoncallback=callbackFunction&quot;&gt;&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre> \n<hr /> \n<h2>jQuery 使用 JSONP</h2> \n<p>以上代码可以使用 jQuery 代码实例：</p> \n<pre>\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n	&lt;title&gt;JSONP 实例&lt;/title&gt;\r\n	&lt;script src=&quot;http://apps.bdimg.com/libs/jquery/1.8.3/jquery.js&quot;&gt;&lt;/script&gt;	\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;div id=&quot;divCustomers&quot;&gt;&lt;/div&gt;\r\n&lt;script&gt;\r\n$.getJSON(&quot;http://www.runoob.com/try/ajax/jsonp.php?jsoncallback=?&quot;, function(data) {\r\n	\r\n	var html = \'&lt;ul&gt;\';\r\n	for(var i = 0; i &lt; data.length; i++)\r\n	{\r\n		html += \'&lt;li&gt;\' + data[i] + \'&lt;/li&gt;\';\r\n	}\r\n	html += \'&lt;/ul&gt;\';\r\n	\r\n	$(\'#divCustomers\').html(html); \r\n});\r\n&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt; \r\n</pre>', null, 'JSONP 教程|JSONP 应用|jQuery 使用 JSONP|');
INSERT INTO `schoolcontent` VALUES ('235', '237', '<h1>jQuery <span class=\"color_h1\">实例</span> </h1> \n<hr /> \n<p class=\"intro\">你想增进 jQuery 技能吗？</p> \n<hr /> \n<h2>jQuery 选择器</h2> \n<p class=\"tit_d1\"><a href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_this\" target=\"_blank\">$(this).hide()</a></p> \n<p class=\"tit_d3\">演示 jQuery 的 hide() 函数，隐藏当前的 HTML 元素。</p> \n<p class=\"tit_d1\"><a href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_p\" target=\"_blank\">$(&quot;p&quot;).hide()</a></p> \n<p class=\"tit_d3\">演示 jQuery 的 hide() 函数，隐藏所有 &lt;p&gt; 元素。</p> \n<p class=\"tit_d1\"><a href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_class\" target=\"_blank\">$(&quot;.test&quot;).hide()</a></p> \n<p class=\"tit_d3\">演示 jQuery 的 hide() 函数，隐藏所有 class=&quot;test&quot; 的元素。</p> \n<p class=\"tit_d1\"><a href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_id\" target=\"_blank\">$(&quot;#test&quot;).hide()</a></p> \n<p class=\"tit_d3\">演示 jQuery 的 hide() 函数，隐藏 id=&quot;test&quot; 的元素。</p> \n<hr /> \n<h2>jQuery 事件</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_click\">jQuery click()</a><br /> 演示 jQuery jQuery click() 事件.</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dblclick\">jQuery dblclick()</a><br /> 演示 jQuery dblclick() 事件。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_mouseenter\">jQuery mouseenter()</a><br /> 演示 jQuery mouseenter() 事件。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_mouseleave\">jQuery mouseleave()</a><br /> 演示 jQuery mouseleave() 事件。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_mousedown\">jQuery mousedown()</a><br /> 演示 jQuery mousedown() 事件。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_mouseup\">jQuery mouseup()</a><br /> 演示 jQuery mouseup() 事件。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hover\">jQuery hover()</a><br /> 演示 jQuery hover() 事件。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_focus_blur\">jQuery focus() 和 blur()</a><br /> 演示 jQuery focus() 和 blur() 事件。</p> \n<p><b><a href=\"jquery-events.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery 隐藏/显示</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide\">jQuery hide()</a><br /> 演示 jQuery hide() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_show\">jQuery hide() 和 show()</a><br /> 演示jQuery hide() 和 show() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_toggle\">jQuery toggle()</a><br /> jQuery toggle() 用于切换 hide() 和 show() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_hide_explanations\">jQuery hide()</a><br /> 另外一个隐藏文本的实例。</p> \n<p><b><a href=\"jquery-hide-show.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery 淡入淡出</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadein\">jQuery fadeIn()</a><br /> 演示 jQuery fadeIn() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadeout\">jQuery fadeOut()</a><br /> 演示 jQuery fadeOut() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadetoggle\">jQuery fadeToggle()</a><br /> 演示 jQuery fadeToggle() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_fadeto\">jQuery fadeTo()</a><br /> 演示 jQuery fadeTo() 方法。</p> \n<p><b><a href=\"jquery-fade.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery 滑动</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_down\">jQuery slideDown()</a><br /> 演示 jQuery slideDown() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_up\">jQuery slideUp()</a><br /> 演示 jQuery slideUp() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_slide_toggle\">jQuery slideToggle()</a><br /> 演示 jQuery slideToggle() 方法。</p> \n<p><b><a href=\"jquery-slide.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery 动画</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation1\">jQuery animate()</a><br /> 演示简单的 jQuery animate() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation1_multicss\">jQuery animate() - 设置多个css属性</a><br /> 演示通过 jQuery animate() 方法 改变样式。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation1_relative\">jQuery animate() - 使用相关值</a><br /> 演示如何在 jQuery animate() 方法中使用相关值。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation1_toggle\">jQuery animate() - 使用预定义值</a><br /> 演示通过 animate() 方法预定义 &quot;hide&quot;, &quot;show&quot;, &quot;toggle&quot; 值。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation\">jQuery animate()</a><br /> 演示更多 jQuery animate() 方法实例</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_animation2\">jQuery animate()</a><br /> 演示更多 jQuery animate() 方法实例 (多个 animate() 回调).</p> \n<p><b><a href=\"jquery-animate.html\">实例 解析</a></b></p> \n<hr /> \n<h2>jQuery 停止动画</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_stop_slide\">jQuery stop() 滑动</a><br /> 演示 jQuery stop() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_stop_params\">jQuery stop() 动画 (带参数)</a><br /> 演示 jQuery stop() 方法。</p> \n<p><b><a href=\"jquery-stop.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery HTML 获取 和 属性</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_html_get\">jQuery text() 和 html() - 获取文本和内容</a><br /> 使用jQuery text() 和 html() 方法获取内容。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_val_get\">jQuery val() - 获取值</a><br /> 使用jQuery val() 方法获取表单的字段值。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_attr_get\">jQuery attr() - 获取属性值</a><br /> 使用jQuery attr() 方法获取属性值。</p> \n<p><b><a href=\"jquery-dom-get.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery HTML 设置内容和属性</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_html_set\">jQuery text(), html(), 和 val() - 设置内容</a><br /> 使用 jQuery text(), html() 和 val() 方法设置内容 。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_html_callback\">jQuery text() 和 html() - 设置内容并使用回调函数</a><br /> 使用 text() 和 html() 设置内容并使用回调函数</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_attr_set\">jQuery attr() - 设置属性值</a><br /> 使用 jQuery attr() 方法设置属性值 。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_attr_set2\">jQuery attr() - 设置 多个属性值</a><br /> 使用jQuery attr() 方法设置多个属性值。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_attr_callback\">jQuery attr() - 设置属性值并使用回调函数</a><br /> 设置属性值 + 并使用回调函数调用attr().</p> \n<p><b><a href=\"jquery-dom-set.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery HTML 添加元素/内容</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_append\">jQuery append()</a><br /> 在选取元素的末尾添加内容</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_prepend\">jQuery prepend()</a><br /> 在选取元素的开头添加内容</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_append2\">jQuery append() -插入多个元素</a><br /> 创新新的 text/HTML 元素, jQuery 和 JavaScript/DOM。添加在新元素文本后。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_after\">jQuery after() 和 before()</a><br /> 在选取元素的前后添加 HTML　元素。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_html_after2\">jQuery after() - 插入多个元素</a><br /> 创新新的 text/HTML 元素,jQuery和 JavaScript/DOM。在选取元素的末尾插入新元素。</p> \n<p><b><a href=\"jquery-dom-add.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery HTML 移除元素/内容</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_remove\">jQuery remove()</a><br /> 移除选取的元素</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_empty\">jQuery empty()</a><br /> 移除选取元素的所有子元素</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_remove2\">jQuery remove() - 使用参数</a><br /> 过滤元素并移除</p> \n<p><b><a href=\"jquery-dom-remove.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery Get 和 设置 CSS 类</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_addclass\">jQuery addClass()</a><br /> 不同元素添加 class 属性</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_addclass2\">jQuery addClass() - 多个类</a><br /> 使用 addClass() 方法添加多个类</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_removeclass\">jQuery removeClass()</a><br /> 移除指定元素的类</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dom_toggleclass\">jQuery toggleClass()</a><br /> 在选取的元素切换（添加/删除）类</p> \n<p><b><a href=\"jquery-css-classes.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery css() 方法</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_css_getcolor\">jQuery css() - 返回 CSS 属性</a><br /> 返回第一个匹配元素的css属性值</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_css_setcolor\">jQuery css() - 设置 CSS 属性</a><br /> 设置 所有配置元素指定的 CSS 属性 </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_css_set_multiple\">jQuery css() - 设置 CSS 属性</a><br /> 设置多个匹配元素的 CSS 属性 </p> \n<p><b><a href=\"jquery-css.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery 尺寸</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_width_height\">jQuery - 返回 width() 和 height()</a><br /> 返回指定元素的 width 和 height </p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_innerwidth_height\">jQuery - 返回 innerWidth() 和 innerHeight()</a><br /> 返回指定元素的 inner-width/height</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_outerwidth_height\">jQuery - 返回 outerWidth() 和 outerHeight()</a><br /> 返回指定元素的 outer-width/height</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_outerwidth_height2\">jQuery - 返回 outerWidth(true) 和 outerHeight(true)</a><br /> 返回指定元素的 outer-width/height (包含外边框)</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_width_height2\"> jQuery - 返回 width() 和 height() of document 和 window</a><br /> 返回 HTML 文档和窗口的 width 和 height</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_dim_width_height_set\"> jQuery - 设置 width() 和 height()</a><br /> 设置指定元素的 width 和 height</p> \n<p><b><a href=\"jquery-dimensions.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery 遍历 - 祖先</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_parent\">jQuery parent()</a><br /> 演示 jQuery parent() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_parents\">jQuery parents()</a><br /> 演示 jQuery parents() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_parentsuntil\">jQuery parentsUntil()</a><br /> 演示 jQuery parentsUntil() 方法。</p> \n<p><b><a href=\"jquery-traversing-ancestors.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery 遍历 - 后代</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_children\">jQuery children()</a><br /> 演示 jQuery children() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_find\">jQuery find()</a><br /> 演示 jQuery find() 方法。</p> \n<p><b><a href=\"jquery-traversing-descendants.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery 遍历 - 同胞(siblings)</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_siblings\">jQuery siblings()</a><br /> 演示 jQuery siblings() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_next\">jQuery next()</a><br /> 演示 jQuery next() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_nextall\">jQuery nextAll()</a><br /> 演示 jQuery nextAll() 方法。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_nextuntil\">jQuery nextUntil()</a><br /> 演示 jQuery nextUntil() 方法。</p> \n<p><b><a href=\"jquery-traversing-siblings.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery AJAX load() 方法</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_load\">jQuery load()</a><br /> 异步载入文件内容并插入到 &lt;div&gt; 元素中。</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_load2\">jQuery load()</a><br /> 异步载入文件内容中指定的元素内容并插入到 &lt;div&gt; 元素.</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_load_callback\"> jQuery load() - 使用回调函数(callback)</a><br /> 使用 jQuery load() 方法的回调函数。</p> \n<p><b><a href=\"jquery-ajax-load.html\">实例解析</a></b></p> \n<hr /> \n<h2>jQuery AJAX get() 和 post() 方法</h2> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_get\">jQuery get()</a><br /> 使用 $.get() 方法从服务端异步获取数据</p> \n<p><a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_ajax_post\">jQuery post()</a><br /> 使用 $.post() 方法从服务端异步获取数据</p> \n<p><b><a href=\"jquery-ajax-get-post.html\">实例解析</a></b></p>', null, 'jQuery 实例|jQuery 选择器|jQuery 事件|jQuery 隐藏/显示|jQuery 淡入淡出|jQuery 滑动|jQuery 动画|jQuery 停止动画|jQuery HTML 获取 和 属性|jQuery HTML 设置内容和属性|jQuery HTML 添加元素/内容|jQuery HTML 移除元素/内容|jQuery Get 和 设置 CSS 类|jQuery css() 方法|jQuery 尺寸|jQuery 遍历 - 祖先|jQuery 遍历 - 后代|jQuery 遍历 - 同胞(siblings)|jQuery AJAX load() 方法|jQuery AJAX get() 和 post() 方法|');
INSERT INTO `schoolcontent` VALUES ('236', '238', '<h1>jQuery <span class=\"color_h1\">选择器</span> </h1> \n<hr /> \n<h2>jQuery 选择器</h2> \n<p>请使用我们的 <a target=\"_blank\" href=\"http://www.runoob.com/try/trysel.php\">jQuery 选择器检测器</a> 来演示不同的选择器。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\">选择器</th> \n   <th width=\"25%\">实例</th> \n   <th width=\"55%\">选取</th> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-all.html\">*</a></td> \n   <td>$(&quot;*&quot;)</td> \n   <td>所有元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-id.html\">#<em>id</em></a></td> \n   <td>$(&quot;#lastname&quot;)</td> \n   <td>id=&quot;lastname&quot; 的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-class.html\">.<em>class</em></a></td> \n   <td>$(&quot;.intro&quot;)</td> \n   <td>class=&quot;intro&quot; 的所有元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-multiple-classes.html\">.<em>class,</em>.<em>class</em></a></td> \n   <td>$(&quot;.intro,.demo&quot;)</td> \n   <td>class 为 &quot;intro&quot; 或 &quot;demo&quot; 的所有元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-element.html\"><em>element</em></a></td> \n   <td>$(&quot;p&quot;)</td> \n   <td>所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-multiple-sel.html\"><em>el1</em>,<em>el2</em>,<em>el3</em></a></td> \n   <td>$(&quot;h1,div,p&quot;)</td> \n   <td>所有 &lt;h1&gt;、&lt;div&gt; 和 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td> </td> \n   <td> </td> \n   <td> </td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-first.html\">:first</a></td> \n   <td>$(&quot;p:first&quot;)</td> \n   <td>第一个 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-last.html\">:last</a></td> \n   <td>$(&quot;p:last&quot;)</td> \n   <td>最后一个 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-even.html\">:even</a></td> \n   <td>$(&quot;tr:even&quot;)</td> \n   <td>所有偶数 &lt;tr&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-odd.html\">:odd</a></td> \n   <td>$(&quot;tr:odd&quot;)</td> \n   <td>所有奇数 &lt;tr&gt; 元素</td> \n  </tr> \n  <tr> \n   <td> </td> \n   <td> </td> \n   <td> </td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-firstchild.html\">:first-child</a></td> \n   <td>$(&quot;p:first-child&quot;)</td> \n   <td>属于其父元素的第一个子元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-firstoftype.html\">:first-of-type</a></td> \n   <td>$(&quot;p:first-of-type&quot;)</td> \n   <td>属于其父元素的第一个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-lastchild.html\">:last-child</a></td> \n   <td>$(&quot;p:last-child&quot;)</td> \n   <td>属于其父元素的最后一个子元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-lastoftype.html\">:last-of-type</a></td> \n   <td>$(&quot;p:last-of-type&quot;)</td> \n   <td>属于其父元素的最后一个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-nthchild.html\">:nth-child(<em>n</em>)</a></td> \n   <td>$(&quot;p:nth-child(2)&quot;)</td> \n   <td>属于其父元素的第二个子元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-nthlastchild.html\">:nth-last-child(<em>n</em>)</a></td> \n   <td>$(&quot;p:nth-last-child(2)&quot;)</td> \n   <td>属于其父元素的第二个子元素的所有 &lt;p&gt; 元素，从最后一个子元素开始计数</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-nthoftype.html\">:nth-of-type(<em>n</em>)</a></td> \n   <td>$(&quot;p:nth-of-type(2)&quot;)</td> \n   <td>属于其父元素的第二个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-nthlastoftype.html\">:nth-last-of-type(<em>n</em>)</a></td> \n   <td>$(&quot;p:nth-last-of-type(2)&quot;)</td> \n   <td>属于其父元素的第二个 &lt;p&gt; 元素的所有 &lt;p&gt; 元素，从最后一个子元素开始计数</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-onlychild.html\">:only-child</a></td> \n   <td>$(&quot;p:only-child&quot;)</td> \n   <td>属于其父元素的唯一子元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-onlyoftype.html\">:only-of-type</a></td> \n   <td>$(&quot;p:only-of-type&quot;)</td> \n   <td>属于其父元素的特定类型的唯一子元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td> </td> \n   <td> </td> \n   <td> </td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-parent-child.html\">parent &gt; child</a></td> \n   <td>$(&quot;div &gt; p&quot;)</td> \n   <td>&lt;div&gt; 元素的直接子元素的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-parent-descendant.html\">parent descendant</a></td> \n   <td>$(&quot;div p&quot;)</td> \n   <td>&lt;div&gt; 元素的后代的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-previous-next.html\">element + next</a></td> \n   <td>$(&quot;div + p&quot;)</td> \n   <td>每个 &lt;div&gt; 元素相邻的下一个 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-previous-siblings.html\">element ~ siblings</a></td> \n   <td>$(&quot;div ~ p&quot;)</td> \n   <td>&lt;div&gt; 元素同级的所有 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td> </td> \n   <td> </td> \n   <td> </td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-eq.html\">:eq(<em>index</em>)</a></td> \n   <td>$(&quot;ul li:eq(3)&quot;)</td> \n   <td>列表中的第四个元素（index 值从 0 开始）</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-gt.html\">:gt(<em>no</em>)</a></td> \n   <td>$(&quot;ul li:gt(3)&quot;)</td> \n   <td>列举 index 大于 3 的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-lt.html\">:lt(<em>no</em>)</a></td> \n   <td>$(&quot;ul li:lt(3)&quot;)</td> \n   <td>列举 index 小于 3 的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-not.html\">:not(<em>selector</em>)</a></td> \n   <td>$(&quot;input:not(:empty)&quot;)</td> \n   <td>所有不为空的输入元素</td> \n  </tr> \n  <tr> \n   <td> </td> \n   <td> </td> \n   <td> </td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-header.html\">:header</a></td> \n   <td>$(&quot;:header&quot;)</td> \n   <td>所有标题元素 &lt;h1&gt;, &lt;h2&gt; ...</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-animated.html\">:animated</a></td> \n   <td>$(&quot;:animated&quot;)</td> \n   <td>所有动画元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-focus.html\">:focus</a></td> \n   <td>$(&quot;:focus&quot;)</td> \n   <td>当前具有焦点的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-contains.html\">:contains(<em>text</em>)</a></td> \n   <td>$(&quot;:contains(\'Hello\')&quot;)</td> \n   <td>所有包含文本 &quot;Hello&quot; 的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-has.html\">:has(<em>selector</em>)</a></td> \n   <td>$(&quot;div:has(p)&quot;)</td> \n   <td>所有包含有 &lt;p&gt; 元素在其内的 &lt;div&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-empty.html\">:empty</a></td> \n   <td>$(&quot;:empty&quot;)</td> \n   <td>所有空元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-parent.html\">:parent</a></td> \n   <td>$(&quot;:parent&quot;)</td> \n   <td>所有是另一个元素的父元素的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-hidden.html\">:hidden</a></td> \n   <td>$(&quot;p:hidden&quot;)</td> \n   <td>所有隐藏的 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-visible.html\">:visible</a></td> \n   <td>$(&quot;table:visible&quot;)</td> \n   <td>所有可见的表格</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-root.html\">:root</a></td> \n   <td>$(&quot;:root&quot;)</td> \n   <td>文档的根元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-lang.html\">:lang(<em>language</em>)</a></td> \n   <td>$(&quot;p:lang(de)&quot;)</td> \n   <td>所有带有以 &quot;de&quot; 开头的 lang 属性值的 &lt;p&gt; 元素</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-sel-attribute.html\">[<em>attribute</em>]</a></td> \n   <td>$(&quot;[href]&quot;)</td> \n   <td>所有带有 href 属性的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-equal-value.html\">[<em>attribute</em>=<em>value</em>]</a></td> \n   <td>$(&quot;[href=\'default.htm\']&quot;)</td> \n   <td>所有带有 href 属性且值等于 &quot;default.htm&quot; 的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-notequal-value.html\">[<em>attribute</em>!=<em>value</em>]</a></td> \n   <td>$(&quot;[href!=\'default.htm\']&quot;)</td> \n   <td>所有带有 href 属性且值不等于 &quot;default.htm&quot; 的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-end-value.html\">[<em>attribute</em>$=<em>value</em>]</a></td> \n   <td>$(&quot;[href$=\'.jpg\']&quot;)</td> \n   <td>所有带有 href 属性且值以 &quot;.jpg&quot; 结尾的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-prefix-value.html\">[<i>attribute</i>|=<i>value</i>]</a></td> \n   <td>$(&quot;[title|=\'Tomorrow\']&quot;)</td> \n   <td>所有带有 title 属性且值等于 \'Tomorrow\' 或者以 \'Tomorrow\' 后跟连接符作为开头的字符串</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-beginning-value.html\">[<i>attribute</i>^=<i>value</i>]</a></td> \n   <td>$(&quot;[title^=\'Tom\']&quot;)</td> \n   <td>所有带有 title 属性且值以 &quot;Tom&quot; 开头的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-contains-value.html\">[<i>attribute</i>~=<i>value</i>]</a></td> \n   <td>$(&quot;[title~=\'hello\']&quot;)</td> \n   <td>所有带有 title 属性且值包含单词 &quot;hello&quot; 的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-attribute-contains-string-value.html\">[<i>attribute*</i>=<i>value</i>]</a></td> \n   <td>$(&quot;[title*=\'hello\']&quot;)</td> \n   <td>所有带有 title 属性且值包含字符串 &quot;hello&quot; 的元素</td> \n  </tr> \n  <tr> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n   <td>&nbsp;</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input.html\">:input</a></td> \n   <td>$(&quot;:input&quot;)</td> \n   <td>所有 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-text.html\">:text</a></td> \n   <td>$(&quot;:text&quot;)</td> \n   <td>所有带有 type=&quot;text&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-password.html\">:password</a></td> \n   <td>$(&quot;:password&quot;)</td> \n   <td>所有带有 type=&quot;password&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-radio.html\">:radio</a></td> \n   <td>$(&quot;:radio&quot;)</td> \n   <td>所有带有 type=&quot;radio&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-checkbox.html\">:checkbox</a></td> \n   <td>$(&quot;:checkbox&quot;)</td> \n   <td>所有带有 type=&quot;checkbox&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-submit.html\">:submit</a></td> \n   <td>$(&quot;:submit&quot;)</td> \n   <td>所有带有 type=&quot;submit&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-reset.html\">:reset</a></td> \n   <td>$(&quot;:reset&quot;)</td> \n   <td>所有带有 type=&quot;reset&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-button.html\">:button</a></td> \n   <td>$(&quot;:button&quot;)</td> \n   <td>所有带有 type=&quot;button&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-image.html\">:image</a></td> \n   <td>$(&quot;:image&quot;)</td> \n   <td>所有带有 type=&quot;image&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-file.html\">:file</a></td> \n   <td>$(&quot;:file&quot;)</td> \n   <td>所有带有 type=&quot;file&quot; 的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-enabled.html\">:enabled</a></td> \n   <td>$(&quot;:enabled&quot;)</td> \n   <td>所有启用的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-disabled.html\">:disabled</a></td> \n   <td>$(&quot;:disabled&quot;)</td> \n   <td>所有禁用的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-selected.html\">:selected</a></td> \n   <td>$(&quot;:selected&quot;)</td> \n   <td>所有选定的 input 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"sel-input-checked.html\">:checked</a></td> \n   <td>$(&quot;:checked&quot;)</td> \n   <td>所有选中的 input 元素</td> \n  </tr> \n </tbody>\n</table> \n<br />', null, 'jQuery 选择器|jQuery 选择器|');
INSERT INTO `schoolcontent` VALUES ('237', '239', '<h1>jQuery <span class=\"color_h1\">事件</span> 方法</h1> \n<hr /> \n<h2>jQuery 事件方法</h2> \n<p>事件方法触发器或添加一个函数到被选元素的事件处理程序。</p> \n<p>下面的表格列出了所有用于处理事件的 jQuery 方法。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"39%\" align=\"left\">方法</th> \n   <th width=\"61%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"event-bind.html\">bind()</a></td> \n   <td>向元素添加事件处理程序</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-blur.html\">blur()</a></td> \n   <td>添加/触发 blur 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-change.html\">change()</a></td> \n   <td>添加/触发 change 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-click.html\">click()</a></td> \n   <td>添加/触发 click 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-dblclick.html\">dblclick()</a></td> \n   <td>添加/触发 double click 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-delegate.html\">delegate()</a></td> \n   <td>向匹配元素的当前或未来的子元素添加处理程序</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-die.html\">die()</a></td> \n   <td> <span class=\"deprecated\">在版本 1.9 中被移除。</span>移除所有通过 live() 方法添加的事件处理程序</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-error.html\">error()</a></td> \n   <td> <span class=\"deprecated\">在版本 1.8 中被废弃。</span>添加/触发 error 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-event-currenttarget.html\">event.currentTarget</a></td> \n   <td>在事件冒泡阶段内的当前 DOM 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-data.html\">event.data</a></td> \n   <td>包含当前执行的处理程序被绑定时传递到事件方法的可选数据</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-delegatetarget.html\">event.delegateTarget</a></td> \n   <td>返回当前调用的 jQuery 事件处理程序所添加的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-isdefaultprevented.html\">event.isDefaultPrevented()</a></td> \n   <td>返回指定的 event 对象上是否调用了 event.preventDefault()</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-isimmediatepropagationstopped.html\">event.isImmediatePropagationStopped()</a></td> \n   <td>返回指定的 event 对象上是否调用了 event.stopImmediatePropagation()</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-ispropagationstopped.html\">event.isPropagationStopped()</a></td> \n   <td>返回指定的 event 对象上是否调用了 event.stopPropagation()</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-namespace.html\">event.namespace</a></td> \n   <td>返回当事件被触发时指定的命名空间</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-pagex.html\">event.pageX</a></td> \n   <td>返回相对于文档左边缘的鼠标位置</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-pagey.html\">event.pageY</a></td> \n   <td>返回相对于文档上边缘的鼠标位置</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-preventdefault.html\">event.preventDefault()</a></td> \n   <td>阻止事件的默认行为</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-event-relatedtarget.html\">event.relatedTarget</a></td> \n   <td> <span>返回当鼠标移动时哪个元素进入或退出</span> </td> \n  </tr> \n  <tr> \n   <td><a href=\"event-result.html\">event.result</a></td> \n   <td>包含由被指定事件触发的事件处理程序返回的最后一个值</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-stopimmediatepropagation.html\">event.stopImmediatePropagation()</a></td> \n   <td>阻止其他事件处理程序被调用</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-stoppropagation.html\">event.stopPropagation()</a></td> \n   <td>阻止事件向上冒泡到 DOM 树，阻止任何父处理程序被事件通知</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-event-target.html\">event.target</a></td> \n   <td>返回哪个 DOM 元素触发事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-event-timestamp.html\">event.timeStamp</a></td> \n   <td>返回从 1970 年 1 月 1 日到事件被触发时的毫秒数</td> \n  </tr> \n  <tr> \n   <td><a href=\"jq-event-type.html\">event.type</a></td> \n   <td>返回哪种事件类型被触发</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-which.html\">event.which</a></td> \n   <td>返回指定事件上哪个键盘键或鼠标按钮被按下</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-focus.html\">focus()</a></td> \n   <td>添加/触发 focus 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-focusin.html\">focusin()</a></td> \n   <td>添加事件处理程序到 focusin 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-focusout.html\">focusout()</a></td> \n   <td>添加事件处理程序到 focusout 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-hover.html\">hover()</a></td> \n   <td>添加两个事件处理程序到 hover 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-keydown.html\">keydown()</a></td> \n   <td>添加/触发 keydown 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-keypress.html\">keypress()</a></td> \n   <td>添加/触发 keypress 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-keyup.html\">keyup()</a></td> \n   <td>添加/触发 keyup 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-live.html\">live()</a></td> \n   <td> <span class=\"deprecated\">在版本 1.9 中被移除。</span>添加一个或多个事件处理程序到当前或未来的被选元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-load.html\">load()</a></td> \n   <td> <span class=\"deprecated\">在版本 1.8 中被废弃。</span>添加一个事件处理程序到 load 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-mousedown.html\">mousedown()</a></td> \n   <td>添加/触发 mousedown 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-mouseenter.html\">mouseenter()</a></td> \n   <td>添加/触发 mouseenter 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-mouseleave.html\">mouseleave()</a></td> \n   <td>添加/触发 mouseleave 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-mousemove.html\">mousemove()</a></td> \n   <td>添加/触发 mousemove 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-mouseout.html\">mouseout()</a></td> \n   <td>添加/触发 mouseout 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-mouseover.html\">mouseover()</a></td> \n   <td>添加/触发 mouseover 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-mouseup.html\">mouseup()</a></td> \n   <td>添加/触发 mouseup 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-off.html\">off()</a></td> \n   <td>移除通过 on() 方法添加的事件处理程序</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-on.html\">on()</a></td> \n   <td>向元素添加事件处理程序</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-one.html\">one()</a></td> \n   <td>向被选元素添加一个或多个事件处理程序。该处理程序只能被每个元素触发一次</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-proxy.html\">$.proxy()</a></td> \n   <td>接受一个已有的函数，并返回一个带特定上下文的新的函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-ready.html\">ready()</a></td> \n   <td>规定当 DOM 完全加载时要执行的函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-resize.html\">resize()</a></td> \n   <td>添加/触发 resize 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-scroll.html\">scroll()</a></td> \n   <td>添加/触发 scroll 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-select.html\">select()</a></td> \n   <td>添加/触发 select 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-submit.html\">submit()</a></td> \n   <td>添加/触发 submit 事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-toggle.html\">toggle()</a></td> \n   <td> <span class=\"deprecated\">在版本 1.9 中被移除。</span>添加 click 事件之间要切换的两个或多个函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-trigger.html\">trigger()</a></td> \n   <td>触发绑定到被选元素的所有事件</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-triggerhandler.html\">triggerHandler()</a></td> \n   <td>触发绑定到被选元素的指定事件上的所有函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-unbind.html\">unbind()</a></td> \n   <td>从被选元素上移除添加的事件处理程序</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-undelegate.html\">undelegate()</a></td> \n   <td>从现在或未来的被选元素上移除事件处理程序</td> \n  </tr> \n  <tr> \n   <td><a href=\"event-unload.html\">unload()</a></td> \n   <td> <span class=\"deprecated\">在版本 1.8 中被废弃。</span>添加事件处理程序到 unload 事件</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<br />', null, 'jQuery 事件 方法|jQuery 事件方法|');
INSERT INTO `schoolcontent` VALUES ('238', '240', '<h1>jQuery <span class=\"color_h1\">效果</span> 方法</h1> \n<hr /> \n<h2>jQuery 效果方法</h2> \n<p>下面的表格列出了所有用于创建动画效果的 jQuery 方法。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">方法</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"eff-animate.html\">animate()</a></td> \n   <td>对被选元素应用&quot;自定义&quot;的动画</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-clearqueue.html\">clearQueue()</a></td> \n   <td>对被选元素移除所有排队函数（仍未运行的）</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-delay.html\">delay()</a></td> \n   <td>对被选元素的所有排队函数（仍未运行）设置延迟</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-dequeue.html\">dequeue()</a></td> \n   <td>移除下一个排队函数，然后执行函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-fadein.html\">fadeIn()</a></td> \n   <td>逐渐改变被选元素的不透明度，从隐藏到可见</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-fadeout.html\">fadeOut()</a></td> \n   <td>逐渐改变被选元素的不透明度，从可见到隐藏</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-fadeto.html\">fadeTo()</a></td> \n   <td>把被选元素逐渐改变至给定的不透明度</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-fadetoggle.html\">fadeToggle()</a></td> \n   <td>在 fadeIn() 和 fadeOut() 方法之间进行切换</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-finish.html\">finish()</a></td> \n   <td>对被选元素停止、移除并完成所有排队动画</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-hide.html\">hide()</a></td> \n   <td>隐藏被选元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-queue.html\">queue()</a></td> \n   <td>显示被选元素的排队函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-show.html\">show()</a></td> \n   <td>显示被选元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-slidedown.html\">slideDown()</a></td> \n   <td>通过调整高度来滑动显示被选元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-slidetoggle.html\">slideToggle()</a></td> \n   <td>slideUp() 和 slideDown() 方法之间的切换</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-slideup.html\">slideUp()</a></td> \n   <td>通过调整高度来滑动隐藏被选元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-stop.html\">stop()</a></td> \n   <td>停止被选元素上当前正在运行的动画</td> \n  </tr> \n  <tr> \n   <td><a href=\"eff-toggle.html\">toggle()</a></td> \n   <td>hide() 和 show() 方法之间的切换</td> \n  </tr> \n </tbody>\n</table> \n<br />', null, 'jQuery 效果 方法|jQuery 效果方法|');
INSERT INTO `schoolcontent` VALUES ('239', '241', '<h1>jQuery <span class=\"color_h1\">HTML / CSS</span> 方法</h1> \n<hr /> \n<h2>jQuery HTML / CSS 方法</h2> \n<p>下面的表格列出了所有用于处理 HTML 和 CSS 的 jQuery 方法。</p> \n<p>下面的方法适用于 HTML 和 XML 文档。除了：html() 方法。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">方法</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"html-addclass.html\">addClass()</a></td> \n   <td>向被选元素添加一个或多个类名</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-after.html\">after()</a></td> \n   <td>在被选元素后插入内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-append.html\">append()</a></td> \n   <td>在被选元素的结尾插入内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-appendto.html\">appendTo()</a></td> \n   <td>在被选元素的结尾插入 HTML 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-attr.html\">attr()</a></td> \n   <td>设置或返回被选元素的属性/值</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-before.html\">before()</a></td> \n   <td>在被选元素前插入内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-clone.html\">clone()</a></td> \n   <td>生成被选元素的副本</td> \n  </tr> \n  <tr> \n   <td><a href=\"css-css.html\">css()</a></td> \n   <td>为被选元素设置或返回一个或多个样式属性</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-detach.html\">detach()</a></td> \n   <td>移除被选元素（保留数据和事件）</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-empty.html\">empty()</a></td> \n   <td>从被选元素移除所有子节点和内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-hasclass.html\">hasClass()</a></td> \n   <td>检查被选元素是否包含指定的 class 名称</td> \n  </tr> \n  <tr> \n   <td><a href=\"css-height.html\">height()</a></td> \n   <td>设置或返回被选元素的高度</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-html.html\">html()</a></td> \n   <td>设置或返回被选元素的内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-innerheight.html\">innerHeight()</a></td> \n   <td>返回元素的高度（包含 padding，不包含 border）</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-innerwidth.html\">innerWidth()</a></td> \n   <td>返回元素的宽度（包含 padding，不包含 border）</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-insertafter.html\">insertAfter()</a></td> \n   <td>在被选元素后插入 HTML 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-insertbefore.html\">insertBefore()</a></td> \n   <td>在被选元素前插入 HTML 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"css-offset.html\">offset()</a></td> \n   <td>设置或返回被选元素的偏移坐标（相对于文档）</td> \n  </tr> \n  <tr> \n   <td><a href=\"css-offsetparent.html\">offsetParent()</a></td> \n   <td>返回第一个定位的祖先元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-outerheight.html\">outerHeight()</a></td> \n   <td>返回元素的高度（包含 padding 和 border）</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-outerwidth.html\">outerWidth()</a></td> \n   <td>返回元素的宽度（包含 padding 和 border）</td> \n  </tr> \n  <tr> \n   <td><a href=\"css-position.html\">position()</a></td> \n   <td>返回元素的位置（相对于父元素）</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-prepend.html\">prepend()</a></td> \n   <td>在被选元素的开头插入内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-prependto.html\">prependTo()</a></td> \n   <td>在被选元素的开头插入 HTML 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-prop.html\">prop()</a></td> \n   <td>设置或返回被选元素的属性/值</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-remove.html\">remove()</a></td> \n   <td>移除被选元素（包含数据和事件）</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-removeattr.html\">removeAttr()</a></td> \n   <td>从被选元素移除一个或多个属性</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-removeclass.html\">removeClass()</a></td> \n   <td>从被选元素移除一个或多个类</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-removeprop.html\">removeProp()</a></td> \n   <td>移除通过 prop() 方法设置的属性</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-replaceall.html\">replaceAll()</a></td> \n   <td>把被选元素替换为新的 HTML 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-replacewith.html\">replaceWith()</a></td> \n   <td>把被选元素替换为新的内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"css-scrollleft.html\">scrollLeft()</a></td> \n   <td>设置或返回被选元素的水平滚动条位置</td> \n  </tr> \n  <tr> \n   <td><a href=\"css-scrolltop.html\">scrollTop()</a></td> \n   <td>设置或返回被选元素的垂直滚动条位置</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-text.html\">text()</a></td> \n   <td>设置或返回被选元素的文本内容</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-toggleclass.html\">toggleClass()</a></td> \n   <td>在被选元素中添加/移除一个或多个类之间切换</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-unwrap.html\">unwrap()</a></td> \n   <td>移除被选元素的父元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-val.html\">val()</a></td> \n   <td>设置或返回被选元素的属性值（针对表单元素）</td> \n  </tr> \n  <tr> \n   <td><a href=\"css-width.html\">width()</a></td> \n   <td>设置或返回被选元素的宽度</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-wrap.html\">wrap()</a></td> \n   <td>在每个被选元素的周围用 HTML 元素包裹起来</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-wrapall.html\">wrapAll()</a></td> \n   <td>在所有被选元素的周围用 HTML 元素包裹起来</td> \n  </tr> \n  <tr> \n   <td><a href=\"html-wrapinner.html\">wrapInner()</a></td> \n   <td>在每个被选元素的内容周围用 HTML 元素包裹起来</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<br />', null, 'jQuery HTML / CSS 方法|jQuery HTML / CSS 方法|');
INSERT INTO `schoolcontent` VALUES ('240', '242', '<h1>jQuery <span class=\"color_h1\">遍历</span> 方法</h1> \n<hr /> \n<h2>jQuery 遍历方法</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">方法</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-add.html\">add()</a></td> \n   <td>把元素添加到匹配元素的集合中</td> \n  </tr> \n  <tr> \n   <td>addBack()</td> \n   <td>把之前的元素集添加到当前集合中</td> \n  </tr> \n  <tr> \n   <td>andSelf()</td> \n   <td> <span class=\"deprecated\">在版本 1.8 中被废弃。</span>addBack() 的别名</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-children.html\">children()</a></td> \n   <td>返回被选元素的所有直接子元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-closest.html\">closest()</a></td> \n   <td>返回被选元素的第一个祖先元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-contents.html\">contents()</a></td> \n   <td>返回被选元素的所有直接子元素（包含文本和注释节点）</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-each.html\">each()</a></td> \n   <td>为每个匹配元素执行函数</td> \n  </tr> \n  <tr> \n   <td>end()</td> \n   <td>结束当前链中最近的一次筛选操作，并把匹配元素集合返回到前一次的状态</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-eq.html\">eq()</a></td> \n   <td>返回带有被选元素的指定索引号的元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-filter.html\">filter()</a></td> \n   <td>把匹配元素集合缩减为匹配选择器或匹配函数返回值的新元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-find.html\">find()</a></td> \n   <td>返回被选元素的后代元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-first.html\">first()</a></td> \n   <td>返回被选元素的第一个元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-has.html\">has()</a></td> \n   <td>返回拥有一个或多个元素在其内的所有元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-is.html\">is()</a></td> \n   <td>根据选择器/元素/jQuery 对象检查匹配元素集合，如果存在至少一个匹配元素，则返回 true</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-last.html\">last()</a></td> \n   <td>返回被选元素的最后一个元素</td> \n  </tr> \n  <tr> \n   <td>map()</td> \n   <td>把当前匹配集合中的每个元素传递给函数，产生包含返回值的新 jQuery 对象</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-next.html\">next()</a></td> \n   <td>返回被选元素的后一个同级元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-nextall.html\">nextAll()</a></td> \n   <td>返回被选元素之后的所有同级元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-nextuntil.html\">nextUntil()</a></td> \n   <td>返回介于两个给定参数之间的每个元素之后的所有同级元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-not.html\">not()</a></td> \n   <td>从匹配元素集合中移除元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-offsetparent.html\">offsetParent()</a></td> \n   <td>返回第一个定位的父元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-parent.html\">parent()</a></td> \n   <td>返回被选元素的直接父元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-parents.html\">parents()</a></td> \n   <td>返回被选元素的所有祖先元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-parentsuntil.html\">parentsUntil()</a></td> \n   <td>返回介于两个给定参数之间的所有祖先元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-prev.html\">prev()</a></td> \n   <td>返回被选元素的前一个同级元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-prevall.html\">prevAll()</a></td> \n   <td>返回被选元素之前的所有同级元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-prevuntil.html\">prevUntil()</a></td> \n   <td>返回介于两个给定参数之间的每个元素之前的所有同级元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-siblings.html\">siblings()</a></td> \n   <td>返回被选元素的所有同级元素 Returns all sibling elements of the selected element</td> \n  </tr> \n  <tr> \n   <td><a href=\"traversing-slice.html\">slice()</a></td> \n   <td>把匹配元素集合缩减为指定范围的子集</td> \n  </tr> \n </tbody>\n</table> \n<br />', null, 'jQuery 遍历 方法|jQuery 遍历方法|');
INSERT INTO `schoolcontent` VALUES ('241', '243', '<h1>jQuery <span class=\"color_h1\">AJAX</span> 方法</h1> \n<hr /> \n<h2>jQuery AJAX 方法</h2> \n<p>AJAX 是一种与服务器交换数据的技术，可以在补充在整个页面的情况下更新网页的一部分。</p> \n<p>下面的表格列出了所有的 jQuery AJAX 方法：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">方法</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-ajax.html\">$.ajax()</a></td> \n   <td>执行异步 AJAX 请求</td> \n  </tr> \n  <tr> \n   <td>$.ajaxPrefilter()</td> \n   <td>在每个请求发送之前且被 $.ajax() 处理之前，处理自定义 Ajax 选项或修改已存在选项</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-ajaxsetup.html\">$.ajaxSetup()</a></td> \n   <td>为将来的 AJAX 请求设置默认值</td> \n  </tr> \n  <tr> \n   <td>$.ajaxTransport()</td> \n   <td>创建处理 Ajax 数据实际传送的对象</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-get.html\">$.get()</a></td> \n   <td>使用 AJAX 的 HTTP GET 请求从服务器加载数据</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-getjson.html\">$.getJSON()</a></td> \n   <td>使用 HTTP GET 请求从服务器加载 JSON 编码的数据</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-getscript.html\">$.getScript()</a></td> \n   <td>使用 AJAX 的 HTTP GET 请求从服务器加载并执行 JavaScript</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-param.html\">$.param()</a></td> \n   <td>创建数组或对象的序列化表示形式（可用于 AJAX 请求的 URL 查询字符串）</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-post.html\">$.post()</a></td> \n   <td>使用 AJAX 的 HTTP POST 请求从服务器加载数据</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-ajaxcomplete.html\">ajaxComplete()</a></td> \n   <td>规定 AJAX 请求完成时运行的函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-ajaxerror.html\">ajaxError()</a></td> \n   <td>规定 AJAX 请求失败时运行的函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-ajaxsend.html\">ajaxSend()</a></td> \n   <td>规定 AJAX 请求发送之前运行的函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-ajaxstart.html\">ajaxStart()</a></td> \n   <td>规定第一个 AJAX 请求开始时运行的函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-ajaxstop.html\">ajaxStop()</a></td> \n   <td>规定所有的 AJAX 请求完成时运行的函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-ajaxsuccess.html\">ajaxSuccess()</a></td> \n   <td>规定 AJAX 请求成功完成时运行的函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-load.html\">load()</a></td> \n   <td>从服务器加载数据，并把返回的数据放置到指定的元素中</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-serialize.html\">serialize()</a></td> \n   <td>编码表单元素集为字符串以便提交</td> \n  </tr> \n  <tr> \n   <td><a href=\"ajax-serializearray.html\">serializeArray()</a></td> \n   <td>编码表单元素集为 names 和 values 的数组</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<br />', null, 'jQuery AJAX 方法|jQuery AJAX 方法|');
INSERT INTO `schoolcontent` VALUES ('242', '244', '<h1>jQuery <span class=\"color_h1\">杂项</span>方法</h1> \n<hr /> \n<h2>jQuery 杂项方法</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">方法</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"misc-data.html\">data()</a></td> \n   <td>向被选元素附加数据，或者从被选元素获取数据</td> \n  </tr> \n  <tr> \n   <td><a href=\"misc-each.html\">each()</a></td> \n   <td>为每个匹配元素执行函数</td> \n  </tr> \n  <tr> \n   <td><a href=\"misc-get.html\">get()</a></td> \n   <td>获取由选择器指定的 DOM 元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"misc-index.html\">index()</a></td> \n   <td>从匹配元素中搜索给定元素</td> \n  </tr> \n  <tr> \n   <td><a href=\"misc-noconflict.html\">$.noConflict()</a></td> \n   <td>释放变量 $ 的 jQuery 控制权</td> \n  </tr> \n  <tr> \n   <td><a href=\"misc-param.html\">$.param()</a></td> \n   <td>创建数组或对象的序列化表示形式（可在生成 AJAX 请求时用于 URL 查询字符串中）</td> \n  </tr> \n  <tr> \n   <td><a href=\"misc-removedata.html\">removeData()</a></td> \n   <td>移除之前存放的数据</td> \n  </tr> \n  <tr> \n   <td><a href=\"misc-size.html\">size()</a></td> \n   <td> <span class=\"deprecated\">在版本 1.8 中被废弃。</span>返回被 jQuery 选择器匹配的 DOM 元素的数量</td> \n  </tr> \n  <tr> \n   <td><a href=\"misc-toarray.html\">toArray()</a></td> \n   <td>以数组的形式检索所有包含在 jQuery 集合中的所有 DOM 元素</td> \n  </tr> \n </tbody>\n</table> \n<br />\n<br />', null, 'jQuery 杂项方法|jQuery 杂项方法|');
INSERT INTO `schoolcontent` VALUES ('243', '245', '<h1>jQuery <span class=\"color_h1\">属性</span> </h1> \n<hr /> \n<h2>jQuery 属性</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\" align=\"left\">方法</th> \n   <th width=\"80%\" align=\"left\">描述</th> \n  </tr> \n  <tr> \n   <td><a href=\"prop-context.html\">context</a></td> \n   <td> <span class=\"deprecated\">在版本 1.10 中被废弃。</span>包含被传递到 jQuery 的原始上下文</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-jquery.html\">jquery</a></td> \n   <td>包含 jQuery 的版本号</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-jquery-fx-interval.html\">jQuery.fx.interval</a></td> \n   <td>改变以毫秒计的动画运行速率</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-jquery-fx-off.html\">jQuery.fx.off</a></td> \n   <td>对所有动画进行全局禁用或启用</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-jquery-support.html\">jQuery.support</a></td> \n   <td>包含表示不同浏览器特性或漏洞的属性集（主要用于 jQuery 的内部使用）</td> \n  </tr> \n  <tr> \n   <td><a href=\"prop-length.html\">length</a></td> \n   <td>包含 jQuery 对象中元素的数目</td> \n  </tr> \n </tbody>\n</table> \n<br />', null, 'jQuery 属性|jQuery 属性|');
INSERT INTO `schoolcontent` VALUES ('244', '246', '<h1>jQuery <span class=\"color_h1\">Validate</span></h1> \n<div class=\"tutintro\"> \n <p>jQuery Validate 插件为表单提供了强大的验证功能，让客户端表单验证变得更简单，同时提供了大量的定制选项，满足应用程序各种需求。该插件捆绑了一套有用的验证方法，包括 URL 和电子邮件验证，同时提供了一个用来编写用户自定义方法的 API。所有的捆绑方法默认使用英语作为错误信息，且已翻译成其他 37 种语言。</p> \n <p>该插件是由 J&ouml;rn Zaefferer 编写和维护的，他是 jQuery 团队的一名成员，是 jQuery UI 团队的主要开发人员，是 QUnit 的维护人员。该插件在 2006 年 jQuery 早期的时候就已经开始出现，并一直更新至今。目前版本是 <strong>1.14.0</strong>。</p> \n <p>访问 <a href=\"http://jqueryvalidation.org/\" target=\"_blank\">jQuery Validate 官网</a>，下载最新版的 jQuery Validate 插件。</p> \n <p>菜鸟教程提供的 1.14.0 版本下载地址：<a href=\"http://static.runoob.com/download/jquery-validation-1.14.0.zip\">http://static.runoob.com/download/jquery-validation-1.14.0.zip</a></p> \n</div> \n<h2>导入 js 库（使用菜鸟教程提供的CDN）</h2> \n<pre>\r\n&lt;script src=&quot;http://static.runoob.com/assets/jquery-validation-1.14.0/lib/jquery.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;http://static.runoob.com/assets/jquery-validation-1.14.0/dist/jquery.validate.min.js&quot;&gt;&lt;/script&gt;\r\n</pre> \n<h2>默认校验规则</h2> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th width=\"10%\">序号</th> \n   <th width=\"30%\">规则</th> \n   <th width=\"60%\">描述</th> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td>required:true</td> \n   <td>必须输入的字段。</td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td>remote:&quot;check.php&quot;</td> \n   <td>使用 ajax 方法调用 check.php 验证输入值。</td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td>email:true</td> \n   <td>必须输入正确格式的电子邮件。</td> \n  </tr> \n  <tr> \n   <td>4</td> \n   <td>url:true</td> \n   <td>必须输入正确格式的网址。</td> \n  </tr> \n  <tr> \n   <td>5</td> \n   <td>date:true</td> \n   <td>必须输入正确格式的日期。日期校验 ie6 出错，慎用。</td> \n  </tr> \n  <tr> \n   <td>6</td> \n   <td>dateISO:true</td> \n   <td>必须输入正确格式的日期（ISO），例如：2009-06-23，1998/01/22。只验证格式，不验证有效性。</td> \n  </tr> \n  <tr> \n   <td>7</td> \n   <td>number:true</td> \n   <td>必须输入合法的数字（负数，小数）。</td> \n  </tr> \n  <tr> \n   <td>8</td> \n   <td>digits:true</td> \n   <td>必须输入整数。</td> \n  </tr> \n  <tr> \n   <td>9</td> \n   <td>creditcard:</td> \n   <td>必须输入合法的信用卡号。</td> \n  </tr> \n  <tr> \n   <td>10</td> \n   <td>equalTo:&quot;#field&quot;</td> \n   <td>输入值必须和 #field 相同。</td> \n  </tr> \n  <tr> \n   <td>11</td> \n   <td>accept:</td> \n   <td>输入拥有合法后缀名的字符串（上传文件的后缀）。</td> \n  </tr> \n  <tr> \n   <td>12</td> \n   <td>maxlength:5</td> \n   <td>输入长度最多是 5 的字符串（汉字算一个字符）。</td> \n  </tr> \n  <tr> \n   <td>13</td> \n   <td>minlength:10</td> \n   <td>输入长度最小是 10 的字符串（汉字算一个字符）。</td> \n  </tr> \n  <tr> \n   <td>14</td> \n   <td>rangelength:[5,10]</td> \n   <td>输入长度必须介于 5 和 10 之间的字符串（汉字算一个字符）。</td> \n  </tr> \n  <tr> \n   <td>15</td> \n   <td>range:[5,10]</td> \n   <td>输入值必须介于 5 和 10 之间。</td> \n  </tr> \n  <tr> \n   <td>16</td> \n   <td>max:5</td> \n   <td>输入值不能大于 5。</td> \n  </tr> \n  <tr> \n   <td>17</td> \n   <td>min:10</td> \n   <td>输入值不能小于 10。</td> \n  </tr> \n </tbody>\n</table> \n<h2>默认提示</h2> \n<pre>\r\nmessages: {\r\n	required: &quot;This field is required.&quot;,\r\n	remote: &quot;Please fix this field.&quot;,\r\n	email: &quot;Please enter a valid email address.&quot;,\r\n	url: &quot;Please enter a valid URL.&quot;,\r\n	date: &quot;Please enter a valid date.&quot;,\r\n	dateISO: &quot;Please enter a valid date ( ISO ).&quot;,\r\n	number: &quot;Please enter a valid number.&quot;,\r\n	digits: &quot;Please enter only digits.&quot;,\r\n	creditcard: &quot;Please enter a valid credit card number.&quot;,\r\n	equalTo: &quot;Please enter the same value again.&quot;,\r\n	maxlength: $.validator.format( &quot;Please enter no more than {0} characters.&quot; ),\r\n	minlength: $.validator.format( &quot;Please enter at least {0} characters.&quot; ),\r\n	rangelength: $.validator.format( &quot;Please enter a value between {0} and {1} characters long.&quot; ),\r\n	range: $.validator.format( &quot;Please enter a value between {0} and {1}.&quot; ),\r\n	max: $.validator.format( &quot;Please enter a value less than or equal to {0}.&quot; ),\r\n	min: $.validator.format( &quot;Please enter a value greater than or equal to {0}.&quot; )\r\n}\r\n</pre> \n<p>jQuery Validate提供了中文信息提示包，位于下载包的 dist/localization/messages_zh.js，内容如下：</p> \n<pre>\r\n(function( factory ) {\r\n	if ( typeof define === &quot;function&quot; &amp;&amp; define.amd ) {\r\n		define( [&quot;jquery&quot;, &quot;../jquery.validate&quot;], factory );\r\n	} else {\r\n		factory( jQuery );\r\n	}\r\n}(function( $ ) {\r\n\r\n/*\r\n * Translated default messages for the jQuery validation plugin.\r\n * Locale: ZH (Chinese, 中文 (Zhōngw&eacute;n), 汉语, 漢語)\r\n */\r\n$.extend($.validator.messages, {\r\n	required: &quot;这是必填字段&quot;,\r\n	remote: &quot;请修正此字段&quot;,\r\n	email: &quot;请输入有效的电子邮件地址&quot;,\r\n	url: &quot;请输入有效的网址&quot;,\r\n	date: &quot;请输入有效的日期&quot;,\r\n	dateISO: &quot;请输入有效的日期 (YYYY-MM-DD)&quot;,\r\n	number: &quot;请输入有效的数字&quot;,\r\n	digits: &quot;只能输入数字&quot;,\r\n	creditcard: &quot;请输入有效的信用卡号码&quot;,\r\n	equalTo: &quot;你的输入不相同&quot;,\r\n	extension: &quot;请输入有效的后缀&quot;,\r\n	maxlength: $.validator.format(&quot;最多可以输入 {0} 个字符&quot;),\r\n	minlength: $.validator.format(&quot;最少要输入 {0} 个字符&quot;),\r\n	rangelength: $.validator.format(&quot;请输入长度在 {0} 到 {1} 之间的字符串&quot;),\r\n	range: $.validator.format(&quot;请输入范围在 {0} 到 {1} 之间的数值&quot;),\r\n	max: $.validator.format(&quot;请输入不大于 {0} 的数值&quot;),\r\n	min: $.validator.format(&quot;请输入不小于 {0} 的数值&quot;)\r\n});\r\n\r\n}));\r\n</pre> \n<p>你可以将该本地化信息文件 dist/localization/messages_zh.js 引入到页面：</p> \n<pre>\r\n&lt;script src=&quot;http://static.runoob.com/assets/jquery-validation-1.14.0/dist/localization/messages_zh.js&quot;&gt;&lt;/script&gt;\r\n</pre> \n<h2>使用方式</h2> \n<h3>1、将校验规则写到控件中</h3> \n<pre>\r\n&lt;script src=&quot;http://static.runoob.com/assets/jquery-validation-1.14.0/lib/jquery.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;http://static.runoob.com/assets/jquery-validation-1.14.0/dist/jquery.validate.min.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;http://static.runoob.com/assets/jquery-validation-1.14.0/dist/localization/messages_zh.js&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n$.validator.setDefaults({\r\n    submitHandler: function() {\r\n      alert(&quot;提交事件!&quot;);\r\n    }\r\n});\r\n$().ready(function() {\r\n    $(&quot;#commentForm&quot;).validate();\r\n});\r\n&lt;/script&gt;\r\n\r\n&lt;form class=&quot;cmxform&quot; id=&quot;commentForm&quot; method=&quot;get&quot; action=&quot;&quot;&gt;\r\n  &lt;fieldset&gt;\r\n    &lt;legend&gt;输入您的名字，邮箱，URL，备注。&lt;/legend&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;cname&quot;&gt;Name (必需, 最小两个字母)&lt;/label&gt;\r\n      &lt;input id=&quot;cname&quot; name=&quot;name&quot; minlength=&quot;2&quot; type=&quot;text&quot; required&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;cemail&quot;&gt;E-Mail (必需)&lt;/label&gt;\r\n      &lt;input id=&quot;cemail&quot; type=&quot;email&quot; name=&quot;email&quot; required&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;curl&quot;&gt;URL (可选)&lt;/label&gt;\r\n      &lt;input id=&quot;curl&quot; type=&quot;url&quot; name=&quot;url&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;ccomment&quot;&gt;备注 (必需)&lt;/label&gt;\r\n      &lt;textarea id=&quot;ccomment&quot; name=&quot;comment&quot; required&gt;&lt;/textarea&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;input class=&quot;submit&quot; type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\r\n    &lt;/p&gt;\r\n  &lt;/fieldset&gt;\r\n&lt;/form&gt;\r\n</pre> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=jquery_validate_demo\" class=\"tryitbtn\">尝试一下 &raquo;</a> </p> \n<h3>2、将校验规则写到 js 代码中</h3> \n<pre>\r\n$().ready(function() {\r\n// 在键盘按下并释放及提交后验证提交表单\r\n  $(&quot;#signupForm&quot;).validate({\r\n    rules: {\r\n      firstname: &quot;required&quot;,\r\n      lastname: &quot;required&quot;,\r\n      username: {\r\n        required: true,\r\n        minlength: 2\r\n      },\r\n      password: {\r\n        required: true,\r\n        minlength: 5\r\n      },\r\n      confirm_password: {\r\n        required: true,\r\n        minlength: 5,\r\n        equalTo: &quot;#password&quot;\r\n      },\r\n      email: {\r\n        required: true,\r\n        email: true\r\n      },\r\n      topic: {\r\n        required: &quot;#newsletter:checked&quot;,\r\n        minlength: 2\r\n      },\r\n      agree: &quot;required&quot;\r\n    },\r\n    messages: {\r\n      firstname: &quot;请输入您的名字&quot;,\r\n      lastname: &quot;请输入您的姓氏&quot;,\r\n      username: {\r\n        required: &quot;请输入用户名&quot;,\r\n        minlength: &quot;用户名必需由两个字母组成&quot;\r\n      },\r\n      password: {\r\n        required: &quot;请输入密码&quot;,\r\n        minlength: &quot;密码长度不能小于 5 个字母&quot;\r\n      },\r\n      confirm_password: {\r\n        required: &quot;请输入密码&quot;,\r\n        minlength: &quot;密码长度不能小于 5 个字母&quot;,\r\n        equalTo: &quot;两次密码输入不一致&quot;\r\n      },\r\n      email: &quot;请输入一个正确的邮箱&quot;,\r\n      agree: &quot;请接受我们的声明&quot;,\r\n      topic: &quot;请选择两个主题&quot;\r\n    }\r\n});\r\n</pre> \n<p>messages 处，如果某个控件没有 message，将调用默认的信息</p> \n<pre>\r\n&lt;form class=&quot;cmxform&quot; id=&quot;signupForm&quot; method=&quot;get&quot; action=&quot;&quot;&gt;\r\n  &lt;fieldset&gt;\r\n    &lt;legend&gt;验证完整的表单&lt;/legend&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;firstname&quot;&gt;名字&lt;/label&gt;\r\n      &lt;input id=&quot;firstname&quot; name=&quot;firstname&quot; type=&quot;text&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;lastname&quot;&gt;姓氏&lt;/label&gt;\r\n      &lt;input id=&quot;lastname&quot; name=&quot;lastname&quot; type=&quot;text&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;username&quot;&gt;用户名&lt;/label&gt;\r\n      &lt;input id=&quot;username&quot; name=&quot;username&quot; type=&quot;text&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;password&quot;&gt;密码&lt;/label&gt;\r\n      &lt;input id=&quot;password&quot; name=&quot;password&quot; type=&quot;password&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;confirm_password&quot;&gt;验证密码&lt;/label&gt;\r\n      &lt;input id=&quot;confirm_password&quot; name=&quot;confirm_password&quot; type=&quot;password&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;email&quot;&gt;Email&lt;/label&gt;\r\n      &lt;input id=&quot;email&quot; name=&quot;email&quot; type=&quot;email&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;agree&quot;&gt;请同意我们的声明&lt;/label&gt;\r\n      &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;agree&quot; name=&quot;agree&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;newsletter&quot;&gt;我乐意接收新信息&lt;/label&gt;\r\n      &lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;newsletter&quot; name=&quot;newsletter&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;fieldset id=&quot;newsletter_topics&quot;&gt;\r\n      &lt;legend&gt;主题 (至少选择两个) - 注意：如果没有勾选“我乐意接收新信息”以下选项会隐藏，但我们这里作为演示让它可见&lt;/legend&gt;\r\n      &lt;label for=&quot;topic_marketflash&quot;&gt;\r\n        &lt;input type=&quot;checkbox&quot; id=&quot;topic_marketflash&quot; value=&quot;marketflash&quot; name=&quot;topic&quot;&gt;Marketflash\r\n      &lt;/label&gt;\r\n      &lt;label for=&quot;topic_fuzz&quot;&gt;\r\n        &lt;input type=&quot;checkbox&quot; id=&quot;topic_fuzz&quot; value=&quot;fuzz&quot; name=&quot;topic&quot;&gt;Latest fuzz\r\n      &lt;/label&gt;\r\n      &lt;label for=&quot;topic_digester&quot;&gt;\r\n        &lt;input type=&quot;checkbox&quot; id=&quot;topic_digester&quot; value=&quot;digester&quot; name=&quot;topic&quot;&gt;Mailing list digester\r\n      &lt;/label&gt;\r\n      &lt;label for=&quot;topic&quot; class=&quot;error&quot;&gt;Please select at least two topics you\'d like to receive.&lt;/label&gt;\r\n    &lt;/fieldset&gt;\r\n    &lt;p&gt;\r\n      &lt;input class=&quot;submit&quot; type=&quot;submit&quot; value=&quot;提交&quot;&gt;\r\n    &lt;/p&gt;\r\n  &lt;/fieldset&gt;\r\n&lt;/form&gt;\r\n</pre> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=jquery_validate_demo1\" class=\"tryitbtn\">尝试一下 &raquo;</a> </p> \n<p> <b>required: true</b> 值是必须的。<br /> <b>required: &quot;#aa:checked&quot;</b> 表达式的值为真，则需要验证。<br /> <b>required: function(){}</b> 返回为真，表示需要验证。 </p> \n<p>后边两种常用于，表单中需要同时填或不填的元素。</p> \n<h2>常用方法及注意问题</h2> \n<h3>1、用其他方式替代默认的 SUBMIT</h3> \n<pre>\r\n$().ready(function() {\r\n $(&quot;#signupForm&quot;).validate({\r\n        submitHandler:function(form){\r\n            alert(&quot;提交事件!&quot;);   \r\n            form.submit();\r\n        }    \r\n    });\r\n});\r\n</pre> \n<p>使用 ajax 方式</p> \n<pre>\r\n $(&quot;.selector&quot;).validate({     \r\n submitHandler: function(form) \r\n   {      \r\n      $(form).ajaxSubmit();     \r\n   }  \r\n }) \r\n</pre> \n<p>可以设置 validate 的默认值，写法如下：</p> \n<pre>\r\n$.validator.setDefaults({\r\n  submitHandler: function(form) { alert(&quot;提交事件!&quot;);form.submit(); }\r\n});\r\n</pre> \n<p>如果想提交表单, 需要使用 form.submit()，而不要使用 $(form).submit()。</p> \n<h3>2、debug，只验证不提交表单</h3> \n<p>如果这个参数为true，那么表单不会提交，只进行检查，调试时十分方便。</p> \n<pre>\r\n$().ready(function() {\r\n $(&quot;#signupForm&quot;).validate({\r\n        debug:true\r\n    });\r\n});\r\n</pre> \n<p>如果一个页面中有多个表单都想设置成为 debug，则使用：</p> \n<pre>\r\n$.validator.setDefaults({\r\n   debug: true\r\n})\r\n</pre> \n<h3>3、ignore：忽略某些元素不验证</h3> \n<pre>\r\nignore: &quot;.ignore&quot;\r\n</pre> \n<h3>4、更改错误信息显示的位置</h3> \n<pre>\r\nerrorPlacement：Callback\r\n</pre> \n<p>指明错误放置的位置，默认情况是：error.appendTo(element.parent());即把错误信息放在验证的元素后面。</p> \n<pre>\r\nerrorPlacement: function(error, element) {  \r\n    error.appendTo(element.parent());  \r\n}\r\n</pre> \n<p><b>实例</b></p> \n<pre>\r\n&lt;p&gt;将错误信息放在 label 元素后并使用 span 元素包裹它&lt;/p&gt;\r\n\r\n&lt;form method=&quot;get&quot; class=&quot;cmxform&quot; id=&quot;form1&quot; action=&quot;&quot;&gt;\r\n  &lt;fieldset&gt;\r\n    &lt;legend&gt;Login Form&lt;/legend&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;user&quot;&gt;Username&lt;/label&gt;\r\n      &lt;input id=&quot;user&quot; name=&quot;user&quot; required minlength=&quot;3&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;label for=&quot;password&quot;&gt;Password&lt;/label&gt;\r\n      &lt;input id=&quot;password&quot; type=&quot;password&quot; maxlength=&quot;12&quot; name=&quot;password&quot; required minlength=&quot;5&quot;&gt;\r\n    &lt;/p&gt;\r\n    &lt;p&gt;\r\n      &lt;input class=&quot;submit&quot; type=&quot;submit&quot; value=&quot;Login&quot;&gt;\r\n    &lt;/p&gt;\r\n  &lt;/fieldset&gt;\r\n&lt;/form&gt;\r\n</pre> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/try.php?filename=jquery_validate_demo2\" class=\"tryitbtn\">尝试一下 &raquo;</a> </p> \n<p>代码的作用是：一般情况下把错误信息显示在 &lt;td class=&quot;status&quot;&gt;&lt;/td&gt; 中，如果是 radio 则显示在 &lt;td&gt;&lt;/td&gt; 中，如果是 checkbox 则显示在内容的后面。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"15%\">参数</th> \n   <th width=\"15%\">类型</th> \n   <th width=\"60%\">描述</th> \n   <th width=\"10%\">默认值</th> \n  </tr> \n  <tr> \n   <td>errorClass</td> \n   <td>String</td> \n   <td>指定错误提示的 css 类名，可以自定义错误提示的样式。</td> \n   <td>&quot;error&quot;</td> \n  </tr> \n  <tr> \n   <td>errorElement</td> \n   <td>String</td> \n   <td>用什么标签标记错误，默认是 label，可以改成 em。</td> \n   <td>&quot;label&quot;</td> \n  </tr> \n  <tr> \n   <td>errorContainer</td> \n   <td>Selector</td> \n   <td>显示或者隐藏验证信息，可以自动实现有错误信息出现时把容器属性变为显示，无错误时隐藏，用处不大。<br />errorContainer: &quot;#messageBox1, #messageBox2&quot;</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>errorLabelContainer</td> \n   <td>Selector</td> \n   <td>把错误信息统一放在一个容器里面。</td> \n   <td></td> \n  </tr> \n  <tr> \n   <td>wrapper</td> \n   <td>String</td> \n   <td>用什么标签再把上边的 errorELement 包起来。</td> \n   <td></td> \n  </tr> \n </tbody>\n</table> \n<p>一般这三个属性同时使用，实现在一个容器内显示所有错误提示的功能，并且没有信息时自动隐藏。</p> \n<pre>\r\nerrorContainer: &quot;div.error&quot;,\r\nerrorLabelContainer: $(&quot;#signupForm div.error&quot;),\r\nwrapper: &quot;li&quot;\r\n</pre> \n<h3>5、更改错误信息显示的样式</h3> \n<p>设置错误提示的样式，可以增加图标显示，在该系统中已经建立了一个 validation.css，专门用于维护校验文件的样式。</p> \n<pre style=\"white-space: pre-wrap;\">\r\ninput.error { border: 1px solid red; }\r\nlabel.error {\r\n  background:url(&quot;./demo/images/unchecked.gif&quot;) no-repeat 0px 0px;\r\n\r\n  padding-left: 16px;\r\n\r\n  padding-bottom: 2px;\r\n\r\n  font-weight: bold;\r\n\r\n  color: #EA5200;\r\n}\r\nlabel.checked {\r\n  background:url(&quot;./demo/images/checked.gif&quot;) no-repeat 0px 0px;\r\n}\r\n</pre> \n<h3>6、每个字段验证通过执行函数</h3> \n<pre style=\"white-space: pre-wrap;\">success：String,Callback</pre> \n<p>要验证的元素通过验证后的动作，如果跟一个字符串，会当作一个 css 类，也可跟一个函数。</p> \n<pre style=\"white-space: pre-wrap;\">\r\nsuccess: function(label) {\r\n    // set &amp;nbsp; as text for IE\r\n    label.html(&quot;&amp;nbsp;&quot;).addClass(&quot;checked&quot;);\r\n    //label.addClass(&quot;valid&quot;).text(&quot;Ok!&quot;)\r\n}\r\n</pre> \n<p>添加 &quot;valid&quot; 到验证元素，在 CSS 中定义的样式 &lt;style&gt;label.valid {}&lt;/style&gt;。</p> \n<pre style=\"white-space: pre-wrap;\">\r\nsuccess: &quot;valid&quot;\r\n</pre> \n<h3>7、验证的触发方式修改</h3> \n<p>下面的虽然是 boolean 型的，但建议除非要改为 false，否则别乱添加。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"15%\">触发方式</th> \n   <th width=\"15%\">类型</th> \n   <th width=\"60%\">描述</th> \n   <th width=\"10%\">默认值</th> \n  </tr> \n  <tr> \n   <td>onsubmit</td> \n   <td>Boolean</td> \n   <td>提交时验证。设置为 false 就用其他方法去验证。</td> \n   <td>true</td> \n  </tr> \n  <tr> \n   <td>onfocusout</td> \n   <td>Boolean</td> \n   <td>失去焦点时验证（不包括复选框/单选按钮）。</td> \n   <td>true</td> \n  </tr> \n  <tr> \n   <td>onkeyup</td> \n   <td>Boolean</td> \n   <td>在 keyup 时验证。</td> \n   <td>true</td> \n  </tr> \n  <tr> \n   <td>onclick</td> \n   <td>Boolean</td> \n   <td>在点击复选框和单选按钮时验证。</td> \n   <td>true</td> \n  </tr> \n  <tr> \n   <td>focusInvalid</td> \n   <td>Boolean</td> \n   <td>提交表单后，未通过验证的表单（第一个或提交之前获得焦点的未通过验证的表单）会获得焦点。</td> \n   <td>true</td> \n  </tr> \n  <tr> \n   <td>focusCleanup</td> \n   <td>Boolean</td> \n   <td>如果是 true 那么当未通过验证的元素获得焦点时，移除错误提示。避免和 focusInvalid 一起用。</td> \n   <td>false</td> \n  </tr> \n </tbody>\n</table> \n<pre style=\"white-space: pre-wrap;\">\r\n// 重置表单\r\n$().ready(function() {\r\n var validator = $(&quot;#signupForm&quot;).validate({\r\n        submitHandler:function(form){\r\n            alert(&quot;submitted&quot;);   \r\n            form.submit();\r\n        }    \r\n    });\r\n    $(&quot;#reset&quot;).click(function() {\r\n        validator.resetForm();\r\n    });\r\n\r\n});\r\n</pre> \n<h3>8、异步验证</h3> \n<pre style=\"white-space: pre-wrap;\">remote：URL</pre> \n<p>使用 ajax 方式进行验证，默认会提交当前验证的值到远程地址，如果需要提交其他的值，可以使用 data 选项。</p> \n<pre style=\"white-space: pre-wrap;\">remote: &quot;check-email.php&quot;</pre> \n<pre style=\"white-space: pre-wrap;\">\r\nremote: {\r\n    url: &quot;check-email.php&quot;,     //后台处理程序\r\n    type: &quot;post&quot;,               //数据发送方式\r\n    dataType: &quot;json&quot;,           //接受数据格式   \r\n    data: {                     //要传递的数据\r\n        username: function() {\r\n            return $(&quot;#username&quot;).val();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>远程地址只能输出 &quot;true&quot; 或 &quot;false&quot;，不能有其他输出。</p> \n<h3>9、添加自定义校验</h3> \n<pre style=\"white-space: pre-wrap;\">addMethod：name, method, message</pre> \n<p>自定义验证方法</p> \n<pre style=\"white-space: pre-wrap;\">\r\n// 中文字两个字节\r\njQuery.validator.addMethod(&quot;byteRangeLength&quot;, function(value, element, param) {\r\n    var length = value.length;\r\n    for(var i = 0; i &lt; value.length; i++){\r\n        if(value.charCodeAt(i) &gt; 127){\r\n            length++;\r\n        }\r\n    }\r\n  return this.optional(element) || ( length &gt;= param[0] &amp;&amp; length &lt;= param[1] );   \r\n}, $.validator.format(&quot;请确保输入的值在{0}-{1}个字节之间(一个中文字算2个字节)&quot;));\r\n\r\n// 邮政编码验证   \r\njQuery.validator.addMethod(&quot;isZipCode&quot;, function(value, element) {   \r\n    var tel = /^[0-9]{6}$/;\r\n    return this.optional(element) || (tel.test(value));\r\n}, &quot;请正确填写您的邮政编码&quot;);\r\n</pre> \n<p><b>注意</b>：要在 additional-methods.js 文件中添加或者在 jquery.validate.js 文件中添加。建议一般写在 additional-methods.js 文件中。</p> \n<p><b>注意</b>：在 messages_cn.js 文件中添加：isZipCode: &quot;只能包括中文字、英文字母、数字和下划线&quot;。调用前要添加对 additional-methods.js 文件的引用。</p> \n<h3>10、radio 和 checkbox、select 的验证</h3> \n<p>radio 的 required 表示必须选中一个。</p> \n<pre style=\"white-space: pre-wrap;\">\r\n&lt;input  type=&quot;radio&quot; id=&quot;gender_male&quot; value=&quot;m&quot; name=&quot;gender&quot; class=&quot;{required:true}&quot; /&gt;\r\n&lt;input  type=&quot;radio&quot; id=&quot;gender_female&quot; value=&quot;f&quot; name=&quot;gender&quot;/&gt;\r\n</pre> \n<p>checkbox 的 required 表示必须选中。</p> \n<pre style=\"white-space: pre-wrap;\">\r\n&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;agree&quot; name=&quot;agree&quot; class=&quot;{required:true}&quot; /&gt;\r\n</pre> \n<p>checkbox 的 minlength 表示必须选中的最小个数，maxlength 表示最大的选中个数，rangelength:[2,3] 表示选中个数区间。</p> \n<pre style=\"white-space: pre-wrap;\">\r\n&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;spam_email&quot; value=&quot;email&quot; name=&quot;spam[]&quot; class=&quot;{required:true, minlength:2}&quot; /&gt;\r\n&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;spam_phone&quot; value=&quot;phone&quot; name=&quot;spam[]&quot; /&gt;\r\n&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot; id=&quot;spam_mail&quot; value=&quot;mail&quot; name=&quot;spam[]&quot; /&gt;\r\n</pre> \n<p>select 的 required 表示选中的 value 不能为空。</p> \n<pre style=\"white-space: pre-wrap;\">\r\n&lt;select id=&quot;jungle&quot; name=&quot;jungle&quot; title=&quot;Please select something!&quot; class=&quot;{required:true}&quot;&gt;\r\n    &lt;option value=&quot;&quot;&gt;&lt;/option&gt;\r\n    &lt;option value=&quot;1&quot;&gt;Buga&lt;/option&gt;\r\n    &lt;option value=&quot;2&quot;&gt;Baga&lt;/option&gt;\r\n    &lt;option value=&quot;3&quot;&gt;Oi&lt;/option&gt;\r\n&lt;/select&gt;\r\n</pre> \n<p>select 的 minlength 表示选中的最小个数（可多选的 select），maxlength 表示最大的选中个数，rangelength:[2,3] 表示选中个数区间。</p> \n<pre style=\"white-space: pre-wrap;\">\r\n&lt;select id=&quot;fruit&quot; name=&quot;fruit&quot; title=&quot;Please select at least two fruits&quot; class=&quot;{required:true, minlength:2}&quot; multiple=&quot;multiple&quot;&gt;\r\n    &lt;option value=&quot;b&quot;&gt;Banana&lt;/option&gt;\r\n    &lt;option value=&quot;a&quot;&gt;Apple&lt;/option&gt;\r\n    &lt;option value=&quot;p&quot;&gt;Peach&lt;/option&gt;\r\n    &lt;option value=&quot;t&quot;&gt;Turtle&lt;/option&gt;\r\n&lt;/select&gt;\r\n</pre> \n<h2>jQuery.validate 中文 API</h2> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\">名称</th> \n   <th width=\"20%\">返回类型</th> \n   <th width=\"60%\">描述</th> \n  </tr> \n  <tr> \n   <td>validate(options)</td> \n   <td>Validator</td> \n   <td>验证所选的 FORM。</td> \n  </tr> \n  <tr> \n   <td>valid()</td> \n   <td>Boolean</td> \n   <td>检查是否验证通过。</td> \n  </tr> \n  <tr> \n   <td>rules()</td> \n   <td>Options</td> \n   <td>返回元素的验证规则。</td> \n  </tr> \n  <tr> \n   <td>rules(&quot;add&quot;,rules)</td> \n   <td>Options</td> \n   <td>增加验证规则。</td> \n  </tr> \n  <tr> \n   <td>rules(&quot;remove&quot;,rules)</td> \n   <td>Options</td> \n   <td>删除验证规则。</td> \n  </tr> \n  <tr> \n   <td>removeAttrs(attributes)</td> \n   <td>Options</td> \n   <td>删除特殊属性并且返回它们。</td> \n  </tr> \n  <tr> \n   <td colspan=\"3\">自定义选择器</td> \n  </tr> \n  <tr> \n   <td>:blank</td> \n   <td>Validator</td> \n   <td>没有值的筛选器。</td> \n  </tr> \n  <tr> \n   <td>:filled</td> \n   <td>Array &lt;Element&gt;</td> \n   <td>有值的筛选器。</td> \n  </tr> \n  <tr> \n   <td>:unchecked</td> \n   <td>Array &lt;Element&gt;</td> \n   <td>没选择的元素的筛选器。</td> \n  </tr> \n  <tr> \n   <td colspan=\"3\">实用工具</td> \n  </tr> \n  <tr> \n   <td>jQuery.format(template,argument,argumentN...)</td> \n   <td>String</td> \n   <td>用参数代替模板中的 {n}。</td> \n  </tr> \n </tbody>\n</table> \n<h3>Validator</h3> \n<p>validate 方法返回一个 Validator 对象。Validator 对象有很多方法可以用来引发校验程序或者改变 form 的内容，下面列出几个常用的方法。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\">名称</th> \n   <th width=\"20%\">返回类型</th> \n   <th width=\"60%\">描述</th> \n  </tr> \n  <tr> \n   <td>form()</td> \n   <td>Boolean</td> \n   <td>验证 form 返回成功还是失败。</td> \n  </tr> \n  <tr> \n   <td>element(element)</td> \n   <td>Boolean</td> \n   <td>验证单个元素是成功还是失败。</td> \n  </tr> \n  <tr> \n   <td>resetForm()</td> \n   <td>undefined</td> \n   <td>把前面验证的 FORM 恢复到验证前原来的状态。</td> \n  </tr> \n  <tr> \n   <td>showErrors(errors)</td> \n   <td>undefined</td> \n   <td>显示特定的错误信息。</td> \n  </tr> \n  <tr> \n   <td colspan=\"3\">Validator 函数</td> \n  </tr> \n  <tr> \n   <td>setDefaults(defaults)</td> \n   <td>undefined</td> \n   <td>改变默认的设置。</td> \n  </tr> \n  <tr> \n   <td>addMethod(name,method,message)</td> \n   <td>undefined</td> \n   <td>添加一个新的验证方法。必须包括一个独一无二的名字，一个 JAVASCRIPT 的方法和一个默认的信息。</td> \n  </tr> \n  <tr> \n   <td>addClassRules(name,rules)</td> \n   <td>undefined</td> \n   <td>增加组合验证类型，在一个类里面用多种验证方法时比较有用。</td> \n  </tr> \n  <tr> \n   <td>addClassRules(rules)</td> \n   <td>undefined</td> \n   <td>增加组合验证类型，在一个类里面用多种验证方法时比较有用。这个是同时加多个验证方法。</td> \n  </tr> \n </tbody>\n</table> \n<h3>内置验证方式</h3> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"20%\">名称</th> \n   <th width=\"20%\">返回类型</th> \n   <th width=\"60%\">描述</th> \n  </tr> \n  <tr> \n   <td>required()</td> \n   <td>Boolean</td> \n   <td>必填验证元素。</td> \n  </tr> \n  <tr> \n   <td>required(dependency-expression)</td> \n   <td>Boolean</td> \n   <td>必填元素依赖于表达式的结果。</td> \n  </tr> \n  <tr> \n   <td>required(dependency-callback)</td> \n   <td>Boolean</td> \n   <td>必填元素依赖于回调函数的结果。</td> \n  </tr> \n  <tr> \n   <td>remote(url)</td> \n   <td>Boolean</td> \n   <td>请求远程校验。url 通常是一个远程调用方法。</td> \n  </tr> \n  <tr> \n   <td>minlength(length)</td> \n   <td>Boolean</td> \n   <td>设置最小长度。</td> \n  </tr> \n  <tr> \n   <td>maxlength(length)</td> \n   <td>Boolean</td> \n   <td>设置最大长度。</td> \n  </tr> \n  <tr> \n   <td>rangelength(range)</td> \n   <td>Boolean</td> \n   <td>设置一个长度范围 [min,max]。</td> \n  </tr> \n  <tr> \n   <td>min(value)</td> \n   <td>Boolean</td> \n   <td>设置最小值。</td> \n  </tr> \n  <tr> \n   <td>max(value)</td> \n   <td>Boolean</td> \n   <td>设置最大值。</td> \n  </tr> \n  <tr> \n   <td>email()</td> \n   <td>Boolean</td> \n   <td>验证电子邮箱格式。</td> \n  </tr> \n  <tr> \n   <td>range(range)</td> \n   <td>Boolean</td> \n   <td>设置值的范围。</td> \n  </tr> \n  <tr> \n   <td>url()</td> \n   <td>Boolean</td> \n   <td>验证 URL 格式。</td> \n  </tr> \n  <tr> \n   <td>date()</td> \n   <td>Boolean</td> \n   <td>验证日期格式（类似 30/30/2008 的格式，不验证日期准确性只验证格式）。</td> \n  </tr> \n  <tr> \n   <td>dateISO()</td> \n   <td>Boolean</td> \n   <td>验证 ISO 类型的日期格式。</td> \n  </tr> \n  <tr> \n   <td>dateDE()</td> \n   <td>Boolean</td> \n   <td>验证德式的日期格式（29.04.1994 或 1.1.2006）。</td> \n  </tr> \n  <tr> \n   <td>number()</td> \n   <td>Boolean</td> \n   <td>验证十进制数字（包括小数的）。</td> \n  </tr> \n  <tr> \n   <td>digits()</td> \n   <td>Boolean</td> \n   <td>验证整数。</td> \n  </tr> \n  <tr> \n   <td>creditcard()</td> \n   <td>Boolean</td> \n   <td>验证信用卡号。</td> \n  </tr> \n  <tr> \n   <td>accept(extension)</td> \n   <td>Boolean</td> \n   <td>验证相同后缀名的字符串。</td> \n  </tr> \n  <tr> \n   <td>equalTo(other)</td> \n   <td>Boolean</td> \n   <td>验证两个输入框的内容是否相同。</td> \n  </tr> \n  <tr> \n   <td>phoneUS()</td> \n   <td>Boolean</td> \n   <td>验证美式的电话号码。</td> \n  </tr> \n </tbody>\n</table> \n<h3>validate ()的可选项</h3> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th width=\"30%\">描述</th> \n   <th width=\"70%\">代码</th> \n  </tr> \n  <tr> \n   <td>debug：进行调试模式（表单不提交）。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate\r\n({\r\n	debug:true\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>把调试设置为默认。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$.validator.setDefaults({\r\n	debug:true\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>submitHandler：通过验证后运行的函数，里面要加上表单提交的函数，否则表单不会提交。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({\r\n	submitHandler:function(form) {\r\n		$(form).ajaxSubmit();\r\n	}\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>ignore：对某些元素不进行验证。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;#myform&quot;).validate({\r\n	ignore:&quot;.ignore&quot;\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>rules：自定义规则，key:value 的形式，key 是要验证的元素，value 可以是字符串或对象。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({\r\n	rules:{\r\n		name:&quot;required&quot;,\r\n		email:{\r\n			required:true,\r\n			email:true\r\n		}\r\n	}\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>messages：自定义的提示信息，key:value 的形式，key 是要验证的元素，value 可以是字符串或函数。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({\r\n	rules:{\r\n		name:&quot;required&quot;,\r\n		email:{\r\n			required:true,\r\n			email:true\r\n		}\r\n	},\r\n	messages:{\r\n		name:&quot;Name不能为空&quot;,\r\n		email:{       \r\n			required:&quot;E-mail不能为空&quot;,\r\n			email:&quot;E-mail地址不正确&quot;\r\n		}\r\n	}\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>groups：对一组元素的验证，用一个错误提示，用 errorPlacement 控制把出错信息放在哪里。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;#myform&quot;).validate({\r\n	groups:{\r\n		username:&quot;fname \r\n		lname&quot;\r\n	},\r\n	errorPlacement:function(error,element) {\r\n		if (element.attr(&quot;name&quot;) == &quot;fname&quot; || element.attr(&quot;name&quot;) == &quot;lname&quot;)   \r\n			error.insertAfter(&quot;#lastname&quot;);\r\n		else    \r\n			error.insertAfter(element);\r\n	},\r\n   debug:true\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>OnSubmit：类型 Boolean，默认 true，指定是否提交时验证。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({  \r\n	onsubmit:false\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>onfocusout：类型 Boolean，默认 true，指定是否在获取焦点时验证。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({   \r\n	onfocusout:false\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>onkeyup：类型 Boolean，默认 true，指定是否在敲击键盘时验证。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({\r\n   onkeyup:false\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>onclick：类型 Boolean，默认 true，指定是否在鼠标点击时验证（一般验证 checkbox、radiobox）。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({\r\n   onclick:false\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>focusInvalid：类型 Boolean，默认 true。提交表单后，未通过验证的表单（第一个或提交之前获得焦点的未通过验证的表单）会获得焦点。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({\r\n   focusInvalid:false\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>focusCleanup：类型 Boolean，默认 false。当未通过验证的元素获得焦点时，移除错误提示（避免和 focusInvalid 一起使用）。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({\r\n   focusCleanup:true\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>errorClass：类型 String，默认 &quot;error&quot;。指定错误提示的 css 类名，可以自定义错误提示的样式。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({ \r\n	errorClass:&quot;invalid&quot;\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>errorElement：类型 String，默认 &quot;label&quot;。指定使用什么标签标记错误。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate\r\n   errorElement:&quot;em&quot;\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>wrapper：类型 String，指定使用什么标签再把上边的 errorELement 包起来。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({\r\n   wrapper:&quot;li&quot;\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>errorLabelContainer：类型 Selector，把错误信息统一放在一个容器里面。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;#myform&quot;).validate({   \r\n	errorLabelContainer:&quot;#messageBox&quot;,\r\n	wrapper:&quot;li&quot;,\r\n	submitHandler:function() { \r\n		alert(&quot;Submitted!&quot;) \r\n	}\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>showErrors：跟一个函数，可以显示总共有多少个未通过验证的元素。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;.selector&quot;).validate({  \r\n	showErrors:function(errorMap,errorList) {\r\n        $(&quot;#summary&quot;).html(&quot;Your form contains &quot; + this.numberOfInvalids() + &quot; errors,see details below.&quot;);\r\n		this.defaultShowErrors();\r\n	}\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>errorPlacement：跟一个函数，可以自定义错误放到哪里。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;#myform&quot;).validate({  \r\n	errorPlacement:function(error,element) {  \r\n		error.appendTo(element.parent(&quot;td&quot;).next(&quot;td&quot;));\r\n   },\r\n   debug:true\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>success：要验证的元素通过验证后的动作，如果跟一个字符串，会当作一个 css 类，也可跟一个函数。</td> \n   <td> <pre style=\"white-space: pre-wrap;\">\r\n$(&quot;#myform&quot;).validate({        \r\n	success:&quot;valid&quot;,\r\n        submitHandler:function() { \r\n			alert(&quot;Submitted!&quot;) \r\n		}\r\n})\r\n</pre> </td> \n  </tr> \n  <tr> \n   <td>highlight：可以给未通过验证的元素加效果、闪烁等。</td> \n   <td></td> \n  </tr> \n </tbody>\n</table> \n<h3>addMethod(name,method,message)方法</h3> \n<p>参数 name 是添加的方法的名字。</p> \n<p>参数 method 是一个函数，接收三个参数 (value,element,param) 。<br /> value 是元素的值，element 是元素本身，param 是参数。</p> \n<p>我们可以用 addMethod 来添加除内置的 Validation 方法之外的验证方法。比如有一个字段，只能输一个字母，范围是 a-f，写法如下：</p> \n<pre style=\"white-space: pre-wrap;\">\r\n$.validator.addMethod(&quot;af&quot;,function(value,element,params){  \r\n	if(value.length&gt;1){\r\n		return false;\r\n	}\r\n    if(value&gt;=params[0] &amp;&amp; value&lt;=params[1]){\r\n		return true;\r\n	}else{\r\n		return false;\r\n	}\r\n},&quot;必须是一个字母,且a-f&quot;);\r\n</pre> \n<p>如果有个表单字段的 id=&quot;username&quot;，则在 rules 中写：</p> \n<pre style=\"white-space: pre-wrap;\">\r\nusername:{\r\n   af:[&quot;a&quot;,&quot;f&quot;]\r\n}\r\n</pre> \n<p> addMethod 的第一个参数，是添加的验证方法的名字，这时是 af。<br /> addMethod 的第三个参数，是自定义的错误提示，这里的提示为:&quot;必须是一个字母,且a-f&quot;。<br /> addMethod 的第二个参数，是一个函数，这个比较重要，决定了用这个验证方法时的写法。 </p> \n<p>如果只有一个参数，直接写，比如 af:&quot;a&quot;，那么 a 就是这个唯一的参数，如果多个参数，则写在 [] 里，用逗号分开。</p> \n<h3>meta String 方式</h3> \n<pre style=\"white-space: pre-wrap;\">\r\n$(&quot;#myform&quot;).validate({\r\n\r\n   meta:&quot;validate&quot;,\r\n\r\n   submitHandler:function() { \r\nalert(&quot;Submitted!&quot;) }\r\n\r\n})\r\n</pre> \n<pre style=\"white-space: pre-wrap;\">\r\n&lt;script type=&quot;text/javascript&quot; \r\nsrc=&quot;js/jquery.metadata.js&quot;&gt;&lt;/script&gt;\r\n\r\n&lt;script type=&quot;text/javascript&quot; \r\nsrc=&quot;js/jquery.validate.js&quot;&gt;&lt;/script&gt;\r\n\r\n&lt;form id=&quot;myform&quot;&gt;\r\n\r\n  &lt;input type=&quot;text&quot; \r\nname=&quot;email&quot; class=&quot;{validate:{ required:true,email:true }}&quot; /&gt;\r\n\r\n  &lt;input type=&quot;submit&quot; \r\nvalue=&quot;Submit&quot; /&gt;\r\n\r\n&lt;/form&gt;\r\n</pre> \n<hr /> \n<h2>实例演示</h2> \n<h3>虚构的实例</h3> \n<ul> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-errorcontainer\" target=\"_blank\">错误消息容器</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-custom-messages-data\" target=\"_blank\">自定义消息作为元素数据</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-radio-checkbox-select\" target=\"_blank\">radio（单选按钮）、checkbox（复选按钮）和 select（下拉框）</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-ajaxSubmit-integration\" target=\"_blank\">与表单（Form）插件的交互（AJAX 提交）</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-custom-methods\" target=\"_blank\">自定义方法和消息显示</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-dynamic-totals\" target=\"_blank\">动态表单</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-themerollered\" target=\"_blank\">使用 jQuery UI Themeroller 定义表单样式</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-tinymce\" target=\"_blank\">TinyMCE - 一个轻量级的基于浏览器的所见即所得编辑器</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-file-input\" target=\"_blank\">文件输入框</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-jquerymobile\" target=\"_blank\">jQuery Mobile 表单验证</a></li> \n</ul> \n<h3>现实世界的实例</h3> \n<ul> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-milk\" target=\"_blank\">Milk 注册表单</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-marketo-step1\" target=\"_blank\">Marketo 注册表单</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-multipart\" target=\"_blank\">房屋买卖折叠面板表单</a></li> \n <li><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-captcha\" target=\"_blank\">远程 CAPTCHA（验证码）验证</a></li> \n</ul> \n<h3>实例下载</h3> \n<p><a href=\"http://static.runoob.com/download/jquery-validation-1.14.0.zip\" target=\"_blank\"><button class=\"btn example-btn\">点击下载</button></a> <a href=\"http://static.runoob.com/assets/jquery-validation-1.14.0/demo/index.html\" target=\"_blank\"><button class=\"btn\">官方实例</button></a> </p>', null, 'jQuery Validate|导入 js 库（使用菜鸟教程提供的CDN）|默认校验规则|默认提示|使用方式|常用方法及注意问题|jQuery.validate 中文 API|实例演示|');
INSERT INTO `schoolcontent` VALUES ('245', '247', '<h1>jQuery <span class=\"color_h1\">Accordion</span></h1> \n<div class=\"tutintro\"> \n <p>jQuery Accordion 插件用于创建折叠菜单。它通常与嵌套的列表、定义列表或嵌套的 div 一起使用。选项用于指定结构、激活的元素和定制的动画。</p> \n</div> \n<p>该插件现在是 <a href=\"http://www.runoob.com/jqueryui/example-accordion.html\">jQuery UI</a> 的一部分，独立的版本不会再更新了。目前版本是 1.6。</p> \n<p><a href=\"http://bassistance.de/jquery-plugins/jquery-plugin-accordion/\" target=\"_blank\">jQuery Accordion 官网</a>，jQuery Accordion 插件下载：<a href=\"http://www.w3cschool.cc/try/download/jquery-accordion.zip\">http://www.runoob.com/try/download/jquery-accordion.zip</a>。</p> \n<p>如需了解更多有关 Accordion 的细节，请查看 API 文档 <a href=\"http://www.runoob.com/jqueryui/api-accordion.html\">折叠面板部件（Accordion Widget）</a>。</p> \n<h2>标准</h2> \n<p>标准代码如下:</p> \n<pre>\r\njQuery(\'#list1a\').accordion(); \r\njQuery(\'#list1b\').accordion({ \r\n    autoheight: false \r\n});\r\n</pre> \n<h2>导航</h2> \n<p>带有锚和嵌套列表的无序列表</p> \n<pre>\r\njQuery(\'#navigation\').accordion({ \r\n    active: false, \r\n    header: \'.head\', \r\n    navigation: true, \r\n    event: \'mouseover\', \r\n    fillSpace: true, \r\n    animated: \'easeslide\' \r\n});\r\n</pre> \n<h2>带选项</h2> \n<p>容器是一个定义列表，标题是 dt，内容是 dd。</p> \n<pre>\r\njQuery(\'#list2\').accordion({ \r\n    event: \'mouseover\', \r\n    active: \'.selected\', \r\n    selectedClass: \'active\', \r\n    animated: &quot;bounceslide&quot;, \r\n    header: &quot;dt&quot; \r\n}).bind(&quot;change.ui-accordion&quot;, function(event, ui) { \r\n    jQuery(\'&lt;div&gt;\' + ui.oldHeader.text() + \' hidden, \' + ui.newHeader.text() + \' shown&lt;/div&gt;\').appendTo(\'#log\'); \r\n});\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/jquery/jquery-accordion/demo/index.html\" target=\"_blank\"><button class=\"btn btn-info btn-lg\">查看演示</button></a> <a href=\"http://www.runoob.com/try/download/jquery-accordion.zip\" target=\"_blank\"><button class=\"btn btn-info btn-lg\">源码下载</button></a> </p>', null, 'jQuery Accordion|标准|导航|带选项|');
INSERT INTO `schoolcontent` VALUES ('246', '248', '<h1>jQuery <span class=\"color_h1\">Autocomplete</span></h1> \n<div class=\"tutintro\"> \n <p>jQuery Autocomplete 插件根据用户输入值进行搜索和过滤，让用户快速找到并从预设值列表中选择。通过给 Autocomplete 字段焦点或者在其中输入字符，插件开始搜索匹配的条目并显示供选择的值的列表。通过输入更多的字符，用户可以过滤列表以获得更好的匹配。</p> \n <p>该插件现在是 <a href=\"http://www.w3cschool.cc/jqueryui/example-autocomplete.html\">jQuery UI</a> 的一部分，独立的版本不会再更新了。目前版本是 1.6。</p> \n <p>访问 <a href=\"https://jqueryui.com/autocomplete/\" target=\"_blank\">jQuery Autocomplete 官网</a>，下载 jQuery Autocomplete 插件。</p> \n <p>如需了解更多有关 Autocomplete 的细节，请查看 API 文档 <a href=\"http://www.w3cschool.cc/jqueryui/api-autocomplete.html\">自动完成部件（Autocomplete Widget）</a>。</p> \n</div> \n<h2>实例演示</h2> \n<p>jQuery Autocomplete 插件演示。</p> \n<pre>\r\n&lt;!doctype html&gt;\r\n&lt;html lang=&quot;en&quot;&gt;\r\n&lt;head&gt;\r\n  &lt;meta charset=&quot;utf-8&quot;&gt;\r\n  &lt;title&gt;jQuery UI Autocomplete - Default functionality&lt;/title&gt;\r\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css&quot;&gt;\r\n  &lt;script src=&quot;//code.jquery.com/jquery-1.10.2.js&quot;&gt;&lt;/script&gt;\r\n  &lt;script src=&quot;//code.jquery.com/ui/1.11.4/jquery-ui.js&quot;&gt;&lt;/script&gt;\r\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;/resources/demos/style.css&quot;&gt;\r\n  &lt;script&gt;\r\n  $(function() {\r\n    var availableTags = [\r\n      &quot;ActionScript&quot;,\r\n      &quot;AppleScript&quot;,\r\n      &quot;Asp&quot;,\r\n      &quot;BASIC&quot;,\r\n      &quot;C&quot;,\r\n      &quot;C++&quot;,\r\n      &quot;Clojure&quot;,\r\n      &quot;COBOL&quot;,\r\n      &quot;ColdFusion&quot;,\r\n      &quot;Erlang&quot;,\r\n      &quot;Fortran&quot;,\r\n      &quot;Groovy&quot;,\r\n      &quot;Haskell&quot;,\r\n      &quot;Java&quot;,\r\n      &quot;JavaScript&quot;,\r\n      &quot;Lisp&quot;,\r\n      &quot;Perl&quot;,\r\n      &quot;PHP&quot;,\r\n      &quot;Python&quot;,\r\n      &quot;Ruby&quot;,\r\n      &quot;Scala&quot;,\r\n      &quot;Scheme&quot;\r\n    ];\r\n    $( &quot;#tags&quot; ).autocomplete({\r\n      source: availableTags\r\n    });\r\n  });\r\n  &lt;/script&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n \r\n&lt;div class=&quot;ui-widget&quot;&gt;\r\n  &lt;label for=&quot;tags&quot;&gt;Tags: &lt;/label&gt;\r\n  &lt;input id=&quot;tags&quot;&gt;\r\n&lt;/div&gt;\r\n \r\n \r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-autocomplete\" target=\"_blank\"><button class=\"btn btn-info btn-lg\">查看演示</button></a></p>', null, 'jQuery Autocomplete|实例演示|');
INSERT INTO `schoolcontent` VALUES ('247', '250', '<h1>jQuery <span class=\"color_h1\">Password Validation（密码验证）</span></h1> \n<div class=\"tutintro\"> \n <p>jQuery Password Validation（密码验证）插件扩展了 jQuery Validate 插件，提供了两种组件：<br /> 一种评价密码的相关因素的功能：比如大小写字母的混合情况、字符（数字、特殊字符）的混合情况、长度、与用户名的相似度（可选的）。<br /> 一种使用评价功能显示密码强度的验证插件自定义方法。显示的文本可以被本地化。</p> \n <p>您可以简单地自定义强度显示的外观、本地化消息显示，并集成到已有的表单中。</p> \n <p>该插件目前版本是 1.0.0。</p> \n <h2>使用方式</h2> \n <p>如需使用 Password Validation（密码验证）插件，请添加一个 class &quot;password&quot; 到 input，同时添加显示强度的基本标记在表单的需要显示的地方：</p> \n <pre style=\"white-space: pre-wrap;\">\r\n&lt;form id=&quot;register&quot;&gt;\r\n	&lt;label for=&quot;password&quot;&gt;Password:&lt;/label&gt;\r\n	&lt;input class=&quot;password&quot; name=&quot;password&quot; id=&quot;password&quot; /&gt;\r\n	&lt;div class=&quot;password-meter&quot;&gt;\r\n		&lt;div class=&quot;password-meter-message&quot;&gt; &lt;/div&gt;\r\n		&lt;div class=&quot;password-meter-bg&quot;&gt;\r\n			&lt;div class=&quot;password-meter-bar&quot;&gt;&lt;/div&gt;\r\n		&lt;/div&gt;\r\n	&lt;/div&gt;\r\n&lt;/form&gt;\r\n</pre> \n <p>对表单应用 Validate 插件：</p> \n <pre style=\"white-space: pre-wrap;\">\r\n$(document).ready(function() {\r\n  $(&quot;#register&quot;).validate();\r\n});\r\n</pre> \n <p>您可以重载 $.validator.passwordRating 实现不同的评价方法。或者重载 $.validator.passwordRating.messages 来提供其他消息，比如本地化。</p> \n <h2>实例演示</h2> \n <pre>\r\n&lt;!doctype html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=&quot;utf-8&quot;&gt;\r\n&lt;title&gt;Makes &quot;field&quot; required to be the same as #other&lt;/title&gt;\r\n&lt;link rel=&quot;stylesheet&quot; href=&quot;http://jqueryvalidation.org/files/demo/site-demos.css&quot;&gt;\r\n \r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;form id=&quot;myform&quot;&gt;\r\n&lt;label for=&quot;password&quot;&gt;Password&lt;/label&gt;\r\n&lt;input id=&quot;password&quot; name=&quot;password&quot; /&gt;\r\n&lt;br/&gt;\r\n&lt;label for=&quot;password_again&quot;&gt;Again&lt;/label&gt;\r\n&lt;input class=&quot;left&quot; id=&quot;password_again&quot; name=&quot;password_again&quot; /&gt;\r\n&lt;br&gt;\r\n&lt;input type=&quot;submit&quot; value=&quot;Validate!&quot;&gt;\r\n&lt;/form&gt;\r\n&lt;script src=&quot;http://code.jquery.com/jquery-1.11.1.min.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;http://jqueryvalidation.org/files/dist/jquery.validate.min.js&quot;&gt;&lt;/script&gt;\r\n&lt;script src=&quot;http://jqueryvalidation.org/files/dist/additional-methods.min.js&quot;&gt;&lt;/script&gt;\r\n&lt;script&gt;\r\n// just for the demos, avoids form submit\r\njQuery.validator.setDefaults({\r\n  debug: true,\r\n  success: &quot;valid&quot;\r\n});\r\n$( &quot;#myform&quot; ).validate({\r\n  rules: {\r\n    password: &quot;required&quot;,\r\n    password_again: {\r\n      equalTo: &quot;#password&quot;\r\n    }\r\n  }\r\n});\r\n&lt;/script&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre> \n <p><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-password-validate\" target=\"_blank\"><button class=\"btn btn-info btn-lg\">查看演示</button></a></p> \n</div>', null, 'jQuery Password Validation（密码验证）|使用方式|实例演示|');
INSERT INTO `schoolcontent` VALUES ('248', '251', '<h1>jQuery <span class=\"color_h1\">Prettydate</span></h1> \n<div class=\"tutintro\"> \n <p>jQuery Prettydate 插件为表单提供了强大的验证功能，让客户端表单验证变得更简单，同时提供了大量的定制选项，满足应用程序各种需求。该插件捆绑了一套有用的验证方法，包括 URL 和电子邮件验证，同时提供了一个用来编写用户自定义方法的 API。所有的捆绑方法默认使用英语作为错误信息，且已翻译成其他 37 种语言。</p> \n <p>该插件目前版本是 1.1.0。</p> \n <p>下载<a href=\"https://github.com/jzaefferer/jquery-prettydate\"> jQuery Prettydate Validation（密码验证）插件</a>。</p> \n</div> \n<h2>使用方式</h2> \n<p>如需使用 Prettydate 插件，您需要在 title 中带有 ISO8601 日期：</p> \n<pre style=\"white-space: pre-wrap;\">\r\n&lt;a title=&quot;2008-01-28T20:24:17Z&quot;&gt;January 28th, 2008&lt;/a&gt; \r\n&lt;a title=&quot;2008-01-27T22:24:17Z&quot;&gt;January 27th, 2008&lt;/a&gt; \r\n&lt;a title=&quot;2008-01-26T22:24:17Z&quot;&gt;January 26th, 2008&lt;/a&gt;\r\n</pre> \n<p>然后对它们应用 prettyDate 方法：</p> \n<pre style=\"white-space: pre-wrap;\">\r\n$(function() { $(&quot;a&quot;).prettyDate(); });\r\n</pre> \n<p>如需本地化该插件，请在 $.prettyDate.messages 中重写属性。在这里，以德国本地化为例：</p> \n<pre style=\"white-space: pre-wrap;\">\r\n$.prettyDate.messages = { now: &quot;gerade eben&quot;, minute: &quot;vor einer Minute&quot;, minutes: $.prettyDate.template(&quot;vor {0} Minuten&quot;), hour: &quot;vor einer Stunde&quot;, hours: $.prettyDate.template(&quot;vor {0} Stunden&quot;), yesterday: &quot;Gestern&quot;, days: $.prettyDate.template(&quot;vor {0} Tagen&quot;), weeks: $.prettyDate.template(&quot;vor {0} Wochen&quot;) }\r\n</pre> \n<p>该插件每隔 10 秒中更新一次每个被选中的元素。这样子 &quot;just now&quot; 会变为 &quot;1 minute ago&quot; 再变为 &quot;x minutes ago&quot; 再变为 &quot;1 hour ago&quot; 等等。</p> \n<p>您可以通过指定 interval 选项为 &quot;false&quot; 来禁用间隔更新：</p> \n<pre>$(function() { $(&quot;a&quot;).prettyDate({ interval: false }); });</pre> \n<p>或者设置一个不同的时间间隔，例如：interval: 1000，每隔一秒更新一次每个被选中的元素：</p> \n<pre>$(function() { $(&quot;a&quot;).prettyDate({ interval: 1000 }); });</pre> \n<p>value 选项默认读取 title 属性中的 ISO8601 日期字符串。重载该选项来使用其他属性，例如，一个自定义的 &quot;isodate&quot; 属性：</p> \n<pre>\r\n$(function() { \r\n	$(&quot;a&quot;).prettyDate({\r\n		function() { // &quot;this&quot; 是 DOM 元素\r\n			return $(this).attr(&quot;isodate&quot;);\r\n		} \r\n	}); \r\n});\r\n</pre>', null, 'jQuery Prettydate|使用方式|');
INSERT INTO `schoolcontent` VALUES ('249', '252', '<h1>jQuery <span class=\"color_h1\">Tooltip</span></h1> \n<div class=\"tutintro\"> \n <p>jQuery Tooltip 插件取代了原生的工具提示框，让它们可自定义，您只需要调整它们的内容、位置和外观即可。</p> \n <p>该插件目前版本是 1.3，已经很长时间没有更新，推荐使用 <a href=\"http://www.runoob.com/jqueryui/example-tooltip.html\">jQuery UI 工具提示框（Tooltip）</a>。</p> \n <p>如需了解更多有关 jQuery UI 工具提示框（Tooltip）的细节，请查看 API 文档 <a href=\"http://www.runoob.com/jqueryui/api-tooltip.html\">jQuery UI 工具提示框部件（Tooltip Widget）</a>。</p> \n</div> \n<h2>实例演示</h2> \n<p>jQuery Tooltip 插件演示。</p> \n<pre>\r\n&lt;!doctype html&gt;\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n  &lt;meta charset=&quot;utf-8&quot;&gt;\r\n  &lt;title&gt;jQuery UI Tooltip - Default functionality&lt;/title&gt;\r\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css&quot;&gt;\r\n  &lt;script src=&quot;//code.jquery.com/jquery-1.10.2.js&quot;&gt;&lt;/script&gt;\r\n  &lt;script src=&quot;//code.jquery.com/ui/1.11.4/jquery-ui.js&quot;&gt;&lt;/script&gt;\r\n  &lt;link rel=&quot;stylesheet&quot; href=&quot;/resources/demos/style.css&quot;&gt;\r\n  &lt;script&gt;\r\n  $(function() {\r\n    $( document ).tooltip();\r\n  });\r\n  &lt;/script&gt;\r\n  &lt;style&gt;\r\n  label {\r\n    display: inline-block;\r\n    width: 5em;\r\n  }\r\n  &lt;/style&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n \r\n&lt;p&gt;&lt;a href=&quot;#&quot; title=&quot;That&amp;apos;s what this widget is&quot;&gt;Tooltips&lt;/a&gt; can be attached to any element. When you hover\r\nthe element with your mouse, the title attribute is displayed in a little box next to the element, just like a native tooltip.&lt;/p&gt;\r\n&lt;p&gt;But as it\'s not a native tooltip, it can be styled. Any themes built with\r\n&lt;a href=&quot;http://jqueryui.com/themeroller/&quot; title=&quot;ThemeRoller: jQuery UI&amp;apos;s theme builder application&quot;&gt;ThemeRoller&lt;/a&gt;\r\nwill also style tooltips accordingly.&lt;/p&gt;\r\n&lt;p&gt;Tooltips are also useful for form elements, to show some additional information in the context of each field.&lt;/p&gt;\r\n&lt;p&gt;&lt;label for=&quot;age&quot;&gt;Your age:&lt;/label&gt;&lt;input id=&quot;age&quot; title=&quot;We ask for your age only for statistical purposes.&quot;&gt;&lt;/p&gt;\r\n&lt;p&gt;Hover the field to see the tooltip.&lt;/p&gt;\r\n \r\n \r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/tryit.php?filename=jquery-plugin-tooltip\" target=\"_blank\"><button class=\"btn btn-info btn-lg\">查看演示</button></a></p>', null, 'jQuery Tooltip|实例演示|');
INSERT INTO `schoolcontent` VALUES ('250', '253', '<h1>jQuery 树型菜单插件(Treeview) </h1> \n<p>jQuery Treeview 提供了一个无序灵活的可折叠的树形菜单。试用于一些菜单的导航，支持基于 cookie 的持久性菜单。</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2016/05/68747470733a2f2f7261772e6769746875622e636f6d2f6a7a61656666657265722f6a71756572792d74726565766965772f6d61737465722f73637265656e73686f742e706e67.png\" /></p> \n<pre>\r\n&lt;ul id=&quot;browser&quot; class=&quot;filetree treeview-famfamfam&quot;&gt;\r\n	&lt;li&gt;&lt;span class=&quot;folder&quot;&gt;Folder 1&lt;/span&gt;\r\n		&lt;ul&gt;\r\n			&lt;li&gt;&lt;span class=&quot;folder&quot;&gt;Item 1.1&lt;/span&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;&lt;span class=&quot;file&quot;&gt;Item 1.1.1&lt;/span&gt;&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;&lt;span class=&quot;folder&quot;&gt;Folder 2&lt;/span&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;&lt;span class=&quot;folder&quot;&gt;Subfolder 2.1&lt;/span&gt;\r\n						&lt;ul id=&quot;folder21&quot;&gt;\r\n							&lt;li&gt;&lt;span class=&quot;file&quot;&gt;File 2.1.1&lt;/span&gt;&lt;/li&gt;\r\n							&lt;li&gt;&lt;span class=&quot;file&quot;&gt;File 2.1.2&lt;/span&gt;&lt;/li&gt;\r\n						&lt;/ul&gt;\r\n					&lt;/li&gt;\r\n					&lt;li&gt;&lt;span class=&quot;folder&quot;&gt;Subfolder 2.2&lt;/span&gt;\r\n						&lt;ul&gt;\r\n							&lt;li&gt;&lt;span class=&quot;file&quot;&gt;File 2.2.1&lt;/span&gt;&lt;/li&gt;\r\n							&lt;li&gt;&lt;span class=&quot;file&quot;&gt;File 2.2.2&lt;/span&gt;&lt;/li&gt;\r\n						&lt;/ul&gt;\r\n					&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li class=&quot;closed&quot;&gt;&lt;span class=&quot;folder&quot;&gt;Folder 3 (closed at start)&lt;/span&gt;\r\n				&lt;ul&gt;\r\n					&lt;li&gt;&lt;span class=&quot;file&quot;&gt;File 3.1&lt;/span&gt;&lt;/li&gt;\r\n				&lt;/ul&gt;\r\n			&lt;/li&gt;\r\n			&lt;li&gt;&lt;span class=&quot;file&quot;&gt;File 4&lt;/span&gt;&lt;/li&gt;\r\n		&lt;/ul&gt;\r\n	&lt;/li&gt;\r\n&lt;/ul&gt;\r\n</pre>\n<p> <a target=\"_blank\" class=\"tryitbtn\" href=\"http://www.runoob.com/try/try.php?filename=tryjquery_treeview_demo1\">尝试一下 &raquo;</a></p> \n<hr /> \n<h2>相关链接</h2> \n<p>jQuery Treeview 完整实例下载：<a href=\"http://static.runoob.com/download/jquery-treeview.zip\" target=\"_blank\">http://static.runoob.com/download/jquery-treeview.zip</a>。</p> \n<p>jQuery Treeview Github 地址：<a href=\"https://github.com/jzaefferer/jquery-treeview\" target=\"_blank\">https://github.com/jzaefferer/jquery-treeview</a>。</p>', null, 'jQuery 树型菜单插件(Treeview)|相关链接|');
INSERT INTO `schoolcontent` VALUES ('251', '254', '<h1>MySQL <span class=\"color_h1\">教程</span></h1> \n<div class=\"tutintro\"> \n <img src=\"http://www.runoob.com/wp-content/uploads/2014/03/mysql.jpg\" alt=\"mysql\" width=\"100\" height=\"75\" /> \n <p>Mysql是最流行的关系型数据库管理系统，在WEB应用方面MySQL是最好的RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。 </p>\n <p> 在本教程中，会让大家快速掌握Mysql的基本知识，并轻松使用Mysql数据库。</p>\n</div>\n<hr /> \n<h2>什么是数据库？</h2>\n<p> 数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，</p>\n<p> 每个数据库都有一个或多个不同的API用于创建，访问，管理，搜索和复制所保存的数据。</p>\n<p> 我们也可以将数据存储在文件中，但是在文件中读写数据速度相对较慢。</p>\n<p> 所以，现在我们使用关系型数据库管理系统（RDBMS）来存储和管理的大数据量。所谓的关系型数据库，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。 </p>\n<p> RDBMS即关系数据库管理系统(Relational Database Management System)的特点：</p> \n<ul> \n <li>1.数据以表格的形式出现</li> \n <li>2.每行为各种记录名称</li> \n <li>3.每列为记录名称所对应的数据域</li> \n <li>4.许多的行和列组成一张表单</li> \n <li>5.若干的表单组成database</li> \n</ul>\n<hr /> \n<h2>RDBMS 术语</h2>\n<p></p>\n<p> 在我们开始学习MySQL 数据库前，让我们先了解下RDBMS的一些术语：</p> \n<ul> \n <li><strong>数据库:</strong> 数据库是一些关联表的集合。.</li> \n <li><strong>数据表:</strong> 表是数据的矩阵。在一个数据库中的表看起来像一个简单的电子表格。</li> \n <li><strong>列:</strong> 一列(数据元素) 包含了相同的数据, 例如邮政编码的数据。</li> \n <li><strong>行：</strong>一行（=元组，或记录）是一组相关的数据，例如一条用户订阅的数据。</li> \n <li><strong>冗余</strong>：存储两倍数据，冗余可以使系统速度更快。</li> \n <li><strong>主键</strong>：主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。</li> \n <li><strong>外键：</strong>外键用于关联两个表。</li> \n <li><strong>复合键</strong>：复合键（组合键）将多个列作为一个索引键，一般用于复合索引。</li> \n <li><strong>索引：</strong>使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。</li> \n <li><strong>参照完整性:</strong> 参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性。</li> \n</ul> \n<hr /> \n<h2>Mysql数据库</h2>\n<p> MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。 </p> \n<ul> \n <li>Mysql是开源的，所以你不需要支付额外的费用。</li> \n <li>Mysql支持大型的数据库。可以处理拥有上千万条记录的大型数据库。</li> \n <li>MySQL使用标准的SQL数据语言形式。</li> \n <li>Mysql可以允许于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Python、Java、Perl、PHP、Eiffel、Ruby和Tcl等。</li> \n <li>Mysql对PHP有很好的支持，PHP是目前最流行的Web开发语言。</li> \n <li>MySQL支持大型数据库，支持5000万条记录的数据仓库，32位系统表文件最大可支持4GB，64位系统支持最大的表文件为8TB。</li> \n <li>Mysql是可以定制的，采用了GPL协议，你可以修改源码来开发自己的Mysql系统。</li> \n</ul> \n<hr /> \n<h2>在开始学习本教程前你应该了解？</h2>\n<p> 在开始学习本教程前你应该了解PHP和HTML的基础知识，并能简单的应用。</p>\n<p> 本教程的很多例子都跟PHP语言有关，我们的实例基本上是采用PHP语言来演示。</p>\n<p> 如果你还不了解PHP，你可以通过本站的<a title=\"PHP 教程\" href=\"http://www.runoob.com/php/php-tutorial.html\" target=\"_blank\">PHP教程</a>来了解该语言。</p>', '<h1>MySQL <span class=\"color_h1\">教程</span></h1><p><img src=\"http://www.runoob.com/wp-content/uploads/2014/03/mysql.jpg\" alt=\"mysql\" width=\"100\" height=\"75\"/> \n </p><p>Mysql是最流行的关系型数据库管理系统，在WEB应用方面MySQL是最好的RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。</p><p>在本教程中，会让大家快速掌握Mysql的基本知识，并轻松使用Mysql数据库。</p><hr/><h2>什么是数据库？</h2><p>数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，</p><p>每个数据库都有一个或多个不同的API用于创建，访问，管理，搜索和复制所保存的数据。</p><p>我们也可以将数据存储在文件中，但是在文件中读写数据速度相对较慢。</p><p>所以，现在我们使用关系型数据库管理系统（RDBMS）来存储和管理的大数据量。所谓的关系型数据库，是建立在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。</p><p>RDBMS即关系数据库管理系统(Relational Database Management System)的特点：</p><ul class=\" list-paddingleft-2\"><li><p>1.数据以表格的形式出现</p></li><li><p>2.每行为各种记录名称</p></li><li><p>3.每列为记录名称所对应的数据域</p></li><li><p>4.许多的行和列组成一张表单</p></li><li><p>5.若干的表单组成database</p></li></ul><hr/><h2>RDBMS 术语</h2><p><br/></p><p>在我们开始学习MySQL 数据库前，让我们先了解下RDBMS的一些术语：</p><ul class=\" list-paddingleft-2\"><li><p><strong>数据库:</strong> 数据库是一些关联表的集合。.</p></li><li><p><strong>数据表:</strong> 表是数据的矩阵。在一个数据库中的表看起来像一个简单的电子表格。</p></li><li><p><strong>列:</strong> 一列(数据元素) 包含了相同的数据, 例如邮政编码的数据。</p></li><li><p><strong>行：</strong>一行（=元组，或记录）是一组相关的数据，例如一条用户订阅的数据。</p></li><li><p><strong>冗余</strong>：存储两倍数据，冗余可以使系统速度更快。</p></li><li><p><strong>主键</strong>：主键是唯一的。一个数据表中只能包含一个主键。你可以使用主键来查询数据。</p></li><li><p><strong>外键：</strong>外键用于关联两个表。</p></li><li><p><strong>复合键</strong>：复合键（组合键）将多个列作为一个索引键，一般用于复合索引。</p></li><li><p><strong>索引：</strong>使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。</p></li><li><p><strong>参照完整性:</strong> 参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性。</p></li></ul><hr/><h2>Mysql数据库</h2><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><ul class=\" list-paddingleft-2\"><li><p>Mysql是开源的，所以你不需要支付额外的费用。</p></li><li><p>Mysql支持大型的数据库。可以处理拥有上千万条记录的大型数据库。</p></li><li><p>MySQL使用标准的SQL数据语言形式。</p></li><li><p>Mysql可以允许于多个系统上，并且支持多种语言。这些编程语言包括C、C++、Python、Java、Perl、PHP、Eiffel、Ruby和Tcl等。</p></li><li><p>Mysql对PHP有很好的支持，PHP是目前最流行的Web开发语言。</p></li><li><p>MySQL支持大型数据库，支持5000万条记录的数据仓库，32位系统表文件最大可支持4GB，64位系统支持最大的表文件为8TB。</p></li><li><p>Mysql是可以定制的，采用了GPL协议，你可以修改源码来开发自己的Mysql系统。</p></li></ul><hr/><h2>在开始学习本教程前你应该了解？</h2><p>在开始学习本教程前你应该了解PHP和HTML的基础知识，并能简单的应用。</p><p>本教程的很多例子都跟PHP语言有关，我们的实例基本上是采用PHP语言来演示。</p><p>如果你还不了解PHP，你可以通过本站的<a title=\"PHP 教程\" href=\"http://www.runoob.com/php/php-tutorial.html\" target=\"_blank\">PHP教程</a>来了解该语言。</p>', 'MySQL 教程|什么是数据库？|RDBMS 术语|Mysql数据库|在开始学习本教程前你应该了解？|');
INSERT INTO `schoolcontent` VALUES ('252', '255', '<h1>MySQL <span class=\"color_h1\">安装</span></h1> \n<p>所有平台的Mysql下载地址为： <a href=\"http://www.mysql.com/downloads\" target=\"_blank\">MySQL 下载</a>. 挑选你需要的 <i>MySQL Community Server</i> 版本及对应的平台。</p> \n<hr /> \n<h2>Linux/UNIX上安装Mysql</h2>\n<p> Linux平台上推荐使用RPM包来安装Mysql,MySQL AB提供了以下RPM包的下载地址：</p> \n<ul> \n <li> <strong>MySQL</strong> - MySQL服务器。你需要该选项，除非你只想连接运行在另一台机器上的MySQL服务器。</li>\n <li> <strong>MySQL-client</strong> - MySQL 客户端程序，用于连接并操作Mysql服务器。</li>\n <li> <strong>MySQL-devel</strong> - 库和包含文件，如果你想要编译其它MySQL客户端，例如Perl模块，则需要安装该RPM包。</li>\n <li> <strong>MySQL-shared</strong> - 该软件包包含某些语言和应用程序需要动态装载的共享库(libmysqlclient.so*)，使用MySQL。</li>\n <li> <strong>MySQL-bench</strong> - MySQL数据库服务器的基准和性能测试工具。</li> \n</ul> \n<p> 以下安装Mysql RMP的实例是在SuSE Linux系统上进行，当然该安装步骤也适合应用于其他支持RPM的Linux系统，如:Centos。</p>\n<p> 安装步骤如下：</p>\n<p> 使用root用户登陆你的Linux系统。</p>\n<p> 下载Mysql RPM包，下载地址为：<a href=\"http://www.mysql.com/downloads\" target=\"_blank\">MySQL 下载</a>。</p>\n<p> 通过以下命令执行Mysql安装，rpm包为你下载的rpm包：</p> \n<pre>\r\n[root@host]# rpm -i MySQL-5.0.9-0.i386.rpm\r\n</pre>\n<p> 以上安装mysql服务器的过程会创建mysql用户，并创建一个mysql配置文件my.cnf。</p>\n<p> 你可以在/usr/bin和/usr/sbin中找到所有与MySQL相关的二进制文件。所有数据表和数据库将在/var/lib/mysql目录中创建。</p> \n<p>以下是一些mysql可选包的安装过程，你可以根据自己的需要来安装：</p> \n<pre>\r\n[root@host]# rpm -i MySQL-client-5.0.9-0.i386.rpm\r\n[root@host]# rpm -i MySQL-devel-5.0.9-0.i386.rpm\r\n[root@host]# rpm -i MySQL-shared-5.0.9-0.i386.rpm\r\n[root@host]# rpm -i MySQL-bench-5.0.9-0.i386.rpm\r\n</pre> \n<hr /> \n<h2>Window上安装Mysql</h2>\n<p> Window上安装Mysql相对来说会较为简单，你只需要载 <a href=\"http://www.mysql.com/downloads\" target=\"_blank\">MySQL 下载</a>中下载window版本的mysql安装包，并解压安装包。</p> \n<p>双击 setup.exe 文件，接下来你只需要安装默认的配置点击&quot;next&quot;即可，默认情况下安装信息会在C:\\mysql目录中。</p> \n<p> 接下来你可以通过&quot;开始&quot; =》在搜索框中输入 &quot; cmd&quot; 命令 =》 在命令提示符上切换到 C:\\mysql\\bin 目录，并输入一下命令：</p> \n<pre>\r\nmysqld.exe --console\r\n</pre>\n<p> 如果安装成功以上命令将输出一些mysql启动及InnoDB信息。</p> \n<hr />\n<h2>验证Mysql安装</h2>\n<p> 在成功安装Mysql后，一些基础表会表初始化，在服务器启动后，你可以通过简单的测试来验证Mysql是否工作正常。</p>\n<p> 使用 mysqladmin 工具来获取服务器状态：</p> \n<p> 使用 mysqladmin 命令俩检查服务器的版本,在linux上该二进制文件位于 /usr/bin on linux ，在window上该二进制文件位于C:\\mysql\\bin 。</p> \n<pre>\r\n[root@host]# mysqladmin --version\r\n</pre>\n<p> linux上该命令将输出以下结果，该结果基于你的系统信息：</p> \n<pre>\r\nmysqladmin  Ver 8.23 Distrib 5.0.9-0, for redhat-linux-gnu on i386\r\n</pre>\n<p> 如果以上命令执行后未输入任何信息，说明你的Mysql未安装成功。 </p> \n<hr /> \n<h2>使用 MySQL Client(Mysql客户端) 执行简单的SQL命令</h2>\n<p> 你可以在 MySQL Client(Mysql客户端) 使用 mysql 命令连接到Mysql服务器上，默认情况下Mysql服务器的密码为空，所以本实例不需要输入密码。</p> \n<p>命令如下：</p> \n<pre>\r\n[root@host]# mysql\r\n</pre>\n<p> 以上命令执行后会输出 mysql&gt;提示符，这说明你已经成功连接到Mysql服务器上，你可以在 mysql&gt; 提示符执行SQL命令：</p> \n<pre>\r\nmysql&gt; SHOW DATABASES;\r\n+----------+\r\n| Database |\r\n+----------+\r\n| mysql    |\r\n| test     |\r\n+----------+\r\n2 rows in set (0.13 sec)\r\n</pre> \n<hr /> \n<h2>Mysql安装后需要做的</h2>\n<p> Mysql安装成功后，默认的root用户密码为空，你可以使用以下命令来创建root用户的密码：</p> \n<pre>\r\n[root@host]# mysqladmin -u root password &quot;new_password&quot;;\r\n</pre> \n<p> 现在你可以通过以下命令来连接到Mysql服务器：</p> \n<pre>\r\n[root@host]# mysql -u root -p\r\nEnter password:*******\r\n</pre>\n<p><strong> 注意：</strong>在输入密码时，密码是不会显示了，你正确输入即可。</p> \n<hr /> \n<h2> Linux系统启动时启动 MySQL </h2> \n<p> 如果你需要在Linux系统启动时启动 MySQL 服务器，你需要在 /etc/rc.local 文件中添加以下命令：</p> \n<pre>\r\n/etc/init.d/mysqld start\r\n</pre>\n<p> 同样，你需要将 mysqld 二进制文件添加到 /etc/init.d/ 目录中。</p>', null, 'MySQL 安装|Linux/UNIX上安装Mysql|Window上安装Mysql|验证Mysql安装|使用 MySQL Client(Mysql客户端) 执行简单的SQL命令|Mysql安装后需要做的|Linux系统启动时启动 MySQL|');
INSERT INTO `schoolcontent` VALUES ('253', '256', '<h1>MySQL <span class=\"color_h1\">管理</span></h1> \n<hr /> \n<h2> 启动及关闭 MySQL 服务器</h2> \n<p>首先，我们需要通过以下命令来检查MySQL服务器是否启动：</p> \n<pre>\r\nps -ef | grep mysqld\r\n</pre> \n<p>如果MySql已经启动，以上命令将输出mysql进程列表， 如果mysql未启动，你可以使用以下命令来启动mysql服务器:</p> \n<pre>\r\nroot@host# cd /usr/bin\r\n./mysqld_safe &amp;\r\n</pre> \n<p> 如果你想关闭目前运行的 MySQL 服务器, 你可以执行以下命令: </p> \n<pre>\r\nroot@host# cd /usr/bin\r\n./mysqladmin -u root -p shutdown\r\nEnter password: ******\r\n</pre> \n<hr /> \n<h2>MySQL 用户设置</h2> \n<p> 如果你需要添加 MySQL 用户，你只需要在 mysql 数据库中的 user 表添加新用户即可。</p> \n<p>以下为添加用户的的实例，用户名为guest，密码为guest123，并授权用户可进行 SELECT, INSERT 和 UPDATE操作权限： </p> \n<pre>\r\nroot@host# mysql -u root -p\r\nEnter password:*******\r\nmysql&gt; use mysql;\r\nDatabase changed\r\n\r\nmysql&gt; INSERT INTO user \r\n          (host, user, password, \r\n           select_priv, insert_priv, update_priv) \r\n           VALUES (\'localhost\', \'guest\', \r\n           PASSWORD(\'guest123\'), \'Y\', \'Y\', \'Y\');\r\nQuery OK, 1 row affected (0.20 sec)\r\n\r\nmysql&gt; FLUSH PRIVILEGES;\r\nQuery OK, 1 row affected (0.01 sec)\r\n\r\nmysql&gt; SELECT host, user, password FROM user WHERE user = \'guest\';\r\n+-----------+---------+------------------+\r\n| host      | user    | password         |\r\n+-----------+---------+------------------+\r\n| localhost | guest | 6f8c114b58f2ce9e |\r\n+-----------+---------+------------------+\r\n1 row in set (0.00 sec)\r\n</pre> \n<p> 在添加用户时，请注意使用MySQL提供的 PASSWORD() 函数来对密码进行加密。 你可以在以上实例看到用户密码加密后为： 6f8c114b58f2ce9e. </p> \n<p><strong> 注意：</strong>在 MySQL5.7 中 user 表的 password 已换成了<strong>authentication_string</strong>。</p> \n<p><strong> 注意：</strong>在注意需要执行 <strong>FLUSH PRIVILEGES</strong> 语句。 这个命令执行后会重新载入授权表。 </p>\n<p> 如果你不使用该命令，你就无法使用新创建的用户来连接mysql服务器，除非你重启mysql服务器。 </p> \n<p>你可以在创建用户时，为用户指定权限，在对应的权限列中，在插入语句中设置为 \'Y\' 即可，用户权限列表如下：</p> \n<ul> \n <li>Select_priv</li> \n <li>Insert_priv</li> \n <li>Update_priv</li> \n <li>Delete_priv</li> \n <li>Create_priv</li> \n <li>Drop_priv</li> \n <li>Reload_priv</li> \n <li>Shutdown_priv</li> \n <li>Process_priv</li> \n <li>File_priv</li> \n <li>Grant_priv</li> \n <li>References_priv</li> \n <li>Index_priv</li> \n <li>Alter_priv</li> \n</ul> \n<p> 另外一种添加用户的方法为通过SQL的 GRANT 命令，你下命令会给指定数据库TUTORIALS添加用户 zara ，密码为 zara123 。</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use mysql;\r\nDatabase changed\r\n\r\nmysql&gt; GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP\r\n    -&gt; ON TUTORIALS.*\r\n    -&gt; TO \'zara\'@\'localhost\'\r\n    -&gt; IDENTIFIED BY \'zara123\';\r\n</pre> \n<p> 以上命令会在mysql数据库中的user表创建一条用户信息记录。 </p> \n<p> <strong>注意:</strong> MySQL 的SQL语句以分号 (;) 作为结束标识。 </p> \n<hr /> \n<h2>/etc/my.cnf 文件配置</h2> \n<p>一般情况下，你不需要修改该配置文件，该文件默认配置如下：</p> \n<pre>\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\n\r\n[mysql.server]\r\nuser=mysql\r\nbasedir=/var/lib\r\n\r\n[safe_mysqld]\r\nerr-log=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n</pre> \n<p>在配置文件中，你可以指定不同的错误日志文件存放的目录，一般你不需要改动这些配置。</p> \n<hr /> \n<h2> 管理MySQL的命令</h2> \n<p>以下列出了使用Mysql数据库过程中常用的命令：</p> \n<ul> \n <li><p><strong>USE <em>数据库名</em></strong> :<br />选择要操作的Mysql数据库，使用该命令后所有Mysql命令都只针对该数据库。</p> <pre>\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\n</pre> </li> \n <li><p><strong>SHOW DATABASES: </strong><br />列出 MySQL 数据库管理系统的数据库列表。</p> <pre>\r\nmysql&gt; SHOW DATABASES;\r\n+--------------------+\r\n| Database           |\r\n+--------------------+\r\n| information_schema |\r\n| RUNOOB             |\r\n| cdcol              |\r\n| mysql              |\r\n| onethink           |\r\n| performance_schema |\r\n| phpmyadmin         |\r\n| test               |\r\n| wecenter           |\r\n| wordpress          |\r\n+--------------------+\r\n10 rows in set (0.02 sec)\r\n</pre> </li> \n <li><p><strong>SHOW TABLES:</strong><br /> 显示指定数据库的所有表，使用该命令前需要使用 use 命令来选择要操作的数据库。</p> <pre>\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SHOW TABLES;\r\n+------------------+\r\n| Tables_in_runoob |\r\n+------------------+\r\n| employee_tbl     |\r\n| runoob_tbl       |\r\n| tcount_tbl       |\r\n+------------------+\r\n3 rows in set (0.00 sec)\r\n</pre> </li> \n <li><p><strong>SHOW COLUMNS FROM <em>数据表</em>:</strong><br /> 显示数据表的属性，属性类型，主键信息 ，是否为 NULL，默认值等其他信息。</p> <pre>\r\nmysql&gt; SHOW COLUMNS FROM runoob_tbl;\r\n+-----------------+--------------+------+-----+---------+-------+\r\n| Field           | Type         | Null | Key | Default | Extra |\r\n+-----------------+--------------+------+-----+---------+-------+\r\n| runoob_id       | int(11)      | NO   | PRI | NULL    |       |\r\n| runoob_title    | varchar(255) | YES  |     | NULL    |       |\r\n| runoob_author   | varchar(255) | YES  |     | NULL    |       |\r\n| submission_date | date         | YES  |     | NULL    |       |\r\n+-----------------+--------------+------+-----+---------+-------+\r\n4 rows in set (0.01 sec)\r\n</pre> </li> \n <li><p><strong>SHOW INDEX FROM <em>数据表</em>:</strong><br /> 显示数据表的详细索引信息，包括PRIMARY KEY（主键）。</p> <pre>\r\nmysql&gt; SHOW INDEX FROM runoob_tbl;\r\n+------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+\r\n| Table      | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment |\r\n+------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+\r\n| runoob_tbl |          0 | PRIMARY  |            1 | runoob_id   | A         |           2 |     NULL | NULL   |      | BTREE      |         |               |\r\n+------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+\r\n1 row in set (0.00 sec)\r\n</pre> </li> \n <li><p><strong>SHOW TABLE STATUS LIKE [FROM db_name] [LIKE \'pattern\'] \\G:</strong> <br /> 该命令将输出Mysql数据库管理系统的性能及统计信息。</p> <pre>\r\nmysql&gt; SHOW TABLE STATUS  FROM RUNOOB;   # 显示数据库 RUNOOB 中所有表的信息\r\n\r\nmysql&gt; SHOW TABLE STATUS from RUNOOB LIKE \'runoob%\';     # 表名以runoob开头的表的信息\r\nmysql&gt; SHOW TABLE STATUS from RUNOOB LIKE \'runoob%\'\\G;   # 加上 \\G，查询结果按列打印\r\n</pre> </li> \n</ul> \n<p>Gif 图演示：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2014/03/mysql-admin.gif\" /></p>', null, 'MySQL 管理|启动及关闭 MySQL 服务器|MySQL 用户设置|/etc/my.cnf 文件配置|管理MySQL的命令|');
INSERT INTO `schoolcontent` VALUES ('254', '257', '<h1>MySQL PHP 语法 </h1> \n<p> MySQL 可应用于多种语言，包括 PERL, C, C++, JAVA 和 PHP。 在这些语言中，Mysql在PHP的web开发中是应用最广泛。 </p> \n<p> 在本教程中我们大部分实例都采用了PHP语言。如果你想了解Mysql在PHP中的应用，可以访问我们的 <a href=\"http://www.w3cschool.cc/php/php-mysql-intro.html\" target=\"_blank\">PHP中使用Mysql介绍</a>。 </p>\n<p>PHP提供了多种方式来访问和操作Mysql数据库记录。PHP Mysql函数格式如下：</p> \n<pre>\r\nmysql_function(value,value,...);\r\n</pre> 以上格式中 function部分描述了mysql函数的功能，如 \n<pre>\r\nmysqli_connect($connect);\r\nmysqli_query($connect,&quot;SQL 语句&quot;);\r\nmysql_fetch_array()\r\nmysql_connect()\r\nmysql_close()\r\n</pre>\n<p> 以下实例展示了PHP调用mysql函数的语法：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;PHP with MySQL&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n   $retval = mysql_function(value, [value,...]);\r\n   if( !$retval )\r\n   {\r\n       die ( &quot;相关错误信息&quot; );\r\n   }\r\n   // 其他 MySQL 或 PHP 语句\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre>\n<p> 从下一章开始，我们将学习到更多的MySQL功能函数。</p>', null, 'MySQL PHP 语法|');
INSERT INTO `schoolcontent` VALUES ('255', '258', '<h1>MySQL 连接</h1> \n<hr /> \n<h2> 使用mysql二进制方式连接</h2> \n<p> 您可以使用MySQL二进制方式进入到mysql命令提示符下来连接MySQL数据库。 </p> \n<h3> 实例</h3> \n<p> 以下是从命令行中连接mysql服务器的简单实例：</p> \n<pre>\r\n[root@host]# mysql -u root -p\r\nEnter password:******\r\n</pre>\n<p> 在登录成功后会出现 mysql&gt; 命令提示窗口，你可以在上面执行任何 SQL 语句。</p>\n<p>以上命令执行后，登录成功输出结果如下:</p> \n<pre>\r\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\r\nYour MySQL connection id is 2854760 to server version: 5.0.9\r\n\r\nType \'help;\' or \'\\h\' for help. Type \'\\c\' to clear the buffer.\r\n</pre>\n<p> 在以上实例中，我们使用了root用户登录到mysql服务器，当然你也可以使用其他mysql用户登录。</p>\n<p> 如果用户权限足够，任何用户都可以在mysql的命令提示窗口中进行SQL操作。</p> \n<p> 退出 mysql&gt; 命令提示窗口可以使用 exit 命令，如下所示：</p> \n<pre>\r\nmysql&gt; exit\r\nBye\r\n</pre> \n<hr /> \n<h2> 使用 PHP 脚本连接 MySQL</h2> \n<p> PHP 提供了 mysql_connect() 函数来连接数据库。</p> \n<p> 该函数有5个参数，在成功链接到MySQL后返回连接标识，失败返回 FALSE 。 </p> \n<h3>语法</h3> \n<pre>\r\nconnection mysql_connect(server,user,passwd,new_link,client_flag);\r\n</pre> \n<p><strong>参数说明：</strong></p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>参数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>server</td> \n   <td> <p>可选。规定要连接的服务器。</p> <p>可以包括端口号，例如 &quot;hostname:port&quot;，或者到本地套接字的路径，例如对于 localhost 的 &quot;:/path/to/socket&quot;。</p> <p>如果 PHP 指令 mysql.default_host 未定义（默认情况），则默认值是 \'localhost:3306\'。</p> </td> \n  </tr> \n  <tr> \n   <td>user</td> \n   <td>可选。用户名。默认值是服务器进程所有者的用户名。</td> \n  </tr> \n  <tr> \n   <td>passwd</td> \n   <td>可选。密码。默认值是空密码。</td> \n  </tr> \n  <tr> \n   <td>new_link</td> \n   <td>可选。如果用同样的参数第二次调用 mysql_connect()，将不会建立新连接，而将返回已经打开的连接标识。参数 new_link 改变此行为并使 mysql_connect() 总是打开新的连接，甚至当 mysql_connect() 曾在前面被用同样的参数调用过。</td> \n  </tr> \n  <tr> \n   <td>client_flag</td> \n   <td> <p>可选。client_flags 参数可以是以下常量的组合：</p> \n    <ul class=\"listintable\"> \n     <li>MYSQL_CLIENT_SSL - 使用 SSL 加密</li> \n     <li>MYSQL_CLIENT_COMPRESS - 使用压缩协议</li> \n     <li>MYSQL_CLIENT_IGNORE_SPACE - 允许函数名后的间隔</li> \n     <li>MYSQL_CLIENT_INTERACTIVE - 允许关闭连接之前的交互超时非活动时间</li> \n    </ul> </td> \n  </tr> \n </tbody>\n</table> \n<p> 你可以使用PHP的 mysql_close() 函数来断开与MySQL数据库的链接。</p>\n<p> 该函数只有一个参数为mysql_connect()函数创建连接成功后返回的 MySQL 连接标识符。</p> \n<h3>语法</h3> \n<pre>\r\nbool mysql_close ( resource $link_identifier );\r\n</pre> \n<p> 本函数关闭指定的连接标识所关联的到 MySQL 服务器的非持久连接。如果没有指定 link_identifier，则关闭上一个打开的连接。</p>\n<p> <strong>提示：</strong>通常不需要使用 mysql_close()，因为已打开的非持久连接会在脚本执行完毕后自动关闭。</p>\n<p> <strong>注释：</strong>mysql_close() 不会关闭由 mysql_pconnect() 建立的持久连接。</p> \n<h3>实例</h3> \n<p> 你可以尝试以下实例来连接到你的 MySQL 服务器:</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;Connecting MySQL Server&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n   $dbhost = \'localhost:3306\';  //mysql服务器主机地址\r\n   $dbuser = \'guest\';      //mysql用户名\r\n   $dbpass = \'guest123\';//mysql用户名密码\r\n   $conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\n   if(! $conn )\r\n   {\r\n     die(\'Could not connect: \' . mysql_error());\r\n   }\r\n   echo \'Connected successfully\';\r\n   mysql_close($conn);\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre>', null, 'MySQL 连接|使用mysql二进制方式连接|使用 PHP 脚本连接 MySQL|');
INSERT INTO `schoolcontent` VALUES ('256', '259', '<h1> MySQL 创建数据库 </h1> \n<hr /> \n<h2> 使用 mysqladmin 创建数据库</h2> \n<p> 使用普通用户，你可能需要特定的权限来创建或者删除 MySQL 数据库。</p>\n<p> 所以我们这边使用root用户登录，root用户拥有最高权限，可以使用 mysql mysqladmin 命令来创建数据库。</p> \n<h3> 实例</h3> \n<p> 以下命令简单的演示了创建数据库的过程，数据名为 RUNOOB:</p> \n<pre>\r\n[root@host]# mysqladmin -u root -p create RUNOOB\r\nEnter password:******\r\n</pre> \n<p>以上命令执行成功后会创建 MySQL 数据库 RUNOOB。</p> \n<hr /> \n<h2> 使用 PHP脚本 创建数据库</h2> \n<p> PHP使用 mysql_query 函数来创建或者删除 MySQL 数据库。 </p>\n<p> 该函数有两个参数，在执行成功时返回 TRUE，否则返回 FALSE。</p> \n<h3> 语法</h3> \n<pre>\r\nbool mysql_query( sql, connection );\r\n</pre> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>参数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>sql</td> \n   <td>必需。规定要发送的 SQL 查询。注释：查询字符串不应以分号结束。</td> \n  </tr> \n  <tr> \n   <td>connection</td> \n   <td>可选。规定 SQL 连接标识符。如果未规定，则使用上一个打开的连接。</td> \n  </tr> \n </tbody>\n</table> \n<h3> 实例</h3>\n<p> 以下实例演示了使用PHP来创建一个数据库：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;创建 MySQL 数据库&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'连接错误: \' . mysql_error());\r\n}\r\necho \'连接成功&lt;br /&gt;\';\r\n$sql = \'CREATE DATABASE RUNOOB\';\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'创建数据库失败: \' . mysql_error());\r\n}\r\necho &quot;数据库 RUNOOB 创建成功\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre>', null, 'MySQL 创建数据库|使用 mysqladmin 创建数据库|使用 PHP脚本 创建数据库|');
INSERT INTO `schoolcontent` VALUES ('257', '260', '<h1>MySQL 删除数据库</h1> \n<hr /> \n<h2>使用 mysqladmin 删除数据库</h2> \n<p> 使用普通用户登陆mysql服务器，你可能需要特定的权限来创建或者删除 MySQL 数据库。 </p>\n<p> 所以我们这边使用root用户登录，root用户拥有最高权限，可以使用 mysql mysqladmin 命令来创建数据库。 </p> \n<p> 在删除数据库过程中，务必要十分谨慎，因为在执行删除命令后，所有数据将会消失。</p> \n<p> 以下实例删除数据库RUNOOB(该数据库在前一章节已创建)：</p> \n<pre>\r\n[root@host]# mysqladmin -u root -p drop RUNOOB\r\nEnter password:******\r\n</pre> \n<p>执行以上删除数据库命令后，会出现一个提示框，来确认是否真的删除数据库：</p> \n<pre>\r\nDropping the database is potentially a very bad thing to do.\r\nAny data stored in the database will be destroyed.\r\n\r\nDo you really want to drop the \'RUNOOB\' database [y/N] y\r\nDatabase &quot;RUNOOB&quot; dropped\r\n</pre> \n<hr /> \n<h2>使用PHP脚本删除数据库</h2> \n<p>PHP使用 mysql_query 函数来创建或者删除 MySQL 数据库。 </p>\n<p> 该函数有两个参数，在执行成功时返回 TRUE，否则返回 FALSE。 </p> \n<h3>语法</h3> \n<pre>\r\nbool mysql_query( sql, connection );\r\n</pre> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>参数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>sql</td> \n   <td>必需。规定要发送的 SQL 查询。注释：查询字符串不应以分号结束。</td> \n  </tr> \n  <tr> \n   <td>connection</td> \n   <td>可选。规定 SQL 连接标识符。如果未规定，则使用上一个打开的连接。</td> \n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p> 以下实例演示了使用PHP mysql_query函数来删除数据库：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;Deleting MySQL Database&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'连接失败: \' . mysql_error());\r\n}\r\necho \'连接成功&lt;br /&gt;\';\r\n$sql = \'DROP DATABASE RUNOOB\';\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'删除数据库失败: \' . mysql_error());\r\n}\r\necho &quot;数据库 RUNOOB 删除成功\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre> \n<p> <strong>注意：</strong> 在使用PHP脚本删除数据库时，不会出现确认是否删除信息，会直接删除指定数据库，所以你在删除数据库时要特别小心。</p>', null, 'MySQL 删除数据库|使用 mysqladmin 删除数据库|使用PHP脚本删除数据库|');
INSERT INTO `schoolcontent` VALUES ('258', '261', '<h1>MySQL 选择数据库</h1> \n<p> 在你连接到 MySQL 数据库后，可能有多个可以操作的数据库，所以你需要选择你要操作的数据库。 </p> \n<hr /> \n<h2>从命令提示窗口中选择MySQL数据库</h2> \n<p> 在 mysql&gt; 提示窗口中可以很简单的选择特定的数据库。你可以使用SQL命令来选择指定的数据库。</p> \n<h3>实例</h3>\n<p> 以下实例选取了数据库 RUNOOB:</p> \n<pre>\r\n[root@host]# mysql -u root -p\r\nEnter password:******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt;\r\n</pre> \n<p>执行以上命令后，你就已经成功选择了 RUNOOB 数据库，在后续的操作中都会在 RUNOOB 数据库中执行。</p> \n<p> <strong>注意:</strong>所有的数据库名，表名，表字段都是区分大小写的。所以你在使用SQL命令时需要输入正确的名称。</p> \n<hr /> \n<h2>使用PHP脚本选择MySQL数据库</h2> \n<p> PHP 提供了函数 mysql_select_db 来选取一个数据库。函数在执行成功后返回 TRUE ，否则返回 FALSE 。 </p> \n<h3>语法</h3> \n<pre>\r\nbool mysql_select_db( db_name, connection );\r\n</pre> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>参数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>db_name</td> \n   <td>必需。规定要选择的数据库。</td> \n  </tr> \n  <tr> \n   <td>connection</td> \n   <td>可选。规定 MySQL 连接。如果未指定，则使用上一个连接。</td> \n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>以下实例展示了如何使用 mysql_select_db 函数来选取一个数据库：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;Selecting MySQL Database&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'guest\';\r\n$dbpass = \'guest123\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'连接失败: \' . mysql_error());\r\n}\r\necho \'连接成功\';\r\nmysql_select_db( \'RUNOOB\' );\r\nmysql_close($conn);\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre>', null, 'MySQL 选择数据库|从命令提示窗口中选择MySQL数据库|使用PHP脚本选择MySQL数据库|');
INSERT INTO `schoolcontent` VALUES ('259', '262', '<h1>MySQL 数据类型</h1> \n<p>MySQL中定义数据字段的类型对你数据库的优化是非常重要的。 </p>\n<p> MySQL支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。 </p> \n<hr /> \n<h2>数值类型</h2> \n<p>MySQL支持所有标准SQL数值数据类型。</p> \n<p>这些类型包括严格数值数据类型(INTEGER、SMALLINT、DECIMAL和NUMERIC)，以及近似数值数据类型(FLOAT、REAL和DOUBLE PRECISION)。</p> \n<p>关键字INT是INTEGER的同义词，关键字DEC是DECIMAL的同义词。</p> \n<p> BIT数据类型保存位字段值，并且支持MyISAM、MEMORY、InnoDB和BDB表。 </p> \n<p> 作为SQL标准的扩展，MySQL也支持整数类型TINYINT、MEDIUMINT和BIGINT。下面的表显示了需要的每个整数类型的存储和范围。 </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th width=\"10%\"> <strong>类型 </strong></th> \n   <th width=\"15%\"> <strong>大小 </strong></th> \n   <th width=\"30%\"> <strong>范围（有符号） </strong></th> \n   <th width=\"30%\"> <strong>范围（无符号） </strong></th> \n   <th width=\"15%\"> <strong>用途 </strong></th> \n  </tr> \n  <tr> \n   <td> TINYINT </td> \n   <td> 1 字节 </td> \n   <td> (-128，127) </td> \n   <td> (0，255) </td> \n   <td> 小整数值 </td> \n  </tr> \n  <tr> \n   <td> SMALLINT </td> \n   <td> 2 字节 </td> \n   <td> (-32 768，32 767) </td> \n   <td> (0，65 535) </td> \n   <td> 大整数值 </td> \n  </tr> \n  <tr> \n   <td> MEDIUMINT </td> \n   <td> 3 字节 </td> \n   <td> (-8 388 608，8 388 607) </td> \n   <td> (0，16 777 215) </td> \n   <td> 大整数值 </td> \n  </tr> \n  <tr> \n   <td> INT或INTEGER </td> \n   <td> 4 字节 </td> \n   <td> (-2 147 483 648，2 147 483 647) </td> \n   <td> (0，4 294 967 295) </td> \n   <td> 大整数值 </td> \n  </tr> \n  <tr> \n   <td> BIGINT </td> \n   <td> 8 字节 </td> \n   <td> (-9 233 372 036 854 775 808，9 223 372 036 854 775 807) </td> \n   <td> (0，18 446 744 073 709 551 615) </td> \n   <td> 极大整数值 </td> \n  </tr> \n  <tr> \n   <td> FLOAT </td> \n   <td> 4 字节 </td> \n   <td> (-3.402 823 466 E+38，1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38) </td> \n   <td> 0，(1.175 494 351 E-38，3.402 823 466 E+38) </td> \n   <td> 单精度<br />浮点数值 </td> \n  </tr> \n  <tr> \n   <td> DOUBLE </td> \n   <td> 8 字节 </td> \n   <td> (1.797 693 134 862 315 7 E+308，2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308) </td> \n   <td> 0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308) </td> \n   <td> 双精度<br />浮点数值 </td> \n  </tr> \n  <tr> \n   <td> DECIMAL </td> \n   <td> 对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2 </td> \n   <td> 依赖于M和D的值 </td> \n   <td> 依赖于M和D的值 </td> \n   <td> 小数值 </td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2>日期和时间类型</h2> \n<p> 表示时间值的日期和时间类型为DATETIME、DATE、TIMESTAMP、TIME和YEAR。</p> \n<p>每个时间类型有一个有效值范围和一个&quot;零&quot;值，当指定不合法的MySQL不能表示的值时使用&quot;零&quot;值。</p> \n<p>TIMESTAMP类型有专有的自动更新特性，将在后面描述。</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th width=\"10%\"> 类型 </th> \n   <th width=\"10%\"> 大小<br />(字节) </th> \n   <th width=\"40%\"> 范围 </th> \n   <th> 格式 </th> \n   <th> 用途 </th> \n  </tr> \n  <tr> \n   <td width=\"10%\"> DATE </td> \n   <td width=\"10%\"> 3 </td> \n   <td width=\"40%\"> 1000-01-01/9999-12-31 </td> \n   <td> YYYY-MM-DD </td> \n   <td> 日期值 </td> \n  </tr> \n  <tr> \n   <td width=\"10%\"> TIME </td> \n   <td width=\"10%\"> 3 </td> \n   <td width=\"40%\"> \'-838:59:59\'/\'838:59:59\' </td> \n   <td> HH:MM:SS </td> \n   <td> 时间值或持续时间 </td> \n  </tr> \n  <tr> \n   <td width=\"10%\"> YEAR </td> \n   <td width=\"10%\"> 1 </td> \n   <td width=\"40%\"> 1901/2155 </td> \n   <td> YYYY </td> \n   <td> 年份值 </td> \n  </tr> \n  <tr> \n   <td width=\"10%\"> DATETIME </td> \n   <td width=\"10%\"> 8 </td> \n   <td width=\"40%\"> 1000-01-01 00:00:00/9999-12-31 23:59:59 </td> \n   <td> YYYY-MM-DD HH:MM:SS </td> \n   <td> 混合日期和时间值 </td> \n  </tr> \n  <tr> \n   <td width=\"10%\"> TIMESTAMP </td> \n   <td width=\"10%\"> 8 </td> \n   <td width=\"40%\"> 1970-01-01 00:00:00/2037 年某时 </td> \n   <td> YYYYMMDD HHMMSS </td> \n   <td> 混合日期和时间值，时间戳 </td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2>字符串类型</h2> \n<p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。该节描述了这些类型如何工作以及如何在查询中使用这些类型。 </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th width=\"20%\"> 类型 </th> \n   <th width=\"25%\"> 大小 </th> \n   <th width=\"55%\"> 用途 </th> \n  </tr> \n  <tr> \n   <td> CHAR </td> \n   <td> 0-255字节 </td> \n   <td> 定长字符串 </td> \n  </tr> \n  <tr> \n   <td> VARCHAR </td> \n   <td> 0-65535 字节 </td> \n   <td> 变长字符串 </td> \n  </tr> \n  <tr> \n   <td> TINYBLOB </td> \n   <td> 0-255字节 </td> \n   <td> 不超过 255 个字符的二进制字符串 </td> \n  </tr> \n  <tr> \n   <td> TINYTEXT </td> \n   <td> 0-255字节 </td> \n   <td> 短文本字符串 </td> \n  </tr> \n  <tr> \n   <td> BLOB </td> \n   <td> 0-65 535字节 </td> \n   <td> 二进制形式的长文本数据 </td> \n  </tr> \n  <tr> \n   <td> TEXT </td> \n   <td> 0-65 535字节 </td> \n   <td> 长文本数据 </td> \n  </tr> \n  <tr> \n   <td> MEDIUMBLOB </td> \n   <td> 0-16 777 215字节 </td> \n   <td> 二进制形式的中等长度文本数据 </td> \n  </tr> \n  <tr> \n   <td> MEDIUMTEXT </td> \n   <td> 0-16 777 215字节 </td> \n   <td> 中等长度文本数据 </td> \n  </tr> \n  <tr> \n   <td> LONGBLOB </td> \n   <td> 0-4 294 967 295字节 </td> \n   <td> 二进制形式的极大文本数据 </td> \n  </tr> \n  <tr> \n   <td> LONGTEXT </td> \n   <td> 0-4 294 967 295字节 </td> \n   <td> 极大文本数据 </td> \n  </tr> \n </tbody> \n</table> \n<p>CHAR和VARCHAR类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</p> \n<p>BINARY和VARBINARY类类似于CHAR和VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</p> \n<p>BLOB是一个二进制大对象，可以容纳可变数量的数据。有4种BLOB类型：TINYBLOB、BLOB、MEDIUMBLOB和LONGBLOB。它们只是可容纳值的最大长度不同。 </p>\n<p> 有4种TEXT类型：TINYTEXT、TEXT、MEDIUMTEXT和LONGTEXT。这些对应4种BLOB类型，有相同的最大长度和存储需求。 </p>', null, 'MySQL 数据类型|数值类型|日期和时间类型|字符串类型|');
INSERT INTO `schoolcontent` VALUES ('260', '263', '<h1>MySQL 创建数据表</h1> \n<p> 创建MySQL数据表需要以下信息： </p> \n<ul> \n <li>表名</li> \n <li>表字段名</li> \n <li>定义每个表字段</li> \n</ul> \n<h3>语法</h3> \n<p>以下为创建MySQL数据表的SQL通用语法：</p> \n<pre>\r\nCREATE TABLE table_name (column_name column_type);\r\n</pre> \n<p> </p>\n<p>以下例子中我们将在 RUNOOB 数据库中创建数据表runoob_tbl：</p> \n<pre>\r\nrunoob_tbl(\r\n   runoob_id INT NOT NULL AUTO_INCREMENT,\r\n   runoob_title VARCHAR(100) NOT NULL,\r\n   runoob_author VARCHAR(40) NOT NULL,\r\n   submission_date DATE,\r\n   PRIMARY KEY ( runoob_id )\r\n);\r\n</pre> \n<p>实例解析：</p> \n<ul> \n <li>如果你不想字段为 <strong>NULL</strong> 可以设置字段的属性为 <strong>NOT NULL</strong>， 在操作数据库时如果输入该字段的数据为<strong>NULL</strong> ，就会报错。</li> \n <li> AUTO_INCREMENT定义列为自增的属性，一般用于主键，数值会自动加1。</li> \n <li> PRIMARY KEY关键字用于定义列为主键。 您可以使用多列来定义主键，列间以逗号分隔。 </li> \n</ul> \n<hr /> \n<h2>通过命令提示符创建表</h2> \n<p>通过 mysql&gt; 命令窗口可以很简单的创建MySQL数据表。你可以使用 SQL 语句 <strong>CREATE TABLE</strong> 来创建数据表。</p> \n<h3>实例</h3> \n<p>以下为创建数据表 runoob_tbl 实例: </p> \n<pre>\r\nroot@host# mysql -u root -p\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; CREATE TABLE runoob_tbl(\r\n   -&gt; runoob_id INT NOT NULL AUTO_INCREMENT,\r\n   -&gt; runoob_title VARCHAR(100) NOT NULL,\r\n   -&gt; runoob_author VARCHAR(40) NOT NULL,\r\n   -&gt; submission_date DATE,\r\n   -&gt; PRIMARY KEY ( runoob_id )\r\n   -&gt; );\r\nQuery OK, 0 rows affected (0.16 sec)\r\nmysql&gt;\r\n</pre> \n<p> <strong>注意：</strong>MySQL命令终止符为分号 (;) 。</p> \n<hr /> \n<h2>使用PHP脚本创建数据表</h2> \n<p>你可以使用PHP的 mysql_query() 函数来创建已存在数据库的数据表。 </p> \n<p> 该函数有两个参数，在执行成功时返回 TRUE，否则返回 FALSE。 </p> \n<h3>语法</h3> \n<pre>\r\nbool mysql_query( sql, connection );\r\n</pre> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>参数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>sql</td> \n   <td>必需。规定要发送的 SQL 查询。注释：查询字符串不应以分号结束。</td> \n  </tr> \n  <tr> \n   <td>connection</td> \n   <td>可选。规定 SQL 连接标识符。如果未规定，则使用上一个打开的连接。</td> \n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>以下实例使用了PHP脚本来创建数据表：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;创建 MySQL 数据表&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'连接失败: \' . mysql_error());\r\n}\r\necho \'连接成功&lt;br /&gt;\';\r\n$sql = &quot;CREATE TABLE runoob_tbl( &quot;.\r\n       &quot;runoob_id INT NOT NULL AUTO_INCREMENT, &quot;.\r\n       &quot;runoob_title VARCHAR(100) NOT NULL, &quot;.\r\n       &quot;runoob_author VARCHAR(40) NOT NULL, &quot;.\r\n       &quot;submission_date DATE, &quot;.\r\n       &quot;PRIMARY KEY ( runoob_id )); &quot;;\r\nmysql_select_db( \'RUNOOB\' );\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'数据表创建失败: \' . mysql_error());\r\n}\r\necho &quot;数据表创建成功\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre>', null, 'MySQL 创建数据表|通过命令提示符创建表|使用PHP脚本创建数据表|');
INSERT INTO `schoolcontent` VALUES ('261', '264', '<h1>MySQL 删除数据表</h1> \n<p> MySQL中删除数据表是非常容易操作的， 但是你再进行删除表操作时要非常小心，因为执行删除命令后所有数据都会消失。</p> \n<h3>语法</h3> \n<p>以下为删除MySQL数据表的通用语法：</p> \n<pre>\r\nDROP TABLE table_name ;\r\n</pre> \n<hr /> \n<h2>在命令提示窗口中删除数据表</h2> \n<p> 在mysql&gt;命令提示窗口中删除数据表SQL语句为<strong> DROP TABLE </strong>：</p> \n<h3>实例</h3> \n<p>以下实例删除了数据表runoob_tbl: </p> \n<pre>\r\nroot@host# mysql -u root -p\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; DROP TABLE runoob_tbl\r\nQuery OK, 0 rows affected (0.8 sec)\r\nmysql&gt;\r\n</pre> \n<hr /> \n<h2>使用PHP脚本删除数据表</h2>\n<p> PHP使用 mysql_query 函数来删除 MySQL 数据表。 </p>\n<p> 该函数有两个参数，在执行成功时返回 TRUE，否则返回 FALSE。</p> h3&gt; 语法 \n<pre>\r\nbool mysql_query( sql, connection );\r\n</pre> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>参数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>sql</td> \n   <td>必需。规定要发送的 SQL 查询。注释：查询字符串不应以分号结束。</td> \n  </tr> \n  <tr> \n   <td>connection</td> \n   <td>可选。规定 SQL 连接标识符。如果未规定，则使用上一个打开的连接。</td> \n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>以下实例使用了PHP脚本删除数据表runoob_tbl: </p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;创建 MySQL 数据表&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'连接失败: \' . mysql_error());\r\n}\r\necho \'连接成功&lt;br /&gt;\';\r\n$sql = &quot;DROP TABLE runoob_tbl&quot;;\r\nmysql_select_db( \'RUNOOB\' );\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'数据表删除失败: \' . mysql_error());\r\n}\r\necho &quot;数据表删除成功\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre>', null, 'MySQL 删除数据表|在命令提示窗口中删除数据表|使用PHP脚本删除数据表|');
INSERT INTO `schoolcontent` VALUES ('262', '265', '<h1>MySQL 插入数据</h1>\n<p> MySQL 表中使用<strong> INSERT INTO </strong>SQL语句来插入数据。</p> \n<p> 你可以通过 mysql&gt; 命令提示窗口中向数据表中插入数据，或者通过PHP脚本来插入数据。 </p> \n<h3>语法</h3> \n<p>以下为向MySQL数据表插入数据通用的<strong> INSERT INTO </strong> SQL语法：</p> \n<pre>\r\nINSERT INTO table_name ( field1, field2,...fieldN )\r\n                       VALUES\r\n                       ( value1, value2,...valueN );\r\n</pre> \n<p>如果数据是字符型，必须使用单引号或者双引号，如：&quot;value&quot;。</p> \n<hr /> \n<h2>通过命令提示窗口插入数据</h2> \n<p> 以下我们将使用 SQL <strong> INSERT INTO </strong>语句向 MySQL 数据表 runoob_tbl 插入数据 </p> \n<h3>实例</h3> \n<p>以下实例中我们将想 runoob_tbl 表插入三条数据: </p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; INSERT INTO runoob_tbl \r\n     -&gt;(runoob_title, runoob_author, submission_date)\r\n     -&gt;VALUES\r\n     -&gt;(&quot;Learn PHP&quot;, &quot;John Poul&quot;, NOW());\r\nQuery OK, 1 row affected (0.01 sec)\r\nmysql&gt; INSERT INTO runoob_tbl\r\n     -&gt;(runoob_title, runoob_author, submission_date)\r\n     -&gt;VALUES\r\n     -&gt;(&quot;Learn MySQL&quot;, &quot;Abdul S&quot;, NOW());\r\nQuery OK, 1 row affected (0.01 sec)\r\nmysql&gt; INSERT INTO runoob_tbl\r\n     -&gt;(runoob_title, runoob_author, submission_date)\r\n     -&gt;VALUES\r\n     -&gt;(&quot;JAVA Tutorial&quot;, &quot;Sanjay&quot;, \'2007-05-06\');\r\nQuery OK, 1 row affected (0.01 sec)\r\nmysql&gt;\r\n</pre> \n<p> <strong>注意：</strong> 使用箭头标记(-&gt;)不是SQL语句的一部分，它仅仅表示一个新行，如果一条SQL语句太长，我们可以通过回车键来创建一个新行来编写SQL语句，SQL语句的命令结束符为分号（;）。 </p> \n<p> 在以上实例中，我们并没有提供 runoob_id 的数据，因为该字段我们在创建表的时候已经设置它为 AUTO_INCREMENT(自动增加) 属性。 所以，该字段会自动递增而不需要我们去设置。实例中 NOW() 是一个 MySQL 函数，该函数返回日期和时间。 </p> \n<hr /> \n<h2>使用PHP脚本插入数据</h2> \n<p> 你可以使用PHP 的 mysql_query() 函数来执行 <strong>SQL INSERT INTO</strong>命令来插入数据。</p> \n<p> 该函数有两个参数，在执行成功时返回 TRUE，否则返回 FALSE。</p> \n<h3> 语法</h3> \n<pre>\r\nbool mysql_query( sql, connection );\r\n</pre> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>参数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>sql</td> \n   <td>必需。规定要发送的 SQL 查询。注释：查询字符串不应以分号结束。</td> \n  </tr> \n  <tr> \n   <td>connection</td> \n   <td>可选。规定 SQL 连接标识符。如果未规定，则使用上一个打开的连接。</td> \n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>以下实例中程序接收用户输入的三个字段数据，并插入数据表中：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;向 MySQL 数据库添加数据&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\nif(isset($_POST[\'add\']))\r\n{\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n\r\nif(! get_magic_quotes_gpc() )\r\n{\r\n   $runoob_title = addslashes ($_POST[\'runoob_title\']);\r\n   $runoob_author = addslashes ($_POST[\'runoob_author\']);\r\n}\r\nelse\r\n{\r\n   $runoob_title = $_POST[\'runoob_title\'];\r\n   $runoob_author = $_POST[\'runoob_author\'];\r\n}\r\n$submission_date = $_POST[\'submission_date\'];\r\n\r\n$sql = &quot;INSERT INTO runoob_tbl &quot;.\r\n       &quot;(runoob_title,runoob_author, submission_date) &quot;.\r\n       &quot;VALUES &quot;.\r\n       &quot;(\'$runoob_title\',\'$runoob_author\',\'$submission_date\')&quot;;\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not enter data: \' . mysql_error());\r\n}\r\necho &quot;Entered data successfully\\n&quot;;\r\nmysql_close($conn);\r\n}\r\nelse\r\n{\r\n?&gt;\r\n&lt;form method=&quot;post&quot; action=&quot;&lt;?php $_PHP_SELF ?&gt;&quot;&gt;\r\n&lt;table width=&quot;600&quot; border=&quot;0&quot; cellspacing=&quot;1&quot; cellpadding=&quot;2&quot;&gt;\r\n&lt;tr&gt;\r\n&lt;td width=&quot;250&quot;&gt;Tutorial Title&lt;/td&gt;\r\n&lt;td&gt;\r\n&lt;input name=&quot;runoob_title&quot; type=&quot;text&quot; id=&quot;runoob_title&quot;&gt;\r\n&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td width=&quot;250&quot;&gt;Tutorial Author&lt;/td&gt;\r\n&lt;td&gt;\r\n&lt;input name=&quot;runoob_author&quot; type=&quot;text&quot; id=&quot;runoob_author&quot;&gt;\r\n&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td width=&quot;250&quot;&gt;Submission Date [ yyyy-mm-dd ]&lt;/td&gt;\r\n&lt;td&gt;\r\n&lt;input name=&quot;submission_date&quot; type=&quot;text&quot; id=&quot;submission_date&quot;&gt;\r\n&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td width=&quot;250&quot;&gt; &lt;/td&gt;\r\n&lt;td&gt; &lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;tr&gt;\r\n&lt;td width=&quot;250&quot;&gt; &lt;/td&gt;\r\n&lt;td&gt;\r\n&lt;input name=&quot;add&quot; type=&quot;submit&quot; id=&quot;add&quot; value=&quot;Add Tutorial&quot;&gt;\r\n&lt;/td&gt;\r\n&lt;/tr&gt;\r\n&lt;/table&gt;\r\n&lt;/form&gt;\r\n&lt;?php\r\n}\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n</pre> \n<p> 在我们接收用户提交的数据时，为了数据的安全性我们需要使用 get_magic_quotes_gpc() 函数来判断特殊字符的转义是否已经开启。如果这个选项为off（未开启），返回0，那么我们就必须调用addslashes 这个函数来为字符串增加转义。</p> 义。 \n<p>你也可以添加其他检查数据的方法，比如邮箱格式验证，电话号码验证，是否为整数验证等。</p>', null, 'MySQL 插入数据|通过命令提示窗口插入数据|使用PHP脚本插入数据|');
INSERT INTO `schoolcontent` VALUES ('263', '266', '<h1>MySQL 查询数据</h1> \n<p>MySQL 数据库使用SQL SELECT语句来查询数据。</p> \n<p> 你可以通过 mysql&gt; 命令提示窗口中在数据库中查询数据，或者通过PHP脚本来查询数据。 </p> \n<h3>语法</h3> \n<p> 以下为在MySQL数据库中查询数据通用的 SELECT 语法： </p> \n<pre>\r\nSELECT column_name,column_name\r\nFROM table_name\r\n[WHERE Clause]\r\n[OFFSET M ][LIMIT N]\r\n</pre> \n<ul> \n <li>查询语句中你可以使用一个或者多个表，表之间使用逗号(,)分割，并使用WHERE语句来设定查询条件。</li> \n <li>SELECT 命令可以读取一条或者多条记录。</li> \n <li>你可以使用星号（*）来代替其他字段，SELECT语句会返回表的所有字段数据</li> \n <li>你可以使用 WHERE 语句来包含任何条件。</li> \n <li>你可以通过OFFSET指定SELECT语句开始查询的数据偏移量。默认情况下偏移量为0。</li> \n <li>你可以使用 LIMIT 属性来设定返回的记录数。</li> \n</ul> \n<hr /> \n<h2>通过命令提示符获取数据</h2> \n<p>以下实例我们将通过 SQL SELECT 命令来获取 MySQL 数据表 runoob_tbl 的数据： </p> \n<h3>实例</h3> \n<p>以下实例将返回数据表runoob_tbl的所有记录:</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SELECT * from runoob_tbl \r\n+-------------+----------------+-----------------+-----------------+\r\n| runoob_id | runoob_title | runoob_author | submission_date |\r\n+-------------+----------------+-----------------+-----------------+\r\n|           1 | Learn PHP      | John Poul       | 2007-05-21      |\r\n|           2 | Learn MySQL    | Abdul S         | 2007-05-21      |\r\n|           3 | JAVA Tutorial  | Sanjay          | 2007-05-21      |\r\n+-------------+----------------+-----------------+-----------------+\r\n3 rows in set (0.01 sec)\r\n\r\nmysql&gt;\r\n</pre> \n<hr /> \n<h2>使用PHP脚本来获取数据</h2> \n<p> 使用PHP函数的mysql_query()及SQL SELECT命令来获取数据。</p>\n<p> 该函数用于执行SQL命令，然后通过 PHP 函数 mysql_fetch_array() 来使用或输出所有查询的数据。</p> \n<p> mysql_fetch_array() 函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有 返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false。 </p>\n<p> 以下实例为从数据表 runoob_tbl 中读取所有记录。</p> \n<h3>实例</h3> \n<p>尝试以下实例来显示数据表 runoob_tbl 的所有记录。 </p>\n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'SELECT runoob_id, runoob_title, \r\n               runoob_author, submission_date\r\n        FROM runoob_tbl\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_array($retval, MYSQL_ASSOC))\r\n{\r\n    echo &quot;Tutorial ID :{$row[\'runoob_id\']}  &lt;br&gt; &quot;.\r\n         &quot;Title: {$row[\'runoob_title\']} &lt;br&gt; &quot;.\r\n         &quot;Author: {$row[\'runoob_author\']} &lt;br&gt; &quot;.\r\n         &quot;Submission Date : {$row[\'submission_date\']} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n} \r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre> \n<p>以上实例中，读取的每行记录赋值给变量$row，然后再打印出每个值。</p> \n<p><strong>注意：</strong>记住如果你需要在字符串中使用变量，请将变量置于花括号。</p> \n<p> 在上面的例子中，PHP mysql_fetch_array()函数第二个参数为MYSQL_ASSOC， 设置该参数查询结果返回关联数组，你可以使用字段名称来作为数组的索引。</p> \n<p> PHP提供了另外一个函数mysql_fetch_assoc(), 该函数从结果集中取得一行作为关联数组。 返回根据从结果集取得的行生成的关联数组，如果没有更多行，则返回 false。 </p> \n<h3>实例</h3> \n<p> 尝试以下实例，该实例使用了mysql_fetch_assoc()函数来输出数据表runoob_tbl的所有记录：</p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'SELECT runoob_id, runoob_title, \r\n               runoob_author, submission_date\r\n        FROM runoob_tbl\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_assoc($retval))\r\n{\r\n    echo &quot;Tutorial ID :{$row[\'runoob_id\']}  &lt;br&gt; &quot;.\r\n         &quot;Title: {$row[\'runoob_title\']} &lt;br&gt; &quot;.\r\n         &quot;Author: {$row[\'runoob_author\']} &lt;br&gt; &quot;.\r\n         &quot;Submission Date : {$row[\'submission_date\']} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n} \r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre> \n<p> 你也可以使用常量 MYSQL_NUM 作为PHP mysql_fetch_array()函数的第二个参数，返回数字数组。 </p> \n<h3>实例</h3> \n<p>以下实例使用MYSQL_NUM参数显示数据表runoob_tbl的所有记录: </p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'SELECT runoob_id, runoob_title, \r\n               runoob_author, submission_date\r\n        FROM runoob_tbl\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_array($retval, MYSQL_NUM))\r\n{\r\n    echo &quot;Tutorial ID :{$row[0]}  &lt;br&gt; &quot;.\r\n         &quot;Title: {$row[1]} &lt;br&gt; &quot;.\r\n         &quot;Author: {$row[2]} &lt;br&gt; &quot;.\r\n         &quot;Submission Date : {$row[3]} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n}\r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre> \n<p>以上三个实例输出结果都一样。</p> \n<hr /> \n<h2> 内存释放</h2> \n<p>在我们执行完SELECT语句后，释放游标内存是一个很好的习惯。 。可以通过PHP函数mysql_free_result()来实现内存的释放。 </p> \n<p> 以下实例演示了该函数的使用方法。 </p> \n<h3>实例</h3> \n<p>尝试以下实例:</p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'SELECT runoob_id, runoob_title, \r\n               runoob_author, submission_date\r\n        FROM runoob_tbl\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_array($retval, MYSQL_NUM))\r\n{\r\n    echo &quot;Tutorial ID :{$row[0]}  &lt;br&gt; &quot;.\r\n         &quot;Title: {$row[1]} &lt;br&gt; &quot;.\r\n         &quot;Author: {$row[2]} &lt;br&gt; &quot;.\r\n         &quot;Submission Date : {$row[3]} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n}\r\nmysql_free_result($retval);\r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre>', null, 'MySQL 查询数据|通过命令提示符获取数据|使用PHP脚本来获取数据|内存释放|');
INSERT INTO `schoolcontent` VALUES ('264', '267', '<h1>MySQL where 子句</h1> \n<p> 我们知道从MySQL表中使用SQL SELECT 语句来读取数据。</p>\n<p> 如需有条件地从表中选取数据，可将 WHERE 子句添加到 SELECT 语句中。</p> \n<h3> 语法</h3> \n<p> 以下是SQL SELECT 语句使用 WHERE 子句从数据表中读取数据的通用语法：</p> \n<pre>\r\nSELECT field1, field2,...fieldN FROM table_name1, table_name2...\r\n[WHERE condition1 [AND [OR]] condition2.....\r\n</pre>\n<ul>\n <li> 查询语句中你可以使用一个或者多个表，表之间使用逗号(,)分割，并使用WHERE语句来设定查询条件。</li>\n <li> 你可以在WHERE子句中指定任何条件。</li>\n <li> 你可以使用AND或者OR指定一个或多个条件。</li>\n <li> WHERE子句也可以运用于SQL的 DELETE 或者 UPDATE 命令。</li>\n <li> WHERE 子句类似于程序语言中的if条件，根据 MySQL 表中的字段值来读取指定的数据。</li>\n</ul> \n<p>以下为操作符列表，可用于 WHERE 子句中。 </p> \n<p> 下表中实例假定 A为10 B为20 </p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:10%\">操作符</th>\n   <th style=\"width:45%\">描述</th>\n   <th>实例</th> \n  </tr> \n  <tr> \n   <td>=</td>\n   <td> 等号，检测两个值是否相等，如果相等返回true</td>\n   <td> (A = B) 返回false。 </td> \n  </tr> \n  <tr> \n   <td>&lt;&gt;, != </td>\n   <td> 不等于，检测两个值是否相等，如果不相等返回true</td>\n   <td> (A != B) 返回 true。 </td> \n  </tr> \n  <tr> \n   <td>&gt;</td>\n   <td> 大于号，检测左边的值是否大于右边的值, 如果左边的值大于右边的值返回true</td>\n   <td> (A &gt; B) 返回false。 </td> \n  </tr> \n  <tr> \n   <td>&lt;</td>\n   <td> 小于号，检测左边的值是否小于右边的值, 如果左边的值小于右边的值返回true</td>\n   <td> (A &lt; B) 返回 true。 </td> \n  </tr> \n  <tr> \n   <td>&gt;=</td>\n   <td> 大于等于号，检测左边的值是否大于或等于右边的值, 如果左边的值大于或等于右边的值返回true</td>\n   <td> (A &gt;= B) 返回false。</td> \n  </tr> \n  <tr> \n   <td>&lt;=</td>\n   <td> 小于等于号，检测左边的值是否小于于或等于右边的值, 如果左边的值小于或等于右边的值返回true</td>\n   <td> (A &lt;= B) 返回 true。 </td> \n  </tr> \n </tbody>\n</table> \n<p>如果我们想再MySQL数据表中读取指定的数据，WHERE 子句是非常有用的。</p> \n<p>使用主键来作为 WHERE 子句的条件查询是非常快速的。</p> \n<p>如果给定的条件在表中没有任何匹配的记录，那么查询不会返回任何数据。</p> \n<hr /> \n<h2>从命令提示符中读取数据</h2> \n<p>我们将在SQL SELECT语句使用WHERE子句来读取MySQL数据表 runoob_tbl 中的数据：</p> \n<p>实例</p> \n<p>以下实例将读取 runoob_tbl 表中 runoob_author 字段值为 Sanjay 的所有记录：</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SELECT * from runoob_tbl WHERE runoob_author=\'Sanjay\';\r\n+-------------+----------------+-----------------+-----------------+\r\n| runoob_id | runoob_title | runoob_author | submission_date |\r\n+-------------+----------------+-----------------+-----------------+\r\n|           3 | JAVA Tutorial  | Sanjay          | 2007-05-21      |\r\n+-------------+----------------+-----------------+-----------------+\r\n1 rows in set (0.01 sec)\r\n\r\nmysql&gt;\r\n</pre> \n<p>除非你使用 LIKE 来比较字符串，否则MySQL的WHERE子句的字符串比较是不区分大小写的。 你可以使用 BINARY 关键字来设定WHERE子句的字符串比较是区分大小写的。</p> \n<p>如下实例</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SELECT * from runoob_tbl \\\r\n          WHERE BINARY runoob_author=\'sanjay\';\r\nEmpty set (0.02 sec)\r\n\r\nmysql&gt;\r\n</pre> \n<hr /> \n<h2>使用PHP脚本读取数据</h2> \n<p>你可以使用PHP函数的mysql_query()及相同的SQL SELECT 带上 WHERE 子句的命令来获取数据。 </p>\n<p> 该函数用于执行SQL命令，然后通过 PHP 函数 mysql_fetch_array() 来输出所有查询的数据。 </p> \n<h3>实例</h3> \n<p>以下实例将从 runoob_tbl 表中返回使用 runoob_author 字段值为 Sanjay 的记录： </p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'SELECT runoob_id, runoob_title, \r\n               runoob_author, submission_date\r\n        FROM runoob_tbl\r\n        WHERE runoob_author=&quot;Sanjay&quot;\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_array($retval, MYSQL_ASSOC))\r\n{\r\n    echo &quot;Tutorial ID :{$row[\'runoob_id\']}  &lt;br&gt; &quot;.\r\n         &quot;Title: {$row[\'runoob_title\']} &lt;br&gt; &quot;.\r\n         &quot;Author: {$row[\'runoob_author\']} &lt;br&gt; &quot;.\r\n         &quot;Submission Date : {$row[\'submission_date\']} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n} \r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre>', null, 'MySQL where 子句|从命令提示符中读取数据|使用PHP脚本读取数据|');
INSERT INTO `schoolcontent` VALUES ('265', '268', '<h1>MySQL UPDATE 查询 </h1> \n<p> 如果我们需要修改或更新MySQL中的数据，我们可以使用 SQL UPDATE 命令来操作。. </p> \n<h3> 语法</h3> \n<p> 以下是 UPDATE 命令修改 MySQL 数据表数据的通用SQL语法：</p> \n<pre>\r\nUPDATE table_name SET field1=new-value1, field2=new-value2\r\n[WHERE Clause]\r\n</pre> \n<ul> \n <li> 你可以同时更新一个或多个字段。</li>\n <li> 你可以在 WHERE 子句中指定任何条件。</li>\n <li> 你可以在一个单独表中同时更新数据。</li>\n</ul> \n<p> 当你需要更新数据表中指定行的数据时 WHERE 子句是非常有用的。 </p> \n<hr />通过命令提示符更新数据 \n<p>以下我们将在 SQL UPDATE 命令使用 WHERE子句来更新runoob_tbl表中指定的数据：</p> \n<h3>实例</h3> \n<p>以下实例将更新数据表中 runoob_id 为 3 的 runoob_title 字段值：</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; UPDATE runoob_tbl \r\n    -&gt; SET runoob_title=\'Learning JAVA\' \r\n    -&gt; WHERE runoob_id=3;\r\nQuery OK, 1 row affected (0.04 sec)\r\nRows matched: 1  Changed: 1  Warnings: 0\r\n\r\nmysql&gt;\r\n</pre> \n<hr /> \n<h2>使用PHP脚本更新数据</h2> \n<p> PHP中使用函数mysql_query()来执行SQL语句，你可以在SQL UPDATE语句中使用或者不适用WHERE子句。 </p> \n<p> 该函数与在mysql&gt;命令提示符中执行SQL语句的效果是一样的。 </p> \n<h3>实例</h3> \n<p> 以下实例将更新 runoob_id 为3的 runoob_title 字段的数据。 </p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'UPDATE runoob_tbl\r\n        SET runoob_title=&quot;Learning JAVA&quot;\r\n        WHERE runoob_id=3\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not update data: \' . mysql_error());\r\n}\r\necho &quot;Updated data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre>', null, 'MySQL UPDATE 查询|使用PHP脚本更新数据|');
INSERT INTO `schoolcontent` VALUES ('266', '269', '<h1> MySQL DELETE 语句 </h1> \n<p> 你可以使用 SQL 的 DELETE FROM 命令来删除 MySQL 数据表中的记录。 </p>\n<p> 你可以在mysql&gt;命令提示符或PHP脚本中执行该命令。 </p> \n<h3>语法</h3>\n<p> 以下是SQL DELETE 语句从MySQL数据表中删除数据的通用语法：</p> \n<pre>\r\nDELETE FROM table_name [WHERE Clause]\r\n</pre> \n<ul> \n <li> 如果没有指定 WHERE 子句，MySQL表中的所有记录将被删除。</li>\n <li> 你可以在 WHERE 子句中指定任何条件</li>\n <li> 您可以在单个表中一次性删除记录。</li>\n</ul> \n<p> 当你想删除数据表中指定的记录时 WHERE 子句是非常有用的。 </p> \n<hr /> \n<h2>从命令行中删除数据</h2> \n<p>这里我们将在 SQL DELETE 命令中使用 WHERE 子句来删除MySQL数据表runoob_tbl所选的数据。</p> \n<h3>实例</h3> \n<p>以下实例将删除 runoob_tbl 表中 runoob_id 为3 的记录：</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; DELETE FROM runoob_tbl WHERE runoob_id=3;\r\nQuery OK, 1 row affected (0.23 sec)\r\n\r\nmysql&gt;\r\n</pre> \n<hr />\n<h2>使用 PHP 脚本删除数据</h2> \n<p>PHP使用 mysql_query() 函数来执行SQL语句， 你可以在SQL DELETE命令中使用或不使用 WHERE 子句。</p> \n<p>该函数与 mysql&gt;命令符执行SQL命令的效果是一样的。</p> \n<h3>实例</h3> \n<p>以下PHP实例将删除runoob_tbl表中runoob_id为3的记录:</p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'DELETE FROM runoob_tbl\r\n        WHERE runoob_id=3\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not delete data: \' . mysql_error());\r\n}\r\necho &quot;Deleted data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre>', null, 'MySQL DELETE 语句|从命令行中删除数据|使用 PHP 脚本删除数据|');
INSERT INTO `schoolcontent` VALUES ('267', '270', '<h1>MySQL LIKE 子句</h1> \n<p> 我们知道在MySQL中使用 SQL SELECT 命令来读取数据， 同时我们可以在 SELECT 语句中使用 WHERE 子句来获取指定的记录。</p> \n<p> WHERE 子句中可以使用等号 (=) 来设定获取数据的条件，如 &quot;runoob_author = \'Sanjay\'&quot;。</p> \n<p> 但是有时候我们需要获取 runoob_author 字段含有 &quot;jay&quot; 字符的所有记录，这时我们就需要在 WHERE 子句中使用 SQL LIKE 子句。 </p> \n<p> SQL LIKE 子句中使用百分号(%)字符来表示任意字符，类似于UNIX或正则表达式中的星号 (*)。</p> \n<p> 如果没有使用百分号(%), LIKE 子句与等号（=）的效果是一样的。 </p> \n<h3>语法</h3> \n<p>以下是SQL SELECT 语句使用 LIKE 子句从数据表中读取数据的通用语法：</p> \n<pre>\r\nSELECT field1, field2,...fieldN table_name1, table_name2...\r\nWHERE field1 LIKE condition1 [AND [OR]] filed2 = \'somevalue\'\r\n</pre> \n<ul> \n <li> 你可以在WHERE子句中指定任何条件。</li>\n <li> 你可以在WHERE子句中使用LIKE子句。</li>\n <li> 你可以使用LIKE子句代替等号(=)。</li>\n <li> LIKE 通常与 % 一同使用，类似于一个元字符的搜索。</li>\n <li> 你可以使用AND或者OR指定一个或多个条件。</li>\n <li> 你可以在 DELETE 或 UPDATE 命令中使用 WHERE...LIKE 子句来指定条件。</li>\n</ul> \n<hr /> \n<h2>在命令提示符中使用 LIKE 子句</h2> \n<p>以下我们将在 SQL SELECT 命令中使用 WHERE...LIKE 子句来从MySQL数据表 runoob_tbl 中读取数据。</p> \n<h3>实例</h3> \n<p>以下是我们将runoob_tbl表中获取runoob_author字段中以&quot;jay&quot;为结尾的的所有记录：</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SELECT * from runoob_tbl \r\n    -&gt; WHERE runoob_author LIKE \'%jay\';\r\n+-------------+----------------+-----------------+-----------------+\r\n| runoob_id | runoob_title | runoob_author | submission_date |\r\n+-------------+----------------+-----------------+-----------------+\r\n|           3 | JAVA Tutorial  | Sanjay          | 2007-05-21      |\r\n+-------------+----------------+-----------------+-----------------+\r\n1 rows in set (0.01 sec)\r\n\r\nmysql&gt;\r\n</pre> \n<hr /> \n<h2>在PHP脚本中使用 LIKE 子句</h2> \n<p>你可以使用PHP函数的mysql_query()及相同的SQL SELECT 带上 WHERE...LIKE 子句的命令来获取数据。 </p> \n<p> 该函数用于执行SQL命令，然后通过 PHP 函数 mysql_fetch_array() 来输出所有查询的数据。 </p> \n<p> 但是如果是DELETE或者UPDATE中使用 WHERE...LIKE 子句的SQL语句，则无需使用mysql_fetch_array() 函数。 </p> \n<h3>实例</h3> \n<p> 以下是我们使用PHP脚本在runoob_tbl表中读取runoob_author字段中以&quot;jay&quot;为结尾的的所有记录：</p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'SELECT runoob_id, runoob_title, \r\n               runoob_author, submission_date\r\n        FROM runoob_tbl\r\n        WHERE runoob_author LIKE &quot;%jay%&quot;\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_array($retval, MYSQL_ASSOC))\r\n{\r\n    echo &quot;Tutorial ID :{$row[\'runoob_id\']}  &lt;br&gt; &quot;.\r\n         &quot;Title: {$row[\'runoob_title\']} &lt;br&gt; &quot;.\r\n         &quot;Author: {$row[\'runoob_author\']} &lt;br&gt; &quot;.\r\n         &quot;Submission Date : {$row[\'submission_date\']} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n} \r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre>', null, 'MySQL LIKE 子句|在命令提示符中使用 LIKE 子句|在PHP脚本中使用 LIKE 子句|');
INSERT INTO `schoolcontent` VALUES ('268', '271', '<h1>MySQL 排序</h1> \n<p> 我们知道从 MySQL 表中使用 SQL SELECT 语句来读取数据。</p> \n<p> 如果我们需要对读取的数据进行排序，我们就可以使用 MySQL 的 <strong>ORDER BY</strong> 子句来设定你想按哪个字段哪中方式来进行排序，再返回搜索结果。 </p> \n<p>本章节使用的数据库结构及数据下载：<a href=\"http://static.runoob.com/download/RUNOOB.sql\">RUNOOB.sql</a>。</p> \n<h3>语法</h3> \n<p> 以下是 SQL SELECT 语句使用 ORDER BY 子句将查询数据排序后再返回数据： </p> \n<pre>\r\nSELECT field1, field2,...fieldN table_name1, table_name2...\r\nORDER BY field1, [field2...] [ASC [DESC]]\r\n</pre> \n<ul> \n <li>你可以使用任何字段来作为排序的条件，从而返回排序后的查询结果。</li> \n <li>你可以设定多个字段来排序。</li> \n <li>你可以使用 ASC 或 DESC 关键字来设置查询结果是按升序或降序排列。 默认情况下，它是按升序排列。</li> \n <li>你可以添加 WHERE...LIKE 子句来设置条件。</li> \n</ul> \n<hr /> \n<h2>在命令提示符中使用 ORDER BY 子句</h2> \n<p>以下将在 SQL SELECT 语句中使用 ORDER BY 子句来读取MySQL 数据表 runoob_tbl 中的数据：</p> \n<h3>实例</h3> \n<p> 尝试以下实例，结果将按升序排列</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SELECT * from runoob_tbl ORDER BY runoob_author ASC;\r\n+-----------+---------------+---------------+-----------------+\r\n| runoob_id | runoob_title  | runoob_author | submission_date |\r\n+-----------+---------------+---------------+-----------------+\r\n|         2 | Learn MySQL   | Abdul S       | 2007-05-24      |\r\n|         1 | Learn PHP     | John Poul     | 2007-05-24      |\r\n|         3 | JAVA Tutorial | Sanjay        | 2007-05-06      |\r\n+-----------+---------------+---------------+-----------------+\r\n3 rows in set (0.00 sec)\r\n\r\nmysql&gt; SELECT * from runoob_tbl ORDER BY runoob_author DESC;\r\n+-----------+---------------+---------------+-----------------+\r\n| runoob_id | runoob_title  | runoob_author | submission_date |\r\n+-----------+---------------+---------------+-----------------+\r\n|         3 | JAVA Tutorial | Sanjay        | 2007-05-06      |\r\n|         1 | Learn PHP     | John Poul     | 2007-05-24      |\r\n|         2 | Learn MySQL   | Abdul S       | 2007-05-24      |\r\n+-----------+---------------+---------------+-----------------+\r\n3 rows in set (0.00 sec)\r\n\r\nmysql&gt; \r\n</pre> \n<p>读取 runoob_tbl 表中所有数据并按 runoob_author 字段的升序排列。</p> \n<hr /> \n<h2>在PHP脚本中使用 ORDER BY 子句</h2> 你可以使用PHP函数的mysql_query()及相同的SQL SELECT 带上 ORDER BY 子句的命令来获取数据。 该函数用于执行SQL命令，然后通过 PHP 函数 mysql_fetch_array() 来输出所有查询的数据。 \n<h3>实例</h3> \n<p>尝试以下实例，查询后的数据按 runoob_author 字段的降序排列后返回。</p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'SELECT runoob_id, runoob_title, \r\n               runoob_author, submission_date\r\n        FROM runoob_tbl\r\n        ORDER BY  runoob_author DESC\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_array($retval, MYSQL_ASSOC))\r\n{\r\n    echo &quot;Tutorial ID :{$row[\'runoob_id\']}  &lt;br&gt; &quot;.\r\n         &quot;Title: {$row[\'runoob_title\']} &lt;br&gt; &quot;.\r\n         &quot;Author: {$row[\'runoob_author\']} &lt;br&gt; &quot;.\r\n         &quot;Submission Date : {$row[\'submission_date\']} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n} \r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre>', null, 'MySQL 排序|在命令提示符中使用 ORDER BY 子句|在PHP脚本中使用 ORDER BY 子句|');
INSERT INTO `schoolcontent` VALUES ('269', '272', '<h1>MySQL GROUP BY 语句 </h1> \n<p>GROUP BY 语句根据一个或多个列对结果集进行分组。</p> \n<p>在分组的列上我们可以使用 COUNT, SUM, AVG,等函数。 </p>\n<h3>GROUP BY 语法</h3> \n<pre>\r\nSELECT column_name, function(column_name)\r\nFROM table_name\r\nWHERE column_name operator value\r\nGROUP BY column_name;</pre> \n<hr /> \n<h2>实例演示</h2> \n<p>本章节实例使用到了以下表结构及数据，使用前我们可以先将以下数据导入数据库中。</p> \n<pre>\r\nSET NAMES utf8;\r\nSET FOREIGN_KEY_CHECKS = 0;\r\n\r\n-- ----------------------------\r\n--  Table structure for `employee_tbl`\r\n-- ----------------------------\r\nDROP TABLE IF EXISTS `employee_tbl`;\r\nCREATE TABLE `employee_tbl` (\r\n  `id` int(11) NOT NULL,\r\n  `name` char(10) NOT NULL DEFAULT \'\',\r\n  `date` datetime NOT NULL,\r\n  `singin` tinyint(4) NOT NULL DEFAULT \'0\' COMMENT \'登录次数\',\r\n  PRIMARY KEY (`id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r\n\r\n-- ----------------------------\r\n--  Records of `employee_tbl`\r\n-- ----------------------------\r\nBEGIN;\r\nINSERT INTO `employee_tbl` VALUES (\'1\', \'小明\', \'2016-04-22 15:25:33\', \'1\'), (\'2\', \'小王\', \'2016-04-20 15:25:47\', \'3\'), (\'3\', \'小丽\', \'2016-04-19 15:26:02\', \'2\'), (\'4\', \'小王\', \'2016-04-07 15:26:14\', \'4\'), (\'5\', \'小明\', \'2016-04-11 15:26:40\', \'4\'), (\'6\', \'小明\', \'2016-04-04 15:26:54\', \'2\');\r\nCOMMIT;\r\n\r\nSET FOREIGN_KEY_CHECKS = 1;\r\n</pre> \n<p>导入成功后，执行以下 SQL 语句：</p> \n<pre>\r\nmysql&gt; set names utf8;\r\nmysql&gt; SELECT * FROM employee_tbl;\r\n+----+--------+---------------------+--------+\r\n| id | name   | date                | singin |\r\n+----+--------+---------------------+--------+\r\n|  1 | 小明 | 2016-04-22 15:25:33 |      1 |\r\n|  2 | 小王 | 2016-04-20 15:25:47 |      3 |\r\n|  3 | 小丽 | 2016-04-19 15:26:02 |      2 |\r\n|  4 | 小王 | 2016-04-07 15:26:14 |      4 |\r\n|  5 | 小明 | 2016-04-11 15:26:40 |      4 |\r\n|  6 | 小明 | 2016-04-04 15:26:54 |      2 |\r\n+----+--------+---------------------+--------+\r\n6 rows in set (0.00 sec)\r\n</pre> \n<p>接下来我们使用 GROUP BY 语句 将数据表按名字进行分组，并统计每个人有多少条记录：</p> \n<pre>\r\nmysql&gt; SELECT name, COUNT(*) FROM   employee_tbl GROUP BY name;\r\n+--------+----------+\r\n| name   | COUNT(*) |\r\n+--------+----------+\r\n| 小丽 |        1 |\r\n| 小明 |        3 |\r\n| 小王 |        2 |\r\n+--------+----------+\r\n3 rows in set (0.01 sec)\r\n</pre> \n<h3>使用 WITH ROLLUP</h3> \n<p>WITH ROLLUP 可以实现在分组统计数据基础上再进行相同的统计（SUM,AVG,COUNT…）。</p> \n<p>例如我们将以上的数据表按名字进行分组，再统计每个人登录的次数：</p> \n<pre>\r\nmysql&gt; SELECT name, SUM(singin) as singin_count FROM  employee_tbl GROUP BY name WITH ROLLUP;\r\n+--------+--------------+\r\n| name   | singin_count |\r\n+--------+--------------+\r\n| 小丽 |            2 |\r\n| 小明 |            7 |\r\n| 小王 |            7 |\r\n| NULL   |           16 |\r\n+--------+--------------+\r\n4 rows in set (0.00 sec)\r\n</pre> \n<p>其中记录 NULL 表示所有人的登录次数。</p> \n<p>我们可以使用 coalesce 来设置一个可以取代 NUll 的名称，coalesce 语法：</p> \n<pre>\r\nselect coalesce(a,b,c);\r\n</pre> \n<p>参数说明：如果a==null,则选择b；如果b==null,则选择c；如果a!=null,则选择a；如果a b c 都为null ，则返回为null（没意义）。</p> \n<p>以下实例中如果名字为空我们使用总数代替：</p> \n<pre>\r\nmysql&gt; SELECT coalesce(name, \'总数\'), SUM(singin) as singin_count FROM  employee_tbl GROUP BY name WITH ROLLUP;\r\n+--------------------------+--------------+\r\n| coalesce(name, \'总数\') | singin_count |\r\n+--------------------------+--------------+\r\n| 小丽                   |            2 |\r\n| 小明                   |            7 |\r\n| 小王                   |            7 |\r\n| 总数                   |           16 |\r\n+--------------------------+--------------+\r\n4 rows in set (0.01 sec)\r\n</pre>', null, 'MySQL GROUP BY 语句|实例演示|');
INSERT INTO `schoolcontent` VALUES ('270', '273', '<h1>Mysql 连接的使用</h1> \n<p>在前几章节中，我们已经学会了如果在一张表中读取数据，这是相对简单的，但是在真正的应用中经常需要从多个数据表中读取数据。</p> \n<p>本章节我们将向大家介绍如何使用 MySQL 的 JOIN 在两个或多个表中查询数据。</p> \n<p>你可以在SELECT, UPDATE 和 DELETE 语句中使用 Mysql 的 JOIN 来联合多表查询。</p> \n<p>JOIN 按照功能大致分为如下三类： </p> \n<ul>\n <li> <strong>INNER JOIN（内连接,或等值连接）</strong>：获取两个表中字段匹配关系的记录。</li>\n <li> <strong>LEFT JOIN（左连接）：</strong>获取左表所有记录，即使右表没有对应匹配的记录。</li>\n <li> <strong>RIGHT JOIN（右连接）：</strong> 与 LEFT JOIN 相反，用于获取右表所有记录，即使左表没有对应匹配的记录。</li>\n</ul> \n<p>本章节使用的数据库结构及数据下载：<a href=\"http://static.runoob.com/download/RUNOOB.sql\">RUNOOB.sql</a>。</p> \n<hr /> \n<h2>在命令提示符中使用 INNER JOIN</h2> \n<p>我们在RUNOOB数据库中有两张表 tcount_tbl 和 runoob_tbl。两张数据表数据如下：</p> \n<h3>实例</h3> \n<p> 尝试以下实例：</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SELECT * FROM tcount_tbl;\r\n+-----------------+----------------+\r\n| runoob_author | runoob_count |\r\n+-----------------+----------------+\r\n| mahran          |             20 |\r\n| mahnaz          |           NULL |\r\n| Jen             |           NULL |\r\n| Gill            |             20 |\r\n| John Poul       |              1 |\r\n| Sanjay          |              1 |\r\n+-----------------+----------------+\r\n6 rows in set (0.01 sec)\r\nmysql&gt; SELECT * from runoob_tbl;\r\n+-------------+----------------+-----------------+-----------------+\r\n| runoob_id | runoob_title | runoob_author | submission_date |\r\n+-------------+----------------+-----------------+-----------------+\r\n|           1 | Learn PHP      | John Poul       | 2007-05-24      |\r\n|           2 | Learn MySQL    | Abdul S         | 2007-05-24      |\r\n|           3 | JAVA Tutorial  | Sanjay          | 2007-05-06      |\r\n+-------------+----------------+-----------------+-----------------+\r\n3 rows in set (0.00 sec)\r\nmysql&gt;\r\n</pre> \n<p> 接下来我们就使用MySQL的<strong>INNER JOIN(也可以省略 INNER 使用 JOIN，效果一样)</strong>来连接以上两张表来读取runoob_tbl表中所有runoob_author字段在tcount_tbl表对应的runoob_count字段值：</p> \n<pre>\r\nmysql&gt; SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a INNER JOIN tcount_tbl b ON a.runoob_author = b.runoob_author;\r\n+-----------+---------------+--------------+\r\n| runoob_id | runoob_author | runoob_count |\r\n+-----------+---------------+--------------+\r\n|         1 | John Poul     |            1 |\r\n|         3 | Sanjay        |            1 |\r\n+-----------+---------------+--------------+\r\n2 rows in set (0.00 sec)\r\n</pre> \n<p>以上 SQL 语句等价于：</p> \n<pre>\r\nmysql&gt; SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a, tcount_tbl b WHERE a.runoob_author = b.runoob_author;\r\n+-------------+-----------------+----------------+\r\n| runoob_id | runoob_author | runoob_count |\r\n+-------------+-----------------+----------------+\r\n|           1 | John Poul       |              1 |\r\n|           3 | Sanjay          |              1 |\r\n+-------------+-----------------+----------------+\r\n2 rows in set (0.01 sec)\r\nmysql&gt;\r\n</pre>\n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2014/03/img_innerjoin.gif\" /></p> \n<hr /> \n<h2> MySQL LEFT JOIN</h2> \n<p>MySQL left join 与 join 有所不同。 MySQL LEFT JOIN 会读取左边数据表的全部数据，即便右边表无对应数据。</p> \n<h3>实例</h3> \n<p>尝试以下实例，以 <strong>runoob_tbl</strong> 为左表，<strong>tcount_tbl</strong> 为右表，理解MySQL LEFT JOIN的应用：</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a LEFT JOIN tcount_tbl b ON a.runoob_author = b.runoob_author;\r\n+-------------+-----------------+----------------+\r\n| runoob_id | runoob_author | runoob_count |\r\n+-------------+-----------------+----------------+\r\n|           1 | John Poul       |              1 |\r\n|           2 | Abdul S         |           NULL |\r\n|           3 | Sanjay          |              1 |\r\n+-------------+-----------------+----------------+\r\n3 rows in set (0.02 sec)\r\n</pre>\n<p>以上实例中使用了LEFT JOIN，该语句会读取左边的数据表runoob_tbl的所有选取的字段数据，即便在右侧表tcount_tbl中没有对应的runoob_author字段值。</p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2014/03/img_leftjoin.gif\" /> \n<hr /> \n<h2> MySQL RIGHT JOIN</h2> \n<p>MySQL RIGHT JOIN 会读取右边数据表的全部数据，即便左边边表无对应数据。</p> \n<h3>实例</h3> \n<p>尝试以下实例，以 <strong>tcount_tbl</strong> 为左表，<strong>runoob_tbl</strong> 为右表，理解MySQL RIGHT JOIN的应用：</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; SELECT b.runoob_id, b.runoob_author, a.runoob_count FROM tcount_tbl a RIGHT JOIN runoob_tbl b ON a.runoob_author = b.runoob_author;\r\n+-------------+-----------------+----------------+\r\n| runoob_id | runoob_author | runoob_count |\r\n+-------------+-----------------+----------------+\r\n|           1 | John Poul       |              1 |\r\n|           2 | Abdul S         |           NULL |\r\n|           3 | Sanjay          |              1 |\r\n+-------------+-----------------+----------------+\r\n3 rows in set (0.02 sec)\r\n</pre>\n<p>以上实例中使用了 RIGHT JOIN，该语句会读取右边的数据表 runoob_tbl 的所有选取的字段数据，即便在左侧表tcount_tbl中没有对应的runoob_author字段值。</p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2014/03/img_rightjoin.gif\" /> \n<hr /> \n<h2>在PHP脚本中使用JOIN</h2> \n<p>PHP 中使用mysql_query()函数来执行SQL语句，你可以使用以上的相同的SQL语句作为mysql_query()函数的参数。</p> \n<p>尝试如下实例:</p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n$sql = \'SELECT a.runoob_id, a.runoob_author, b.runoob_count FROM runoob_tbl a INNER JOIN tcount_tbl b ON a.runoob_author = b.runoob_author\';\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_array($retval, MYSQL_ASSOC))\r\n{\r\n    echo &quot;Author:{$row[\'runoob_author\']}  &lt;br&gt; &quot;.\r\n         &quot;Count: {$row[\'runoob_count\']} &lt;br&gt; &quot;.\r\n         &quot;Tutorial ID: {$row[\'runoob_id\']} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n} \r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre>', null, 'Mysql 连接的使用|在命令提示符中使用 INNER JOIN|MySQL LEFT JOIN|MySQL RIGHT JOIN|在PHP脚本中使用JOIN|');
INSERT INTO `schoolcontent` VALUES ('271', '274', '<h1>MySQL NULL 值处理</h1> \n<p> 我们已经知道MySQL使用 SQL SELECT 命令及 WHERE 子句来读取数据表中的数据,但是当提供的查询条件字段为 NULL 时，该命令可能就无法正常工作。</p> \n<p>为了处理这种情况，MySQL提供了三大运算符:</p> \n<ul> \n <li><strong>IS NULL:</strong> 当列的值是NULL,此运算符返回true。</li> \n <li><strong>IS NOT NULL:</strong> 当列的值不为NULL, 运算符返回true。</li> \n <li><strong>&lt;=&gt;:</strong>&nbsp;比较操作符（不同于=运算符），当比较的的两个值为NULL时返回true。</li> \n</ul> \n<p> 关于 NULL 的条件比较运算是比较特殊的。你不能使用 = NULL 或 != NULL 在列中查找 NULL 值 。</p>\n<p> 在MySQL中，NULL值与任何其它值的比较（即使是NULL）永远返回false，即 NULL = NULL 返回false 。</p>\n<p> MySQL中处理NULL使用IS NULL和IS NOT NULL运算符。</p> \n<hr /> \n<h2>在命令提示符中使用 NULL 值</h2> \n<p>以下实例中假设数据库 RUNOOB 中的表 tcount_tbl 含有两列 runoob_author 和 runoob_count, runoob_count 中设置插入NULL值。</p> \n<h3>实例</h3> \n<p>尝试以下实例:</p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; create table tcount_tbl\r\n    -&gt; (\r\n    -&gt; runoob_author varchar(40) NOT NULL,\r\n    -&gt; runoob_count  INT\r\n    -&gt; );\r\nQuery OK, 0 rows affected (0.05 sec)\r\nmysql&gt; INSERT INTO tcount_tbl\r\n    -&gt; (runoob_author, runoob_count) values (\'mahran\', 20);\r\nmysql&gt; INSERT INTO tcount_tbl\r\n    -&gt; (runoob_author, runoob_count) values (\'mahnaz\', NULL);\r\nmysql&gt; INSERT INTO tcount_tbl\r\n    -&gt; (runoob_author, runoob_count) values (\'Jen\', NULL);\r\nmysql&gt; INSERT INTO tcount_tbl\r\n    -&gt; (runoob_author, runoob_count) values (\'Gill\', 20);\r\n\r\nmysql&gt; SELECT * from tcount_tbl;\r\n+-----------------+----------------+\r\n| runoob_author | runoob_count |\r\n+-----------------+----------------+\r\n| mahran          |             20 |\r\n| mahnaz          |           NULL |\r\n| Jen             |           NULL |\r\n| Gill            |             20 |\r\n+-----------------+----------------+\r\n4 rows in set (0.00 sec)\r\n\r\nmysql&gt;\r\n</pre> \n<p>以下实例中你可以看到 = 和 != 运算符是不起作用的：</p> \n<pre>\r\nmysql&gt; SELECT * FROM tcount_tbl WHERE runoob_count = NULL;\r\nEmpty set (0.00 sec)\r\nmysql&gt; SELECT * FROM tcount_tbl WHERE runoob_count != NULL;\r\nEmpty set (0.01 sec)\r\n</pre> \n<p>查找数据表中 runoob_count 列是否为 NULL，必须使用IS NULL和IS NOT NULL，如下实例：</p> \n<pre>\r\nmysql&gt; SELECT * FROM tcount_tbl \r\n    -&gt; WHERE runoob_count IS NULL;\r\n+-----------------+----------------+\r\n| runoob_author | runoob_count |\r\n+-----------------+----------------+\r\n| mahnaz          |           NULL |\r\n| Jen             |           NULL |\r\n+-----------------+----------------+\r\n2 rows in set (0.00 sec)\r\nmysql&gt; SELECT * from tcount_tbl \r\n    -&gt; WHERE runoob_count IS NOT NULL;\r\n+-----------------+----------------+\r\n| runoob_author | runoob_count |\r\n+-----------------+----------------+\r\n| mahran          |             20 |\r\n| Gill            |             20 |\r\n+-----------------+----------------+\r\n2 rows in set (0.00 sec)\r\n</pre> \n<hr /> \n<h2>使用PHP脚本处理 NULL 值</h2> \n<p>PHP脚本中你可以在 if...else 语句来处理变量是否为空，并生成相应的条件语句。 </p> \n<p>以下实例中PHP设置了$runoob_count变量，然后使用该变量与数据表中的 runoob_count 字段进行比较：</p> \n<pre>\r\n&lt;?php\r\n$dbhost = \'localhost:3036\';\r\n$dbuser = \'root\';\r\n$dbpass = \'rootpassword\';\r\n$conn = mysql_connect($dbhost, $dbuser, $dbpass);\r\nif(! $conn )\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\nif( isset($runoob_count ))\r\n{\r\n   $sql = \'SELECT runoob_author, runoob_count\r\n           FROM  tcount_tbl\r\n           WHERE runoob_count = $runoob_count\';\r\n}\r\nelse\r\n{\r\n   $sql = \'SELECT runoob_author, runoob_count\r\n           FROM  tcount_tbl\r\n           WHERE runoob_count IS $runoob_count\';\r\n}\r\n\r\nmysql_select_db(\'RUNOOB\');\r\n$retval = mysql_query( $sql, $conn );\r\nif(! $retval )\r\n{\r\n  die(\'Could not get data: \' . mysql_error());\r\n}\r\nwhile($row = mysql_fetch_array($retval, MYSQL_ASSOC))\r\n{\r\n    echo &quot;Author:{$row[\'runoob_author\']}  &lt;br&gt; &quot;.\r\n         &quot;Count: {$row[\'runoob_count\']} &lt;br&gt; &quot;.\r\n         &quot;--------------------------------&lt;br&gt;&quot;;\r\n} \r\necho &quot;Fetched data successfully\\n&quot;;\r\nmysql_close($conn);\r\n?&gt;\r\n</pre>', null, 'MySQL NULL 值处理|在命令提示符中使用 NULL 值|使用PHP脚本处理 NULL 值|');
INSERT INTO `schoolcontent` VALUES ('272', '275', '<h1>MySQL 正则表达式</h1> \n<p> 在前面的章节我们已经了解到MySQL可以通过 <strong>LIKE ...%</strong> 来进行模糊匹配。 </p>\n<p> MySQL 同样也支持其他正则表达式的匹配， MySQL中使用 REGEXP 操作符来进行正则表达式匹配。</p>\n<p> 如果您了解PHP或Perl，那么操作起来就非常简单，因为MySQL的正则表达式匹配与这些脚本的类似。</p>\n<p> 下表中的正则模式可应用于 REGEXP 操作符中。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th style=\"width:30%\">模式</th>\n   <th style=\"width:70%\">描述</th> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">^</td>\n   <td style=\"width:70%\">匹配输入字符串的开始位置。如果设置了 RegExp 对象的 Multiline 属性，^ 也匹配 \'\\n\' 或 \'\\r\' 之后的位置。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">$</td>\n   <td style=\"width:70%\">匹配输入字符串的结束位置。如果设置了RegExp 对象的 Multiline 属性，$ 也匹配 \'\\n\' 或 \'\\r\' 之前的位置。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">.</td>\n   <td style=\"width:70%\">匹配除 &quot;\\n&quot; 之外的任何单个字符。要匹配包括 \'\\n\' 在内的任何字符，请使用象 \'[.\\n]\' 的模式。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">[...]</td>\n   <td style=\"width:70%\">字符集合。匹配所包含的任意一个字符。例如， \'[abc]\' 可以匹配 &quot;plain&quot; 中的 \'a\'。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">[^...]</td>\n   <td style=\"width:70%\">负值字符集合。匹配未包含的任意字符。例如， \'[^abc]\' 可以匹配 &quot;plain&quot; 中的\'p\'。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">p1|p2|p3</td>\n   <td style=\"width:70%\">匹配 p1 或 p2 或 p3。例如，\'z|food\' 能匹配 &quot;z&quot; 或 &quot;food&quot;。\'(z|f)ood\' 则匹配 &quot;zood&quot; 或 &quot;food&quot;。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">*</td>\n   <td style=\"width:70%\">匹配前面的子表达式零次或多次。例如，zo* 能匹配 &quot;z&quot; 以及 &quot;zoo&quot;。* 等价于{0,}。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">+</td>\n   <td style=\"width:70%\">匹配前面的子表达式一次或多次。例如，\'zo+\' 能匹配 &quot;zo&quot; 以及 &quot;zoo&quot;，但不能匹配 &quot;z&quot;。+ 等价于 {1,}。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">{n}</td>\n   <td style=\"width:70%\">n 是一个非负整数。匹配确定的 n 次。例如，\'o{2}\' 不能匹配 &quot;Bob&quot; 中的 \'o\'，但是能匹配 &quot;food&quot; 中的两个 o。</td> \n  </tr> \n  <tr> \n   <td style=\"width:30%\">{n,m}</td>\n   <td style=\"width:70%\">m 和 n 均为非负整数，其中n &lt;= m。最少匹配 n 次且最多匹配 m 次。</td> \n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>了解以上的正则需求后，我们就可以更加自己的需求来编写带有正则表达式的SQL语句。以下我们将列出几个小实例(表名：person_tbl )来加深我们的理解： </p> \n<p>查找name字段中以\'st\'为开头的所有数据：</p> \n<pre>\r\nmysql&gt; SELECT name FROM person_tbl WHERE name REGEXP \'^st\';\r\n</pre> \n<p>查找name字段中以\'ok\'为结尾的所有数据：</p> \n<pre>\r\nmysql&gt; SELECT name FROM person_tbl WHERE name REGEXP \'ok$\';\r\n</pre> \n<p>查找name字段中包含\'mar\'字符串的所有数据：</p> \n<pre>\r\nmysql&gt; SELECT name FROM person_tbl WHERE name REGEXP \'mar\';\r\n</pre> \n<p>查找name字段中以元音字符开头且以\'ok\'字符串结尾的所有数据：</p> \n<pre>\r\nmysql&gt; SELECT name FROM person_tbl WHERE name REGEXP \'^[aeiou]|ok$\';\r\n</pre>', null, 'MySQL 正则表达式|');
INSERT INTO `schoolcontent` VALUES ('273', '276', '<h1>MySQL 事务</h1> \n<p> MySQL 事务主要用于处理操作量大，复杂度高的数据。比如说，在人员管理系统中，你删除一个人员，你即需要删除人员的基本资料，也要删除和该人员相关的信息，如信箱，文章等等，这样，这些数据库操作语句就构成一个事务！ </p> \n<ul>\n <li> 在MySQL中只有使用了Innodb数据库引擎的数据库或表才支持事务</li>\n <li> 事务处理可以用来维护数据库的完整性，保证成批的SQL语句要么全部执行，要么全部不执行</li>\n <li> 事务用来管理insert,update,delete语句</li>\n</ul> \n<p> 一般来说，事务是必须满足4个条件（ACID）： Atomicity（原子性）、Consistency（稳定性）、Isolation（隔离性）、Durability（可靠性） </p> \n<ul> \n <li>1、<strong>事务的原子性：</strong>一组事务，要么成功；要么撤回。</li> \n <li>2、<strong>稳定性</strong> ： 有非法数据（外键约束之类），事务撤回。</li> \n <li>3、<strong>隔离性：</strong>事务独立运行。一个事务处理后的结果，影响了其他事务，那么其他事务会撤回。事务的100%隔离，需要牺牲速度。</li> \n <li>4、<strong>可靠性：</strong>软、硬件崩溃后，InnoDB数据表驱动会利用日志文件重构修改。可靠性和高速度不可兼得， innodb_flush_log_at_trx_commit选项 决定什么时候吧事务保存到日志里。</li> \n</ul> \n<h3>在Mysql控制台使用事务来操作</h3> \n<p> 1，开始一个事务</p> \n<pre>\r\nstart transaction\r\n</pre> \n<p> 2, 做保存点</p> \n<pre>\r\nsave point 保存点名称\r\n</pre> \n<p> 3, 操作 </p> \n<p> 4，可以回滚，可以提交，没有问题，就提交，有问题就回滚。 </p> \n<h3>PHP中使用事务实例</h3> \n<pre>\r\n&lt;?php\r\n$handler=mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;password&quot;);\r\nmysql_select_db(&quot;task&quot;);\r\nmysql_query(&quot;SET AUTOCOMMIT=0&quot;);//设置为不自动提交，因为MYSQL默认立即执行\r\nmysql_query(&quot;BEGIN&quot;);//开始事务定义\r\nif(!mysql_query(&quot;insert into trans (id) values(\'2\')&quot;))\r\n{\r\nmysql_query(&quot;ROLLBACK&quot;);//判断当执行失败时回滚\r\n}\r\nif(!mysql_query(&quot;insert into trans (id) values(\'4\')&quot;))\r\n{\r\nmysql_query(&quot;ROLLBACK&quot;);//判断执行失败回滚\r\n}\r\nmysql_query(&quot;COMMIT&quot;);//执行事务\r\nmysql_close($handler);\r\n?&gt;\r\n</pre>', null, 'MySQL 事务|');
INSERT INTO `schoolcontent` VALUES ('274', '277', '<h1>MySQL ALTER命令</h1> \n<p>当我们需要修改数据表名或者修改数据表字段时，就需要使用到MySQL ALTER命令。</p> \n<p>开始本章教程前让我们先创建一张表，表名为：testalter_tbl。 </p> \n<pre>\r\nroot@host# mysql -u root -p password;\r\nEnter password:*******\r\nmysql&gt; use RUNOOB;\r\nDatabase changed\r\nmysql&gt; create table testalter_tbl\r\n    -&gt; (\r\n    -&gt; i INT,\r\n    -&gt; c CHAR(1)\r\n    -&gt; );\r\nQuery OK, 0 rows affected (0.05 sec)\r\nmysql&gt; SHOW COLUMNS FROM testalter_tbl;\r\n+-------+---------+------+-----+---------+-------+\r\n| Field | Type    | Null | Key | Default | Extra |\r\n+-------+---------+------+-----+---------+-------+\r\n| i     | int(11) | YES  |     | NULL    |       |\r\n| c     | char(1) | YES  |     | NULL    |       |\r\n+-------+---------+------+-----+---------+-------+\r\n2 rows in set (0.00 sec)\r\n</pre> \n<hr /> \n<h2> 删除，添加或修改表字段</h2> \n<p> 如下命令使用了 ALTER 命令及 DROP 子句来删除以上创建表的 i 字段： </p> \n<pre>\r\nmysql&gt; ALTER TABLE testalter_tbl  DROP i;\r\n</pre> \n<p>如果数据表中只剩余一个字段则无法使用DROP来删除字段。</p> \n<p>MySQL 中使用 ADD 子句来想数据表中添加列，如下实例在表 testalter_tbl 中添加 i 字段，并定义数据类型:</p> \n<pre>\r\nmysql&gt; ALTER TABLE testalter_tbl ADD i INT;\r\n</pre> \n<p>执行以上命令后，i 字段会自动添加到数据表字段的末尾。</p> \n<pre>\r\nmysql&gt; SHOW COLUMNS FROM testalter_tbl;\r\n+-------+---------+------+-----+---------+-------+\r\n| Field | Type    | Null | Key | Default | Extra |\r\n+-------+---------+------+-----+---------+-------+\r\n| c     | char(1) | YES  |     | NULL    |       |\r\n| i     | int(11) | YES  |     | NULL    |       |\r\n+-------+---------+------+-----+---------+-------+\r\n2 rows in set (0.00 sec)\r\n</pre> \n<p>如果你需要指定新增字段的位置，可以使用MySQL提供的关键字 FIRST (设定位第一列)， AFTER 字段名（设定位于某个字段之后）。</p> \n<p>尝试以下 ALTER TABLE 语句, 在执行成功后，使用 SHOW COLUMNS 查看表结构的变化：</p> \n<pre>\r\nALTER TABLE testalter_tbl DROP i;\r\nALTER TABLE testalter_tbl ADD i INT FIRST;\r\nALTER TABLE testalter_tbl DROP i;\r\nALTER TABLE testalter_tbl ADD i INT AFTER c;\r\n</pre> \n<p> FIRST 和 AFTER 关键字只占用于 ADD 子句，所以如果你想重置数据表字段的位置就需要先使用 DROP 删除字段然后使用 ADD 来添加字段并设置位置。</p> \n<hr /> \n<h2>修改字段类型及名称</h2> \n<p>如果需要修改字段类型及名称, 你可以在ALTER命令中使用 MODIFY 或 CHANGE 子句 。</p> \n<p>例如，把字段 c 的类型从 CHAR(1) 改为 CHAR(10)，可以执行以下命令:</p> \n<pre>\r\nmysql&gt; ALTER TABLE testalter_tbl MODIFY c CHAR(10);\r\n</pre> \n<p>使用 CHANGE 子句, 语法有很大的不同。 在 CHANGE 关键字之后，紧跟着的是你要修改的字段名，然后指定新字段名及类型。尝试如下实例：</p> \n<pre>\r\nmysql&gt; ALTER TABLE testalter_tbl CHANGE i j BIGINT;\r\n</pre> \n<p如果你现在想把字段 j=\"\" 从=\"\" bigint=\"\" 修改为=\"\" int，sql语句如下：<=\"\"> \n <pre>\r\nmysql&gt; ALTER TABLE testalter_tbl CHANGE j j INT;\r\n</pre> \n <hr /> \n <h2>ALTER TABLE 对 Null 值和默认值的影响</h2> \n <p>当你修改字段时，你可以指定是否包含只或者是否设置默认值。</p> \n <p>以下实例，指定字段 j 为 NOT NULL 且默认值为100 。 </p> \n <pre>\r\nmysql&gt; ALTER TABLE testalter_tbl \r\n    -&gt; MODIFY j BIGINT NOT NULL DEFAULT 100;\r\n</pre> \n <p>如果你不设置默认值，MySQL会自动设置该字段默认为 NULL。</p> \n <hr /> \n <h2>修改字段默认值</h2> \n <p>你可以使用 ALTER 来修改字段的默认值，尝试以下实例：</p> \n <pre>\r\nmysql&gt; ALTER TABLE testalter_tbl ALTER i SET DEFAULT 1000;\r\nmysql&gt; SHOW COLUMNS FROM testalter_tbl;\r\n+-------+---------+------+-----+---------+-------+\r\n| Field | Type    | Null | Key | Default | Extra |\r\n+-------+---------+------+-----+---------+-------+\r\n| c     | char(1) | YES  |     | NULL    |       |\r\n| i     | int(11) | YES  |     | 1000    |       |\r\n+-------+---------+------+-----+---------+-------+\r\n2 rows in set (0.00 sec)\r\n</pre> \n <p> 你也可以使用 ALTER 命令及 DROP子句来删除字段的默认值，如下实例：</p> \n <pre>\r\nmysql&gt; ALTER TABLE testalter_tbl ALTER i DROP DEFAULT;\r\nmysql&gt; SHOW COLUMNS FROM testalter_tbl;\r\n+-------+---------+------+-----+---------+-------+\r\n| Field | Type    | Null | Key | Default | Extra |\r\n+-------+---------+------+-----+---------+-------+\r\n| c     | char(1) | YES  |     | NULL    |       |\r\n| i     | int(11) | YES  |     | NULL    |       |\r\n+-------+---------+------+-----+---------+-------+\r\n2 rows in set (0.00 sec)\r\nChanging a Table Type:\r\n</pre> \n <p>修改数据表类型，可以使用 ALTER 命令及 TYPE 子句来完成。尝试以下实例，我们将表 testalter_tbl 的类型修改为 MYISAM ：</p> \n <p><strong> 注意：</strong>查看数据表类型可以使用 SHOW TABLE STATUS 语句。</p> \n <pre>\r\nmysql&gt; ALTER TABLE testalter_tbl TYPE = MYISAM;\r\nmysql&gt;  SHOW TABLE STATUS LIKE \'testalter_tbl\'\\G\r\n*************************** 1. row ****************\r\n           Name: testalter_tbl\r\n           Type: MyISAM\r\n     Row_format: Fixed\r\n           Rows: 0\r\n Avg_row_length: 0\r\n    Data_length: 0\r\nMax_data_length: 25769803775\r\n   Index_length: 1024\r\n      Data_free: 0\r\n Auto_increment: NULL\r\n    Create_time: 2007-06-03 08:04:36\r\n    Update_time: 2007-06-03 08:04:36\r\n     Check_time: NULL\r\n Create_options:\r\n        Comment:\r\n1 row in set (0.00 sec)\r\n</pre> \n <hr /> \n <h2>修改表名</h2> \n <p>如果需要修改数据表的名称，可以在 ALTER TABLE 语句中使用 RENAME 子句来实现。</p> \n <p>尝试以下实例将数据表 testalter_tbl 重命名为 alter_tbl：</p> \n <pre>\r\nmysql&gt; ALTER TABLE testalter_tbl RENAME TO alter_tbl;\r\n</pre> \n <p>ALTER 命令还可以用来创建及删除MySQL数据表的索引，该功能我们会在接下来的章节中介绍。</p> \n</p如果你现在想把字段>', null, 'MySQL ALTER命令|删除，添加或修改表字段|修改字段类型及名称|ALTER TABLE 对 Null 值和默认值的影响|修改字段默认值|修改表名|');
INSERT INTO `schoolcontent` VALUES ('275', '278', '<h1>MySQL 索引</h1> \n<p>MySQL索引的建立对于MySQL的高效运行是很重要的，索引可以大大提高MySQL的检索速度。</p> \n<p>打个比方，如果合理的设计且使用索引的MySQL是一辆兰博基尼的话，那么没有设计和使用索引的MySQL就是一个人力三轮车。</p> \n<p>索引分单列索引和组合索引。单列索引，即一个索引只包含单个列，一个表可以有多个单列索引，但这不是组合索引。组合索引，即一个索包含多个列。</p> \n<p>创建索引时，你需要确保该索引是应用在 SQL 查询语句的条件(一般作为 WHERE 子句的条件)。</p> \n<p>实际上，索引也是一张表，该表保存了主键与索引字段，并指向实体表的记录。</p> \n<p>上面都在说使用索引的好处，但过多的使用索引将会造成滥用。因此索引也会有它的缺点：虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件。</p> \n<p>建立索引会占用磁盘空间的索引文件。 </p> \n<hr /> \n<h2>普通索引</h2> \n<h3>创建索引</h3> \n<p>这是最基本的索引，它没有任何限制。它有以下几种创建方式：</p> \n<pre>\r\nCREATE INDEX indexName ON mytable(username(length)); \r\n</pre> \n<p>如果是CHAR，VARCHAR类型，length可以小于字段实际长度；如果是BLOB和TEXT类型，必须指定 length。</p> \n<h3>修改表结构</h3> \n<pre>ALTER mytable ADD INDEX [indexName] ON (username(length)) </pre> \n<h3>创建表的时候直接指定</h3> \n<pre>\r\nCREATE TABLE mytable(  \r\n \r\nID INT NOT NULL,   \r\n \r\nusername VARCHAR(16) NOT NULL,  \r\n \r\nINDEX [indexName] (username(length))  \r\n \r\n);  \r\n</pre> \n<h3> 删除索引的语法</h3> \n<pre>\r\nDROP INDEX [indexName] ON mytable; \r\n</pre> \n<hr /> \n<h2>唯一索引</h2> \n<p> 它与前面的普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一。它有以下几种创建方式： </p> \n<h3>创建索引</h3> \n<pre>\r\nCREATE UNIQUE INDEX indexName ON mytable(username(length)) \r\n</pre> \n<h3>修改表结构 </h3> \n<pre>\r\nALTER mytable ADD UNIQUE [indexName] ON (username(length)) \r\n</pre> \n<h3>创建表的时候直接指定</h3> \n<pre>\r\nCREATE TABLE mytable(  \r\n \r\nID INT NOT NULL,   \r\n \r\nusername VARCHAR(16) NOT NULL,  \r\n \r\nUNIQUE [indexName] (username(length))  \r\n \r\n);  \r\n</pre> \n<hr /> \n<h2>使用ALTER 命令添加和删除索引</h2> \n<p>有四种方式来添加数据表的索引：</p> \n<ul class=\"list\"> \n <li><b>ALTER TABLE tbl_name ADD PRIMARY KEY (column_list):</b> 该语句添加一个主键，这意味着索引值必须是唯一的，且不能为NULL。<p></p></li> \n <li><b>ALTER TABLE tbl_name ADD UNIQUE index_name (column_list):</b> 这条语句创建索引的值必须是唯一的（除了NULL外，NULL可能会出现多次）。</li> \n <li><b>ALTER TABLE tbl_name ADD INDEX index_name (column_list):</b> 添加普通索引，索引值可出现多次。</li> \n <li><b>ALTER TABLE tbl_name ADD FULLTEXT index_name (column_list):</b>该语句指定了索引为 FULLTEXT ，用于全文索引。</li> \n</ul> \n<p>以下实例为在表中添加索引。</p> \n<pre>\r\nmysql&gt; ALTER TABLE testalter_tbl ADD INDEX (c);\r\n</pre> \n<p>你还可以在 ALTER 命令中使用 DROP 子句来删除索引。尝试以下实例删除索引:</p> \n<pre>\r\nmysql&gt; ALTER TABLE testalter_tbl DROP INDEX (c);\r\n</pre> \n<hr /> \n<h2>使用 ALTER 命令添加和删除主键</h2> \n<p>主键只能作用于一个列上，添加主键索引时，你需要确保该主键默认不为空（NOT NULL）。实例如下：</p> \n<pre>\r\nmysql&gt; ALTER TABLE testalter_tbl MODIFY i INT NOT NULL;\r\nmysql&gt; ALTER TABLE testalter_tbl ADD PRIMARY KEY (i);\r\n</pre> \n<p>你也可以使用 ALTER 命令删除主键：</p> \n<pre>\r\nmysql&gt; ALTER TABLE testalter_tbl DROP PRIMARY KEY;\r\n</pre> \n<p>删除指定时只需指定PRIMARY KEY，但在删除索引时，你必须知道索引名。</p> \n<hr /> \n<h2>显示索引信息</h2> \n<p>你可以使用 SHOW INDEX 命令来列出表中的相关的索引信息。可以通过添加 \\G 来格式化输出信息。</p> \n<p>尝试以下实例:</p> \n<pre>\r\nmysql&gt; SHOW INDEX FROM table_name\\G\r\n........\r\n</pre>', null, 'MySQL 索引|普通索引|唯一索引|使用ALTER 命令添加和删除索引|使用 ALTER 命令添加和删除主键|显示索引信息|');
INSERT INTO `schoolcontent` VALUES ('276', '279', '<h1>MySQL 临时表</h1> \n<p>MySQL 临时表在我们需要保存一些临时数据时是非常有用的。临时表只在当前连接可见，当关闭连接时，Mysql会自动删除表并释放所有空间。 </p> \n<p>临时表在MySQL 3.23版本中添加，如果你的MySQL版本低于 3.23版本就无法使用MySQL的临时表。不过现在一般很少有再使用这么低版本的MySQL数据库服务了。</p> \n<p>MySQL临时表只在当前连接可见，如果你使用PHP脚本来创建MySQL临时表，那没当PHP脚本执行完成后，该临时表也会自动销毁。</p> \n<p>如果你使用了其他MySQL客户端程序连接MySQL数据库服务器来创建临时表，那么只有在关闭客户端程序时才会销毁临时表，当然你也可以手动销毁。</p> \n<h3>实例</h3> \n<p>以下展示了使用MySQL 临时表的简单实例，以下的SQL代码可以适用于PHP脚本的mysql_query()函数。</p> \n<pre>\r\nmysql&gt; CREATE TEMPORARY TABLE SalesSummary (\r\n    -&gt; product_name VARCHAR(50) NOT NULL\r\n    -&gt; , total_sales DECIMAL(12,2) NOT NULL DEFAULT 0.00\r\n    -&gt; , avg_unit_price DECIMAL(7,2) NOT NULL DEFAULT 0.00\r\n    -&gt; , total_units_sold INT UNSIGNED NOT NULL DEFAULT 0\r\n);\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql&gt; INSERT INTO SalesSummary\r\n    -&gt; (product_name, total_sales, avg_unit_price, total_units_sold)\r\n    -&gt; VALUES\r\n    -&gt; (\'cucumber\', 100.25, 90, 2);\r\n\r\nmysql&gt; SELECT * FROM SalesSummary;\r\n+--------------+-------------+----------------+------------------+\r\n| product_name | total_sales | avg_unit_price | total_units_sold |\r\n+--------------+-------------+----------------+------------------+\r\n| cucumber     |      100.25 |          90.00 |                2 |\r\n+--------------+-------------+----------------+------------------+\r\n1 row in set (0.00 sec)\r\n</pre> \n<p>当你使用 <strong>SHOW TABLES</strong>命令显示数据表列表时，你将无法看到 SalesSummary表。</p>\n<p> 如果你退出当前MySQL会话，再使用 <strong>SELECT</strong>命令来读取原先创建的临时表数据，那你会发现数据库中没有该表的存在，因为在你退出时该临时表已经被销毁了。</p> \n<hr /> \n<h2>删除MySQL 临时表</h2> \n<p>默认情况下，当你断开与数据库的连接后，临时表就会自动被销毁。当然你也可以在当前MySQL会话使用<strong> DROP TABLE </strong> 命令来手动删除临时表。</p> \n<p>以下是手动删除临时表的实例：</p> \n<pre>\r\nmysql&gt; CREATE TEMPORARY TABLE SalesSummary (\r\n    -&gt; product_name VARCHAR(50) NOT NULL\r\n    -&gt; , total_sales DECIMAL(12,2) NOT NULL DEFAULT 0.00\r\n    -&gt; , avg_unit_price DECIMAL(7,2) NOT NULL DEFAULT 0.00\r\n    -&gt; , total_units_sold INT UNSIGNED NOT NULL DEFAULT 0\r\n);\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\nmysql&gt; INSERT INTO SalesSummary\r\n    -&gt; (product_name, total_sales, avg_unit_price, total_units_sold)\r\n    -&gt; VALUES\r\n    -&gt; (\'cucumber\', 100.25, 90, 2);\r\n\r\nmysql&gt; SELECT * FROM SalesSummary;\r\n+--------------+-------------+----------------+------------------+\r\n| product_name | total_sales | avg_unit_price | total_units_sold |\r\n+--------------+-------------+----------------+------------------+\r\n| cucumber     |      100.25 |          90.00 |                2 |\r\n+--------------+-------------+----------------+------------------+\r\n1 row in set (0.00 sec)\r\nmysql&gt; DROP TABLE SalesSummary;\r\nmysql&gt;  SELECT * FROM SalesSummary;\r\nERROR 1146: Table \'RUNOOB.SalesSummary\' doesn\'t exist\r\n</pre>', null, 'MySQL 临时表|删除MySQL 临时表|');
INSERT INTO `schoolcontent` VALUES ('277', '280', '<h1>MySQL 复制表</h1> \n<p>如果我们需要完全的复制MySQL的数据表，包括表的结构，索引，默认值等。 如果仅仅使用<strong>CREATE TABLE ... SELECT </strong>命令，是无法实现的。</p> \n<p>本章节将为大家介绍如何完整的复制MySQL数据表，步骤如下：</p> \n<ul> \n <li>使用 <strong>SHOW CREATE TABLE</strong> 命令获取创建数据表(<strong>CREATE TABLE</strong>) 语句，该语句包含了原数据表的结构，索引等。</li> \n <li> </li>\n <li>复制以下命令显示的SQL语句，修改数据表名，并执行SQL语句，通过以上命令 将完全的复制数据表结构。</li> \n <li>如果你想复制表的内容，你就可以使用<strong> INSERT INTO ... SELECT </strong> 语句来实现。</li> \n</ul> \n<h3>实例</h3> \n<p>尝试以下实例来复制表 runoob_tbl 。</p> \n<p><strong>步骤一：</strong></p> \n<p>获取数据表的完整结构。</p> \n<pre>\r\nmysql&gt; SHOW CREATE TABLE runoob_tbl \\G;\r\n*************************** 1. row ***************************\r\n       Table: runoob_tbl\r\nCreate Table: CREATE TABLE `runoob_tbl` (\r\n  `runoob_id` int(11) NOT NULL auto_increment,\r\n  `runoob_title` varchar(100) NOT NULL default \'\',\r\n  `runoob_author` varchar(40) NOT NULL default \'\',\r\n  `submission_date` date default NULL,\r\n  PRIMARY KEY  (`runoob_id`),\r\n  UNIQUE KEY `AUTHOR_INDEX` (`runoob_author`)\r\n) ENGINE=InnoDB \r\n1 row in set (0.00 sec)\r\n\r\nERROR:\r\nNo query specified\r\n</pre> \n<p><strong>步骤二：</strong></p> \n<p>修改SQL语句的数据表名，并执行SQL语句。</p> \n<pre>\r\nmysql&gt; CREATE TABLE `clone_tbl` (\r\n  -&gt; `runoob_id` int(11) NOT NULL auto_increment,\r\n  -&gt; `runoob_title` varchar(100) NOT NULL default \'\',\r\n  -&gt; `runoob_author` varchar(40) NOT NULL default \'\',\r\n  -&gt; `submission_date` date default NULL,\r\n  -&gt; PRIMARY KEY  (`runoob_id`),\r\n  -&gt; UNIQUE KEY `AUTHOR_INDEX` (`runoob_author`)\r\n-&gt; ) ENGINE=InnoDB;\r\nQuery OK, 0 rows affected (1.80 sec)\r\n</pre> \n<p><strong>步骤三：</strong></p> \n<p>执行完第二步骤后，你将在数据库中创建新的克隆表 clone_tbl。 如果你想拷贝数据表的数据你可以使用<strong> INSERT INTO... SELECT </strong> 语句来实现。</p> \n<pre>\r\nmysql&gt; INSERT INTO clone_tbl (runoob_id,\r\n    -&gt;                        runoob_title,\r\n    -&gt;                        runoob_author,\r\n    -&gt;                        submission_date)\r\n    -&gt; SELECT runoob_id,runoob_title,\r\n    -&gt;        runoob_author,submission_date\r\n    -&gt; FROM runoob_tbl;\r\nQuery OK, 3 rows affected (0.07 sec)\r\nRecords: 3  Duplicates: 0  Warnings: 0\r\n</pre> \n<p>执行以上步骤后，你将完整的复制表，包括表结构及表数据。</p>', null, 'MySQL 复制表|');
INSERT INTO `schoolcontent` VALUES ('278', '281', '<h1>MySQL 元数据</h1> \n<p>你可能想知道MySQL以下三种信息：</p> \n<ul> \n <li><strong>查询结果信息：</strong> SELECT, UPDATE 或 DELETE语句影响的记录数。</li> \n <li><strong>数据库和数据表的信息：</strong> 包含了数据库及数据表的结构信息。 </li> \n <li><strong>MySQL服务器信息：</strong> 包含了数据库服务器的当前状态，版本号等。</li> \n</ul> \n<p>在MySQL的命令提示符中，我们可以很容易的获取以上服务器信息。 但如果使用Perl或PHP等脚本语言，你就需要调用特定的接口函数来获取。 接下来我们会详细介绍。 </p> \n<hr /> \n<h2>获取查询语句影响的记录数</h2> \n<h3>PERL 实例</h3> \n<p> 在 DBI 脚本中， 语句影响的记录数通过函数 do( ) 或 execute( )返回：</p> \n<pre>\r\n# 方法 1\r\n# 使用do( ) 执行  $query \r\nmy $count = $dbh-&gt;do ($query);\r\n# 如果发生错误会输出 0\r\nprintf &quot;%d rows were affected\\n&quot;, (defined ($count) ? $count : 0);\r\n\r\n# 方法 2\r\n# 使用prepare( ) 及 execute( ) 执行  $query \r\nmy $sth = $dbh-&gt;prepare ($query);\r\nmy $count = $sth-&gt;execute ( );\r\nprintf &quot;%d rows were affected\\n&quot;, (defined ($count) ? $count : 0);\r\n</pre> \n<h3> PHP 实例</h3> \n<p>在PHP中，你可以使用 mysql_affected_rows( ) 函数来获取查询语句影响的记录数。 </p> \n<pre>\r\n$result_id = mysql_query ($query, $conn_id);\r\n# 如果查询失败返回 \r\n$count = ($result_id ? mysql_affected_rows ($conn_id) : 0);\r\nprint (&quot;$count rows were affected\\n&quot;);\r\n</pre> \n<hr /> \n<h2>数据库和数据表列表</h2> \n<p>你可以很容易的在MySQL服务器中获取数据库和数据表列表。 如果你没有足够的权限，结果将返回 null。</p> \n<p>你也可以使用 SHOW TABLES 或 SHOW DATABASES 语句来获取数据库和数据表列表。</p> \n<h3> PERL 实例</h3> \n<pre>\r\n# 获取当前数据库中所有可用的表。\r\nmy @tables = $dbh-&gt;tables ( );\r\nforeach $table (@tables ){\r\n   print &quot;Table Name $table\\n&quot;;\r\n}\r\n</pre> \n<h3> PHP 实例</h3> \n<pre>\r\n&lt;?php\r\n$con = mysql_connect(&quot;localhost&quot;, &quot;userid&quot;, &quot;password&quot;);\r\nif (!$con)\r\n{\r\n  die(\'Could not connect: \' . mysql_error());\r\n}\r\n\r\n$db_list = mysql_list_dbs($con);\r\n\r\nwhile ($db = mysql_fetch_object($db_list))\r\n{\r\n  echo $db-&gt;Database . &quot;&lt;br /&gt;&quot;;\r\n}\r\nmysql_close($con);\r\n?&gt;\r\n</pre> \n<hr /> \n<h2>获取服务器元数据</h2> \n<p>以下命令语句可以在MySQL的命令提示符使用，也可以在脚本中 使用，如PHP脚本。</p> \n<table class=\"reference\"> \n <tbody>\n  <tr>\n   <th>命令</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>SELECT VERSION( )</td>\n   <td>服务器版本信息</td>\n  </tr> \n  <tr>\n   <td>SELECT DATABASE( )</td>\n   <td>当前数据库名 (或者返回空)</td>\n  </tr> \n  <tr>\n   <td>SELECT USER( )</td>\n   <td>当前用户名</td>\n  </tr> \n  <tr>\n   <td>SHOW STATUS</td>\n   <td>服务器状态</td>\n  </tr> \n  <tr>\n   <td>SHOW VARIABLES</td>\n   <td>服务器配置变量</td>\n  </tr> \n </tbody>\n</table>', null, 'MySQL 元数据|获取查询语句影响的记录数|数据库和数据表列表|获取服务器元数据|');
INSERT INTO `schoolcontent` VALUES ('279', '282', '<h1>MySQL 序列使用</h1> \n<p>MySQL序列是一组整数：1, 2, 3, ...，由于一张数据表只能有一个字段自增主键， 如果你想实现其他字段也实现自动增加，就可以使用MySQL序列来实现。</p> \n<p>本章我们将介绍如何使用MySQL的序列。</p> \n<hr /> \n<h2>使用AUTO_INCREMENT</h2> \n<p>MySQL中最简单使用序列的方法就是使用 MySQL AUTO_INCREMENT 来定义列。</p> \n<h3>实例</h3> \n<p>以下实例中创建了数据表insect， insect中id无需指定值可实现自动增长。</p> \n<pre>\r\nmysql&gt; CREATE TABLE insect\r\n    -&gt; (\r\n    -&gt; id INT UNSIGNED NOT NULL AUTO_INCREMENT,\r\n    -&gt; PRIMARY KEY (id),\r\n    -&gt; name VARCHAR(30) NOT NULL, # type of insect\r\n    -&gt; date DATE NOT NULL, # date collected\r\n    -&gt; origin VARCHAR(30) NOT NULL # where collected\r\n);\r\nQuery OK, 0 rows affected (0.02 sec)\r\nmysql&gt; INSERT INTO insect (id,name,date,origin) VALUES\r\n    -&gt; (NULL,\'housefly\',\'2001-09-10\',\'kitchen\'),\r\n    -&gt; (NULL,\'millipede\',\'2001-09-10\',\'driveway\'),\r\n    -&gt; (NULL,\'grasshopper\',\'2001-09-10\',\'front yard\');\r\nQuery OK, 3 rows affected (0.02 sec)\r\nRecords: 3  Duplicates: 0  Warnings: 0\r\nmysql&gt; SELECT * FROM insect ORDER BY id;\r\n+----+-------------+------------+------------+\r\n| id | name        | date       | origin     |\r\n+----+-------------+------------+------------+\r\n|  1 | housefly    | 2001-09-10 | kitchen    |\r\n|  2 | millipede   | 2001-09-10 | driveway   |\r\n|  3 | grasshopper | 2001-09-10 | front yard |\r\n+----+-------------+------------+------------+\r\n3 rows in set (0.00 sec)\r\n</pre> \n<hr /> \n<h2>获取AUTO_INCREMENT值</h2> \n<p>在MySQL的客户端中你可以使用 SQL中的LAST_INSERT_ID( ) 函数来获取最后的插入表中的自增列的值。</p> \n<p>在PHP或PERL脚本中也提供了相应的函数来获取最后的插入表中的自增列的值。</p> \n<h3>PERL实例</h3>\n<p> 使用 mysql_insertid 属性来获取 AUTO_INCREMENT 的值。 实例如下：</p> \n<pre>\r\n$dbh-&gt;do (&quot;INSERT INTO insect (name,date,origin)\r\nVALUES(\'moth\',\'2001-09-14\',\'windowsill\')&quot;);\r\nmy $seq = $dbh-&gt;{mysql_insertid};\r\n</pre> \n<h3>PHP实例</h3> \n<p>PHP 通过 mysql_insert_id ()函数来获取执行的插入SQL语句中 AUTO_INCREMENT列的值。 </p>\n<pre>\r\nmysql_query (&quot;INSERT INTO insect (name,date,origin)\r\nVALUES(\'moth\',\'2001-09-14\',\'windowsill\')&quot;, $conn_id);\r\n$seq = mysql_insert_id ($conn_id);\r\n</pre> \n<hr /> \n<h2>重置序列</h2> \n<p>如果你删除了数据表中的多条记录，并希望对剩下数据的AUTO_INCREMENT列进行重新排列，那么你可以通过删除自增的列，然后重新添加来实现。 不过该操作要非常小心，如果在删除的同时又有新记录添加，有可能会出现数据混乱。操作如下所示：</p> \n<pre>\r\nmysql&gt; ALTER TABLE insect DROP id;\r\nmysql&gt; ALTER TABLE insect\r\n    -&gt; ADD id INT UNSIGNED NOT NULL AUTO_INCREMENT FIRST,\r\n    -&gt; ADD PRIMARY KEY (id);\r\n</pre> \n<hr /> \n<h2>设置序列的开始值</h2> \n<p>一般情况下序列的开始值为1，但如果你需要指定一个开始值100，那我们可以通过以下语句来实现：</p> \n<pre>\r\nmysql&gt; CREATE TABLE insect\r\n    -&gt; (\r\n    -&gt; id INT UNSIGNED NOT NULL AUTO_INCREMENT = 100,\r\n    -&gt; PRIMARY KEY (id),\r\n    -&gt; name VARCHAR(30) NOT NULL, # type of insect\r\n    -&gt; date DATE NOT NULL, # date collected\r\n    -&gt; origin VARCHAR(30) NOT NULL # where collected\r\n);\r\n</pre> \n<p>或者你也可以在表创建成功后，通过以下语句来实现：</p> \n<pre>\r\nmysql&gt; ALTER TABLE t AUTO_INCREMENT = 100;\r\n</pre>', null, 'MySQL 序列使用|使用AUTO_INCREMENT|获取AUTO_INCREMENT值|重置序列|设置序列的开始值|');
INSERT INTO `schoolcontent` VALUES ('280', '283', '<h1>MySQL 处理重复数据</h1> \n<p>有些 MySQL 数据表中可能存在重复的记录，有些情况我们允许重复数据的存在，但有时候我们也需要删除这些重复的数据。</p> \n<p>本章节我们将为大家介绍如何防止数据表出现重复数据及如何删除数据表中的重复数据。</p> \n<hr /> \n<h2>防止表中出现重复数据</h2> 你可以在MySQL数据表中设置指定的字段为\n<strong> PRIMARY KEY（主键） </strong> 或者\n<strong> UNIQUE（唯一） </strong>索引来保证数据的唯一性。 \n<p></p> \n<p>让我们尝试一个实例：下表中无索引及主键，所以该表允许出现多条重复记录。</p> \n<pre>\r\nCREATE TABLE person_tbl\r\n(\r\n    first_name CHAR(20),\r\n    last_name CHAR(20),\r\n    sex CHAR(10)\r\n);\r\n</pre> \n<p>如果你想设置表中字段first_name，last_name数据不能重复，你可以设置双主键模式来设置数据的唯一性， 如果你设置了双主键，那么那个键的默认值不能为NULL，可设置为NOT NULL。如下所示：</p> \n<pre>\r\nCREATE TABLE person_tbl\r\n(\r\n   first_name CHAR(20) NOT NULL,\r\n   last_name CHAR(20) NOT NULL,\r\n   sex CHAR(10),\r\n   PRIMARY KEY (last_name, first_name)\r\n);\r\n</pre> \n<p>如果我们设置了唯一索引，那么在插入重复数据时，SQL语句将无法执行成功,并抛出错。</p> \n<p>INSERT IGNORE INTO与INSERT INTO的区别就是INSERT IGNORE会忽略数据库中已经存在的数据，如果数据库没有数据，就插入新的数据，如果有数据的话就跳过这条数据。这样就可以保留数据库中已经存在数据，达到在间隙中插入数据的目的。 </p> \n<p>以下实例使用了INSERT IGNORE INTO，执行后不会出错，也不会向数据表中插入重复数据：</p> \n<pre>\r\nmysql&gt; INSERT IGNORE INTO person_tbl (last_name, first_name)\r\n    -&gt; VALUES( \'Jay\', \'Thomas\');\r\nQuery OK, 1 row affected (0.00 sec)\r\nmysql&gt; INSERT IGNORE INTO person_tbl (last_name, first_name)\r\n    -&gt; VALUES( \'Jay\', \'Thomas\');\r\nQuery OK, 0 rows affected (0.00 sec)\r\n</pre> \n<p>INSERT IGNORE INTO当插入数据时，在设置了记录的唯一性后，如果插入重复数据，将不返回错误，只以警告形式返回。 而REPLACE INTO into如果存在primary 或 unique相同的记录，则先删除掉。再插入新记录。</p> \n<p>另一种设置数据的唯一性方法是添加一个UNIQUE索引，如下所示：</p> \n<pre>\r\nCREATE TABLE person_tbl\r\n(\r\n   first_name CHAR(20) NOT NULL,\r\n   last_name CHAR(20) NOT NULL,\r\n   sex CHAR(10)\r\n   UNIQUE (last_name, first_name)\r\n);\r\n</pre> \n<hr /> \n<h2>统计重复数据</h2> \n<p>以下我们将统计表中 first_name 和 last_name的重复记录数：</p> \n<pre>\r\nmysql&gt; SELECT COUNT(*) as repetitions, last_name, first_name\r\n    -&gt; FROM person_tbl\r\n    -&gt; GROUP BY last_name, first_name\r\n    -&gt; HAVING repetitions &gt; 1;\r\n</pre> \n<p>以上查询语句将返回 person_tbl 表中重复的记录数。 一般情况下，查询重复的值，请执行以下操作：</p> \n<ul> \n <li> 确定哪一列包含的值可能会重复。</li> \n <li> 在列选择列表使用COUNT(*)列出的那些列。</li> \n <li>在GROUP BY子句中列出的列。</li> \n <li> HAVING子句设置重复数大于1。</li> \n</ul> \n<hr /> \n<h2>过滤重复数据</h2> \n<p>如果你需要读取不重复的数据可以在 SELECT 语句中使用 DISTINCT 关键字来过滤重复数据。</p> \n<pre>\r\nmysql&gt; SELECT DISTINCT last_name, first_name\r\n    -&gt; FROM person_tbl\r\n    -&gt; ORDER BY last_name;\r\n</pre> \n<p>你也可以使用 GROUP BY 来读取数据表中不重复的数据：</p> \n<pre>\r\nmysql&gt; SELECT last_name, first_name\r\n    -&gt; FROM person_tbl\r\n    -&gt; GROUP BY (last_name, first_name);\r\n</pre> \n<hr /> \n<h2>删除重复数据</h2> \n<p>如果你想删除数据表中的重复数据，你可以使用以下的SQL语句：</p> \n<pre>\r\nmysql&gt; CREATE TABLE tmp SELECT last_name, first_name, sex\r\n    -&gt;                  FROM person_tbl;\r\n    -&gt;                  GROUP BY (last_name, first_name);\r\nmysql&gt; DROP TABLE person_tbl;\r\nmysql&gt; ALTER TABLE tmp RENAME TO person_tbl;\r\n</pre> \n<p>当然你也可以在数据表中添加 INDEX（索引） 和 PRIMAY KEY（主键）这种简单的方法来删除表中的重复记录。方法如下：</p> \n<pre>\r\nmysql&gt; ALTER IGNORE TABLE person_tbl\r\n    -&gt; ADD PRIMARY KEY (last_name, first_name);\r\n</pre>', null, 'MySQL 处理重复数据|防止表中出现重复数据|统计重复数据|过滤重复数据|删除重复数据|');
INSERT INTO `schoolcontent` VALUES ('281', '284', '<h1>MySQL 及 SQL 注入</h1> \n<p> 如果您通过网页获取用户输入的数据并将其插入一个MySQL数据库，那么就有可能发生SQL注入安全的问题。</p> \n<p>本章节将为大家介绍如何防止SQL注入，并通过脚本来过滤SQL中注入的字符。</p> \n<p>所谓SQL注入，就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。 </p> \n<p>我们永远不要信任用户的输入，我们必须认定用户输入的数据都是不安全的，我们都需要对用户输入的数据进行过滤处理。</p> \n<p>以下实例中，输入的用户名必须为字母、数字及下划线的组合，且用户名长度为 8 到 20 个字符之间：</p> \n<pre>\r\nif (preg_match(&quot;/^\\w{8,20}$/&quot;, $_GET[\'username\'], $matches))\r\n{\r\n   $result = mysql_query(&quot;SELECT * FROM users \r\n                          WHERE username=$matches[0]&quot;);\r\n}\r\n else \r\n{\r\n   echo &quot;username 输入异常&quot;;\r\n}\r\n</pre> \n<p>让我们看下在没有过滤特殊字符时，出现的SQL情况：</p> \n<pre>\r\n// 设定$name 中插入了我们不需要的SQL语句\r\n$name = &quot;Qadir\'; DELETE FROM users;&quot;;\r\nmysql_query(&quot;SELECT * FROM users WHERE name=\'{$name}\'&quot;);\r\n</pre> \n<p>以上的注入语句中，我们没有对 $name 的变量进行过滤，$name 中插入了我们不需要的SQL语句，将删除 users 表中的所有数据。</p> \n<p>在PHP中的 mysql_query() 是不允许执行多个SQL语句的，但是在 SQLite 和 PostgreSQL 是可以同时执行多条SQL语句的，所以我们对这些用户的数据需要进行严格的验证。</p> \n<p>防止SQL注入，我们需要注意以下几个要点：</p> \n<ul> \n <li> 1.永远不要信任用户的输入。对用户的输入进行校验，可以通过正则表达式，或限制长度；对单引号和 双&quot;-&quot;进行转换等。</li>\n <li> 2.永远不要使用动态拼装sql，可以使用参数化的sql或者直接使用存储过程进行数据查询存取。</li>\n <li> 3.永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。</li>\n <li> 4.不要把机密信息直接存放，加密或者hash掉密码和敏感的信息。</li>\n <li> 5.应用的异常信息应该给出尽可能少的提示，最好使用自定义的错误信息对原始错误信息进行包装</li>\n <li> 6.sql注入的检测方法一般采取辅助软件或网站平台来检测，软件一般采用sql注入检测工具jsky，网站平台就有亿思网站安全平台检测工具。MDCSOFT SCAN等。采用MDCSOFT-IPS可以有效的防御SQL注入，XSS攻击等。</li>\n</ul> \n<hr /> \n<h2> 防止SQL注入</h2> \n<p> 在脚本语言，如Perl和PHP你可以对用户输入的数据进行转义从而来防止SQL注入。 </p> \n<p>PHP的MySQL扩展提供了mysql_real_escape_string()函数来转义特殊的输入字符。</p> \n<pre>\r\nif (get_magic_quotes_gpc()) \r\n{\r\n  $name = stripslashes($name);\r\n}\r\n$name = mysql_real_escape_string($name);\r\nmysql_query(&quot;SELECT * FROM users WHERE name=\'{$name}\'&quot;);\r\n</pre> \n<hr />\n<h2>Like语句中的注入</h2> \n<p> like查询时，如果用户输入的值有&quot;_&quot;和&quot;%&quot;，则会出现这种情况：用户本来只是想查询&quot;abcd_&quot;，查询结果中却有&quot;abcd_&quot;、&quot;abcde&quot;、&quot;abcdf&quot;等等；用户要查询&quot;30%&quot;（注：百分之三十）时也会出现问题。 </p> \n<p>在PHP脚本中我们可以使用addcslashes()函数来处理以上情况，如下实例：</p> \n<pre>\r\n$sub = addcslashes(mysql_real_escape_string(&quot;%something_&quot;), &quot;%_&quot;);\r\n// $sub == \\%something\\_\r\nmysql_query(&quot;SELECT * FROM messages WHERE subject LIKE \'{$sub}%\'&quot;);\r\n</pre> \n<p>addcslashes() 函数在指定的字符前添加反斜杠。</p> \n<p>语法格式:</p> \n<pre>\r\naddcslashes(string,characters)\r\n</pre> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>参数</th> \n   <th>描述</th> \n  </tr> \n  <tr> \n   <td>string</td> \n   <td>必需。规定要检查的字符串。</td> \n  </tr> \n  <tr> \n   <td>characters</td> \n   <td>可选。规定受 addcslashes() 影响的字符或字符范围。</td> \n  </tr> \n </tbody>\n</table> \n<p>具体应用可以查看：<a href=\"http://www.w3cschool.cc/php/func-string-addcslashes.html\" target=\"_blank\">PHP addcslashes() 函数</a></p>', null, 'MySQL 及 SQL 注入|防止SQL注入|Like语句中的注入|');
INSERT INTO `schoolcontent` VALUES ('282', '285', '<h1>MySQL 导出数据</h1> \n<p> MySQL中你可以使用<strong>SELECT...INTO OUTFILE</strong>语句来简单的导出数据到文本文件上。 </p> \n<hr /> \n<h2> 使用 SELECT ... INTO OUTFILE 语句导出数据</h2> \n<p>以下实例中我们将数据表 runoob_tbl 数据导出到 /tmp/tutorials.txt 文件中: </p> \n<pre>\r\nmysql&gt; SELECT * FROM runoob_tbl \r\n    -&gt; INTO OUTFILE \'/tmp/tutorials.txt\';\r\n</pre> \n<p>你可以通过命令选项来设置数据输出的指定格式，以下实例为导出 CSV 格式：</p> \n<pre>\r\nmysql&gt; SELECT * FROM passwd INTO OUTFILE \'/tmp/tutorials.txt\'\r\n    -&gt; FIELDS TERMINATED BY \',\' ENCLOSED BY \'&quot;\'\r\n    -&gt; LINES TERMINATED BY \'\\r\\n\';\r\n</pre> \n<p> 在下面的例子中，生成一个文件，各值用逗号隔开。这种格式可以被许多程序使用。</p> \n<pre>\r\nSELECT a,b,a+b INTO OUTFILE \'/tmp/result.text\'\r\nFIELDS TERMINATED BY \',\' OPTIONALLY ENCLOSED BY \'&quot;\'\r\nLINES TERMINATED BY \'\\n\'\r\nFROM test_table;\r\n</pre> \n<h3>SELECT ... INTO OUTFILE 语句有以下属性:</h3> \n<ul> \n <li> LOAD DATA INFILE是SELECT ... INTO OUTFILE的逆操作，SELECT句法。为了将一个数据库的数据写入一个文件，使用SELECT ... INTO OUTFILE，为了将文件读回数据库，使用LOAD DATA INFILE。 </li> \n <li> SELECT...INTO OUTFILE \'file_name\'形式的SELECT可以把被选择的行写入一个文件中。该文件被创建到服务器主机上，因此您必须拥有FILE权限，才能使用此语法。 </li> \n <li> 输出不能是一个已存在的文件。防止文件数据被篡改。 </li> \n <li>你需要有一个登陆服务器的账号来检索文件。否则 SELECT ... INTO OUTFILE 不会起任何作用。</li> \n <li> 在UNIX中，该文件被创建后是可读的，权限由MySQL服务器所拥有。这意味着，虽然你就可以读取该文件，但可能无法将其删除。 </li> \n</ul> \n<hr /> \n<h2>导出表作为原始数据</h2> \n<p> mysqldump是mysql用于转存储数据库的实用程序。它主要产生一个SQL脚本，其中包含从头重新创建数据库所必需的命令CREATE TABLE INSERT等。</p> \n<p></p>使用mysqldump导出数据需要使用 --tab 选项来指定导出文件指定的目录，该目标必须是可写的。\n<p></p> \n<p>以下实例将数据表 runoob_tbl 导出到 /tmp 目录中：</p> \n<pre>\r\n$ mysqldump -u root -p --no-create-info \\\r\n            --tab=/tmp RUNOOB runoob_tbl\r\npassword ******\r\n</pre> \n<hr /> \n<h2>导出SQL格式的数据</h2> \n<p>导出SQL格式的数据到指定文件，如下所示：</p> \n<pre>\r\n$ mysqldump -u root -p RUNOOB runoob_tbl &gt; dump.txt\r\npassword ******\r\n</pre> \n<p>以上命令创建的文件内容如下： </p> \n<pre>\r\n-- MySQL dump 8.23\r\n--\r\n-- Host: localhost    Database: RUNOOB\r\n---------------------------------------------------------\r\n-- Server version       3.23.58\r\n\r\n--\r\n-- Table structure for table `runoob_tbl`\r\n--\r\n\r\nCREATE TABLE runoob_tbl (\r\n  runoob_id int(11) NOT NULL auto_increment,\r\n  runoob_title varchar(100) NOT NULL default \'\',\r\n  runoob_author varchar(40) NOT NULL default \'\',\r\n  submission_date date default NULL,\r\n  PRIMARY KEY  (runoob_id),\r\n  UNIQUE KEY AUTHOR_INDEX (runoob_author)\r\n) TYPE=MyISAM;\r\n\r\n--\r\n-- Dumping data for table `runoob_tbl`\r\n--\r\n\r\nINSERT INTO runoob_tbl \r\n       VALUES (1,\'Learn PHP\',\'John Poul\',\'2007-05-24\');\r\nINSERT INTO runoob_tbl \r\n       VALUES (2,\'Learn MySQL\',\'Abdul S\',\'2007-05-24\');\r\nINSERT INTO runoob_tbl \r\n       VALUES (3,\'JAVA Tutorial\',\'Sanjay\',\'2007-05-06\');\r\n</pre> \n<p>如果你需要导出整个数据库的数据，可以使用以下命令：</p> \n<pre>\r\n$ mysqldump -u root -p RUNOOB &gt; database_dump.txt\r\npassword ******\r\n</pre> \n<p>如果需要备份所有数据库，可以使用以下命令：</p> \n<pre>\r\n$ mysqldump -u root -p --all-databases &gt; database_dump.txt\r\npassword ******\r\n</pre> \n<p> --all-databases 选项在 MySQL 3.23.12 及以后版本加入。</p> \n<p>该方法可用于实现数据库的备份策略。</p> \n<hr /> \n<h2>将数据表及数据库拷贝至其他主机</h2> \n<p>如果你需要将数据拷贝至其他的 MySQL 服务器上, 你可以在 mysqldump 命令中指定数据库名及数据表。</p> \n<p>在源主机上执行以下命令，将数据备份至 dump.txt 文件中: </p> \n<pre>\r\n$ mysqldump -u root -p database_name table_name &gt; dump.txt\r\npassword *****\r\n</pre> \n<p>如果完整备份数据库，则无需使用特定的表名称。 </p>\n<p>如果你需要将备份的数据库导入到MySQL服务器中，可以使用以下命令，使用以下命令你需要确认数据库已经创建：</p> \n<pre>\r\n$ mysql -u root -p database_name &lt; dump.txt\r\npassword *****\r\n</pre> \n<pre>你也可以使用以下命令将导出的数据直接导入到远程的服务器上，但请确保两台服务器是相通的，是可以相互访问的：&lt;/p&gt;\r\n$ mysqldump -u root -p database_name \\\r\n       | mysql -h other-host.com database_name\r\n</pre> \n<p>以上命令中使用了管道来将导出的数据导入到指定的远程主机上。</p>', null, 'MySQL 导出数据|使用 SELECT ... INTO OUTFILE 语句导出数据|导出表作为原始数据|导出SQL格式的数据|将数据表及数据库拷贝至其他主机|');
INSERT INTO `schoolcontent` VALUES ('283', '286', '<h1>MySQL 导入数据</h1> \n<p> MySQL中可以使用两种简单的方式来导入MySQL导出的数据。</p> \n<p></p> \n<hr /> \n<h2> 使用 LOAD DATA 导入数据</h2> \n<p>MySQL 中提供了LOAD DATA INFILE语句来插入数据。 以下实例中将从当前目录中读取文件 dump.txt ，将该文件中的数据插入到当前数据库的 mytbl 表中。 </p>\n<pre>\r\nmysql&gt; LOAD DATA LOCAL INFILE \'dump.txt\' INTO TABLE mytbl;\r\n</pre> \n<p>　如果指定LOCAL关键词，则表明从客户主机上按路径读取文件。如果没有指定，则文件在服务器上按路径读取文件。</p> \n<p>你能明确地在LOAD DATA语句中指出列值的分隔符和行尾标记，但是默认标记是定位符和换行符。</p> \n<p>两个命令的 FIELDS 和 LINES 子句的语法是一样的。两个子句都是可选的，但是如果两个同时被指定，FIELDS 子句必须出现在 LINES 子句之前。</p> \n<p>如果用户指定一个 FIELDS 子句，它的子句 （TERMINATED BY、[OPTIONALLY] ENCLOSED BY 和 ESCAPED BY) 也是可选的，不过，用户必须至少指定它们中的一个。</p> \n<pre>\r\nmysql&gt; LOAD DATA LOCAL INFILE \'dump.txt\' INTO TABLE mytbl\r\n  -&gt; FIELDS TERMINATED BY \':\'\r\n  -&gt; LINES TERMINATED BY \'\\r\\n\';\r\n</pre>\n<p> LOAD DATA 默认情况下是按照数据文件中列的顺序插入数据的，如果数据文件中的列与插入表中的列不一致，则需要指定列的顺序。</p> \n<p>如，在数据文件中的列顺序是 a,b,c，但在插入表的列顺序为b,c,a，则数据导入语法如下： </p>\n<pre>\r\nmysql&gt; LOAD DATA LOCAL INFILE \'dump.txt\' \r\n    -&gt; INTO TABLE mytbl (b, c, a);\r\n</pre> \n<hr /> \n<h2>使用 mysqlimport 导入数据</h2> \n<p> mysqlimport客户端提供了LOAD DATA INFILEQL语句的一个命令行接口。mysqlimport的大多数选项直接对应LOAD DATA INFILE子句。 </p> \n<p>从文件 dump.txt 中将数据导入到 mytbl 数据表中, 可以使用以下命令：</p> \n<pre>\r\n$ mysqlimport -u root -p --local database_name dump.txt\r\npassword *****\r\n</pre> \n<p> mysqlimport命令可以指定选项来设置指定格式,命令语句格式如下：</p> \n<pre>\r\n$ mysqlimport -u root -p --local --fields-terminated-by=&quot;:&quot; \\\r\n   --lines-terminated-by=&quot;\\r\\n&quot;  database_name dump.txt\r\npassword *****\r\n</pre> \n<p> mysqlimport 语句中使用 --columns 选项来设置列的顺序：</p> \n<pre>\r\n$ mysqlimport -u root -p --local --columns=b,c,a \\\r\n    database_name dump.txt\r\npassword *****\r\n</pre> \n<hr /> \n<h2>mysqlimport的常用选项介绍</h2> \n<table class=\"reference\">\n <tbody>\n  <tr>\n   <th>选项</th>\n   <th> 功能</th>\n  </tr> \n  <tr>\n   <td> -d or --delete</td>\n   <td> 新数据导入数据表中之前删除数据数据表中的所有信息</td>\n  </tr>\n  <tr>\n   <td> -f or --force </td>\n   <td> 不管是否遇到错误，mysqlimport将强制继续插入数据</td>\n  </tr>\n  <tr>\n   <td> -i or --ignore </td>\n   <td> mysqlimport跳过或者忽略那些有相同唯一 关键字的行， 导入文件中的数据将被忽略。</td>\n  </tr>\n  <tr>\n   <td> -l or -lock-tables </td>\n   <td> 数据被插入之前锁住表，这样就防止了， 你在更新数据库时，用户的查询和更新受到影响。</td>\n  </tr>\n  <tr>\n   <td> -r or -replace </td>\n   <td> 这个选项与－i选项的作用相反；此选项将替代 表中有相同唯一关键字的记录。</td>\n  </tr>\n  <tr>\n   <td> --fields-enclosed- by= char</td>\n   <td> 指定文本文件中数据的记录时以什么括起的， 很多情况下 数据以双引号括起。 默认的情况下数据是没有被字符括起的。</td>\n  </tr>\n  <tr>\n   <td> --fields-terminated- by=char</td>\n   <td> 指定各个数据的值之间的分隔符，在句号分隔的文件中， 分隔符是句号。您可以用此选项指定数据之间的分隔符。 默认的分隔符是跳格符（Tab）</td>\n  </tr>\n  <tr>\n   <td> --lines-terminated- by=str</td>\n   <td> 此选项指定文本文件中行与行之间数据的分隔字符串 或者字符。 默认的情况下mysqlimport以newline为行分隔符。 您可以选择用一个字符串来替代一个单个的字符： 一个新行或者一个回车。</td>\n  </tr>\n </tbody>\n</table> \n<p> mysqlimport命令常用的选项还有-v 显示版本（version）， -p 提示输入密码（password）等。</p>', null, 'MySQL 导入数据|使用 LOAD DATA 导入数据|使用 mysqlimport 导入数据|mysqlimport的常用选项介绍|');
INSERT INTO `schoolcontent` VALUES ('284', '287', '<h1>Java 教程</h1> \n<div class=\"tutintro\"> \n <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java.jpg\" alt=\"java\" width=\"123\" height=\"90\" class=\"alignnone size-full wp-image-4985\" /> \n <p>Java 是由Sun Microsystems公司于1995年5月推出的高级程序设计语言。</p> \n <p>Java可运行于多个平台，如Windows, Mac OS，及其他多种UNIX版本的系统。</p> \n <p>本教程通过简单的实例将让大家更好的了解JAVA编程语言。</p> \n <p><a href=\"http://www.runoob.com/try/showjava.php?filename=HelloWorld\" target=\"_blank\"><strong>Java 在线工具</strong></a></p> \n <p><a href=\"http://www.runoob.com/manual/jdk1.6/\" target=\"_blank\"><strong>JDK 1.6 在线中文手册</strong></a></p> \n</div> \n<hr /> \n<h2> 我的第一个JAVA程序</h2> \n<p> 以下我们通过一个简单的实例来展示 Java 编程，创建文件 <strong>HelloWorld.java(文件名需与类名一致)</strong>, 代码如下：</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   public class HelloWorld {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;public static void main(String []args) {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;Hello World&quot;);\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;}\n  <br /> } \n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/showjava.php?filename=HelloWorld\" class=\"showbtn\">运行实例 &raquo;</a> \n</div> \n<p>运行以上实例，输出结果如下：</p> \n<pre>\r\n$ javac HelloWorld.java\r\n$ java HelloWorld\r\nHello World\r\n</pre> \n<h3>执行命令解析：</h3> \n<p>以上我们使用了两个命令 <strong>javac</strong> 和 <strong>java</strong>。</p> \n<p> <strong>javac </strong> 命令用于将 java 源文件编译为 class 字节码文件，如： <strong>javac HelloWorld.java</strong>。</p> \n<p> 运行javac命令后，如果成功编译没有错误的话，会出现一个 HelloWorld.class 的文件。</p> \n<p><strong>java</strong> 命令可以运行 class 字节码文件，如: java HelloWorld。</p> \n<p><strong>注意</strong>：java命令后面不要加.class。</p> \n<p>Gif 图演示：</p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-HelloWorld.gif\" /> \n<hr /> \n<h2>开始学习JAVA编程</h2> \n<ul>\n <li> <p><a target=\"_top\" href=\"http://www.runoob.com/java/java-intro.html\"> 开始学习Java课程 </a></p></li>\n <li> <p><a target=\"_top\" href=\"http://www.runoob.com/java/java-inheritance.html\"> Java 面向对象课程 </a></p></li>\n <li> <p><a target=\"_top\" href=\"http://www.w3cschool.cc/java/java-data-structures.html\"> Java 高级课程 </a></p></li>\n</ul>', null, 'Java 教程|我的第一个JAVA程序|实例|开始学习JAVA编程|');
INSERT INTO `schoolcontent` VALUES ('285', '288', '<h1>Java 简介</h1> \n<p>Java是由Sun Microsystems公司于1995年5月推出的Java面向对象程序设计语言和Java平台的总称。由James Gosling和同事们共同研发，并在1995年正式推出。</p> \n<p>Java分为三个体系：</p>\n<ul>\n <li>JavaSE（J2SE）（Java2 Platform Standard Edition，java平台标准版）</li>\n <li> JavaEE(J2EE)(Java 2 Platform,Enterprise Edition，java平台企业版)</li>\n <li>JavaME(J2ME)(Java 2 Platform Micro Edition，java平台微型版)。</li>\n</ul> \n<p>2005年6月，JavaOne大会召开，SUN公司公开Java SE 6。此时，Java的各种版本已经更名以取消其中的数字&quot;2&quot;：J2EE更名为Java EE, J2SE更名为Java SE，J2ME更名为Java ME。 </p> \n<hr /> \n<h2> 主要特性 </h2> \n<ul> \n <li><strong>Java语言是简单的：</strong><p>Java语言的语法与C语言和C++语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java丢弃了C++中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java语言不使用指针，而是引用。并提供了自动的废料收集，使得程序员不必为内存管理而担忧。</p></li> \n <li><strong>Java语言是面向对象的：</strong><p>Java语言提供类、接口和继承等原语，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为implements）。Java语言全面支持动态绑定，而C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。</p></li> \n <li><strong>Java语言是分布式的：</strong><p>Java语言支持Internet应用的开发，在基本的Java应用编程接口中有一个网络应用编程接口（java net），它提供了用于网络应用编程的类库，包括URL、URLConnection、Socket、ServerSocket等。Java的RMI（远程方法激活）机制也是开发分布式应用的重要手段。</p></li> \n <li><strong>Java语言是健壮的：</strong><p>Java的强类型机制、异常处理、垃圾的自动收集等是Java程序健壮性的重要保证。对指针的丢弃是Java的明智选择。Java的安全检查机制使得Java更具健壮性。</p></li> \n <li><strong>Java语言是安全的：</strong><p>Java通常被用在网络环境中，为此，Java提供了一个安全机制以防恶意代码的攻击。除了Java语言具有的许多安全特性以外，Java对通过网络下载的类具有一个安全防范机制（类ClassLoader），如分配不同的名字空间以防替代本地的同名类、字节代码检查，并提供安全管理机制（类SecurityManager）让Java应用设置安全哨兵。</p></li> \n <li><strong>Java语言是体系结构中立的：</strong><p>Java程序（后缀为java的文件）在Java平台上被编译为体系结构中立的字节码格式（后缀为class的文件），然后可以在实现这个Java平台的任何系统中运行。这种途径适合于异构的网络环境和软件的分发。</p></li> \n <li><strong>Java语言是可移植的：</strong><p>这种可移植性来源于体系结构中立性，另外，Java还严格规定了各个基本数据类型的长度。Java系统本身也具有很强的可移植性，Java编译器是用Java实现的，Java的运行环境是用ANSI C实现的。</p></li> \n <li><strong>Java语言是解释型的：</strong><p>如前所述，Java程序在Java平台上被编译为字节码格式，然后可以在实现这个Java平台的任何系统中运行。在运行时，Java平台中的Java解释器对这些字节码进行解释执行，执行过程中需要的类在联接阶段被载入到运行环境中。</p></li> \n <li><strong>Java是高性能的：</strong><p>与那些解释型的高级脚本语言相比，Java的确是高性能的。事实上，Java的运行速度随着JIT(Just-In-Time）编译器技术的发展越来越接近于C++。</p></li> \n <li><strong>Java语言是多线程的：</strong><p>在Java语言中，线程是一种特殊的对象，它必须由Thread类或其子（孙）类来创建。通常有两种方法来创建线程：其一，使用型构为Thread(Runnable)的构造子将一个实现了Runnable接口的对象包装成一个线程，其二，从Thread类派生出子类并重写run方法，使用该子类创建的对象即为线程。值得注意的是Thread类已经实现了Runnable接口，因此，任何一个线程均有它的run方法，而run方法中包含了线程所要运行的代码。线程的活动由一组方法来控制。Java语言支持多个线程的同时执行，并提供多线程之间的同步机制（关键字为synchronized）。</p></li> \n <li><strong>Java语言是动态的：</strong><p>Java语言的设计目标之一是适应于动态变化的环境。Java程序需要的类能够动态地被载入到运行环境，也可以通过网络来载入所需要的类。这也有利于软件的升级。另外，Java中的类有一个运行时刻的表示，能进行运行时刻的类型检查。</p></li> \n</ul> \n<hr />\n<h2>发展历史</h2> \n<ul> \n <li>1995年5月23日，Java语言诞生</li> \n <li>1996年1月，第一个JDK-JDK1.0诞生</li> \n <li>1996年4月，10个最主要的操作系统供应商申明将在其产品中嵌入JAVA技术</li> \n <li>1996年9月，约8.3万个网页应用了JAVA技术来制作</li> \n <li>1997年2月18日，JDK1.1发布</li> \n <li>1997年4月2日，JavaOne会议召开，参与者逾一万人，创当时全球同类会议规模之纪录</li> \n <li>1997年9月，JavaDeveloperConnection社区成员超过十万</li> \n <li>1998年2月，JDK1.1被下载超过2,000,000次</li> \n <li>1998年12月8日，JAVA2企业平台J2EE发布</li> \n <li>1999年6月，SUN公司发布Java的三个版本：标准版（JavaSE,以前是J2SE）、企业版（JavaEE以前是J2EE）和微型版（JavaME，以前是J2ME）</li> \n <li>2000年5月8日，JDK1.3发布</li> \n <li>2000年5月29日，JDK1.4发布</li> \n <li>2001年6月5日，NOKIA宣布，到2003年将出售1亿部支持Java的手机</li> \n <li>2001年9月24日，J2EE1.3发布</li> \n <li>2002年2月26日，J2SE1.4发布，自此Java的计算能力有了大幅提升</li> \n <li>2004年9月30日18:00PM，J2SE1.5发布，成为Java语言发展史上的又一里程碑。为了表示该版本的重要性，J2SE1.5更名为Java SE 5.0</li> \n <li>2005年6月，JavaOne大会召开，SUN公司公开Java SE 6。此时，Java的各种版本已经更名，以取消其中的数字&quot;2&quot;：J2EE更名为Java EE，J2SE更名为Java SE，J2ME更名为Java ME</li> \n <li>2006年12月，SUN公司发布JRE6.0</li> \n <li>2009年04月20日，甲骨文74亿美元收购Sun。取得java的版权。</li> \n <li>2010年11月，由于甲骨文对于Java社区的不友善，因此Apache扬言将退出JCP[4]。</li> \n <li>2011年7月28日，甲骨文发布java7.0的正式版。</li> \n</ul> \n<hr />\n<h2>Java开发工具</h2> \n<p>Java语言尽量保证系统内存在1G以上，其他工具如下所示：</p> \n<ul> \n <li>Linux 系统或者Windows 95/98/2000/XP，WIN 7/8系统</li> \n <li>Java JDK 7</li> \n <li>Notepad编辑器或者其他编辑器。</li> \n <li>IDE：Eclipse</li> \n</ul> \n<p>安装好以上的工具后，我们就可以输出Java的第一个程序&quot;Hello World！&quot;</p> \n<pre>\r\npublic class HelloWorld {\r\n    public static void main(String []args) {\r\n       System.out.println(&quot;Hello World&quot;);\r\n    }\r\n} \r\n</pre> \n<p>在下一章节我们将介绍如何配置java开发环境。</p>', null, 'Java 简介|主要特性|发展历史|Java开发工具|');
INSERT INTO `schoolcontent` VALUES ('286', '289', '<h1>Java 开发环境配置</h1> \n<p>在本章节中我们将为大家介绍如何搭建Java开发环境。</p> \n<hr /> \n<h2>window系统安装java</h2> \n<h3>下载JDK</h3> \n<p>首先我们需要下载java开发工具包JDK，下载地址：<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/index.html\" target=\"_blank\">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a>，点击如下下载按钮：</p>\n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-download.jpg\" /> </p> \n<p>在下载页面中你需要选择接受许可，并根据自己的系统选择对应的版本，本文以 Window 64位系统为例：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-download-1.jpg\" /></p> \n<p>下载后JDK的安装根据提示进行，还有安装JDK的时候也会安装JRE，一并安装就可以了。 </p> \n<p>安装JDK，安装过程中可以自定义安装目录等信息，例如我们选择安装目录为 <strong>C:\\Program Files (x86)\\Java\\jdk1.8.0_91</strong>。 </p> \n<h3>配置环境变量</h3> \n<p>1.安装完成后，右击&quot;我的电脑&quot;，点击&quot;属性&quot;，选择&quot;高级系统设置&quot;；</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2013/12/win-java1.png\" /> </p>\n<p>2.选择&quot;高级&quot;选项卡，点击&quot;环境变量&quot;；</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-win2.png\" /> </p>\n<p>然后就会出现如下图所示的画面：</p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-win3.png\" /> \n<p>在&quot;系统变量&quot;中设置3项属性，JAVA_HOME,PATH,CLASSPATH(大小写无所谓),若已存在则点击&quot;编辑&quot;，不存在则点击&quot;新建&quot;。</p> \n<p>变量设置参数如下：</p> \n<ul>\n <li> 变量名：<strong>JAVA_HOME</strong> </li>\n <li> 变量值：<strong>C:\\Program Files (x86)\\Java\\jdk1.8.0_91</strong> &nbsp; &nbsp; &nbsp; &nbsp;// 要根据自己的实际路径配置</li>\n</ul> \n<ul>\n <li> 变量名：<strong>CLASSPATH</strong> </li>\n <li> 变量值：<strong>.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar;</strong> &nbsp; &nbsp; &nbsp; &nbsp; //记得前面有个&quot;.&quot;</li>\n</ul> \n<ul>\n <li> 变量名：<strong>Path</strong> </li>\n <li> 变量值：<strong>%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</strong></li>\n</ul> \n<h3>JAVA_HOME 设置</h3> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-win4.png\" /> </p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-win5.png\" /> </p> \n<h3>PATH设置</h3> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-win6.png\" /> </p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-win7.png\" /> </p> \n<h3>CLASSPATH 设置</h3> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-win8.png\" /> </p> \n<p>这是 Java 的环境配置，配置完成后，你可以启动 Eclipse 来编写代码，它会自动完成java环境的配置。</p> \n<blockquote>\n <p> <strong>注意：</strong>如果使用1.5以上版本的JDK，不用设置CLASSPATH环境变量，也可以正常编译和运行Java程序。</p> \n</blockquote> \n<h3>测试JDK是否安装成功</h3> \n<p>1、&quot;开始&quot;-&gt;&quot;运行&quot;，键入&quot;cmd&quot;；</p> \n<p>2、键入命令: <strong>java -version</strong>、<strong>java</strong>、<strong>javac</strong> 几个命令，出现以下信息，说明环境变量配置成功；</p>\n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-win9.png\" /></p> \n<hr /> \n<h2>Linux，UNIX，Solaris，FreeBSD环境变量设置</h2> \n<p>环境变量PATH应该设定为指向Java二进制文件安装的位置。如果设置遇到困难，请参考shell文档。</p> \n<p> 例如，假设你使用bash作为shell，你可以把下面的内容添加到你的 .bashrc文件结尾: export PATH=/path/to/java:$PATH </p> \n<hr /> \n<h2>流行JAVA开发工具</h2> \n<p>正所谓工欲善其事必先利其器，我们在开发java语言过程中同样需要依款不错的开发工具，目前市场上的IDE很多，本文为大家推荐以下下几款java开发工具：</p> \n<ul> \n <li><p><strong>Eclipse（推荐）:</strong>另一个免费开源的java IDE，下载地址： <a href=\"http://www.eclipse.org/\" target=\"_blank\"> http://www.eclipse.org/</a></p> <p>选择 <strong>Eclipse IDE for Java Developers</strong>：<br /> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/5A92DEAE-EFB9-493D-AC4D-808E529B533C.jpg\" /></p></li> \n <li><strong>Notepad++ : </strong>Notepad++ 是在微软视窗环境之下的一个免费的代码编辑器，下载地址：<a href=\"http://notepad-plus-plus.org/\" target=\"_blank\"> http://notepad-plus-plus.org/</a></li> \n <li><strong>Netbeans:</strong>开源免费的java IDE，下载地址： <a href=\"http://www.netbeans.org/index.html\" target=\"_blank\">http://www.netbeans.org/index.html</a></li> \n</ul> \n<hr /> \n<h2>使用 Eclipse 运行第一个 Java 程序</h2> \n<p>视频演示如下所示：</p> \n<video style=\"width: 80%;\" controls=\"\"> \n <source src=\"http://static.runoob.com/video/javadownload.mp4\" type=\"video/mp4\"></source> 您的浏览器不支持 HTML5 video 标签。 \n</video> \n<p>HelloWorld.java 文件代码：</p> \n<pre>\r\npublic class HelloWorld {\r\n    public static void main(String []args) {\r\n       System.out.println(&quot;Hello World&quot;);\r\n    }\r\n}\r\n</pre>', null, 'Java 开发环境配置|window系统安装java|Linux，UNIX，Solaris，FreeBSD环境变量设置|流行JAVA开发工具|使用 Eclipse 运行第一个 Java 程序|');
INSERT INTO `schoolcontent` VALUES ('287', '290', '<h1>Java 基础语法</h1> \n<p>一个Java程序可以认为是一系列对象的集合，而这些对象通过调用彼此的方法来协同工作。下面简要介绍下类、对象、方法和实例变量的概念。</p> \n<ul> \n <li> <strong>对象</strong>：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。</li> \n <li> <strong>类</strong>：类是一个模板，它描述一类对象的行为和状态。</li> \n <li> <strong>方法</strong>：方法就是行为，一个类可以有很多方法。逻辑运算、数据修改以及所有动作都是在方法中完成的。</li> \n <li> <strong>实例变量</strong>：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定。</li> \n</ul>\n<hr /> \n<h2>第一个Java程序</h2> \n<p>下面看一个简单的Java程序，它将打印字符串<em> Hello World</em></p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   public class HelloWorld {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;/* 第一个Java程序\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;* 它将打印字符串 Hello World\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;public static void main(String []args) {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;Hello World&quot;); // 打印 Hello World\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;}\n  <br /> } \n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/showjava.php?filename=HelloWorld2\" class=\"showbtn\">运行实例 &raquo;</a> \n</div> \n<p>下面将逐步介绍如何保存、编译以及运行这个程序：</p> \n<ul> \n <li> 打开Notepad，把上面的代码添加进去；</li> \n <li> 把文件名保存为：HelloWorld.java；</li> \n <li> 打开cmd命令窗口，进入目标文件所在的位置，假设是C:\\</li> \n <li> 在命令行窗口键入 javac HelloWorld.java&nbsp; 按下enter键编译代码。如果代码没有错误，cmd命令提示符会进入下一行。（假设环境变量都设置好了）。</li> \n <li> 再键入java HelloWorld 按下Enter键就可以运行程序了</li> \n</ul> \n<p>你将会在窗口看到 Hello World</p> \n<pre>\r\nC : &gt; javac HelloWorld.java\r\nC : &gt; java HelloWorld \r\nHello World\r\n</pre> \n<p>Gif 图演示：</p> \n<img src=\"http://www.runoob.com/wp-content/uploads/2013/12/java-HelloWorld.gif\" /> \n<hr /> \n<h2>基本语法</h2> \n<p>编写Java程序时，应注意以下几点：</p> \n<ul> \n <li> <strong>大小写敏感</strong>：Java是大小写敏感的，这就意味着标识符Hello与hello是不同的。</li> \n <li> <strong>类名</strong>：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如&nbsp;MyFirstJavaClass 。</li> \n <li> <strong>方法名</strong>：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。</li> \n <li> <strong>源文件名</strong>：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记Java是大小写敏感的），文件名的后缀为.java。（如果文件名和类名不相同则会导致编译错误）。</li> \n <li> <strong>主方法入口</strong>：所有的Java 程序由<strong>public static void main(String []args)</strong>方法开始执行。</li> \n</ul> \n<hr /> \n<h2>Java标识符</h2> \n<p>Java所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。</p> \n<p>关于Java标识符，有以下几点需要注意：</p> \n<ul> \n <li> 所有的标识符都应该以字母（A-Z或者a-z）,美元符（$）、或者下划线（_）开始</li> \n <li> 首字符之后可以是任何字符的组合</li> \n <li> 关键字不能用作标识符</li> \n <li> 标识符是大小写敏感的</li> \n <li> 合法标识符举例：age、$salary、_value、__1_value</li> \n <li> 非法标识符举例：123abc、-salary</li> \n</ul>\n<hr /> \n<h2> Java修饰符</h2> \n<p> 像其他语言一样，Java可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：</p> \n<ul> \n <li> 可访问修饰符 : default, public , protected, private</li> \n <li> 不可访问修饰符 : final, abstract, strictfp</li> \n</ul> \n<p> 在后面的章节中我们会深入讨论Java修饰符。</p>\n<hr /> \n<h2> Java变量</h2> Java中主要有如下几种类型的变量\n<br /> \n<ul> \n <li> 局部变量</li> \n <li> 类变量（静态变量）</li> \n <li> 成员变量（非静态变量）</li> \n</ul>\n<hr /> \n<h2>Java数组</h2> \n<p>数组是储存在堆上的对象，可以保存多个同类型变量。在后面的章节中，我们将会学到如何声明、构造以及初始化一个数组。</p>\n<hr /> \n<h2>Java枚举</h2> \n<p>Java 5.0引入了枚举，枚举限制变量只能是预先设定好的值。使用枚举可以减少代码中的bug。</p> \n<p>例如，我们为果汁店设计一个程序，它将限制果汁为小杯、中杯、大杯。这就意味着它不允许顾客点除了这三种尺寸外的果汁。</p> \n<hr /> \n<h2>实例</h2> \n<pre>\r\nclass FreshJuice {\r\n   enum FreshJuiceSize{ SMALL, MEDUIM, LARGE }\r\n   FreshJuiceSize size;\r\n}\r\n\r\npublic class FreshJuiceTest {\r\n   public static void main(String []args){\r\n      FreshJuice juice = new FreshJuice();\r\n      juice.size = FreshJuice. FreshJuiceSize.MEDUIM ;\r\n   }\r\n}\r\n</pre> \n<p><strong>注意：</strong>枚举可以单独声明或者声明在类里面。方法、变量、构造函数也可以在枚举中定义。</p> \n<hr /> \n<h2> Java关键字 </h2> \n<p> 下面列出了Java保留字。这些保留字不能用于常量、变量、和任何标识符的名称。 </p> \n<table class=\"reference\">\n <tbody> \n  <tr>\n   <th>关键字</th> \n   <th> 描述</th>\n  </tr> \n  <tr>\n   <td>abstract </td> \n   <td>抽象方法，抽象类的修饰符</td>\n  </tr> \n  <tr>\n   <td>assert </td> \n   <td>断言条件是否满足</td>\n  </tr> \n  <tr>\n   <td>boolean </td> \n   <td>布尔数据类型</td>\n  </tr> \n  <tr>\n   <td>break </td> \n   <td>跳出循环或者label代码段</td>\n  </tr> \n  <tr>\n   <td>byte </td> \n   <td>8-bit 有符号数据类型</td>\n  </tr> \n  <tr>\n   <td>case </td> \n   <td>switch语句的一个条件</td>\n  </tr> \n  <tr>\n   <td>catch </td> \n   <td>和try搭配扑捉异常信息</td>\n  </tr> \n  <tr>\n   <td>char </td> \n   <td>16-bit Unicode字符数据类型</td>\n  </tr> \n  <tr>\n   <td>class </td> \n   <td>定义类</td>\n  </tr> \n  <tr>\n   <td>const </td> \n   <td>未使用</td>\n  </tr> \n  <tr>\n   <td>continue </td> \n   <td>不执行循环体剩余部分</td>\n  </tr> \n  <tr>\n   <td>default </td> \n   <td>switch语句中的默认分支</td>\n  </tr> \n  <tr>\n   <td>do </td> \n   <td>循环语句，循环体至少会执行一次</td>\n  </tr> \n  <tr>\n   <td>double </td> \n   <td>64-bit双精度浮点数</td>\n  </tr> \n  <tr>\n   <td>else </td> \n   <td>if条件不成立时执行的分支</td>\n  </tr> \n  <tr>\n   <td>enum </td> \n   <td>枚举类型</td>\n  </tr> \n  <tr>\n   <td>extends </td> \n   <td>表示一个类是另一个类的子类</td>\n  </tr> \n  <tr>\n   <td>final </td> \n   <td>表示一个值在初始化之后就不能再改变了<br />表示方法不能被重写，或者一个类不能有子类</td>\n  </tr> \n  <tr>\n   <td>finally </td> \n   <td>为了完成执行的代码而设计的，主要是为了程序的健壮性和完整性，无论有没有异常发生都执行代码。</td>\n  </tr> \n  <tr>\n   <td>float </td> \n   <td>32-bit单精度浮点数</td>\n  </tr> \n  <tr>\n   <td>for </td> \n   <td>for循环语句</td>\n  </tr> \n  <tr>\n   <td>goto </td> \n   <td>未使用</td>\n  </tr> \n  <tr>\n   <td>if </td> \n   <td>条件语句</td>\n  </tr> \n  <tr>\n   <td>implements </td> \n   <td>表示一个类实现了接口</td>\n  </tr> \n  <tr>\n   <td>import </td> \n   <td>导入类 </td>\n  </tr>\n  <tr>\n   <td>instanceof </td> \n   <td>测试一个对象是否是某个类的实例</td>\n  </tr> \n  <tr>\n   <td>int </td> \n   <td>32位整型数</td>\n  </tr> \n  <tr>\n   <td>interface </td> \n   <td>接口，一种抽象的类型，仅有方法和常量的定义</td>\n  </tr> \n  <tr>\n   <td>long </td> \n   <td>64位整型数</td>\n  </tr> \n  <tr>\n   <td>native </td> \n   <td>表示方法用非java代码实现</td>\n  </tr> \n  <tr>\n   <td>new </td> \n   <td>分配新的类实例</td>\n  </tr> \n  <tr>\n   <td>package </td> \n   <td>一系列相关类组成一个包</td>\n  </tr> \n  <tr>\n   <td>private </td> \n   <td>表示私有字段，或者方法等，只能从类内部访问</td>\n  </tr> \n  <tr>\n   <td>protected </td> \n   <td>表示字段只能通过类或者其子类访问<br />子类或者在同一个包内的其他类</td>\n  </tr> \n  <tr>\n   <td>public </td> \n   <td>表示共有属性或者方法</td>\n  </tr> \n  <tr>\n   <td>return </td> \n   <td>方法返回值</td>\n  </tr> \n  <tr>\n   <td>short </td> \n   <td>16位数字</td>\n  </tr> \n  <tr>\n   <td>static </td> \n   <td>表示在类级别定义，所有实例共享的</td>\n  </tr> \n  <tr>\n   <td>strictfp </td> \n   <td>浮点数比较使用严格的规则 </td>\n  </tr> \n  <tr>\n   <td>super </td> \n   <td>表示基类</td>\n  </tr> \n  <tr>\n   <td>switch </td> \n   <td>选择语句</td>\n  </tr> \n  <tr>\n   <td>synchronized </td> \n   <td>表示同一时间只能由一个线程访问的代码块</td>\n  </tr> \n  <tr>\n   <td>this </td> \n   <td>表示调用当前实例<br />或者调用另一个构造函数</td>\n  </tr> \n  <tr>\n   <td>throw </td> \n   <td>抛出异常</td>\n  </tr> \n  <tr>\n   <td>throws </td> \n   <td>定义方法可能抛出的异常</td>\n  </tr> \n  <tr>\n   <td>transient </td> \n   <td>修饰不要序列化的字段</td>\n  </tr> \n  <tr>\n   <td>try </td> \n   <td>表示代码块要做异常处理或者和finally配合表示是否抛出异常都执行finally中的代码</td>\n  </tr> \n  <tr>\n   <td>void </td> \n   <td>标记方法不返回任何值</td>\n  </tr> \n  <tr>\n   <td>volatile </td> \n   <td>标记字段可能会被多个线程同时访问，而不做同步</td>\n  </tr> \n  <tr>\n   <td>while </td> \n   <td>while循环</td>\n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2> Java注释</h2> \n<p>类似于C/C++，Java也支持单行以及多行注释。注释中的字符将被Java编译器忽略。</p> \n<pre>\r\npublic class HelloWorld {\r\n   /* 这是第一个Java程序\r\n    *它将打印Hello World\r\n    * 这是一个多行注释的示例\r\n    */\r\n    public static void main(String []args){\r\n       // 这是单行注释的示例\r\n       /* 这个也是单行注释的示例 */\r\n       System.out.println(&quot;Hello World&quot;); \r\n    }\r\n} \r\n</pre>\n<hr /> \n<h2>Java 空行</h2> \n<p>空白行，或者有注释的的行，Java编译器都会忽略掉。</p>\n<hr /> \n<h2> 继承</h2> \n<p>在Java中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类。</p> \n<p> 利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（super class），派生类称为子类（subclass）。</p>\n<hr /> \n<h2> 接口</h2> \n<p>在Java中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。</p> \n<p> 接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。</p> \n<p> 下一节介绍Java编程中的类和对象。之后你将会对Java中的类和对象有更清楚的认识。</p>', null, 'Java 基础语法|第一个Java程序|实例|基本语法|Java标识符|Java修饰符|Java变量|Java数组|Java枚举|实例|Java关键字|Java注释|Java 空行|继承|接口|');
INSERT INTO `schoolcontent` VALUES ('288', '291', '<h1>Java 对象和类</h1> \n<p>Java作为一种面向对象语言。支持以下基本概念：</p> \n<ul> \n <li> 多态</li> \n <li> 继承</li> \n <li> 封装</li> \n <li> 抽象</li> \n <li> 类</li> \n <li> 对象</li> \n <li> 实例</li> \n <li> 方法</li> \n <li> 重载</li> \n</ul>\n<p> 本节我们重点研究对象和类的概念。</p> \n<ul> \n <li> <strong>对象</strong>：对象是类的一个实例（<strong>对象不是找个女朋友</strong>），有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。</li> \n <li> <strong>类</strong>：类是一个模板，它描述一类对象的行为和状态。</li> \n</ul> \n<p>下图中男孩女孩为类，而具体的每个人为该类的对象：</p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/object-class.jpg\" /></p> \n<hr /> \n<h2> Java中的对象</h2> \n<p> </p>\n<p>现在让我们深入了解什么是对象。看看周围真实的世界，会发现身边有很多对象，车，狗，人等等。所有这些对象都有自己的状态和行为。</p> \n<p>拿一条狗来举例，它的状态有：名字、品种、颜色，行为有：叫、摇尾巴和跑。</p> \n<p>对比现实对象和软件对象，它们之间十分相似。</p> \n<p>软件对象也有状态和行为。软件对象的状态就是属性，行为通过方法体现。</p> \n<p>在软件开发中，方法操作对象内部状态的改变，对象的相互调用也是通过方法来完成。</p> \n<h2>Java中的类</h2> \n<p>类可以看成是创建Java对象的模板。</p> \n<p>通过下面一个简单的类来理解下Java中类的定义：</p> \n<pre>\r\npublic class Dog{\r\n   String breed;\r\n   int age;\r\n   String color;\r\n   void barking(){\r\n   }\r\n   \r\n   void hungry(){\r\n   }\r\n   \r\n   void sleeping(){\r\n   }\r\n}\r\n</pre> \n<p>一个类可以包含以下类型变量：</p> \n<ul> \n <li> <strong>局部变量</strong>：在方法、构造方法或者语句块中定义的变量被称为局部变量。变量声明和初始化都是在方法中，方法结束后，变量就会自动销毁。</li> \n <li> <strong>成员变量</strong>：成员变量是定义在类中，方法体之外的变量。这种变量在创建对象的时候实例化。成员变量可以被类中方法、构造方法和特定类的语句块访问。</li> \n <li> <strong>类变量</strong>：类变量也声明在类中，方法体之外，但必须声明为static类型。</li> \n</ul> \n<p>一个类可以拥有多个方法，在上面的例子中：barking()、hungry()和sleeping()都是Dog类的方法。 </p>\n<hr /> \n<h2>构造方法</h2> \n<p>每个类都有构造方法。如果没有显式地为类定义构造方法，Java编译器将会为该类提供一个默认构造方法。</p> \n<p>在创建一个对象的时候，至少要调用一个构造方法。构造方法的名称必须与类同名，一个类可以有多个构造方法。</p> \n<p>下面是一个构造方法示例：</p> \n<pre>\r\npublic class Puppy{\r\n   public Puppy(){\r\n   }\r\n\r\n   public Puppy(String name){\r\n      // 这个构造器仅有一个参数：name\r\n   }\r\n}\r\n</pre> \n<hr /> \n<h2>创建对象</h2> \n<p>对象是根据类创建的。在Java中，使用关键字new来创建一个新的对象。创建对象需要以下三步：</p> \n<ul> \n <li> <strong>声明</strong>：声明一个对象，包括对象名称和对象类型。</li> \n <li> <strong>实例化</strong>：使用关键字new来创建一个对象。</li> \n <li> <strong>初始化</strong>：使用new创建对象时，会调用构造方法初始化对象。</li> \n</ul> \n<p>下面是一个创建对象的例子：</p> \n<pre>\r\npublic class Puppy{\r\n   public Puppy(String name){\r\n      //这个构造器仅有一个参数：name\r\n      System.out.println(&quot;Passed Name is :&quot; + name ); \r\n   }\r\n   public static void main(String []args){\r\n      // 下面的语句将创建一个Puppy对象\r\n      Puppy myPuppy = new Puppy( &quot;tommy&quot; );\r\n   }\r\n}\r\n</pre> \n<p>编译并运行上面的程序，会打印出下面的结果：</p> \n<pre>\r\nPassed Name is :tommy\r\n</pre> \n<hr />\n<h2> 访问实例变量和方法</h2> \n<p> 通过已创建的对象来访问成员变量和成员方法，如下所示：</p> \n<pre>\r\n/* 实例化对象 */\r\nObjectReference = new Constructor();\r\n/* 访问其中的变量 */\r\nObjectReference.variableName;\r\n/* 访问类中的方法 */\r\nObjectReference.MethodName();\r\n</pre> \n<hr /> \n<h2>实例</h2>\n<p> 下面的例子展示如何访问实例变量和调用成员方法：</p> \n<pre>\r\npublic class Puppy{\r\n   int puppyAge;\r\n   public Puppy(String name){\r\n      // 这个构造器仅有一个参数：name\r\n      System.out.println(&quot;Passed Name is :&quot; + name ); \r\n   }\r\n\r\n   public void setAge( int age ){\r\n       puppyAge = age;\r\n   }\r\n\r\n   public int getAge( ){\r\n       System.out.println(&quot;Puppy\'s age is :&quot; + puppyAge ); \r\n       return puppyAge;\r\n   }\r\n\r\n   public static void main(String []args){\r\n      /* 创建对象 */\r\n      Puppy myPuppy = new Puppy( &quot;tommy&quot; );\r\n      /* 通过方法来设定age */\r\n      myPuppy.setAge( 2 );\r\n      /* 调用另一个方法获取age */\r\n      myPuppy.getAge( );\r\n      /*你也可以像下面这样访问成员变量 */\r\n      System.out.println(&quot;Variable Value :&quot; + myPuppy.puppyAge ); \r\n   }\r\n}\r\n</pre> \n<p> 编译并运行上面的程序，产生如下结果： </p> \n<pre>\r\nPassed Name is :tommy\r\nPuppy\'s age is :2\r\nVariable Value :2\r\n</pre> \n<hr /> \n<h2>源文件声明规则</h2> \n<p>在本节的最后部分，我们将学习源文件的声明规则。当在一个源文件中定义多个类，并且还有import语句和package语句时，要特别注意这些规则。</p> \n<ul> \n <li> 一个源文件中只能有一个public类</li> \n <li> 一个源文件可以有多个非public类</li> \n <li> 源文件的名称应该和public类的类名保持一致。例如：源文件中public类的类名是Employee，那么源文件应该命名为Employee.java。</li> \n <li> 如果一个类定义在某个包中，那么package语句应该在源文件的首行。</li> \n <li> 如果源文件包含import语句，那么应该放在package语句和类定义之间。如果没有package语句，那么import语句应该在源文件中最前面。</li> \n <li> import语句和package语句对源文件中定义的所有类都有效。在同一源文件中，不能给不同的类不同的包声明。</li> \n</ul> \n<p>类有若干种访问级别，并且类也分不同的类型：抽象类和final类等。这些将在访问控制章节介绍。</p> \n<p>除了上面提到的几种类型，Java还有一些特殊的类，如：内部类、匿名类。</p> \n<hr /> \n<h2>Java包</h2> \n<p>包主要用来对类和接口进行分类。当开发Java程序时，可能编写成百上千的类，因此很有必要对类和接口进行分类。</p> \n<h2>Import语句</h2> \n<p>在Java中，如果给出一个完整的限定名，包括包名、类名，那么Java编译器就可以很容易地定位到源代码或者类。Import语句就是用来提供一个合理的路径，使得编译器可以找到某个类。</p> \n<p>例如，下面的命令行将会命令编译器载入java_installation/java/io路径下的所有类</p> \n<pre>\r\nimport java.io.*;\r\n</pre> \n<hr /> \n<h2>一个简单的例子</h2> \n<p>在该例子中，我们创建两个类：Employee和EmployeeTest。</p> \n<p> 首先打开文本编辑器，把下面的代码粘贴进去。注意将文件保存为Employee.java。</p> \n<p> Employee类有四个成员变量：name、age、designation和salary。该类显式声明了一个构造方法，该方法只有一个参数。</p> \n<pre>\r\nimport java.io.*;\r\npublic class Employee{\r\n   String name;\r\n   int age;\r\n   String designation;\r\n   double salary;\r\n   // Employee 类的构造器\r\n   public Employee(String name){\r\n      this.name = name;\r\n   }\r\n   // 设置age的值\r\n   public void empAge(int empAge){\r\n      age =  empAge;\r\n   }\r\n   /* 设置designation的值*/\r\n   public void empDesignation(String empDesig){\r\n      designation = empDesig;\r\n   }\r\n   /* 设置salary的值*/\r\n   public void empSalary(double empSalary){\r\n      salary = empSalary;\r\n   }\r\n   /* 打印信息 */\r\n   public void printEmployee(){\r\n      System.out.println(&quot;Name:&quot;+ name );\r\n      System.out.println(&quot;Age:&quot; + age );\r\n      System.out.println(&quot;Designation:&quot; + designation );\r\n      System.out.println(&quot;Salary:&quot; + salary);\r\n   }\r\n}\r\n</pre> \n<p>程序都是从main方法开始执行。为了能运行这个程序，必须包含main方法并且创建一个实例对象。</p> \n<p>下面给出EmployeeTest类，该类实例化2个Employee类的实例，并调用方法设置变量的值。</p> \n<p>将下面的代码保存在EmployeeTest.java文件中。</p> \n<pre>\r\nimport java.io.*;\r\npublic class EmployeeTest{\r\n\r\n   public static void main(String args[]){\r\n      /* 使用构造器创建两个对象 */\r\n      Employee empOne = new Employee(&quot;James Smith&quot;);\r\n      Employee empTwo = new Employee(&quot;Mary Anne&quot;);\r\n\r\n      // 调用这两个对象的成员方法\r\n      empOne.empAge(26);\r\n      empOne.empDesignation(&quot;Senior Software Engineer&quot;);\r\n      empOne.empSalary(1000);\r\n      empOne.printEmployee();\r\n\r\n      empTwo.empAge(21);\r\n      empTwo.empDesignation(&quot;Software Engineer&quot;);\r\n      empTwo.empSalary(500);\r\n      empTwo.printEmployee();\r\n   }\r\n}\r\n</pre> \n<p>编译这两个文件并且运行EmployeeTest类，可以看到如下结果：</p> \n<pre>\r\nC :&gt; javac Employee.java\r\nC :&gt; vi EmployeeTest.java\r\nC :&gt; javac  EmployeeTest.java\r\nC :&gt; java EmployeeTest\r\nName:James Smith\r\nAge:26\r\nDesignation:Senior Software Engineer\r\nSalary:1000.0\r\nName:Mary Anne\r\nAge:21\r\nDesignation:Software Engineer\r\nSalary:500.0\r\n</pre>', null, 'Java 对象和类|Java中的对象|Java中的类|构造方法|创建对象|访问实例变量和方法|实例|源文件声明规则|Java包|Import语句|一个简单的例子|');
INSERT INTO `schoolcontent` VALUES ('289', '292', '<h1>Java 基本数据类型</h1> \n<p>变量就是申请内存来存储值。也就是说，当创建变量的时候，需要在内存中申请空间。</p> \n<p>内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来储存该类型数据。</p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/memorypic1.jpg\" /></p> \n<p>因此，通过定义不同类型的变量，可以在内存中储存整数、小数或者字符。</p> \n<p>Java的两大数据类型:</p> \n<ul>\n <li>内置数据类型</li> \n <li>引用数据类型</li> \n</ul>\n<hr /> \n<h2>内置数据类型</h2> \n<p>Java语言提供了八种基本类型。六种数字类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型。 </p> \n<p><strong>byte：</strong></p> \n<ul> \n <li> byte数据类型是8位、有符号的，以二进制补码表示的整数；</li> \n <li> 最小值是-128（-2^7）；</li> \n <li> 最大值是127（2^7-1）；</li> \n <li> 默认值是0；</li> \n <li> byte类型用在大型数组中节约空间，主要代替整数，因为byte变量占用的空间只有int类型的四分之一；</li> \n <li> 例子：byte a = 100，byte b = -50。</li> \n</ul> \n<p><strong>short：</strong></p> \n<ul> \n <li> short数据类型是16位、有符号的以二进制补码表示的整数</li> \n <li> 最小值是-32768（-2^15）；</li> \n <li> 最大值是32767（2^15 - 1）；</li> \n <li> Short数据类型也可以像byte那样节省空间。一个short变量是int型变量所占空间的二分之一；</li> \n <li> 默认值是0；</li> \n <li> 例子：short s = 1000，short r = -20000。</li> \n</ul> \n<p><strong>int：</strong></p> \n<ul> \n <li> int数据类型是32位、有符号的以二进制补码表示的整数；</li> \n <li> 最小值是-2,147,483,648（-2^31）；</li> \n <li> 最大值是2,147,483,647（2^31 - 1）；</li> \n <li> 一般地整型变量默认为int类型；</li> \n <li> 默认值是0；</li> \n <li> 例子：int a = 100000, int b = -200000。</li> \n</ul> \n<p><strong>long：</strong></p> \n<ul> \n <li> long数据类型是64位、有符号的以二进制补码表示的整数；</li> \n <li> 最小值是-9,223,372,036,854,775,808（-2^63）；</li> \n <li> 最大值是9,223,372,036,854,775,807（2^63 -1）；</li> \n <li> 这种类型主要使用在需要比较大整数的系统上；</li> \n <li> 默认值是0L；</li> \n <li> 例子： long a = 100000L，Long b = -200000L。</li> \n</ul> \n<p><strong>float：</strong></p> \n<ul> \n <li> float数据类型是单精度、32位、符合IEEE 754标准的浮点数；</li> \n <li> float在储存大型浮点数组的时候可节省内存空间；</li> \n <li> 默认值是0.0f；</li> \n <li> 浮点数不能用来表示精确的值，如货币；</li> \n <li> 例子：float f1 = 234.5f。</li> \n</ul> \n<p><strong>double：</strong></p> \n<ul> \n <li> double数据类型是双精度、64位、符合IEEE 754标准的浮点数；</li> \n <li> 浮点数的默认类型为double类型；</li> \n <li> double类型同样不能表示精确的值，如货币；</li> \n <li> 默认值是0.0d；</li> \n <li> 例子：double d1 = 123.4。</li> \n</ul> \n<p><strong>boolean：</strong></p> \n<ul> \n <li> boolean数据类型表示一位的信息；</li> \n <li> 只有两个取值：true和false；</li> \n <li> 这种类型只作为一种标志来记录true/false情况；</li> \n <li> 默认值是false；</li> \n <li> 例子：boolean one = true。</li> \n</ul> \n<p><strong>char：</strong></p> \n<ul> \n <li> char类型是一个单一的16位Unicode字符；</li> \n <li> 最小值是’\\u0000’（即为0）；</li> \n <li> 最大值是’\\uffff’（即为65,535）；</li> \n <li> char数据类型可以储存任何字符；</li> \n <li> 例子：char letter = ‘A’。</li> \n</ul> \n<h3>实例</h3> \n<p>对于数值类型的基本类型的取值范围，我们无需强制去记忆，因为它们的值都已经以常量的形式定义在对应的包装类中了。请看下面的例子：</p> \n<pre>\r\npublic class PrimitiveTypeTest {  \r\n    public static void main(String[] args) {  \r\n        // byte  \r\n        System.out.println(&quot;基本类型：byte 二进制位数：&quot; + Byte.SIZE);  \r\n        System.out.println(&quot;包装类：java.lang.Byte&quot;);  \r\n        System.out.println(&quot;最小值：Byte.MIN_VALUE=&quot; + Byte.MIN_VALUE);  \r\n        System.out.println(&quot;最大值：Byte.MAX_VALUE=&quot; + Byte.MAX_VALUE);  \r\n        System.out.println();  \r\n  \r\n        // short  \r\n        System.out.println(&quot;基本类型：short 二进制位数：&quot; + Short.SIZE);  \r\n        System.out.println(&quot;包装类：java.lang.Short&quot;);  \r\n        System.out.println(&quot;最小值：Short.MIN_VALUE=&quot; + Short.MIN_VALUE);  \r\n        System.out.println(&quot;最大值：Short.MAX_VALUE=&quot; + Short.MAX_VALUE);  \r\n        System.out.println();  \r\n  \r\n        // int  \r\n        System.out.println(&quot;基本类型：int 二进制位数：&quot; + Integer.SIZE);  \r\n        System.out.println(&quot;包装类：java.lang.Integer&quot;);  \r\n        System.out.println(&quot;最小值：Integer.MIN_VALUE=&quot; + Integer.MIN_VALUE);  \r\n        System.out.println(&quot;最大值：Integer.MAX_VALUE=&quot; + Integer.MAX_VALUE);  \r\n        System.out.println();  \r\n  \r\n        // long  \r\n        System.out.println(&quot;基本类型：long 二进制位数：&quot; + Long.SIZE);  \r\n        System.out.println(&quot;包装类：java.lang.Long&quot;);  \r\n        System.out.println(&quot;最小值：Long.MIN_VALUE=&quot; + Long.MIN_VALUE);  \r\n        System.out.println(&quot;最大值：Long.MAX_VALUE=&quot; + Long.MAX_VALUE);  \r\n        System.out.println();  \r\n  \r\n        // float  \r\n        System.out.println(&quot;基本类型：float 二进制位数：&quot; + Float.SIZE);  \r\n        System.out.println(&quot;包装类：java.lang.Float&quot;);  \r\n        System.out.println(&quot;最小值：Float.MIN_VALUE=&quot; + Float.MIN_VALUE);  \r\n        System.out.println(&quot;最大值：Float.MAX_VALUE=&quot; + Float.MAX_VALUE);  \r\n        System.out.println();  \r\n  \r\n        // double  \r\n        System.out.println(&quot;基本类型：double 二进制位数：&quot; + Double.SIZE);  \r\n        System.out.println(&quot;包装类：java.lang.Double&quot;);  \r\n        System.out.println(&quot;最小值：Double.MIN_VALUE=&quot; + Double.MIN_VALUE);  \r\n        System.out.println(&quot;最大值：Double.MAX_VALUE=&quot; + Double.MAX_VALUE);  \r\n        System.out.println();  \r\n  \r\n        // char  \r\n        System.out.println(&quot;基本类型：char 二进制位数：&quot; + Character.SIZE);  \r\n        System.out.println(&quot;包装类：java.lang.Character&quot;);  \r\n        // 以数值形式而不是字符形式将Character.MIN_VALUE输出到控制台  \r\n        System.out.println(&quot;最小值：Character.MIN_VALUE=&quot;  \r\n                + (int) Character.MIN_VALUE);  \r\n        // 以数值形式而不是字符形式将Character.MAX_VALUE输出到控制台  \r\n        System.out.println(&quot;最大值：Character.MAX_VALUE=&quot;  \r\n                + (int) Character.MAX_VALUE);  \r\n    }  \r\n}  \r\n\r\n</pre> \n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/runcode.php?filename=PrimitiveTypeTest&amp;type=java\" class=\"showbtn\">运行实例 &raquo;</a> </p> \n<p>编译以上代码输出结果如下所示：</p> \n<pre>\r\n基本类型：byte 二进制位数：8\r\n包装类：java.lang.Byte\r\n最小值：Byte.MIN_VALUE=-128\r\n最大值：Byte.MAX_VALUE=127\r\n\r\n基本类型：short 二进制位数：16\r\n包装类：java.lang.Short\r\n最小值：Short.MIN_VALUE=-32768\r\n最大值：Short.MAX_VALUE=32767\r\n\r\n基本类型：int 二进制位数：32\r\n包装类：java.lang.Integer\r\n最小值：Integer.MIN_VALUE=-2147483648\r\n最大值：Integer.MAX_VALUE=2147483647\r\n\r\n基本类型：long 二进制位数：64\r\n包装类：java.lang.Long\r\n最小值：Long.MIN_VALUE=-9223372036854775808\r\n最大值：Long.MAX_VALUE=9223372036854775807\r\n\r\n基本类型：float 二进制位数：32\r\n包装类：java.lang.Float\r\n最小值：Float.MIN_VALUE=1.4E-45\r\n最大值：Float.MAX_VALUE=3.4028235E38\r\n\r\n基本类型：double 二进制位数：64\r\n包装类：java.lang.Double\r\n最小值：Double.MIN_VALUE=4.9E-324\r\n最大值：Double.MAX_VALUE=1.7976931348623157E308\r\n\r\n基本类型：char 二进制位数：16\r\n包装类：java.lang.Character\r\n最小值：Character.MIN_VALUE=0\r\n最大值：Character.MAX_VALUE=65535\r\n</pre> \n<p>Float和Double的最小值和最大值都是以科学记数法的形式输出的，结尾的&quot;E+数字&quot;表示E之前的数字要乘以10的多少次方。比如3.14E3就是3.14 &times; 10<sup>3</sup> =3140，3.14E-3 就是 3.14 x 10<sup>-3</sup> =0.00314。</p> \n<p>实际上，JAVA中还存在另外一种基本类型void，它也有对应的包装类 java.lang.Void，不过我们无法直接对它们进行操作。</p> \n<hr /> \n<h2> 引用类型</h2> \n<ul> \n <li> 在Java中，引用类型的变量非常类似于C/C++的指针。引用类型指向一个对象，指向对象的变量是引用变量。这些变量在声明时被指定为一个特定的类型，比如Employee、Pubby等。变量一旦声明后，类型就不能被改变了。</li> \n <li> 对象、数组都是引用数据类型。</li> \n <li> 所有引用类型的默认值都是null。</li> \n <li> 一个引用变量可以用来引用与任何与之兼容的类型。</li> \n <li> 例子：Site site = new Site(&quot;Runoob&quot;)。</li> \n</ul> \n<hr /> \n<h2>Java常量</h2> \n<p>常量在程序运行时，不会被修改的量。</p> \n<p>在 Java 中使用 final 关键字来修饰常量，声明方式和变量类似：</p> \n<pre>\r\nfinal double PI = 3.1415927;\r\n</pre> \n<p> 虽然常量名也可以用小写，但为了便于识别，通常使用大写字母表示常量。 </p> \n<p>字面量可以赋给任何内置类型的变量。例如：</p> \n<pre>\r\nbyte a = 68;\r\nchar a = \'A\'\r\n</pre> \n<p>byte、int、long、和short都可以用十进制、16进制以及8进制的方式来表示。</p> \n<p>当使用常量的时候，前缀0表示8进制，而前缀0x代表16进制。例如：</p> \n<pre>\r\nint decimal = 100;\r\nint octal = 0144;\r\nint hexa =  0x64;\r\n</pre> \n<p>和其他语言一样，Java的字符串常量也是包含在两个引号之间的字符序列。下面是字符串型字面量的例子：</p> \n<pre>\r\n&quot;Hello World&quot;\r\n&quot;two\\nlines&quot;\r\n&quot;\\&quot;This is in quotes\\&quot;&quot;\r\n</pre> \n<p>字符串常量和字符常量都可以包含任何Unicode字符。例如：</p> \n<pre>\r\nchar a = \'\\u0001\';\r\nString a = &quot;\\u0001&quot;;\r\n</pre> \n<p> Java语言支持一些特殊的转义字符序列。</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> 符号</th> \n   <th> 字符含义</th> \n  </tr> \n  <tr> \n   <td> \\n</td> \n   <td> 换行 (0x0a)</td> \n  </tr> \n  <tr> \n   <td> \\r</td> \n   <td> 回车 (0x0d)</td> \n  </tr> \n  <tr> \n   <td> \\f</td> \n   <td> 换页符(0x0c)</td> \n  </tr> \n  <tr> \n   <td> \\b</td> \n   <td> 退格 (0x08)</td> \n  </tr> \n  <tr> \n   <td> \\s</td> \n   <td> 空格 (0x20)</td> \n  </tr> \n  <tr> \n   <td> \\t</td> \n   <td> 制表符</td> \n  </tr> \n  <tr> \n   <td> \\&quot;</td> \n   <td> 双引号</td> \n  </tr> \n  <tr> \n   <td> \\\'</td> \n   <td> 单引号</td> \n  </tr> \n  <tr> \n   <td> \\\\</td> \n   <td> 反斜杠</td> \n  </tr> \n  <tr> \n   <td> \\ddd</td> \n   <td> 八进制字符 (ddd)</td> \n  </tr> \n  <tr> \n   <td> \\uxxxx</td> \n   <td> 16进制Unicode字符 (xxxx)</td> \n  </tr> \n </tbody> \n</table> \n<br /> \n<p> 这一节讲解了Java的基本数据类型。下一节将探讨不同的变量类型以及它们的用法。</p>', null, 'Java 基本数据类型|内置数据类型|引用类型|Java常量|');
INSERT INTO `schoolcontent` VALUES ('290', '293', '<h1>Java 变量类型</h1> \n<p>在Java语言中，所有的变量在使用前必须声明。声明变量的基本格式如下：</p> \n<pre>\r\ntype identifier [ = value][, identifier [= value] ...] ;\r\n</pre> \n<p>格式说明：type为Java数据类型。identifier是变量名。可以使用逗号隔开来声明多个同类型变量。</p> \n<p>以下列出了一些变量的声明实例。注意有些包含了初始化过程。</p> \n<pre>\r\nint a, b, c;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 声明三个int型整数：a、 b、c\r\nint d = 3, e, f = 5; // 声明三个整数并赋予初值\r\nbyte z = 22;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 声明并初始化 z\r\nString s = &quot;runoob&quot;  // 声明并初始化字符串 s\r\ndouble pi = 3.14159; // 声明了双精度浮点型变量 pi\r\nchar x = \'x\';&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 声明变量 x 的值是字符 \'x\'。\r\n</pre> \n<p>Java语言支持的变量类型有：</p> \n<ul> \n <li> 局部变量</li> \n <li> 成员变量</li> \n <li> 类变量</li> \n</ul> \n<hr /> \n<h2>Java局部变量</h2> \n<ul> \n <li> 局部变量声明在方法、构造方法或者语句块中；</li> \n <li> 局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；</li> \n <li> 访问修饰符不能用于局部变量；</li> \n <li> 局部变量只在声明它的方法、构造方法或者语句块中可见；</li> \n <li> 局部变量是在栈上分配的。</li> \n <li> 局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。</li> \n</ul> \n<h3>实例1</h3> \n<p>在以下实例中age是一个局部变量。定义在pubAge()方法中，它的作用域就限制在这个方法中。</p> \n<pre>\r\npackage com.runoob.test;\r\n\r\npublic class Test{ \r\n   public void pupAge(){\r\n      int age = 0;\r\n      age = age + 7;\r\n      System.out.println(&quot;小狗的年龄是: &quot; + age);\r\n   }\r\n   \r\n   public static void main(String args[]){\r\n      Test test = new Test();\r\n      test.pupAge();\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n小狗的年龄是: 7\r\n</pre> \n<h3>实例2</h3> \n<p>在下面的例子中age变量没有初始化，所以在编译时会出错：</p> \n<pre>\r\npublic class Test{ \r\n   public void pupAge(){\r\n      int age;\r\n      age = age + 7;\r\n      System.out.println(&quot;小狗的年龄是 : &quot; + age);\r\n   }\r\n   \r\n   public static void main(String args[]){\r\n      Test test = new Test();\r\n      test.pupAge();\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nTest.java:4:variable number might not have been initialized\r\nage = age + 7;\r\n         ^\r\n1 error\r\n</pre> \n<hr /> \n<h2>实例变量</h2> \n<ul> \n <li> 实例变量声明在一个类中，但在方法、构造方法和语句块之外；</li> \n <li> 当一个对象被实例化之后，每个实例变量的值就跟着确定；</li> \n <li> 实例变量在对象创建的时候创建，在对象被销毁的时候销毁；</li> \n <li> 实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；</li> \n <li> 实例变量可以声明在使用前或者使用后；</li> \n <li> 访问修饰符可以修饰实例变量；</li> \n <li> 实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；</li> \n <li> 实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；</li> \n <li> 实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObejectReference.VariableName。</li> \n</ul> \n<p>实例：</p> \n<pre>\r\nimport java.io.*;\r\npublic class Employee{\r\n&nbsp;&nbsp; // 这个成员变量对子类可见\r\n&nbsp;&nbsp; public String name;\r\n&nbsp;&nbsp; // 私有变量，仅在该类可见\r\n&nbsp;&nbsp; private double salary;\r\n&nbsp;&nbsp; //在构造器中对name赋值\r\n&nbsp;&nbsp; public Employee (String empName){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name = empName;\r\n&nbsp;&nbsp; }\r\n&nbsp;&nbsp; //设定salary的值\r\n&nbsp;&nbsp; public void setSalary(double empSal){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; salary = empSal;\r\n&nbsp;&nbsp; }&nbsp;&nbsp;\r\n&nbsp;&nbsp; // 打印信息\r\n&nbsp;&nbsp; public void printEmp(){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;name&nbsp; : &quot; + name );\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;salary :&quot; + salary);\r\n&nbsp;&nbsp; }\r\n\r\n&nbsp;&nbsp; public static void main(String args[]){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Employee empOne = new Employee(&quot;Ransika&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; empOne.setSalary(1000);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; empOne.printEmp();\r\n&nbsp;&nbsp; }\r\n}\r\n\r\n</pre> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nname  : Ransika\r\nsalary :1000.0\r\n</pre> \n<hr /> \n<h2>类变量（静态变量）</h2> \n<ul> \n <li> 类变量也称为静态变量，在类中以static关键字声明，但必须在方法构造方法和语句块之外。</li> \n <li> 无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。</li> \n <li> 静态变量除了被声明为常量外很少使用。常量是指声明为public/private，final和static类型的变量。常量初始化后不可改变。</li> \n <li> 静态变量储存在静态存储区。经常被声明为常量，很少单独使用static声明变量。</li> \n <li> 静态变量在程序开始时创建，在程序结束时销毁。</li> \n <li> 与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为public类型。</li> \n <li> 默认值和实例变量相似。数值型变量默认值是0，布尔型默认值是false，引用类型默认值是null。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。</li> \n <li> 静态变量可以通过：<em>ClassName.VariableName</em>的方式访问。</li> \n <li> 类变量被声明为public static final类型时，类变量名称必须使用大写字母。如果静态变量不是public和final类型，其命名方式与实例变量以及局部变量的命名方式一致。</li> \n</ul> \n<p>实例：</p> \n<pre>\r\nimport java.io.*;\r\npublic class Employee {\r\n    //salary是静态的私有变量\r\n    private static double salary;\r\n    // DEPARTMENT是一个常量\r\n    public static final String DEPARTMENT = &quot;开发人员&quot;;\r\n    public static void main(String args[]){\r\n    salary = 10000;\r\n        System.out.println(DEPARTMENT+&quot;平均工资:&quot;+salary);\r\n    }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\n开发人员平均工资:10000.0\r\n</pre> \n<p><strong>注意：</strong>如果其他类想要访问该变量，可以这样访问：<strong>Employee.DEPARTMENT</strong>。</p> \n<p>本章节中我们学习了Java的变量类型，下一章节中我们将介绍Java修饰符的使用。</p>', null, 'Java 变量类型|Java局部变量|实例变量|类变量（静态变量）|');
INSERT INTO `schoolcontent` VALUES ('291', '294', '<h1>Java 修饰符</h1> \n<p>Java语言提供了很多修饰符，主要分为以下两类：</p> \n<ul> \n <li>访问修饰符</li> \n <li>非访问修饰符</li> \n</ul> \n<p> 修饰符用来定义类、方法或者变量，通常放在语句的最前端。我们通过下面的例子来说明： </p> \n<pre>\r\npublic class className {\r\n   // ...\r\n}\r\nprivate boolean myFlag;\r\nstatic final double weeks = 9.5;\r\nprotected static final int BOXWIDTH = 42;\r\npublic static void main(String[] arguments) {\r\n   // 方法体\r\n}\r\n</pre> \n<hr /> \n<h2> 访问控制修饰符 </h2> \n<p>Java中，可以使用访问控制符来保护对类、变量、方法和构造方法的访问。Java支持4种不同的访问权限。</p> \n<p>默认的，也称为 <strong>default</strong>，在同一包内可见，不使用任何修饰符。</p> \n<p>私有的，以 <strong>private</strong> 修饰符指定，在同一类内可见。</p> \n<p>共有的，以 <strong>public</strong> 修饰符指定，对所有类可见。</p> \n<p>受保护的，以 <strong>protected</strong> 修饰符指定，对同一包内的类和所有子类可见。</p> \n<h3>默认访问修饰符-不使用任何关键字</h3> \n<p> 使用默认访问修饰符声明的变量和方法，对同一个包内的类是可见的。接口里的变量都隐式声明为public static final,而接口里的方法默认情况下访问权限为public。 </p> \n<p>实例：</p> \n<p> 如下例所示，变量和方法的声明可以不使用任何修饰符。 </p> \n<pre>\r\nString version = &quot;1.5.1&quot;;\r\nboolean processOrder() {\r\n   return true;\r\n}\r\n</pre> \n<h3>私有访问修饰符-private</h3> \n<p>私有访问修饰符是最严格的访问级别，所以被声明为private的方法、变量和构造方法只能被所属类访问，并且类和接口不能声明为private。</p> \n<p>声明为私有访问类型的变量只能通过类中公共的getter方法被外部类访问。</p> \n<p>Private访问修饰符的使用主要用来隐藏类的实现细节和保护类的数据。</p> \n<p>下面的类使用了私有访问修饰符：</p> \n<pre>\r\npublic class Logger {\r\n   private String format;\r\n   public String getFormat() {\r\n      return this.format;\r\n   }\r\n   public void setFormat(String format) {\r\n      this.format = format;\r\n   }\r\n}\r\n</pre> \n<p> 实例中，Logger类中的format变量为私有变量，所以其他类不能直接得到和设置该变量的值。为了使其他类能够操作该变量，定义了两个public方法：getFormat() （返回format的值）和setFormat(String)（设置format的值） </p> \n<h3>公有访问修饰符-public</h3> \n<p>被声明为public的类、方法、构造方法和接口能够被任何其他类访问。 </p>\n<p>如果几个相互访问的public类分布在不同的包中，则需要导入相应public类所在的包。由于类的继承性，类所有的公有方法和变量都能被其子类继承。 </p>\n<p> 以下函数使用了公有访问控制：</p> \n<pre>\r\npublic static void main(String[] arguments) {\r\n   // ...\r\n}\r\n</pre> \n<p>Java程序的main() 方法必须设置成公有的，否则，Java解释器将不能运行该类。</p> \n<h3>受保护的访问修饰符-protected</h3> \n<p>被声明为protected的变量、方法和构造器能被同一个包中的任何其他类访问，也能够被不同包中的子类访问。 </p>\n<p>Protected访问修饰符不能修饰类和接口，方法和成员变量能够声明为protected，但是接口的成员变量和成员方法不能声明为protected。 </p>\n<p>子类能访问Protected修饰符声明的方法和变量，这样就能保护不相关的类使用这些方法和变量。 </p>\n<p> 下面的父类使用了protected访问修饰符，子类重载了父类的openSpeaker()方法。</p> \n<pre>\r\nclass AudioPlayer {\r\n   protected boolean openSpeaker(Speaker sp) {\r\n      // 实现细节\r\n   }\r\n}\r\n\r\nclass StreamingAudioPlayer {\r\n   boolean openSpeaker(Speaker sp) {\r\n      // 实现细节\r\n   }\r\n}\r\n</pre> \n<p>如果把openSpeaker()方法声明为private，那么除了AudioPlayer之外的类将不能访问该方法。如果把openSpeaker()声明为public，那么所有的类都能够访问该方法。如果我们只想让该方法对其所在类的子类可见，则将该方法声明为protected。 </p> \n<h3>访问控制和继承</h3> \n<p> 请注意以下方法继承的规则： </p> \n<ul> \n <li> <p> 父类中声明为public的方法在子类中也必须为public。</p> </li> \n <li> <p> 父类中声明为protected的方法在子类中要么声明为protected，要么声明为public。不能声明为private。</p> </li> \n <li> <p> 父类中声明为private的方法，不能够被继承。</p> </li> \n</ul> \n<hr /> \n<h2> 非访问修饰符</h2> \n<p>为了实现一些其他的功能，Java也提供了许多非访问修饰符。</p> \n<p>static修饰符，用来创建类方法和类变量。</p> \n<p>Final修饰符，用来修饰类、方法和变量，final修饰的类不能够被继承，修饰的方法不能被继承类重新定义，修饰的变量为常量，是不可修改的。</p> \n<p>Abstract修饰符，用来创建抽象类和抽象方法。</p> \n<p>Synchronized和volatile修饰符，主要用于线程的编程。</p> \n<h3>Static修饰符</h3> \n<ul> \n <li> <p><strong>静态变量：</strong></p><p> Static关键字用来声明独立于对象的静态变量，无论一个类实例化多少对象，它的静态变量只有一份拷贝。 静态变量也被成为类变量。局部变量不能被声明为static变量。 </p></li>\n <li> <p><strong>静态方法：</strong></p><p> Static关键字用来声明独立于对象的静态方法。静态方法不能使用类的非静态变量。静态方法从参数列表得到数据，然后计算这些数据。 </p></li>\n</ul> \n<p> 对类变量和方法的访问可以直接使用classname.variablename和classname.methodname的方式访问。 </p> \n<p> 如下例所示，static修饰符用来创建类方法和类变量。</p> \n<pre>\r\npublic class InstanceCounter {\r\n   private static int numInstances = 0;\r\n   protected static int getCount() {\r\n      return numInstances;\r\n   }\r\n\r\n   private static void addInstance() {\r\n      numInstances++;\r\n   }\r\n\r\n   InstanceCounter() {\r\n      InstanceCounter.addInstance();\r\n   }\r\n\r\n   public static void main(String[] arguments) {\r\n      System.out.println(&quot;Starting with &quot; +\r\n      InstanceCounter.getCount() + &quot; instances&quot;);\r\n      for (int i = 0; i &lt; 500; ++i){\r\n         new InstanceCounter();\r\n          }\r\n      System.out.println(&quot;Created &quot; +\r\n      InstanceCounter.getCount() + &quot; instances&quot;);\r\n   }\r\n}\r\n</pre> \n<p>以上实例运行编辑结果如下:</p> \n<pre>\r\nStarted with 0 instances\r\nCreated 500 instances\r\n</pre> \n<h3>Final修饰符</h3> \n<p><strong>Final变量：</strong></p> \n<p>Final变量能被显式地初始化并且只能初始化一次。被声明为final的对象的引用不能指向不同的对象。但是final对象里的数据可以被改变。也就是说final对象的引用不能改变，但是里面的值可以改变。</p> \n<p>Final修饰符通常和static修饰符一起使用来创建类常量。</p> \n<p>实例:</p> \n<pre>\r\npublic class Test{\r\n  final int value = 10;\r\n  // 下面是声明常量的实例\r\n  public static final int BOXWIDTH = 6;\r\n  static final String TITLE = &quot;Manager&quot;;\r\n\r\n  public void changeValue(){\r\n     value = 12; //将输出一个错误\r\n  }\r\n}</pre> \n<h3>Final方法</h3> \n<p>类中的Final方法可以被子类继承，但是不能被子类修改。</p> \n<p>声明final方法的主要目的是防止该方法的内容被修改。</p> \n<p>如下所示，使用final修饰符声明方法。</p> \n<pre>\r\npublic class Test{\r\n    public final void changeName(){\r\n       // 方法体\r\n    }\r\n}\r\n</pre> \n<h3>Final类</h3> \n<p>Final类不能被继承，没有类能够继承final类的任何特性。</p> \n<p>实例：</p> \n<pre>\r\npublic final class Test {\r\n   // 类体\r\n}\r\n</pre> \n<h3>Abstract修饰符</h3> \n<p><strong>抽象类：</strong></p> \n<p>抽象类不能用来实例化对象，声明抽象类的唯一目的是为了将来对该类进行扩充。 </p>\n<p>一个类不能同时被abstract和final修饰。如果一个类包含抽象方法，那么该类一定要声明为抽象类，否则将出现编译错误。 </p>\n<p>抽象类可以包含抽象方法和非抽象方法。 </p>\n<p>实例：</p> \n<pre>\r\nabstract class Caravan{\r\n   private double price;\r\n   private String model;\r\n   private String year;\r\n   public abstract void goFast(); //抽象方法\r\n   public abstract void changeColor();\r\n}\r\n</pre> \n<h3>抽象方法</h3> \n<p> 抽象方法是一种没有任何实现的方法，该方法的的具体实现由子类提供。抽象方法不能被声明成final和strict。 </p>\n<p>任何继承抽象类的子类必须实现父类的所有抽象方法，除非该子类也是抽象类。 </p>\n<p>如果一个类包含若干个抽象方法，那么该类必须声明为抽象类。抽象类可以不包含抽象方法。 </p>\n<p>抽象方法的声明以分号结尾，例如：public abstract sample(); </p>\n<p>实例：</p> \n<pre>\r\npublic abstract class SuperClass{\r\n    abstract void m(); //抽象方法\r\n}\r\n \r\nclass SubClass extends SuperClass{\r\n     //实现抽象方法\r\n      void m(){\r\n          .........\r\n      }\r\n}\r\n</pre> \n<h3>Synchronized修饰符</h3> \n<p>Synchronized关键字声明的方法同一时间只能被一个线程访问。Synchronized修饰符可以应用于四个访问修饰符。 </p>\n<p>实例：</p> \n<pre>\r\npublic synchronized void showDetails(){\r\n.......\r\n} \r\n</pre> \n<h3>Transient修饰符</h3> \n<p>序列化的对象包含被transient修饰的实例变量时，java虚拟机(JVM)跳过该特定的变量。 </p>\n<p>该修饰符包含在定义变量的语句中，用来预处理类和变量的数据类型。 </p>\n<p>实例：</p> \n<pre>\r\npublic transient int limit = 55;   // will not persist\r\npublic int b; // will persist\r\n</pre> \n<h3> Volatile修饰符</h3> \n<p>Volatile 修饰的成员变量在每次被线程访问时，都强制从共享内存中重新读取该成员变量的值。而且，当成员变量发生变化时，会强制线程将变化值回写到共享内存。这样在任何时刻，两个不同的线程总是看到某个成员变量的同一个值。</p> \n<p>一个volatile对象引用可能是null。 </p>\n<p>实例：</p> \n<pre>\r\npublic class MyRunnable implements Runnable\r\n{\r\n    private volatile boolean active;\r\n    public void run()\r\n    {\r\n        active = true;\r\n        while (active) // 第一行\r\n        {\r\n            // 代码\r\n        }\r\n    }\r\n    public void stop()\r\n    {\r\n        active = false; // 第二行\r\n    }\r\n}\r\n</pre> \n<p> 通常情况下，在一个线程调用 run() 方法（在 Runnable 开启的线程），在另一个线程调用 stop() 方法。 如果 <strong><em>第一行</em></strong> 中缓冲区的 active 值被使用，那么在 <strong><em>第二行</em></strong> 的 active 值为 false 时循环不会停止。 </p>\n<p> 但是以上代码中我们使用了 volatile 修饰 active，所以该循环会停止。</p>', null, 'Java 修饰符|访问控制修饰符|非访问修饰符|');
INSERT INTO `schoolcontent` VALUES ('292', '295', '<h1>Java 运算符</h1> \n<p>计算机的最基本用途之一就是执行数学运算，作为一门计算机语言，Java也提供了一套丰富的运算符来操纵变量。我们可以把运算符分成以下几组：</p> \n<ul> \n <li> 算术运算符</li> \n <li> 关系运算符</li> \n <li> 位运算符</li> \n <li> 逻辑运算符</li> \n <li> 赋值运算符</li> \n <li> 其他运算符</li> \n</ul> \n<h2>算术运算符</h2> \n<p>算术运算符用在数学表达式中，它们的作用和在数学中的作用一样。下表列出了所有的算术运算符。</p> \n<p>表格中的实例假设整数变量A的值为10，变量B的值为20：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:64px;\"> 操作符</th> \n   <th style=\"width:273px;\"> 描述</th> \n   <th style=\"width:111px;\"> 例子</th> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> +</td> \n   <td style=\"width:273px;\"> 加法 - 相加运算符两侧的值</td> \n   <td style=\"width:111px;\"> A + B等于30</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> -</td> \n   <td style=\"width:273px;\"> 减法 - 左操作数减去右操作数</td> \n   <td style=\"width:111px;\"> A – B等于-10</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> *</td> \n   <td style=\"width:273px;\"> 乘法 - 相乘操作符两侧的值</td> \n   <td style=\"width:111px;\"> A * B等于200</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> /</td> \n   <td style=\"width:273px;\"> 除法 - 左操作数除以右操作数</td> \n   <td style=\"width:111px;\"> B / A等于2</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> ％</td> \n   <td style=\"width:273px;\"> 取模 - 左操作数除右操作数的余数</td> \n   <td style=\"width:111px;\"> B%A等于0</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> + +</td> \n   <td style=\"width:273px;\"> 自增 - 操作数的值增加1</td> \n   <td style=\"width:111px;\"> B + +等于21</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> --</td> \n   <td style=\"width:273px;\"> 自减 -- 操作数的值减少1</td> \n   <td style=\"width:111px;\"> B - -等于19</td> \n  </tr> \n </tbody> \n</table> \n<h3>实例</h3> \n<p>下面的简单示例程序演示了算术运算符。复制并粘贴下面的Java程序并保存为Test.java文件，然后编译并运行这个程序：</p> \n<pre>\r\npublic class Test {\r\n\r\n  public static void main(String args[]) {\r\n     int a = 10;\r\n     int b = 20;\r\n     int c = 25;\r\n     int d = 25;\r\n     System.out.println(&quot;a + b = &quot; + (a + b) );\r\n     System.out.println(&quot;a - b = &quot; + (a - b) );\r\n     System.out.println(&quot;a * b = &quot; + (a * b) );\r\n     System.out.println(&quot;b / a = &quot; + (b / a) );\r\n     System.out.println(&quot;b % a = &quot; + (b % a) );\r\n     System.out.println(&quot;c % a = &quot; + (c % a) );\r\n     System.out.println(&quot;a++   = &quot; +  (a++) );\r\n     System.out.println(&quot;a--   = &quot; +  (a--) );\r\n     // 查看  d++ 与 ++d 的不同\r\n     System.out.println(&quot;d++   = &quot; +  (d++) );\r\n     System.out.println(&quot;++d   = &quot; +  (++d) );\r\n  }\r\n} \r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=test_operator\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\na + b = 30\r\na - b = -10\r\na * b = 200\r\nb / a = 2\r\nb % a = 0\r\nc % a = 5\r\na++   = 10\r\na--   = 11\r\nd++   = 25\r\n++d   = 27\r\n</pre> \n<hr /> \n<h2>关系运算符</h2> \n<p>下表为Java支持的关系运算符</p> \n<p>表格中的实例整数变量A的值为10，变量B的值为20：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:42px;\"> 运算符</th> \n   <th style=\"width:407px;\"> 描述</th> \n   <th style=\"width:128px;\"> 例子</th> \n  </tr> \n  <tr> \n   <td style=\"width:42px;\"> ==</td> \n   <td style=\"width:407px;\"> 检查如果两个操作数的值是否相等，如果相等则条件为真。</td> \n   <td style=\"width:128px;\"> （A == B）为假(非真)。</td> \n  </tr> \n  <tr> \n   <td style=\"width:42px;\"> !=</td> \n   <td style=\"width:407px;\"> 检查如果两个操作数的值是否相等，如果值不相等则条件为真。</td> \n   <td style=\"width:128px;\"> (A != B) 为真。</td> \n  </tr> \n  <tr> \n   <td style=\"width:42px;\"> &gt;&nbsp;</td> \n   <td style=\"width:407px;\"> 检查左操作数的值是否大于右操作数的值，如果是那么条件为真。</td> \n   <td style=\"width:128px;\"> （A&gt; B）非真。</td> \n  </tr> \n  <tr> \n   <td style=\"width:42px;\"> &lt;&nbsp;</td> \n   <td style=\"width:407px;\"> 检查左操作数的值是否小于右操作数的值，如果是那么条件为真。</td> \n   <td style=\"width:128px;\"> （A &lt;B）为真。</td> \n  </tr> \n  <tr> \n   <td style=\"width:42px;\"> &gt; =</td> \n   <td style=\"width:407px;\"> 检查左操作数的值是否大于或等于右操作数的值，如果是那么条件为真。</td> \n   <td style=\"width:128px;\"> （A&gt; = B）为假。</td> \n  </tr> \n  <tr> \n   <td style=\"width:42px;\"> &lt;=</td> \n   <td style=\"width:407px;\"> 检查左操作数的值是否小于或等于右操作数的值，如果是那么条件为真。</td> \n   <td style=\"width:128px;\"> （A &lt;= B）为真。</td> \n  </tr> \n </tbody> \n</table> \n<h3>实例</h3> \n<p>下面的简单示例程序演示了关系运算符。复制并粘贴下面的Java程序并保存为Test.java文件，然后编译并运行这个程序：</p> \n<pre>\r\npublic class Test {\r\n\r\n  public static void main(String args[]) {\r\n     int a = 10;\r\n     int b = 20;\r\n     System.out.println(&quot;a == b = &quot; + (a == b) );\r\n     System.out.println(&quot;a != b = &quot; + (a != b) );\r\n     System.out.println(&quot;a &gt; b = &quot; + (a &gt; b) );\r\n     System.out.println(&quot;a &lt; b = &quot; + (a &lt; b) );\r\n     System.out.println(&quot;b &gt;= a = &quot; + (b &gt;= a) );\r\n     System.out.println(&quot;b &lt;= a = &quot; + (b &lt;= a) );\r\n  }\r\n} \r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\na == b = false\r\na != b = true\r\na &gt; b = false\r\na &lt; b = true\r\nb &gt;= a = true\r\nb &lt;= a = false\r\n</pre> \n<hr />\n<h2> 位运算符</h2> \n<p> Java定义了位运算符，应用于整数类型(int)，长整型(long)，短整型(short)，字符型(char)，和字节型(byte)等类型。 </p> \n<p> 位运算符作用在所有的位上，并且按位运算。假设a = 60，b = 13;它们的二进制格式表示将如下：</p> \n<pre>\r\nA = 0011 1100\r\nB = 0000 1101\r\n-----------------\r\nA&amp;b = 0000 1100\r\nA | B = 0011 1101\r\nA ^ B = 0011 0001\r\n~A= 1100 0011\r\n</pre> \n<p>下表列出了位运算符的基本运算,假设整数变量A的值为60和变量B的值为13：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:57px;\"> 操作符</th> \n   <th style=\"width:372px;\"> 描述</th> \n   <th style=\"width:148px;\"> 例子</th> \n  </tr> \n  <tr> \n   <td style=\"width:57px;\"> ＆</td> \n   <td style=\"width:372px;\"> 按位与操作符，当且仅当两个操作数的某一位都非0时候结果的该位才为1。</td> \n   <td style=\"width:148px;\"> （A＆B），得到12，即0000 1100</td> \n  </tr> \n  <tr> \n   <td style=\"width:57px;\"> |</td> \n   <td style=\"width:372px;\"> 按位或操作符，只要两个操作数的某一位有一个非0时候结果的该位就为1。</td> \n   <td style=\"width:148px;\"> （A | B）得到61，即 0011 1101</td> \n  </tr> \n  <tr> \n   <td style=\"width:57px;\"> ^</td> \n   <td style=\"width:372px;\"> 按位异或操作符，两个操作数的某一位不相同时候结果的该位就为1。</td> \n   <td style=\"width:148px;\"> （A ^ B）得到49，即 0011 0001</td> \n  </tr> \n  <tr> \n   <td style=\"width:57px;\"> 〜</td> \n   <td style=\"width:372px;\"> 按位补运算符翻转操作数的每一位。</td> \n   <td style=\"width:148px;\"> （〜A）得到-61，即1100 0011</td> \n  </tr> \n  <tr> \n   <td style=\"width:57px;\"> &lt;&lt;&nbsp;</td> \n   <td style=\"width:372px;\"> 按位左移运算符。左操作数按位左移右操作数指定的位数。</td> \n   <td style=\"width:148px;\"> A &lt;&lt; 2得到240，即 1111 0000</td> \n  </tr> \n  <tr> \n   <td style=\"width:57px;\"> &gt;&gt;&nbsp;</td> \n   <td style=\"width:372px;\"> 按位右移运算符。左操作数按位右移右操作数指定的位数。</td> \n   <td style=\"width:148px;\"> A &gt;&gt; 2得到15即 1111</td> \n  </tr> \n  <tr> \n   <td style=\"width:57px;\"> &gt;&gt;&gt;&nbsp;</td> \n   <td style=\"width:372px;\"> 按位右移补零操作符。左操作数的值按右操作数指定的位数右移，移动得到的空位以零填充。</td> \n   <td style=\"width:148px;\"> A&gt;&gt;&gt;2得到15即0000 1111</td> \n  </tr> \n </tbody> \n</table> \n<h3>实例</h3> \n<p>下面的简单示例程序演示了位运算符。复制并粘贴下面的Java程序并保存为Test.java文件，然后编译并运行这个程序： </p> \n<pre>\r\npublic class Test {\r\n&nbsp; public static void main(String args[]) {\r\n&nbsp;&nbsp;&nbsp;  int a = 60; /* 60 = 0011 1100 */&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp; int b = 13; /* 13 = 0000 1101 */\r\n&nbsp;&nbsp;&nbsp;&nbsp; int c = 0;\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = a &amp; b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* 12 = 0000 1100 */\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;a &amp; b = &quot; + c );\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = a | b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* 61 = 0011 1101 */\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;a | b = &quot; + c );\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = a ^ b;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* 49 = 0011 0001 */\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;a ^ b = &quot; + c );\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = ~a;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*-61 = 1100 0011 */\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;~a = &quot; + c );\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = a &lt;&lt; 2;&nbsp;&nbsp;&nbsp;&nbsp; /* 240 = 1111 0000 */\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;a &lt;&lt; 2 = &quot; + c );\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = a &gt;&gt; 2;&nbsp;&nbsp;&nbsp;&nbsp; /* 15 = 1111 */\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;a &gt;&gt; 2&nbsp; = &quot; + c );\r\n&nbsp;&nbsp;\r\n  &nbsp;&nbsp; c = a &gt;&gt;&gt; 2;&nbsp;&nbsp;&nbsp;&nbsp; /* 15 = 0000 1111 */\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;a &gt;&gt;&gt; 2 = &quot; + c );\r\n&nbsp; }\r\n}&nbsp;\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\na &amp; b = 12\r\na | b = 61\r\na ^ b = 49\r\n~a = -61\r\na &lt;&lt; 2 = 240\r\na &gt;&gt; 15\r\na &gt;&gt;&gt; 15\r\n</pre> \n<hr />\n<h2>逻辑运算符</h2> \n<p>下表列出了逻辑运算符的基本运算，假设布尔变量A为真，变量B为假</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:37px;\"> 操作符</th> \n   <th style=\"width:433px;\"> 描述</th> \n   <th style=\"width:106px;\"> 例子</th> \n  </tr> \n  <tr> \n   <td style=\"width:37px;\"> &amp;&amp;</td> \n   <td style=\"width:433px;\"> 称为逻辑与运算符。当且仅当两个操作数都为真，条件才为真。</td> \n   <td style=\"width:106px;\"> （A &amp;&amp; B）为假。</td> \n  </tr> \n  <tr> \n   <td style=\"width:37px;\"> | |</td> \n   <td style=\"width:433px;\"> 称为逻辑或操作符。如果任何两个操作数任何一个为真，条件为真。</td> \n   <td style=\"width:106px;\"> （A | | B）为真。</td> \n  </tr> \n  <tr> \n   <td style=\"width:37px;\"> ！</td> \n   <td style=\"width:433px;\"> 称为逻辑非运算符。用来反转操作数的逻辑状态。如果条件为true，则逻辑非运算符将得到false。</td> \n   <td style=\"width:106px;\"> ！（A &amp;&amp; B）为真。</td> \n  </tr> \n </tbody> \n</table> \n<h3>实例</h3> \n<p>下面的简单示例程序演示了逻辑运算符。复制并粘贴下面的Java程序并保存为Test.java文件，然后编译并运行这个程序：</p> \n<pre>\r\npublic class Test {\r\n&nbsp; public static void main(String args[]) {\r\n&nbsp;&nbsp;&nbsp;&nbsp; boolean a = true;\r\n&nbsp;&nbsp;&nbsp;&nbsp; boolean b = false;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;a &amp;&amp; b = &quot; + (a&amp;&amp;b));\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;a || b = &quot; + (a||b) );\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;!(a &amp;&amp; b) = &quot; + !(a &amp;&amp; b));\r\n&nbsp; }\r\n}&nbsp;\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\na &amp;&amp; b = false\r\na || b = true\r\n!(a &amp;&amp; b) = true\r\n</pre> \n<hr />\n<h2>赋值运算符</h2> \n<p> 下面是Java语言支持的赋值运算符：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:46px;\"> 操作符</th> \n   <th style=\"width:376px;\"> 描述</th> \n   <th style=\"width:154px;\"> 例子</th> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> =</td> \n   <td style=\"width:376px;\"> 简单的赋值运算符，将右操作数的值赋给左侧操作数</td> \n   <td style=\"width:154px;\"> C = A + B将把A + B得到的值赋给C</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> + =</td> \n   <td style=\"width:376px;\"> 加和赋值操作符，它把左操作数和右操作数相加赋值给左操作数</td> \n   <td style=\"width:154px;\"> C + = A等价于C = C + A</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> - =</td> \n   <td style=\"width:376px;\"> 减和赋值操作符，它把左操作数和右操作数相减赋值给左操作数</td> \n   <td style=\"width:154px;\"> C - = A等价于C = C -<br /> &nbsp;A</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> * =</td> \n   <td style=\"width:376px;\"> 乘和赋值操作符，它把左操作数和右操作数相乘赋值给左操作数</td> \n   <td style=\"width:154px;\"> C * = A等价于C = C * A</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> / =</td> \n   <td style=\"width:376px;\"> 除和赋值操作符，它把左操作数和右操作数相除赋值给左操作数</td> \n   <td style=\"width:154px;\"> C / = A等价于C = C / A</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> （％）=</td> \n   <td style=\"width:376px;\"> 取模和赋值操作符，它把左操作数和右操作数取模后赋值给左操作数</td> \n   <td style=\"width:154px;\"> C％= A等价于C = C％A</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> &lt;&lt; =</td> \n   <td style=\"width:376px;\"> 左移位赋值运算符</td> \n   <td style=\"width:154px;\"> C &lt;&lt; = 2等价于C = C &lt;&lt; 2</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> &gt;&gt; =</td> \n   <td style=\"width:376px;\"> 右移位赋值运算符</td> \n   <td style=\"width:154px;\"> C &gt;&gt; = 2等价于C = C &gt;&gt; 2</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> ＆=</td> \n   <td style=\"width:376px;\"> 按位与赋值运算符</td> \n   <td style=\"width:154px;\"> C＆= 2等价于C = C＆2</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> ^ =</td> \n   <td style=\"width:376px;\"> 按位异或赋值操作符</td> \n   <td style=\"width:154px;\"> C ^ = 2等价于C = C ^ 2</td> \n  </tr> \n  <tr> \n   <td style=\"width:46px;\"> | =</td> \n   <td style=\"width:376px;\"> 按位或赋值操作符</td> \n   <td style=\"width:154px;\"> C | = 2等价于C = C | 2</td> \n  </tr> \n </tbody> \n</table> \n<h3>实例</h3> \n<p>面的简单示例程序演示了赋值运算符。复制并粘贴下面的Java程序并保存为Test.java文件，然后编译并运行这个程序：</p> \n<pre>\r\npublic class Test {\r\n&nbsp; public static void main(String args[]) {\r\n&nbsp;&nbsp;&nbsp;&nbsp; int a = 10;\r\n&nbsp;&nbsp;&nbsp;&nbsp; int b = 20;\r\n&nbsp;&nbsp;&nbsp;&nbsp; int c = 0;\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = a + b;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c = a + b = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c += a ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c += a&nbsp; = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c -= a ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c -= a = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c *= a ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c *= a = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; a = 10;\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = 15;\r\n&nbsp;&nbsp;&nbsp;&nbsp; c /= a ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c /= a = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; a = 10;\r\n&nbsp;&nbsp;&nbsp;&nbsp; c = 15;\r\n&nbsp;&nbsp;&nbsp;&nbsp; c %= a ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c %= a&nbsp; = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c &lt;&lt;= 2 ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c &lt;&lt;= 2 = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c &gt;&gt;= 2 ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c &gt;&gt;= 2 = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c &gt;&gt;= 2 ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c &gt;&gt;= a = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c &amp;= a ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c &amp;= 2&nbsp; = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c ^= a ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c ^= a&nbsp;&nbsp; = &quot; + c );\r\n&nbsp;&nbsp;&nbsp;&nbsp; c |= a ;\r\n&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(&quot;c |= a&nbsp;&nbsp; = &quot; + c );\r\n&nbsp; }\r\n}&nbsp;\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nc = a + b = 30\r\nc += a  = 40\r\nc -= a = 30\r\nc *= a = 300\r\nc /= a = 1\r\nc %= a  = 5\r\nc &lt;&lt;= 2 = 20\r\nc &gt;&gt;= 2 = 5\r\nc &gt;&gt;= 2 = 1\r\nc &amp;= a  = 0\r\nc ^= a   = 10\r\nc |= a   = 10\r\n</pre> \n<hr />\n<h2>条件运算符（?:）</h2> \n<p>条件运算符也被称为三元运算符。该运算符有3个操作数，并且需要判断布尔表达式的值。该运算符的主要是决定哪个值应该赋值给变量。</p> \n<pre>\r\nvariable x = (expression) ? value if true : value if false\r\n</pre> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n   public static void main(String args[]){\r\n      int a , b;   \r\n      a = 10;    \r\nb = (a == 1) ? 20: 30;    \r\nSystem.out.println( &quot;Value of b is : &quot; +  b );\r\n      b = (a == 10) ? 20: 30;    \r\n     System.out.println( &quot;Value of b is : &quot; + b );\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nValue of b is : 30\r\nValue of b is : 20\r\n</pre> \n<hr />\n<h2>instanceOf 运算符</h2> \n<p>该运算符用于操作对象实例，检查该对象是否是一个特定类型（类类型或接口类型）。</p> \n<p>instanceof运算符使用格式如下：</p> \n<pre>\r\n( Object reference variable ) instanceOf  (class/interface type)\r\n</pre> \n<p> 如果运算符左侧变量所指的对象，是操作符右侧类或接口(class/interface)的一个对象，那么结果为真。 </p>\n<p> 下面是一个例子：</p> \n<pre>\r\nString name = \'James\';\r\nboolean result = name instanceOf String; // 由于name是String类型，所以返回真\r\n</pre> \n<p>如果被比较的对象兼容于右侧类型,该运算符仍然返回true。</p> \n<p>看下面的例子：</p> \n<pre>\r\nclass Vehicle {}\r\n\r\npublic class Car extends Vehicle {\r\n   public static void main(String args[]){\r\n      Vehicle a = new Car();\r\n      boolean result =  a instanceof Car;\r\n      System.out.println( result);\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>true</pre> \n<hr />\n<h2>Java运算符优先级</h2> \n<p>当多个运算符出现在一个表达式中，谁先谁后呢？这就涉及到运算符的优先级别的问题。在一个多运算符的表达式中，运算符优先级不同会导致最后得出的结果差别甚大。</p>\n<p>例如，（1+3）＋（3+2）*2，这个表达式如果按加号最优先计算，答案就是 18，如果按照乘号最优先，答案则是 14。 </p>\n<p>再如，x = 7 + 3 * 2;这里x得到13，而不是20，因为乘法运算符比加法运算符有较高的优先级，所以先计算3 * 2得到6，然后再加7。 </p>\n<p>下表中具有最高优先级的运算符在的表的最上面，最低优先级的在表的底部。</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:66px;\"> 类别 </th> \n   <th style=\"width:274px;\"> 操作符</th> \n   <th style=\"width:132px;\"> 关联性 </th> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 后缀</td> \n   <td style=\"width:274px;\"> () [] . (点操作符)</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 一元</td> \n   <td style=\"width:274px;\"> + + - ！〜</td> \n   <td style=\"width:132px;\"> 从右到左</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 乘性&nbsp;</td> \n   <td style=\"width:274px;\"> * /％</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 加性&nbsp;</td> \n   <td style=\"width:274px;\"> + -</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 移位&nbsp;</td> \n   <td style=\"width:274px;\"> &gt;&gt; &gt;&gt;&gt; &nbsp;&lt;&lt;&nbsp;</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 关系&nbsp;</td> \n   <td style=\"width:274px;\"> &gt;&gt; = &lt;&lt; =&nbsp;</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 相等&nbsp;</td> \n   <td style=\"width:274px;\"> ==&nbsp; !=</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 按位与</td> \n   <td style=\"width:274px;\"> ＆</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 按位异或</td> \n   <td style=\"width:274px;\"> ^</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 按位或</td> \n   <td style=\"width:274px;\"> |</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 逻辑与</td> \n   <td style=\"width:274px;\"> &amp;&amp;</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 逻辑或</td> \n   <td style=\"width:274px;\"> | |</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 条件</td> \n   <td style=\"width:274px;\"> ？：</td> \n   <td style=\"width:132px;\"> 从右到左</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 赋值</td> \n   <td style=\"width:274px;\"> = + = - = * = / =％= &gt;&gt; = &lt;&lt; =＆= ^ = | =</td> \n   <td style=\"width:132px;\"> 从右到左</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> 逗号</td> \n   <td style=\"width:274px;\"> ，</td> \n   <td style=\"width:132px;\"> 左到右</td> \n  </tr> \n </tbody> \n</table>', null, 'Java 运算符|算术运算符|关系运算符|位运算符|逻辑运算符|赋值运算符|条件运算符（?:）|instanceOf 运算符|Java运算符优先级|');
INSERT INTO `schoolcontent` VALUES ('293', '296', '<h1>Java 循环结构 - for, while 及 do...while</h1> \n<p>顺序结构的程序语句只能被执行一次。如果您想要同样的操作执行多次,，就需要使用循环结构。 </p>\n<p>Java中有三种主要的循环结构：</p> \n<ul> \n <li align=\"left\"> while循环</li> \n <li> do…while循环</li> \n <li align=\"left\"> for循环</li> \n</ul> \n<p>在Java5中引入了一种主要用于数组的增强型for循环。</p> \n<hr /> \n<h2>while循环</h2> \n<p>while是最基本的循环，它的结构为：</p> \n<pre>\r\nwhile( 布尔表达式 ) {\r\n	//循环内容\r\n}\r\n</pre> \n<p>只要布尔表达式为true，循环体会一直执行下去。</p> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n   public static void main(String args[]) {\r\n      int x = 10;\r\n      while( x &lt; 20 ) {\r\n         System.out.print(&quot;value of x : &quot; + x );\r\n         x++;\r\n         System.out.print(&quot;\\n&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nvalue of x : 10\r\nvalue of x : 11\r\nvalue of x : 12\r\nvalue of x : 13\r\nvalue of x : 14\r\nvalue of x : 15\r\nvalue of x : 16\r\nvalue of x : 17\r\nvalue of x : 18\r\nvalue of x : 19\r\n</pre> \n<hr /> \n<h2>do…while循环</h2> \n<p>对于while语句而言，如果不满足条件，则不能进入循环。但有时候我们需要即使不满足条件，也至少执行一次。</p> \n<p>do…while循环和while循环相似，不同的是，do…while循环至少会执行一次。</p> \n<pre>\r\ndo {\r\n       //代码语句\r\n}while(布尔表达式);\r\n</pre> \n<p> <strong>注意：</strong>布尔表达式在循环体的后面，所以语句块在检测布尔表达式之前已经执行了。 如果布尔表达式的值为true，则语句块一直执行，直到布尔表达式的值为false。 </p> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]){\r\n      int x = 10;\r\n\r\n      do{\r\n         System.out.print(&quot;value of x : &quot; + x );\r\n         x++;\r\n         System.out.print(&quot;\\n&quot;);\r\n      }while( x &lt; 20 );\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nvalue of x : 10\r\nvalue of x : 11\r\nvalue of x : 12\r\nvalue of x : 13\r\nvalue of x : 14\r\nvalue of x : 15\r\nvalue of x : 16\r\nvalue of x : 17\r\nvalue of x : 18\r\nvalue of x : 19\r\n</pre> \n<hr /> \n<h2>for循环</h2> \n<p>虽然所有循环结构都可以用while或者do...while表示，但Java提供了另一种语句 —— for循环，使一些循环结构变得更加简单。 </p> \n<p>for循环执行的次数是在执行前就确定的。语法格式如下：</p> \n<pre>\r\nfor(初始化; 布尔表达式; 更新) {\r\n    //代码语句\r\n}\r\n</pre> \n<p>关于for循环有以下几点说明：</p> \n<ul> \n <li> 最先执行初始化步骤。可以声明一种类型，但可初始化一个或多个循环控制变量，也可以是空语句。</li> \n <li> 然后，检测布尔表达式的值。如果为true，循环体被执行。如果为false，循环终止，开始执行循环体后面的语句。</li> \n <li> 执行一次循环后，更新循环控制变量。</li> \n <li> 再次检测布尔表达式。循环执行上面的过程。</li> \n</ul> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]) {\r\n\r\n      for(int x = 10; x &lt; 20; x = x+1) {\r\n         System.out.print(&quot;value of x : &quot; + x );\r\n         System.out.print(&quot;\\n&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nvalue of x : 10\r\nvalue of x : 11\r\nvalue of x : 12\r\nvalue of x : 13\r\nvalue of x : 14\r\nvalue of x : 15\r\nvalue of x : 16\r\nvalue of x : 17\r\nvalue of x : 18\r\nvalue of x : 19\r\n</pre> \n<hr /> \n<h2>Java增强for循环</h2> \n<p>Java5引入了一种主要用于数组的增强型for循环。</p> \n<p>Java增强for循环语法格式如下:</p> \n<pre>\r\nfor(声明语句 : 表达式)\r\n{\r\n   //代码句子\r\n}\r\n</pre> \n<p><strong>声明语句：</strong>声明新的局部变量，该变量的类型必须和数组元素的类型匹配。其作用域限定在循环语句块，其值与此时数组元素的值相等。 </p>\n<p><strong>表达式：</strong>表达式是要访问的数组名，或者是返回值为数组的方法。</p> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]){\r\n      int [] numbers = {10, 20, 30, 40, 50};\r\n\r\n      for(int x : numbers ){\r\n         System.out.print( x );\r\n         System.out.print(&quot;,&quot;);\r\n      }\r\n      System.out.print(&quot;\\n&quot;);\r\n      String [] names ={&quot;James&quot;, &quot;Larry&quot;, &quot;Tom&quot;, &quot;Lacy&quot;};\r\n      for( String name : names ) {\r\n         System.out.print( name );\r\n         System.out.print(&quot;,&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n10,20,30,40,50,\r\nJames,Larry,Tom,Lacy,\r\n</pre> \n<hr /> \n<h2>break关键字</h2> \n<p>break主要用在循环语句或者switch语句中，用来跳出整个语句块。 </p>\n<p>break跳出最里层的循环，并且继续执行该循环下面的语句。</p> \n<h3>语法</h3> \n<p>break的用法很简单，就是循环结构中的一条语句：</p> \n<pre>\r\nbreak;\r\n</pre> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]) {\r\n      int [] numbers = {10, 20, 30, 40, 50};\r\n\r\n      for(int x : numbers ) {\r\n         if( x == 30 ) {\r\n	      break;\r\n         }\r\n         System.out.print( x );\r\n         System.out.print(&quot;\\n&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n10\r\n20\r\n</pre> \n<hr /> \n<h2>continue关键字</h2> \n<p>continue适用于任何循环控制结构中。作用是让程序立刻跳转到下一次循环的迭代。 </p>\n<p>在for循环中，continue语句使程序立即跳转到更新语句。 </p>\n<p>在while或者do…while循环中，程序立即跳转到布尔表达式的判断语句。 </p> \n<h3>语法</h3> \n<p>continue就是循环体中一条简单的语句：</p> \n<pre>\r\ncontinue;\r\n</pre> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]) {\r\n      int [] numbers = {10, 20, 30, 40, 50};\r\n\r\n      for(int x : numbers ) {\r\n         if( x == 30 ) {\r\n	      continue;\r\n         }\r\n         System.out.print( x );\r\n         System.out.print(&quot;\\n&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n10\r\n20\r\n40\r\n50\r\n</pre>', null, 'Java 循环结构 - for, while 及 do...while|while循环|do…while循环|for循环|Java增强for循环|break关键字|continue关键字|');
INSERT INTO `schoolcontent` VALUES ('294', '297', '<h1>Java 分支结构 - if...else/switch</h1> \n<p>顺序结构只能顺序执行，不能进行判断和选择，因此需要分支结构。</p> \n<p>Java有两种分支结构：</p> \n<ul> \n <li> if语句</li> \n <li> switch语句</li> \n</ul> \n<hr />\n<h2>if语句</h2> \n<p>一个if语句包含一个布尔表达式和一条或多条语句。</p> \n<h3>语法</h3> \n<p>If语句的用语法如下：</p> \n<pre>\r\nif(布尔表达式)\r\n{\r\n   //如果布尔表达式为true将执行的语句\r\n}\r\n</pre> \n<p> 如果布尔表达式的值为true，则执行if语句中的代码块。否则执行If语句块后面的代码。 </p> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]){\r\n      int x = 10;\r\n\r\n      if( x &lt; 20 ){\r\n         System.out.print(&quot;这是 if 语句&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上代码编译运行结果如下：</p> \n<pre>\r\n这是 if 语句\r\n</pre> \n<hr />\n<h2>if...else语句</h2> \n<p>if语句后面可以跟else语句，当if语句的布尔表达式值为false时，else语句块会被执行。</p> \n<h3>语法</h3> \n<p>if…else的用法如下：</p> \n<pre>\r\nif(布尔表达式){\r\n   //如果布尔表达式的值为true\r\n}else{\r\n   //如果布尔表达式的值为false\r\n}\r\n</pre> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]){\r\n      int x = 30;\r\n\r\n      if( x &lt; 20 ){\r\n         System.out.print(&quot;这是 if 语句&quot;);\r\n      }else{\r\n         System.out.print(&quot;这是 else 语句&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上代码编译运行结果如下：</p> \n<pre>\r\n这是 else 语句\r\n</pre> \n<hr />\n<h2>if...else if...else语句</h2> \n<p> if语句后面可以跟elseif…else语句，这种语句可以检测到多种可能的情况。</p>\n<p> 使用if，else if，else语句的时候，需要注意下面几点：</p> \n<ul> \n <li> if语句至多有1个else语句，else语句在所有的elseif语句之后。</li> \n <li> If语句可以有若干个elseif语句，它们必须在else语句之前。</li> \n <li> 一旦其中一个else if语句检测为true，其他的else if以及else语句都将跳过执行。</li> \n</ul> \n<h3>语法</h3> \n<p>if...else语法格式如下: </p>\n<pre>\r\nif(布尔表达式 1){\r\n   //如果布尔表达式 1的值为true执行代码\r\n}else if(布尔表达式 2){\r\n   //如果布尔表达式 2的值为true执行代码\r\n}else if(布尔表达式 3){\r\n   //如果布尔表达式 3的值为true执行代码\r\n}else {\r\n   //如果以上布尔表达式都不为true执行代码\r\n}\r\n</pre> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]){\r\n      int x = 30;\r\n\r\n      if( x == 10 ){\r\n         System.out.print(&quot;Value of X is 10&quot;);\r\n      }else if( x == 20 ){\r\n         System.out.print(&quot;Value of X is 20&quot;);\r\n      }else if( x == 30 ){\r\n         System.out.print(&quot;Value of X is 30&quot;);\r\n      }else{\r\n         System.out.print(&quot;This is else statement&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上代码编译运行结果如下：</p> \n<pre>\r\nValue of X is 30\r\n</pre>\n<hr /> \n<h2>嵌套的if…else语句</h2> \n<p>使用嵌套的if-else语句是合法的。也就是说你可以在另一个if或者elseif语句中使用if或者elseif语句。 </p> \n<h3>语法</h3> \n<p>嵌套的if…else语法格式如下：</p> \n<pre>\r\nif(布尔表达式 1){\r\n   ////如果布尔表达式 1的值为true执行代码\r\n   if(布尔表达式 2){\r\n      ////如果布尔表达式 2的值为true执行代码\r\n   }\r\n}\r\n</pre> \n<p>你可以像 <em>if</em> 语句一样嵌套 <em>else if...else</em>。</p> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]){\r\n      int x = 30;\r\n      int y = 10;\r\n\r\n      if( x == 30 ){\r\n         if( y == 10 ){\r\n             System.out.print(&quot;X = 30 and Y = 10&quot;);\r\n          }\r\n       }\r\n    }\r\n}\r\n</pre> \n<p>以上代码编译运行结果如下：</p> \n<pre>\r\nX = 30 and Y = 10\r\n</pre> \n<hr /> \n<h2>switch语句</h2> \n<p>switch语句判断一个变量与一系列值中某个值是否相等，每个值称为一个分支。</p> \n<h3>语法</h3> \n<p>switch语法格式如下：</p> \n<pre>\r\nswitch(expression){\r\n    case value :\r\n       //语句\r\n       break; //可选\r\n    case value :\r\n       //语句\r\n       break; //可选\r\n    //你可以有任意数量的case语句\r\n    default : //可选\r\n       //语句\r\n}\r\n</pre> \n<p> switch语句有如下规则：</p> \n<ul> \n <li> switch语句中的变量类型只能为byte、short、int或者char。</li> \n <li> switch语句可以拥有多个case语句。每个case后面跟一个要比较的值和冒号。</li> \n <li> case语句中的值的数据类型必须与变量的数据类型相同，而且只能是常量或者字面常量。</li> \n <li> 当变量的值与case语句的值相等时，那么case语句之后的语句开始执行，直到break语句出现才会跳出switch语句。3</li> \n <li> 当遇到break语句时，switch语句终止。程序跳转到switch语句后面的语句执行。case语句不必须要包含break语句。如果没有break语句出现，程序会继续执行下一条case语句，直到出现break语句。</li> \n <li> switch语句可以包含一个default分支，该分支必须是switch语句的最后一个分支。default在没有case语句的值和变量值相等的时候执行。default分支不需要break语句。</li> \n</ul> \n<h3>实例</h3> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]){\r\n      //char grade = args[0].charAt(0);\r\n      char grade = \'C\';\r\n\r\n      switch(grade)\r\n      {\r\n         case \'A\' :\r\n            System.out.println(&quot;Excellent!&quot;); \r\n            break;\r\n         case \'B\' :\r\n         case \'C\' :\r\n            System.out.println(&quot;Well done&quot;);\r\n            break;\r\n         case \'D\' :\r\n            System.out.println(&quot;You passed&quot;);\r\n         case \'F\' :\r\n            System.out.println(&quot;Better try again&quot;);\r\n            break;\r\n         default :\r\n            System.out.println(&quot;Invalid grade&quot;);\r\n      }\r\n      System.out.println(&quot;Your grade is &quot; + grade);\r\n   }\r\n}\r\n</pre> \n<p>以上代码编译运行结果如下：</p> \n<pre>\r\nWell done\r\nYour grade is C\r\n</pre>', null, 'Java 分支结构 - if...else/switch|if语句|if...else语句|if...else if...else语句|嵌套的if…else语句|switch语句|');
INSERT INTO `schoolcontent` VALUES ('295', '298', '<h1>Java Number类</h1> \n<p>一般地，当需要使用数字的时候，我们通常使用内置数据类型，如：byte、int、long、double等。 </p> \n<h3>实例</h3> \n<pre>\r\nint a = 5000;\r\nfloat b = 13.65;\r\nbyte c = 0x4a;\r\n</pre> \n<p> 然而，在实际开发过程中，我们经常会遇到需要使用对象，而不是内置数据类型的情形。为了解决这个问题，Java语言为每一个内置数据类型提供了对应的包装类。 </p>\n<p>所有的包装类（Integer、Long、Byte、Double、Float、Short）都是抽象类Number的子类。 </p> \n<p> <img alt=\"Java Number类\" src=\"http://www.runoob.com/wp-content/uploads/2013/12/number1.png\" /> </p> \n<p>这种由编译器特别支持的包装称为装箱，所以当内置数据类型被当作对象使用的时候，编译器会把内置类型装箱为包装类。相似的，编译器也可以把一个对象拆箱为内置类型。Number类属于java.lang包。 </p> \n<p> 下面是一个使用 Integer 对象的实例：</p> \n<pre>\r\npublic class Test{\r\n\r\n   public static void main(String args[]){\r\n      Integer x = 5;\r\n      x =  x + 10;\r\n      System.out.println(x); \r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n15\r\n</pre> \n<p>当x被赋为整型值时，由于x是一个对象，所以编译器要对x进行装箱。然后，为了使x能进行加运算，所以要对x进行拆箱。 </p>\n<hr /> \n<h2>Number 方法</h2> \n<p>下面的表中列出的是 Number 子类实现的方法：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> 序号</th> \n   <th> 方法与描述</th> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <a href=\"number-xxxvalue.html\" target=\"_blank\">xxxValue()</a><br /> 将number对象转换为xxx数据类型的值并返回。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <a href=\"number-compareto.html\" target=\"_blank\">compareTo()</a><br /> 将number对象与参数比较。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <a href=\"number-equals.html\" target=\"_blank\">equals()</a><br /> 判断number对象是否与参数相等。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <a href=\"number-valueof.html\" target=\"_blank\">valueOf()</a><br /> 返回一个 Number 对象指定的内置数据类型</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> <a href=\"number-tostring.html\" target=\"_blank\">toString()</a><br /> 以字符串形式返回值。</td> \n  </tr> \n  <tr> \n   <td> 6</td> \n   <td> <a href=\"number-parseInt.html\" target=\"_blank\">parseInt()</a><br /> 将字符串解析为int类型。</td> \n  </tr> \n  <tr> \n   <td> 7</td> \n   <td> <a href=\"number-abs.html\" target=\"_blank\">abs()</a><br /> 返回参数的绝对值。</td> \n  </tr> \n  <tr> \n   <td> 8</td> \n   <td> <a href=\"number-ceil.html\" target=\"_blank\">ceil()</a><br /> 对整形变量向左取整，返回类型为double型。</td> \n  </tr> \n  <tr> \n   <td> 9</td> \n   <td> <a href=\"number-floor.html\" target=\"_blank\">floor()</a><br /> 对整型变量向右取整。返回类型为double类型。</td> \n  </tr> \n  <tr> \n   <td> 10</td> \n   <td> <a href=\"number-rint.html\" target=\"_blank\">rint()</a><br /> 返回与参数最接近的整数。返回类型为double。</td> \n  </tr> \n  <tr> \n   <td> 11</td> \n   <td> <a href=\"number-round.html\" target=\"_blank\">round()</a><br /> 返回一个最接近的int、long型值。</td> \n  </tr> \n  <tr> \n   <td> 12</td> \n   <td> <a href=\"number-min.html\" target=\"_blank\">min()</a><br /> 返回两个参数中的最小值。</td> \n  </tr> \n  <tr> \n   <td> 13</td> \n   <td> <a href=\"number-max.html\" target=\"_blank\">max()</a><br /> 返回两个参数中的最大值。</td> \n  </tr> \n  <tr> \n   <td> 14</td> \n   <td> <a href=\"number-exp.html\" target=\"_blank\">exp()</a><br /> 返回自然数底数e的参数次方。</td> \n  </tr> \n  <tr> \n   <td> 15</td> \n   <td> <a href=\"number-log.html\" target=\"_blank\">log()</a><br /> 返回参数的自然数底数的对数值。</td> \n  </tr> \n  <tr> \n   <td> 16</td> \n   <td> <a href=\"number-pow.html\" target=\"_blank\">pow()</a><br /> 返回第一个参数的第二个参数次方。</td> \n  </tr> \n  <tr> \n   <td> 17</td> \n   <td> <a href=\"number-sqrt.html\" target=\"_blank\">sqrt()</a><br /> 求参数的算术平方根。</td> \n  </tr> \n  <tr> \n   <td> 18</td> \n   <td> <a href=\"number-sin.html\" target=\"_blank\">sin()</a><br /> 求指定double类型参数的正弦值。</td> \n  </tr> \n  <tr> \n   <td> 19</td> \n   <td> <a href=\"number-cos.html\" target=\"_blank\">cos()</a><br /> 求指定double类型参数的余弦值。</td> \n  </tr> \n  <tr> \n   <td> 20</td> \n   <td> <a href=\"number-tan.html\" target=\"_blank\">tan()</a><br /> 求指定double类型参数的正切值。</td> \n  </tr> \n  <tr> \n   <td> 21</td> \n   <td> <a href=\"number-asin.html\" target=\"_blank\">asin()</a><br /> 求指定double类型参数的反正弦值。</td> \n  </tr> \n  <tr> \n   <td> 22</td> \n   <td> <a href=\"number-acos.html\" target=\"_blank\">acos()</a><br /> 求指定double类型参数的反余弦值。</td> \n  </tr> \n  <tr> \n   <td> 23</td> \n   <td> <a href=\"number-atan.html\" target=\"_blank\">atan()</a><br /> 求指定double类型参数的反正切值。</td> \n  </tr> \n  <tr> \n   <td> 24</td> \n   <td> <a href=\"number-atan2.html\" target=\"_blank\">atan2()</a><br /> 将笛卡尔坐标转换为极坐标，并返回极坐标的角度值。</td> \n  </tr> \n  <tr> \n   <td> 25</td> \n   <td> <a href=\"number-todegrees.html\" target=\"_blank\">toDegrees()</a><br /> 将参数转化为角度。</td> \n  </tr> \n  <tr> \n   <td> 26</td> \n   <td> <a href=\"number-toradians.html\" target=\"_blank\">toRadians()</a><br /> 将角度转换为弧度。</td> \n  </tr> \n  <tr> \n   <td> 27</td> \n   <td> <a href=\"number-random.html\" target=\"_blank\">random()</a><br /> 返回一个随机数。</td> \n  </tr> \n </tbody> \n</table>', null, 'Java Number类|Number 方法|');
INSERT INTO `schoolcontent` VALUES ('296', '299', '<h1>Java Character类</h1> \n<p>Character 类用于对单个字符进行操作。</p> \n<p>Character 类在对象中包装一个基本类型 <strong>char</strong> 的值</p> \n<h3>实例</h3> \n<pre>\r\nchar ch = \'a\';\r\n\r\n// Unicode 字符表示形式\r\nchar uniChar = \'\\u039A\'; \r\n\r\n// 字符数组\r\nchar[] charArray ={ \'a\', \'b\', \'c\', \'d\', \'e\' }; \r\n</pre> \n<p>然而，在实际开发过程中，我们经常会遇到需要使用对象，而不是内置数据类型的情况。为了解决这个问题，Java语言为内置数据类型char提供了包装类Character类。 </p>\n<p> Character类提供了一系列方法来操纵字符。你可以使用Character的构造方法创建一个Character类对象，例如： </p> \n<pre>\r\nCharacter ch = new Character(\'a\');\r\n</pre> \n<p> 在某些情况下，Java编译器会自动创建一个Character对象。</p> \n<p>例如，将一个char类型的参数传递给需要一个Character类型参数的方法时，那么编译器会自动地将char类型参数转换为Character对象。 这种特征称为装箱，反过来称为拆箱。 </p> \n<h3>实例</h3> \n<pre>\r\n// 原始字符 \'a\' 装箱到 Character 对象 ch 中\r\nCharacter ch = \'a\';\r\n\r\n// 原始字符 \'x\' 用 test 方法装箱\r\n// 返回拆箱的值到 \'c\'\r\nchar c = test(\'x\');\r\n</pre> \n<hr /> \n<h2>转义序列</h2> \n<p>前面有反斜杠（\\）的字符代表转义字符，它对编译器来说是有特殊含义的。 </p>\n<p>下面列表展示了Java的转义序列：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> 转义序列</th> \n   <th> 描述</th> \n  </tr> \n  <tr> \n   <td> \\t</td> \n   <td> 在文中该处插入一个tab键</td> \n  </tr> \n  <tr> \n   <td> \\b</td> \n   <td> 在文中该处插入一个后退键</td> \n  </tr> \n  <tr> \n   <td> \\n</td> \n   <td> 在文中该处换行</td> \n  </tr> \n  <tr> \n   <td> \\r</td> \n   <td> 在文中该处插入回车</td> \n  </tr> \n  <tr> \n   <td> \\f</td> \n   <td> 在文中该处插入换页符</td> \n  </tr> \n  <tr> \n   <td> \\\'</td> \n   <td> 在文中该处插入单引号</td> \n  </tr> \n  <tr> \n   <td> \\&quot;</td> \n   <td> 在文中该处插入双引号</td> \n  </tr> \n  <tr> \n   <td> \\\\</td> \n   <td> 在文中该处插入反斜杠</td> \n  </tr> \n </tbody> \n</table> \n<h3>实例</h3> \n<p> 当打印语句遇到一个转义序列时，编译器可以正确地对其进行解释。 </p> \n<p>以下实例转义双引号并输出：</p> \n<pre>\r\npublic class Test {\r\n\r\n   public static void main(String args[]) {\r\n      System.out.println(&quot;访问\\&quot;菜鸟教程!\\&quot;&quot;);\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下： </p> \n<pre>\r\n访问&quot;菜鸟教程!&quot;\r\n</pre> \n<hr /> \n<h2>Character 方法</h2> \n<p>下面是Character类的方法：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> 序号</th> \n   <th> 方法与描述</th> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <a href=\"character-isletter.html\" target=\"_blank\">isLetter()</a><br /> 是否是一个字母</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <a href=\"character-isdigit.html\" target=\"_blank\">isDigit()</a><br /> 是否是一个数字字符</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <a href=\"character-iswhitespace.html\" target=\"_blank\">isWhitespace()</a><br /> 是否一个空格</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <a href=\"character-isuppercase.html\" target=\"_blank\">isUpperCase()</a><br /> 是否是大写字母</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> <a href=\"character-islowercase.html\" target=\"_blank\">isLowerCase()</a><br /> 是否是小写字母</td> \n  </tr> \n  <tr> \n   <td> 6</td> \n   <td> <a href=\"character-touppercase.html\" target=\"_blank\">toUpperCase()</a><br /> 指定字母的大写形式</td> \n  </tr> \n  <tr> \n   <td> 7</td> \n   <td> <a href=\"character-tolowercase.html\" target=\"_blank\">toLowerCase</a>()<br /> 指定字母的小写形式</td> \n  </tr> \n  <tr> \n   <td> 8</td> \n   <td> <a href=\"character-tostring.html\" target=\"_blank\">toString</a>()<br /> 返回字符的字符串形式，字符串的长度仅为1</td> \n  </tr> \n </tbody> \n</table> \n<p>对于方法的完整列表，请参考的 <a href=\"http://www.runoob.com/manual/jdk1.6/java/lang/Character.html\" target=\"_blank\">java.lang.Character API</a> 规范。</p>', null, 'Java Character类|转义序列|Character 方法|');
INSERT INTO `schoolcontent` VALUES ('297', '300', '<h1>Java String类</h1> \n<p> 字符串广泛应用在Java编程中，在Java中字符串属于对象，Java提供了String类来创建和操作字符串。 </p>\n<hr /> \n<h2>创建字符串</h2> \n<p>创建字符串最简单的方式如下:</p> \n<pre>\r\nString greeting = &quot;Hello world!&quot;;\r\n</pre> \n<p> 在代码中遇到字符串常量时，这里的值是&quot;Hello world!&quot;，编译器会使用该值创建一个String对象。 </p>\n<p>和其它对象一样，可以使用关键字和构造方法来创建String对象。 </p>\n<p>String类有11种构造方法，这些方法提供不同的参数来初始化字符串，比如提供一个字符数组参数:</p> \n<pre>\r\npublic class StringDemo{\r\n\r\n   public static void main(String args[]){\r\n      char[] helloArray = { \'h\', \'e\', \'l\', \'l\', \'o\', \'.\'};\r\n      String helloString = new String(helloArray);  \r\n      System.out.println( helloString );\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nhello.\r\n</pre> \n<p> <strong>注意:</strong>String类是不可改变的，所以你一旦创建了String对象，那它的值就无法改变了。 如果需要对字符串做很多修改，那么应该选择使用<a href=\"http://www.runoob.com/java/java-stringbuffer.html\" target=\"_blank\" title=\"StringBuffer &amp; StringBuilder 类\">StringBuffer &amp; StringBuilder 类</a>。 </p>\n<hr /> \n<h2>字符串长度</h2> \n<p> </p>\n<p>用于获取有关对象的信息的方法称为访问器方法。 </p>\n<p>String类的一个访问器方法是length()方法，它返回字符串对象包含的字符数。 </p>\n<p>下面的代码执行后，len变量等于14:</p> \n<pre>\r\npublic class StringDemo {\r\n    public static void main(String args[]) {\r\n        String site = &quot;www.runoob.com&quot;;\r\n        int len = site.length();\r\n        System.out.println( &quot;菜鸟教程网址长度 : &quot; + len );\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n菜鸟教程网址长度 : 14\r\n</pre>\n<hr /> \n<h2>连接字符串</h2> \n<p>String类提供了连接两个字符串的方法：</p> \n<pre>\r\nstring1.concat(string2);\r\n</pre> \n<p> 返回string2连接string1的新字符串。也可以对字符串常量使用concat()方法，如： </p> \n<pre>&quot;My name is &quot;.concat(&quot;Runoob&quot;);</pre> \n<p> 更常用的是使用\'+\'操作符来连接字符串，如：</p> \n<pre>\r\n&quot;Hello,&quot; + &quot; world&quot; + &quot;!&quot;</pre> \n<p> 结果如下:</p> \n<pre>\r\n&quot;Hello, world!&quot;</pre> \n<p> 下面是一个例子:</p> \n<pre>\r\npublic class StringDemo {\r\n    public static void main(String args[]) {     \r\n        String string1 = &quot;菜鸟教程网址：&quot;;     \r\n        System.out.println(&quot;1、&quot; + string1 + &quot;www.runoob.com&quot;);  \r\n    }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n1、菜鸟教程网址：www.runoob.com\r\n</pre> \n<hr /> \n<h2>创建格式化字符串</h2> \n<p>我们知道输出格式化数字可以使用printf()和format()方法。String类使用静态方法format()返回一个String对象而不是PrintStream对象。 </p>\n<p>String类的静态方法format()能用来创建可复用的格式化字符串，而不仅仅是用于一次打印输出。如下所示： </p> \n<pre>\r\nSystem.out.printf(&quot;浮点型变量的的值为 &quot; +\r\n                  &quot;%f, 整型变量的值为 &quot; +\r\n                  &quot; %d, 字符串变量的值为 &quot; +\r\n                  &quot;is %s&quot;, floatVar, intVar, stringVar);\r\n</pre> \n<p>你也可以这样写</p> \n<pre>\r\nString fs;\r\nfs = String.format(&quot;浮点型变量的的值为 &quot; +\r\n                   &quot;%f, 整型变量的值为 &quot; +\r\n                   &quot; %d, 字符串变量的值为 &quot; +\r\n                   &quot; %s&quot;, floatVar, intVar, stringVar);\r\nSystem.out.println(fs);\r\n</pre> \n<hr /> \n<h2>String 方法</h2> \n<p>下面是String类支持的方法，更多详细，参看 <a href=\"http://www.runoob.com/manual/jdk1.6/java/lang/String.html\" target=\"_blank\">Java String API</a> 文档:</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:76px;\"> SN(序号)</th> \n   <th style=\"width:501px;\"> 方法描述</th> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 1</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-charat.html\" target=\"_blank\">char charAt(int index)</a><br /> 返回指定索引处的 char 值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 2</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-compareto.html\" target=\"_blank\">int compareTo(Object o)</a><br /> 把这个字符串和另一个对象比较。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 3</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-compareto.html\" target=\"_blank\">int compareTo(String anotherString)</a><br /> 按字典顺序比较两个字符串。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 4</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-comparetoignorecase.html\" target=\"_blank\">int compareToIgnoreCase(String str)</a><br /> 按字典顺序比较两个字符串，不考虑大小写。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 5</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-concat.html\" target=\"_blank\">String concat(String str)</a><br /> 将指定字符串连接到此字符串的结尾。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 6</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-contentequals.html\" target=\"_blank\">boolean contentEquals(StringBuffer sb)</a><br /> 当且仅当字符串与指定的StringButter有相同顺序的字符时候返回真。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 7</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-copyvalueof.html\" target=\"_blank\">static String copyValueOf(char[] data)</a><br /> 返回指定数组中表示该字符序列的 String。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 8</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-copyvalueof.html\" target=\"_blank\">static String copyValueOf(char[] data, int offset, int count)</a><br /> 返回指定数组中表示该字符序列的 String。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 9</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-endswith.html\" target=\"_blank\">boolean endsWith(String suffix)</a><br /> 测试此字符串是否以指定的后缀结束。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 10</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-equals.html\" target=\"_blank\">boolean equals(Object anObject)</a><br /> 将此字符串与指定的对象比较。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 11</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-equalsignorecase.html\" target=\"_blank\">boolean equalsIgnoreCase(String anotherString)</a><br /> 将此 String 与另一个 String 比较，不考虑大小写。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 12</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-getbytes.html\" target=\"_blank\">byte[] getBytes()</a><br /> &nbsp;使用平台的默认字符集将此 String 编码为 byte 序列，并将结果存储到一个新的 byte 数组中。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 13</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-getbytes.html\" target=\"_blank\">byte[] getBytes(String charsetName)</a><br /> 使用指定的字符集将此 String 编码为 byte 序列，并将结果存储到一个新的 byte 数组中。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 14</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-getchars.html\" target=\"_blank\">void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)</a><br /> 将字符从此字符串复制到目标字符数组。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 15</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-hashcode.html\" target=\"_blank\">int hashCode()</a><br /> 返回此字符串的哈希码。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 16</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-indexof.html\" target=\"_blank\">int indexOf(int ch)</a><br /> 返回指定字符在此字符串中第一次出现处的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 17</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-indexof.html\" target=\"_blank\">int indexOf(int ch, int fromIndex)</a><br /> 返回在此字符串中第一次出现指定字符处的索引，从指定的索引开始搜索。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 18</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-indexof.html\" target=\"_blank\">int indexOf(String str)</a><br /> &nbsp;返回指定子字符串在此字符串中第一次出现处的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 19</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-indexof.html\" target=\"_blank\">int indexOf(String str, int fromIndex)</a><br /> 返回指定子字符串在此字符串中第一次出现处的索引，从指定的索引开始。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 20</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-intern.html\" target=\"_blank\">String intern()</a><br /> &nbsp;返回字符串对象的规范化表示形式。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 21</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-lastindexof.html\" target=\"_blank\">int lastIndexOf(int ch)</a><br /> &nbsp;返回指定字符在此字符串中最后一次出现处的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 22</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-lastindexof.html\" target=\"_blank\">int lastIndexOf(int ch, int fromIndex)</a><br /> 返回指定字符在此字符串中最后一次出现处的索引，从指定的索引处开始进行反向搜索。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 23</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-lastindexof.html\" target=\"_blank\">int lastIndexOf(String str)</a><br /> 返回指定子字符串在此字符串中最右边出现处的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 24</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-lastindexof.html\" target=\"_blank\">int lastIndexOf(String str, int fromIndex)</a><br /> &nbsp;返回指定子字符串在此字符串中最后一次出现处的索引，从指定的索引开始反向搜索。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 25</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-length.html\" target=\"_blank\">int length()</a><br /> 返回此字符串的长度。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 26</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-matches.html\" target=\"_blank\">boolean matches(String regex)</a><br /> 告知此字符串是否匹配给定的正则表达式。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 27</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-regionmatches.html\" target=\"_blank\">boolean regionMatches(boolean ignoreCase, int toffset, String other, int ooffset, int len)</a><br /> 测试两个字符串区域是否相等。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 28</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-regionmatches.html\" target=\"_blank\">boolean regionMatches(int toffset, String other, int ooffset, int len)</a><br /> 测试两个字符串区域是否相等。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 29</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-replace.html\" target=\"_blank\">String replace(char oldChar, char newChar)</a><br /> 返回一个新的字符串，它是通过用 newChar 替换此字符串中出现的所有 oldChar 得到的。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 30</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-replaceall.html\" target=\"_blank\">String replaceAll(String regex, String replacement</a><br /> 使用给定的 replacement 替换此字符串所有匹配给定的正则表达式的子字符串。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 31</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-replacefirst.html\" target=\"_blank\">String replaceFirst(String regex, String replacement)</a><br /> &nbsp;使用给定的 replacement 替换此字符串匹配给定的正则表达式的第一个子字符串。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 32</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-split.html\" target=\"_blank\">String[] split(String regex)</a><br /> 根据给定正则表达式的匹配拆分此字符串。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 33</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-split.html\" target=\"_blank\">String[] split(String regex, int limit)</a><br /> 根据匹配给定的正则表达式来拆分此字符串。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 34</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-startswith.html\" target=\"_blank\">boolean startsWith(String prefix)</a><br /> 测试此字符串是否以指定的前缀开始。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 35</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-startswith.html\" target=\"_blank\">boolean startsWith(String prefix, int toffset)</a><br /> 测试此字符串从指定索引开始的子字符串是否以指定前缀开始。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 36</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-subsequence.html\" target=\"_blank\">CharSequence subSequence(int beginIndex, int endIndex)</a><br /> &nbsp;返回一个新的字符序列，它是此序列的一个子序列。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 37</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-substring.html\" target=\"_blank\">String substring(int beginIndex)</a><br /> 返回一个新的字符串，它是此字符串的一个子字符串。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 38</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-substring.html\" target=\"_blank\">String substring(int beginIndex, int endIndex)</a><br /> 返回一个新字符串，它是此字符串的一个子字符串。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 39</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-tochararray.html\" target=\"_blank\">char[] toCharArray()</a><br /> 将此字符串转换为一个新的字符数组。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 40</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-tolowercase.html\" target=\"_blank\">String toLowerCase()</a><br /> 使用默认语言环境的规则将此 String 中的所有字符都转换为小写。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 41</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-tolowercase.html\" target=\"_blank\">String toLowerCase(Locale locale)</a><br /> &nbsp;使用给定 Locale 的规则将此 String 中的所有字符都转换为小写。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 42</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-tostring.html\" target=\"_blank\">String toString()</a><br /> &nbsp;返回此对象本身（它已经是一个字符串！）。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 43</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-touppercase.html\" target=\"_blank\">String toUpperCase()</a><br /> 使用默认语言环境的规则将此 String 中的所有字符都转换为大写。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 44</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-touppercase.html\" target=\"_blank\">String toUpperCase(Locale locale)</a><br /> 使用给定 Locale 的规则将此 String 中的所有字符都转换为大写。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 45</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-trim.html\" target=\"_blank\">String trim()</a><br /> 返回字符串的副本，忽略前导空白和尾部空白。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 46</td> \n   <td style=\"width:501px;\"> <a href=\"java-string-valueof.html\" target=\"_blank\">static String valueOf(primitive data type x)</a><br /> 返回给定data type类型x参数的字符串表示形式。</td> \n  </tr> \n </tbody> \n</table>', null, 'Java String类|创建字符串|字符串长度|连接字符串|创建格式化字符串|String 方法|');
INSERT INTO `schoolcontent` VALUES ('298', '301', '<h1>Java StringBuffer和StringBuilder类</h1> \n<p> </p>\n<p>当对字符串进行修改的时候，需要使用StringBuffer和StringBuilder类。 </p>\n<p>和String类不同的是，StringBuffer和StringBuilder类的对象能够被多次的修改，并且不产生新的未使用对象。 </p>\n<p>StringBuilder类在Java 5中被提出，它和StringBuffer之间的最大不同在于StringBuilder的方法不是线程安全的（不能同步访问）。 </p>\n<p>由于StringBuilder相较于StringBuffer有速度优势，所以多数情况下建议使用StringBuilder类。然而在应用程序要求线程安全的情况下，则必须使用StringBuffer类。 </p> \n<h3>实例</h3> \n<pre>\r\npublic class Test{\r\n\r\n    public static void main(String args[]){\r\n       StringBuffer sBuffer = new StringBuffer(&quot; test&quot;);\r\n       sBuffer.append(&quot; String Buffer&quot;);\r\n       System.out.println(sBuffer);  \r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\ntest String Buffer\r\n</pre> \n<h2>StringBuffer 方法</h2> \n<p>以下是StringBuffer类支持的主要方法：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> 序号</th> \n   <th> 方法描述</th> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> public StringBuffer append(String s)<br /> 将指定的字符串追加到此字符序列。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> public StringBuffer reverse()<br /> &nbsp;将此字符序列用其反转形式取代。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> public delete(int start, int end)<br /> 移除此序列的子字符串中的字符。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> public insert(int offset, int i)<br /> 将 <code>int</code> 参数的字符串表示形式插入此序列中。</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> replace(int start, int end, String str)<br /> 使用给定 <code>String</code> 中的字符替换此序列的子字符串中的字符。</td> \n  </tr> \n </tbody> \n</table> \n<p>下面的列表里的方法和String类的方法类似： </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:64px;\"> 序号</th> \n   <th style=\"width:517px;\"> 方法描述</th> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 1</td> \n   <td style=\"width:517px;\"> int capacity()<br /> 返回当前容量。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 2</td> \n   <td style=\"width:517px;\"> char charAt(int index)<br /> 返回此序列中指定索引处的 <code>char</code> 值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 3</td> \n   <td style=\"width:517px;\"> void ensureCapacity(int minimumCapacity)<br /> 确保容量至少等于指定的最小值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 4</td> \n   <td style=\"width:517px;\"> void getChars(int srcBegin, int srcEnd, char[] dst, int dstBegin)<br /> 将字符从此序列复制到目标字符数组 <code>dst</code>。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 5</td> \n   <td style=\"width:517px;\"> int indexOf(String str)<br /> 返回第一次出现的指定子字符串在该字符串中的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 6</td> \n   <td style=\"width:517px;\"> int indexOf(String str, int fromIndex)<br /> 从指定的索引处开始，返回第一次出现的指定子字符串在该字符串中的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 7</td> \n   <td style=\"width:517px;\"> int lastIndexOf(String str)<br /> 返回最右边出现的指定子字符串在此字符串中的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 8</td> \n   <td style=\"width:517px;\"> int lastIndexOf(String str, int fromIndex)<br /> 返回最后一次出现的指定子字符串在此字符串中的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 9</td> \n   <td style=\"width:517px;\"> int length()<br /> &nbsp;返回长度（字符数）。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 10</td> \n   <td style=\"width:517px;\"> void setCharAt(int index, char ch)<br /> 将给定索引处的字符设置为 <code>ch</code>。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 11</td> \n   <td style=\"width:517px;\"> void setLength(int newLength)<br /> 设置字符序列的长度。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 12</td> \n   <td style=\"width:517px;\"> CharSequence subSequence(int start, int end)<br /> 返回一个新的字符序列，该字符序列是此序列的子序列。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 13</td> \n   <td style=\"width:517px;\"> String substring(int start)<br /> 返回一个新的 <code>String</code>，它包含此字符序列当前所包含的字符子序列。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 14</td> \n   <td style=\"width:517px;\"> String substring(int start, int end)<br /> 返回一个新的 <code>String</code>，它包含此序列当前所包含的字符子序列。</td> \n  </tr> \n  <tr> \n   <td style=\"width:64px;\"> 15</td> \n   <td style=\"width:517px;\"> String toString()<br /> 返回此序列中数据的字符串表示形式。</td> \n  </tr> \n </tbody> \n</table>', null, 'Java StringBuffer和StringBuilder类|StringBuffer 方法|');
INSERT INTO `schoolcontent` VALUES ('299', '302', '<h1>Java 数组</h1> \n<p> 数组对于每一门编程语言来说都是重要的数据结构之一，当然不同语言对数组的实现及处理也不尽相同。 </p> \n<p>Java语言中提供的数组是用来存储固定大小的同类型元素。</p> \n<p>你可以声明一个数组变量，如numbers[100]来代替直接声明100个独立变量number0，number1，....，number99。 </p> \n<p>本教程将为大家介绍Java数组的声明、创建和初始化，并给出其对应的代码。</p> \n<hr /> \n<h2>声明数组变量</h2> \n<p>首先必须声明数组变量，才能在程序中使用数组。下面是声明数组变量的语法：</p> \n<pre>\r\ndataType[] arrayRefVar;   // 首选的方法\r\n\r\n或\r\n\r\ndataType arrayRefVar[];  // 效果相同，但不是首选方法\r\n</pre> \n<p><strong> 注意:</strong> 建议使用dataType[] arrayRefVar 的声明风格声明数组变量。 dataType arrayRefVar[] 风格是来自 C/C++ 语言 ，在Java中采用是为了让 C/C++ 程序员能够快速理解java语言。 </p> \n<h3>实例</h3> \n<p>下面是这两种语法的代码示例：</p> \n<pre>\r\ndouble[] myList;         // 首选的方法\r\n\r\n或\r\n\r\ndouble myList[];         //  效果相同，但不是首选方法\r\n</pre>\n<hr /> \n<h2>创建数组</h2> \n<p>Java语言使用new操作符来创建数组，语法如下：</p> \n<pre>\r\narrayRefVar = new dataType[arraySize];\r\n</pre> \n<p>上面的语法语句做了两件事：</p> \n<ul>\n <li> 一、使用dataType[arraySize]创建了一个数组。</li> \n <li>二、把新创建的数组的引用赋值给变量 arrayRefVar。</li>\n</ul> \n<p>数组变量的声明，和创建数组可以用一条语句完成，如下所示：</p> \n<pre>\r\ndataType[] arrayRefVar = new dataType[arraySize];\r\n</pre> \n<p>另外，你还可以使用如下的方式创建数组。</p> \n<pre>\r\ndataType[] arrayRefVar = {value0, value1, ..., valuek};\r\n</pre> \n<p>数组的元素是通过索引访问的。数组索引从0开始，所以索引值从0到arrayRefVar.length-1。</p> \n<h3>实例</h3> \n<p> 下面的语句首先声明了一个数组变量myList，接着创建了一个包含10个double类型元素的数组，并且把它的引用赋值给myList变量。 </p> \n<pre>\r\npublic class TestArray {\r\n\r\n   public static void main(String[] args) {\r\n      // 数组大小\r\n      int size = 10;\r\n      // 定义数组\r\n      double[] myList = new double[size];\r\n      myList[0] = 5.6;\r\n      myList[1] = 4.5;\r\n      myList[2] = 3.3;\r\n      myList[3] = 13.2;\r\n      myList[4] = 4.0;\r\n      myList[5] = 34.33;\r\n      myList[6] = 34.0;\r\n      myList[7] = 45.45;\r\n      myList[8] = 99.993;\r\n      myList[9] = 11123;\r\n      // 计算所有元素的总和\r\n      double total = 0;\r\n      for (int i = 0; i &lt; size; i++) {\r\n         total += myList[i];\r\n      }\r\n      System.out.println(&quot;总和为： &quot; + total);\r\n   }\r\n}\r\n</pre> \n<p>以上实例输出结果为：</p> \n<pre>\r\n总和为： 11367.373\r\n</pre> \n<p>下面的图片描绘了数组myList。这里myList数组里有10个double元素，它的下标从0到9。</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2013/12/12-130Q0221Q5602.jpg\" alt=\"java数组结构说明\" /></p>\n<hr /> \n<h2>处理数组</h2> \n<p>数组的元素类型和数组的大小都是确定的，所以当处理数组元素时候，我们通常使用基本循环或者foreach循环。</p> \n<h3>示例</h3> \n<p> 该实例完整地展示了如何创建、初始化和操纵数组：</p> \n<pre>\r\npublic class TestArray {\r\n\r\n   public static void main(String[] args) {\r\n      double[] myList = {1.9, 2.9, 3.4, 3.5};\r\n\r\n      // 打印所有数组元素\r\n      for (int i = 0; i &lt; myList.length; i++) {\r\n         System.out.println(myList[i] + &quot; &quot;);\r\n      }\r\n      // 计算所有元素的总和\r\n      double total = 0;\r\n      for (int i = 0; i &lt; myList.length; i++) {\r\n         total += myList[i];\r\n      }\r\n      System.out.println(&quot;Total is &quot; + total);\r\n      // 查找最大元素\r\n      double max = myList[0];\r\n      for (int i = 1; i &lt; myList.length; i++) {\r\n         if (myList[i] &gt; max) max = myList[i];\r\n      }\r\n      System.out.println(&quot;Max is &quot; + max);\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n1.9\r\n2.9\r\n3.4\r\n3.5\r\nTotal is 11.7\r\nMax is 3.5\r\n</pre> \n<hr /> \n<h2>foreach循环</h2> \n<p>JDK 1.5 引进了一种新的循环类型，被称为foreach循环或者加强型循环，它能在不使用下标的情况下遍历数组。</p> \n<h3> 示例</h3>\n<p> 该实例用来显示数组myList中的所有元素：</p> \n<pre>\r\npublic class TestArray {\r\n\r\n   public static void main(String[] args) {\r\n      double[] myList = {1.9, 2.9, 3.4, 3.5};\r\n\r\n      // 打印所有数组元素\r\n      for (double element: myList) {\r\n         System.out.println(element);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n1.9\r\n2.9\r\n3.4\r\n3.5\r\n</pre>\n<hr /> \n<h2>数组作为函数的参数</h2> \n<p>数组可以作为参数传递给方法。例如，下面的例子就是一个打印int数组中元素的方法。</p> \n<pre>\r\npublic static void printArray(int[] array) {\r\n  for (int i = 0; i &lt; array.length; i++) {\r\n    System.out.print(array[i] + &quot; &quot;);\r\n  }\r\n}\r\n</pre> \n<p>下面例子调用printArray方法打印出 3，1，2，6，4和2：</p> \n<pre>\r\nprintArray(new int[]{3, 1, 2, 6, 4, 2});\r\n</pre>\n<hr /> \n<h2>数组作为函数的返回值</h2> \n<pre>\r\npublic static int[] reverse(int[] list) {\r\n  int[] result = new int[list.length];\r\n\r\n  for (int i = 0, j = result.length - 1; i &lt; list.length; i++, j--) {\r\n    result[j] = list[i];\r\n  }\r\n  return result;\r\n}\r\n</pre> \n<p>以上实例中result数组作为函数的返回值。</p> \n<hr /> \n<h2>Arrays 类</h2> \n<p> java.util.Arrays类能方便地操作数组，它提供的所有方法都是静态的。具有以下功能：</p> \n<ul> \n <li>给数组赋值：通过fill方法。</li> \n <li>对数组排序：通过sort方法,按升序。</li> \n <li>比较数组：通过equals方法比较数组中元素值是否相等。</li> \n <li>查找数组元素：通过binarySearch方法能对排序好的数组进行二分查找法操作。</li> \n</ul> \n<p>具体说明请查看下表：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:76px;\"> 序号</th> \n   <th style=\"width:501px;\"> 方法和说明</th> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 1</td> \n   <td style=\"width:501px;\"> <strong>public static int binarySearch(Object[] a, Object key)</strong><br /> 用二分查找算法在给定数组中搜索给定值的对象(Byte,Int,double等)。数组在调用前必须排序好的。如果查找值包含在数组中，则返回搜索键的索引；否则返回 (-(<em>插入点</em>) - 1)。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 2</td> \n   <td style=\"width:501px;\"> <strong>public static boolean equals(long[] a, long[] a2)</strong><br /> 如果两个指定的 long 型数组彼此<em>相等</em>，则返回 true。如果两个数组包含相同数量的元素，并且两个数组中的所有相应元素对都是相等的，则认为这两个数组是相等的。换句话说，如果两个数组以相同顺序包含相同的元素，则两个数组是相等的。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 3</td> \n   <td style=\"width:501px;\"> <strong>public static void fill(int[] a, int val)</strong><br /> 将指定的 int 值分配给指定 int 型数组指定范围中的每个元素。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。</td> \n  </tr> \n  <tr> \n   <td style=\"width:76px;\"> 4</td> \n   <td style=\"width:501px;\"> <strong>public static void sort(Object[] a)</strong><br /> 对指定对象数组根据其元素的自然顺序进行升序排列。同样的方法适用于所有的其他基本数据类型（Byte，short，Int等）。</td> \n  </tr> \n </tbody> \n</table>', null, 'Java 数组|声明数组变量|创建数组|处理数组|foreach循环|数组作为函数的参数|数组作为函数的返回值|Arrays 类|');
INSERT INTO `schoolcontent` VALUES ('300', '303', '<h1>Java 日期时间</h1> \n<p> java.util包提供了Date类来封装当前的日期和时间。 Date类提供两个构造函数来实例化Date对象。</p>\n<p> 第一个构造函数使用当前日期和时间来初始化对象。</p> \n<pre>\r\nDate( )\r\n</pre> \n<p> 第二个构造函数接收一个参数，该参数是从1970年1月1日起的毫秒数。 </p> \n<pre>\r\nDate(long millisec)\r\n</pre> \n<p> Date对象创建以后，可以调用下面的方法。</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:38px;\"> 序号</th> \n   <th style=\"width:538px;\"> 方法和描述</th> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 1</td> \n   <td style=\"width:538px;\"> <strong>boolean after(Date date)</strong><br /> 若当调用此方法的Date对象在指定日期之后返回true,否则返回false。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 2</td> \n   <td style=\"width:538px;\"> <strong>boolean before(Date date)</strong><br /> 若当调用此方法的Date对象在指定日期之前返回true,否则返回false。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 3</td> \n   <td style=\"width:538px;\"> <strong>Object clone( )</strong><br /> 返回此对象的副本。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 4</td> \n   <td style=\"width:538px;\"> <strong>int compareTo(Date date)</strong><br /> 比较当调用此方法的Date对象和指定日期。两者相等时候返回0。调用对象在指定日期之前则返回负数。调用对象在指定日期之后则返回正数。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 5</td> \n   <td style=\"width:538px;\"> <strong>int compareTo(Object obj)</strong><br /> 若obj是Date类型则操作等同于compareTo(Date) 。否则它抛出ClassCastException。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 6</td> \n   <td style=\"width:538px;\"> <strong>boolean equals(Object date)</strong><br /> 当调用此方法的Date对象和指定日期相等时候返回true,否则返回false。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 7</td> \n   <td style=\"width:538px;\"> <strong>long getTime( )</strong><br /> 返回自 1970 年 1 月 1 日 00:00:00 GMT 以来此 Date 对象表示的毫秒数。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 8</td> \n   <td style=\"width:538px;\"> <strong>int hashCode( )</strong><br /> &nbsp;返回此对象的哈希码值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 9</td> \n   <td style=\"width:538px;\"> <strong>void setTime(long time)</strong><br /> &nbsp;<br /> 用自1970年1月1日00:00:00 GMT以后time毫秒数设置时间和日期。</td> \n  </tr> \n  <tr> \n   <td style=\"width:38px;\"> 10</td> \n   <td style=\"width:538px;\"> <strong>String toString( )</strong><br /> 转换Date对象为String表示形式，并返回该字符串。</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2>获取当前日期时间</h2> \n<p> Java中获取当前日期和时间很简单，使用Date对象的 toString()方法来打印当前日期和时间，如下所示： </p> \n<pre>\r\nimport java.util.Date;\r\n  \r\npublic class DateDemo {\r\n   public static void main(String args[]) {\r\n       // 初始化 Date 对象\r\n       Date date = new Date();\r\n        \r\n       // 使用 toString() 函数显示日期时间\r\n       System.out.println(date.toString());\r\n   }\r\n}\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=date_demo\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nMon May 04 09:51:52 CDT 2013\r\n</pre>\n<hr /> \n<h2>日期比较</h2> \n<p>Java使用以下三种方法来比较两个日期：</p> \n<ul> \n <li> 使用getTime( ) 方法获取两个日期（自1970年1月1日经历的毫秒数值），然后比较这两个值。</li> \n <li> 使用方法before()，after()和equals()。例如，一个月的12号比18号早，则new Date(99, 2, 12).before(new Date (99, 2, 18))返回true。</li> \n <li> 使用compareTo()方法，它是由Comparable接口定义的，Date类实现了这个接口。</li> \n</ul> \n<hr /> \n<h2>使用SimpleDateFormat格式化日期</h2> \n<p>SimpleDateFormat是一个以语言环境敏感的方式来格式化和分析日期的类。SimpleDateFormat允许你选择任何用户自定义日期时间格式来运行。例如： </p> \n<pre>\r\nimport java.util.*;\r\nimport java.text.*;\r\n\r\npublic class DateDemo {\r\n   public static void main(String args[]) {\r\n\r\n      Date dNow = new Date( );\r\n      SimpleDateFormat ft = \r\n      new SimpleDateFormat (&quot;E yyyy.MM.dd \'at\' hh:mm:ss a zzz&quot;);\r\n\r\n      System.out.println(&quot;Current Date: &quot; + ft.format(dNow));\r\n   }\r\n}\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=date_demo1\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nCurrent Date: Sun 2004.07.18 at 04:14:09 PM PDT\r\n</pre> \n<hr /> \n<h2>简单的DateFormat格式化编码</h2> \n<p>时间模式字符串用来指定时间格式。在此模式中，所有的ASCII字母被保留为模式字母，定义如下：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:66px;\"> <strong>字母</strong></th> \n   <th style=\"width:151px;\"> <strong>描述</strong></th> \n   <th style=\"width:128px;\"> <strong>示例</strong></th> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> G</td> \n   <td style=\"width:151px;\"> 纪元标记</td> \n   <td style=\"width:128px;\"> AD</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> y</td> \n   <td style=\"width:151px;\"> 四位年份</td> \n   <td style=\"width:128px;\"> 2001</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> M</td> \n   <td style=\"width:151px;\"> 月份</td> \n   <td style=\"width:128px;\"> July or 07</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> d</td> \n   <td style=\"width:151px;\"> 一个月的日期</td> \n   <td style=\"width:128px;\"> 10</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> h</td> \n   <td style=\"width:151px;\"> &nbsp;A.M./P.M. (1~12)格式小时</td> \n   <td style=\"width:128px;\"> 12</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> H</td> \n   <td style=\"width:151px;\"> 一天中的小时 (0~23)</td> \n   <td style=\"width:128px;\"> 22</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> m</td> \n   <td style=\"width:151px;\"> 分钟数</td> \n   <td style=\"width:128px;\"> 30</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> s</td> \n   <td style=\"width:151px;\"> 秒数</td> \n   <td style=\"width:128px;\"> 55</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> S</td> \n   <td style=\"width:151px;\"> 毫秒数</td> \n   <td style=\"width:128px;\"> 234</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> E</td> \n   <td style=\"width:151px;\"> 星期几</td> \n   <td style=\"width:128px;\"> Tuesday</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> D</td> \n   <td style=\"width:151px;\"> 一年中的日子</td> \n   <td style=\"width:128px;\"> 360</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> F</td> \n   <td style=\"width:151px;\"> 一个月中第几周的周几</td> \n   <td style=\"width:128px;\"> 2 (second Wed. in July)</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> w</td> \n   <td style=\"width:151px;\"> 一年中第几周</td> \n   <td style=\"width:128px;\"> 40</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> W</td> \n   <td style=\"width:151px;\"> 一个月中第几周</td> \n   <td style=\"width:128px;\"> 1</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> a</td> \n   <td style=\"width:151px;\"> A.M./P.M. 标记</td> \n   <td style=\"width:128px;\"> PM</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> k</td> \n   <td style=\"width:151px;\"> 一天中的小时(1~24)</td> \n   <td style=\"width:128px;\"> 24</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> K</td> \n   <td style=\"width:151px;\"> &nbsp;A.M./P.M. (0~11)格式小时</td> \n   <td style=\"width:128px;\"> 10</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> z</td> \n   <td style=\"width:151px;\"> 时区</td> \n   <td style=\"width:128px;\"> Eastern Standard Time</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> \'</td> \n   <td style=\"width:151px;\"> 文字定界符</td> \n   <td style=\"width:128px;\"> Delimiter</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> &quot;</td> \n   <td style=\"width:151px;\"> 单引号</td> \n   <td style=\"width:128px;\"> `</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2>使用printf格式化日期</h2> \n<p>printf方法可以很轻松地格式化时间和日期。使用两个字母格式，它以t开头并且以下面表格中的一个字母结尾。例如：</p> \n<pre>\r\nimport java.util.Date;\r\n\r\npublic class DateDemo {\r\n\r\n  public static void main(String args[]) {\r\n     // 初始化 Date 对象\r\n     Date date = new Date();\r\n\r\n     // 使用toString()显示日期和时间\r\n     String str = String.format(&quot;Current Date/Time : %tc&quot;, date );\r\n\r\n     System.out.printf(str);\r\n  }\r\n}\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=date_demo2\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nCurrent Date/Time : Sat Dec 15 16:37:57 MST 2012\r\n</pre> \n<p>如果你需要重复提供日期，那么利用这种方式来格式化它的每一部分就有点复杂了。因此，可以利用一个格式化字符串指出要被格式化的参数的索引。</p> \n<p>索引必须紧跟在%后面，而且必须以$结束。例如：</p> \n<pre>\r\nimport java.util.Date;\r\n  \r\npublic class DateDemo {\r\n\r\n   public static void main(String args[]) {\r\n       // 初始化 Date 对象\r\n       Date date = new Date();\r\n        \r\n       // 使用toString()显示日期和时间\r\n       System.out.printf(&quot;%1$s %2$tB %2$td, %2$tY&quot;, \r\n                         &quot;Due date:&quot;, date);\r\n   }\r\n}\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=date_demo3\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nDue date: February 09, 2004\r\n</pre> \n<p>或者，你可以使用&lt;标志。它表明先前被格式化的参数要被再次使用。例如：</p> \n<pre>\r\nimport java.util.Date;\r\n  \r\npublic class DateDemo {\r\n\r\n   public static void main(String args[]) {\r\n       // 初始化 Date 对象\r\n       Date date = new Date();\r\n        \r\n       // 显示格式化时间\r\n       System.out.printf(&quot;%s %tB %&lt;te, %&lt;tY&quot;, \r\n                         &quot;Due date:&quot;, date);\r\n   }\r\n}\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=date_demo4\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nDue date: February 09, 2004\r\n</pre>\n<hr /> \n<h2>日期和时间转换字符</h2> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <td style=\"width:66px;\"> <strong>字符</strong></td> \n   <td style=\"width:319px;\"> <strong>描述</strong></td> \n   <td style=\"width:184px;\"> <strong>例子</strong></td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> c</td> \n   <td style=\"width:319px;\"> 完整的日期和时间</td> \n   <td style=\"width:184px;\"> Mon May 04 09:51:52 CDT 2009</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> F</td> \n   <td style=\"width:319px;\"> ISO 8601 格式日期</td> \n   <td style=\"width:184px;\"> 2004-02-09</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> D</td> \n   <td style=\"width:319px;\"> U.S. 格式日期 (月/日/年)</td> \n   <td style=\"width:184px;\"> 02/09/2004</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> T</td> \n   <td style=\"width:319px;\"> 24小时时间</td> \n   <td style=\"width:184px;\"> 18:05:19</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> r</td> \n   <td style=\"width:319px;\"> 12小时时间</td> \n   <td style=\"width:184px;\"> 06:05:19 pm</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> R</td> \n   <td style=\"width:319px;\"> 24小时时间，不包含秒</td> \n   <td style=\"width:184px;\"> 18:05</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> Y</td> \n   <td style=\"width:319px;\"> 4位年份(包含前导0)</td> \n   <td style=\"width:184px;\"> 2004</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> y</td> \n   <td style=\"width:319px;\"> 年份后2位(包含前导0)</td> \n   <td style=\"width:184px;\"> 04</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> C</td> \n   <td style=\"width:319px;\"> 年份前2位(包含前导0)</td> \n   <td style=\"width:184px;\"> 20</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> B</td> \n   <td style=\"width:319px;\"> 月份全称</td> \n   <td style=\"width:184px;\"> February</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> b</td> \n   <td style=\"width:319px;\"> 月份简称</td> \n   <td style=\"width:184px;\"> Feb</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> n</td> \n   <td style=\"width:319px;\"> 2位月份(包含前导0)</td> \n   <td style=\"width:184px;\"> 02</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> d</td> \n   <td style=\"width:319px;\"> 2位日子(包含前导0)</td> \n   <td style=\"width:184px;\"> 03</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> e</td> \n   <td style=\"width:319px;\"> 2位日子(不包含前导0)</td> \n   <td style=\"width:184px;\"> 9</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> A</td> \n   <td style=\"width:319px;\"> 星期全称</td> \n   <td style=\"width:184px;\"> Monday</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> a</td> \n   <td style=\"width:319px;\"> 星期简称</td> \n   <td style=\"width:184px;\"> Mon</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> j</td> \n   <td style=\"width:319px;\"> 3位年份(包含前导0)</td> \n   <td style=\"width:184px;\"> 069</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> H</td> \n   <td style=\"width:319px;\"> 2位小时(包含前导0), 00 到 23</td> \n   <td style=\"width:184px;\"> 18</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> k</td> \n   <td style=\"width:319px;\"> 2位小时(不包含前导0), &nbsp;0 到 23</td> \n   <td style=\"width:184px;\"> 18</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> I</td> \n   <td style=\"width:319px;\"> 2位小时(包含前导0), 01 到 12</td> \n   <td style=\"width:184px;\"> 06</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> l</td> \n   <td style=\"width:319px;\"> 2位小时(不包含前导0), &nbsp;1 到 12</td> \n   <td style=\"width:184px;\"> 6</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> M</td> \n   <td style=\"width:319px;\"> 2位分钟(包含前导0)</td> \n   <td style=\"width:184px;\"> 05</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> S</td> \n   <td style=\"width:319px;\"> 2位秒数(包含前导0)</td> \n   <td style=\"width:184px;\"> 19</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> L</td> \n   <td style=\"width:319px;\"> 3位毫秒(包含前导0)</td> \n   <td style=\"width:184px;\"> 047</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> N</td> \n   <td style=\"width:319px;\"> 9位纳秒(包含前导0)</td> \n   <td style=\"width:184px;\"> 047000000</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> P</td> \n   <td style=\"width:319px;\"> 大写上下午标志</td> \n   <td style=\"width:184px;\"> PM</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> p</td> \n   <td style=\"width:319px;\"> 小写上下午标志</td> \n   <td style=\"width:184px;\"> pm</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> z</td> \n   <td style=\"width:319px;\"> 从GMT的RFC 822数字偏移</td> \n   <td style=\"width:184px;\"> -0800</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> Z</td> \n   <td style=\"width:319px;\"> 时区</td> \n   <td style=\"width:184px;\"> PST</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> s</td> \n   <td style=\"width:319px;\"> 自 1970-01-01 00:00:00 GMT的秒数</td> \n   <td style=\"width:184px;\"> 1078884319</td> \n  </tr> \n  <tr> \n   <td style=\"width:66px;\"> Q</td> \n   <td style=\"width:319px;\"> 自 1970-01-01 00:00:00 GMT的毫妙</td> \n   <td style=\"width:184px;\"> 1078884319047</td> \n  </tr> \n </tbody> \n</table> \n<p>还有其他有用的日期和时间相关的类。对于更多的细节，你可以参考到Java标准文档。 </p> \n<hr /> \n<h2>解析字符串为时间</h2> \n<p> SimpleDateFormat 类有一些附加的方法，特别是parse()，它试图按照给定的SimpleDateFormat 对象的格式化存储来解析字符串。例如： </p> \n<pre>\r\nimport java.util.*;\r\nimport java.text.*;\r\n  \r\npublic class DateDemo {\r\n\r\n   public static void main(String args[]) {\r\n      SimpleDateFormat ft = new SimpleDateFormat (&quot;yyyy-MM-dd&quot;); \r\n\r\n      String input = args.length == 0 ? &quot;1818-11-11&quot; : args[0]; \r\n\r\n      System.out.print(input + &quot; Parses as &quot;); \r\n\r\n      Date t; \r\n\r\n      try { \r\n          t = ft.parse(input); \r\n          System.out.println(t); \r\n      } catch (ParseException e) { \r\n          System.out.println(&quot;Unparseable using &quot; + ft); \r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\n$ java DateDemo\r\n1818-11-11 Parses as Wed Nov 11 00:00:00 GMT 1818\r\n$ java DateDemo 2007-12-01\r\n2007-12-01 Parses as Sat Dec 01 00:00:00 GMT 2007\r\n</pre> \n<hr />\n<h2>Java 休眠(sleep)</h2> \n<p>sleep()使当前线程进入停滞状态（阻塞当前线程），让出CPU的使用、目的是不让当前线程独自霸占该进程所获的CPU资源，以留一定时间给其他线程执行的机会。</p> \n<p>你可以让程序休眠一毫秒的时间或者到您的计算机的寿命长的任意段时间。例如，下面的程序会休眠3秒：</p> \n<pre>\r\nimport java.util.*;\r\n  \r\npublic class SleepDemo {\r\n   public static void main(String args[]) {\r\n      try { \r\n         System.out.println(new Date( ) + &quot;\\n&quot;); \r\n         Thread.sleep(1000*3);   // 休眠3秒\r\n         System.out.println(new Date( ) + &quot;\\n&quot;); \r\n      } catch (Exception e) { \r\n          System.out.println(&quot;Got an exception!&quot;); \r\n      }\r\n   }\r\n}\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=date_demo6\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nThu Sep 17 10:20:30 CST 2015\r\n\r\nThu Sep 17 10:20:33 CST 2015\r\n</pre> \n<hr /> \n<h2>测量时间</h2> \n<p>下面的一个例子表明如何测量时间间隔（以毫秒为单位）：</p> \n<pre>\r\nimport java.util.*;\r\n  \r\npublic class DiffDemo {\r\n\r\n   public static void main(String args[]) {\r\n      try {\r\n         long start = System.currentTimeMillis( );\r\n         System.out.println(new Date( ) + &quot;\\n&quot;);\r\n         Thread.sleep(5*60*10);\r\n         System.out.println(new Date( ) + &quot;\\n&quot;);\r\n         long end = System.currentTimeMillis( );\r\n         long diff = end - start;\r\n         System.out.println(&quot;Difference is : &quot; + diff);\r\n      } catch (Exception e) {\r\n         System.out.println(&quot;Got an exception!&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=date_demo7\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nFri Jan 08 09:48:47 CST 2016\r\n\r\nFri Jan 08 09:48:50 CST 2016\r\n\r\nDifference is : 3019\r\n</pre> \n<hr /> \n<h2>Calendar类</h2> \n<p>我们现在已经能够格式化并创建一个日期对象了，但是我们如何才能设置和获取日期数据的特定部分呢，比如说小时，日，或者分钟? 我们又如何在日期的这些部分加上或者减去值呢? 答案是使用Calendar 类。 </p> \n<p>Calendar类的功能要比Date类强大很多，而且在实现方式上也比Date类要复杂一些。</p> \n<p>Calendar类是一个抽象类，在实际使用时实现特定的子类的对象，创建对象的过程对程序员来说是透明的，只需要使用getInstance方法创建即可。</p> \n<h3>创建一个代表系统当前日期的Calendar对象</h3> \n<pre>\r\nCalendar c = Calendar.getInstance();//默认是当前日期\r\n</pre> \n<h3>创建一个指定日期的Calendar对象</h3> \n<p>使用Calendar类代表特定的时间，需要首先创建一个Calendar的对象，然后再设定该对象中的年月日参数来完成。</p> \n<pre>\r\n//创建一个代表2009年6月12日的Calendar对象\r\nCalendar c1 = Calendar.getInstance();\r\nc1.set(2009, 6 - 1, 12);\r\n</pre> \n<h3>Calendar类对象字段类型</h3> \n<p>Calendar类中用一下这些常量表示不同的意义，jdk内的很多类其实都是采用的这种思想</p> \n<table class=\"reference\"> \n <tbody> \n  <tr>\n   <th>常量</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>Calendar.YEAR</td>\n   <td>年份</td>\n  </tr> \n  <tr>\n   <td>Calendar.MONTH</td>\n   <td>月份</td>\n  </tr> \n  <tr>\n   <td>Calendar.DATE</td>\n   <td>日期</td>\n  </tr> \n  <tr>\n   <td>Calendar.DAY_OF_MONTH</td>\n   <td>日期，和上面的字段意义完全相同</td>\n  </tr> \n  <tr>\n   <td>Calendar.HOUR</td>\n   <td>12小时制的小时</td>\n  </tr> \n  <tr>\n   <td>Calendar.HOUR_OF_DAY</td>\n   <td>24小时制的小时</td>\n  </tr> \n  <tr>\n   <td>Calendar.MINUTE</td>\n   <td>分钟</td>\n  </tr> \n  <tr>\n   <td>Calendar.SECOND</td>\n   <td>秒</td>\n  </tr> \n  <tr>\n   <td>Calendar.DAY_OF_WEEK</td>\n   <td>星期几</td> \n  </tr> \n </tbody> \n</table> \n<h3>Calendar类对象信息的设置</h3> \n<p><strong>Set设置</strong></p> \n<p>如：</p>\n<pre>Calendar c1 = Calendar.getInstance();</pre> \n<p>调用：</p>\n<pre>\r\npublic final void set(int year,int month,int date)\r\n</pre>\n<pre>\r\nc1.set(2009, 6 - 1, 12);//把Calendar对象c1的年月日分别设这为：2009、6、12\r\n</pre> \n<p>利用字段类型设置</p> \n<p>如果只设定某个字段，例如日期的值，则可以使用如下set方法：</p> \n<pre>public void set(int field,int value)</pre> \n<p>把 c1对象代表的日期设置为10号，其它所有的数值会被重新计算</p> \n<pre>\r\nc1.set(Calendar.DATE,10);\r\n</pre> \n<p>把c1对象代表的年份设置为2008年，其他的所有数值会被重新计算</p> \n<pre>\r\nc1.set(Calendar.YEAR,2008);\r\n</pre> \n<p>其他字段属性set的意义以此类推</p> \n<p><strong>Add设置</strong></p> \n<pre>\r\nCalendar c1 = Calendar.getInstance();\r\n</pre> \n<p>把c1对象的日期加上10，也就是c1也就表示为10天后的日期，其它所有的数值会被重新计算</p> \n<pre>\r\nc1.add(Calendar.DATE, 10);\r\n</pre> \n<p>把c1对象的日期减去10，也就是c1也就表示为10天前的日期，其它所有的数值会被重新计算</p> \n<pre>\r\n&lt;pre&gt;c1.add(Calendar.DATE, -10);</pre> \n<p>其他字段属性的add的意义以此类推</p> \n<h3>Calendar类对象信息的获得</h3> \n<pre>\r\nCalendar c1 = Calendar.getInstance();\r\n// 获得年份\r\nint year = c1.get(Calendar.YEAR);\r\n// 获得月份\r\nint month = c1.get(Calendar.MONTH) + 1;\r\n// 获得日期\r\nint date = c1.get(Calendar.DATE);\r\n// 获得小时\r\nint hour = c1.get(Calendar.HOUR_OF_DAY);\r\n// 获得分钟\r\nint minute = c1.get(Calendar.MINUTE);\r\n// 获得秒\r\nint second = c1.get(Calendar.SECOND);\r\n// 获得星期几（注意（这个与Date类是不同的）：1代表星期日、2代表星期1、3代表星期二，以此类推）\r\nint day = c1.get(Calendar.DAY_OF_WEEK);\r\n</pre> \n<hr /> \n<h2>GregorianCalendar类</h2> \n<p>Calendar类实现了公历日历，GregorianCalendar是Calendar类的一个具体实现。 </p>\n<p>Calendar 的getInstance（）方法返回一个默认用当前的语言环境和时区初始化的GregorianCalendar对象。GregorianCalendar定义了两个字段：AD和BC。这些代表公历定义的两个时代。 </p>\n<p>下面列出GregorianCalendar对象的几个构造方法：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <td style=\"width:47px;\"> <strong>序号</strong></td> \n   <td style=\"width:529px;\"> <strong>构造函数和说明</strong></td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 1</td> \n   <td style=\"width:529px;\"> <strong>GregorianCalendar() </strong><br /> 在具有默认语言环境的默认时区内使用当前时间构造一个默认的 GregorianCalendar。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 2</td> \n   <td style=\"width:529px;\"> <strong>GregorianCalendar(int year, int month, int date) </strong><br /> 在具有默认语言环境的默认时区内构造一个带有给定日期设置的 GregorianCalendar</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 3</td> \n   <td style=\"width:529px;\"> <strong>GregorianCalendar(int year, int month, int date, int hour, int minute) </strong><br /> 为具有默认语言环境的默认时区构造一个具有给定日期和时间设置的 GregorianCalendar。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 4</td> \n   <td style=\"width:529px;\"> <strong>GregorianCalendar(int year, int month, int date, int hour, int minute, int second) </strong><br /> &nbsp; 为具有默认语言环境的默认时区构造一个具有给定日期和时间设置的 GregorianCalendar。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 5</td> \n   <td style=\"width:529px;\"> <strong>GregorianCalendar(Locale aLocale) </strong><br /> 在具有给定语言环境的默认时区内构造一个基于当前时间的 GregorianCalendar。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 6</td> \n   <td style=\"width:529px;\"> <strong>GregorianCalendar(TimeZone zone) </strong><br /> 在具有默认语言环境的给定时区内构造一个基于当前时间的 GregorianCalendar。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 7</td> \n   <td style=\"width:529px;\"> <strong>GregorianCalendar(TimeZone zone, Locale aLocale) </strong><br /> &nbsp;在具有给定语言环境的给定时区内构造一个基于当前时间的 GregorianCalendar。</td> \n  </tr> \n </tbody> \n</table> \n<p>这里是GregorianCalendar 类提供的一些有用的方法列表：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <td style=\"width:47px;\"> <strong>序号</strong></td> \n   <td style=\"width:529px;\"> <strong>方法和说明</strong></td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 1</td> \n   <td style=\"width:529px;\"> <strong>void add(int field, int amount) </strong><br /> 根据日历规则，将指定的（有符号的）时间量添加到给定的日历字段中。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 2</td> \n   <td style=\"width:529px;\"> <strong>protected void computeFields() </strong><br /> 转换UTC毫秒值为时间域值</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 3</td> \n   <td style=\"width:529px;\"> <strong>protected void computeTime() </strong><br /> 覆盖Calendar ，转换时间域值为UTC毫秒值</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 4</td> \n   <td style=\"width:529px;\"> <strong>boolean equals(Object obj) </strong><br /> 比较此 GregorianCalendar 与指定的 Object。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 5</td> \n   <td style=\"width:529px;\"> <strong>int get(int field) </strong><br /> 获取指定字段的时间值</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 6</td> \n   <td style=\"width:529px;\"> <strong>int getActualMaximum(int field) </strong><br /> 返回当前日期，给定字段的最大值</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 7</td> \n   <td style=\"width:529px;\"> <strong>int getActualMinimum(int field) </strong><br /> 返回当前日期，给定字段的最小值</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 8</td> \n   <td style=\"width:529px;\"> <strong>int getGreatestMinimum(int field) </strong><br /> &nbsp;返回此 GregorianCalendar 实例给定日历字段的最高的最小值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 9</td> \n   <td style=\"width:529px;\"> <strong>Date getGregorianChange() </strong><br /> 获得格里高利历的更改日期。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 10</td> \n   <td style=\"width:529px;\"> <strong>int getLeastMaximum(int field) </strong><br /> 返回此 GregorianCalendar 实例给定日历字段的最低的最大值</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 11</td> \n   <td style=\"width:529px;\"> <strong>int getMaximum(int field) </strong><br /> 返回此 GregorianCalendar 实例的给定日历字段的最大值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 12</td> \n   <td style=\"width:529px;\"> <strong>Date getTime()</strong><br /> 获取日历当前时间。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 13</td> \n   <td style=\"width:529px;\"> <strong>long getTimeInMillis() </strong><br /> 获取用长整型表示的日历的当前时间</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 14</td> \n   <td style=\"width:529px;\"> <strong>TimeZone getTimeZone() </strong><br /> 获取时区。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 15</td> \n   <td style=\"width:529px;\"> <strong>int getMinimum(int field) </strong><br /> 返回给定字段的最小值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 16</td> \n   <td style=\"width:529px;\"> <strong>int hashCode() </strong><br /> 重写hashCode.</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 17</td> \n   <td style=\"width:529px;\"> <strong>boolean isLeapYear(int year)</strong><br /> 确定给定的年份是否为闰年。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 18</td> \n   <td style=\"width:529px;\"> <strong>void roll(int field, boolean up) </strong><br /> 在给定的时间字段上添加或减去（上/下）单个时间单元，不更改更大的字段。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 19</td> \n   <td style=\"width:529px;\"> <strong>void set(int field, int value) </strong><br /> 用给定的值设置时间字段。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 20</td> \n   <td style=\"width:529px;\"> <strong>void set(int year, int month, int date) </strong><br /> 设置年、月、日的值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 21</td> \n   <td style=\"width:529px;\"> <strong>void set(int year, int month, int date, int hour, int minute) </strong><br /> 设置年、月、日、小时、分钟的值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 22</td> \n   <td style=\"width:529px;\"> <strong>void set(int year, int month, int date, int hour, int minute, int second) </strong><br /> 设置年、月、日、小时、分钟、秒的值。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 23</td> \n   <td style=\"width:529px;\"> <strong>void setGregorianChange(Date date) </strong><br /> 设置 GregorianCalendar 的更改日期。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 24</td> \n   <td style=\"width:529px;\"> <strong>void setTime(Date date) </strong><br /> 用给定的日期设置Calendar的当前时间。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 25</td> \n   <td style=\"width:529px;\"> <strong>void setTimeInMillis(long millis) </strong><br /> 用给定的long型毫秒数设置Calendar的当前时间。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 26</td> \n   <td style=\"width:529px;\"> <strong>void setTimeZone(TimeZone value) </strong><br /> 用给定时区值设置当前时区。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 27</td> \n   <td style=\"width:529px;\"> <strong>String toString() </strong><br /> 返回代表日历的字符串。</td> \n  </tr> \n </tbody> \n</table> \n<h3>实例</h3> \n<pre>\r\nimport java.util.*;\r\n  \r\npublic class GregorianCalendarDemo {\r\n\r\n   public static void main(String args[]) {\r\n      String months[] = {\r\n      &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;,\r\n      &quot;May&quot;, &quot;Jun&quot;, &quot;Jul&quot;, &quot;Aug&quot;,\r\n      &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;};\r\n      \r\n      int year;\r\n      // 初始化 Gregorian 日历\r\n      // 使用当前时间和日期\r\n      // 默认为本地时间和时区\r\n      GregorianCalendar gcalendar = new GregorianCalendar();\r\n      // 显示当前时间和日期的信息\r\n      System.out.print(&quot;Date: &quot;);\r\n      System.out.print(months[gcalendar.get(Calendar.MONTH)]);\r\n      System.out.print(&quot; &quot; + gcalendar.get(Calendar.DATE) + &quot; &quot;);\r\n      System.out.println(year = gcalendar.get(Calendar.YEAR));\r\n      System.out.print(&quot;Time: &quot;);\r\n      System.out.print(gcalendar.get(Calendar.HOUR) + &quot;:&quot;);\r\n      System.out.print(gcalendar.get(Calendar.MINUTE) + &quot;:&quot;);\r\n      System.out.println(gcalendar.get(Calendar.SECOND));\r\n      \r\n      // 测试当前年份是否为闰年\r\n      if(gcalendar.isLeapYear(year)) {\r\n         System.out.println(&quot;当前年份是闰年&quot;);\r\n      }\r\n      else {\r\n         System.out.println(&quot;当前年份不是闰年&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p><a href=\"http://www.runoob.com/try/showjava.php?filename=date_demo8\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nDate: Apr 22 2009\r\nTime: 11:25:27\r\n当前年份不是闰年\r\n</pre> \n<p>关于 Calender 类的完整列表，你可以参考标准的 <a target=\"_blank\" href=\"http://www.runoob.com/manual/jdk1.6/\">Java文档</a>。</p>', null, 'Java 日期时间|获取当前日期时间|日期比较|使用SimpleDateFormat格式化日期|简单的DateFormat格式化编码|使用printf格式化日期|日期和时间转换字符|解析字符串为时间|Java 休眠(sleep)|测量时间|Calendar类|GregorianCalendar类|');
INSERT INTO `schoolcontent` VALUES ('301', '304', '<h1>Java 正则表达式</h1> \n<p>正则表达式定义了字符串的模式。</p> \n<p>正则表达式可以用来搜索、编辑或处理文本。</p> \n<p>正则表达式并不仅限于某一种语言，但是在每种语言中有细微的差别。</p> \n<p>Java正则表达式和Perl的是最为相似的。</p> \n<p>java.util.regex包主要包括以下三个类：</p> \n<ul> \n <li> <strong>Pattern类：</strong><p>pattern对象是一个正则表达式的编译表示。Pattern类没有公共构造方法。要创建一个Pattern对象，你必须首先调用其公共静态编译方法，它返回一个Pattern对象。该方法接受一个正则表达式作为它的第一个参数。</p></li> \n <li> <strong>Matcher类：</strong><p>Matcher对象是对输入字符串进行解释和匹配操作的引擎。与Pattern类一样，Matcher也没有公共构造方法。你需要调用Pattern对象的matcher方法来获得一个Matcher对象。</p></li> \n <li> <strong>PatternSyntaxException：</strong><p>PatternSyntaxException是一个非强制异常类，它表示一个正则表达式模式中的语法错误。</p></li> \n</ul> \n<hr /> \n<h2> 捕获组 </h2> \n<p>捕获组是把多个字符当一个单独单元进行处理的方法，它通过对括号内的字符分组来创建。 </p> \n<p>例如，正则表达式(dog) 创建了单一分组，组里包含&quot;d&quot;，&quot;o&quot;，和&quot;g&quot;。 </p>\n<p>捕获组是通过从左至右计算其开括号来编号。例如，在表达式（（A）（B（C））），有四个这样的组： </p> \n<ul class=\"list\"> \n <li>((A)(B(C)))</li> \n <li>(A)</li> \n <li>(B(C))</li> \n <li>(C)</li> \n</ul> \n<p>可以通过调用matcher对象的groupCount方法来查看表达式有多少个分组。groupCount方法返回一个int值，表示matcher对象当前有多个捕获组。 </p>\n<p>还有一个特殊的组（组0），它总是代表整个表达式。该组不包括在groupCount的返回值中。 </p> \n<h2>实例</h2> \n<p>下面的例子说明如何从一个给定的字符串中找到数字串：</p> \n<pre>\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class RegexMatches\r\n{\r\n    public static void main( String args[] ){\r\n\r\n      // 按指定模式在字符串查找\r\n      String line = &quot;This order was placed for QT3000! OK?&quot;;\r\n      String pattern = &quot;(.*)(\\\\d+)(.*)&quot;;\r\n\r\n      // 创建 Pattern 对象\r\n      Pattern r = Pattern.compile(pattern);\r\n\r\n      // 现在创建 matcher 对象\r\n      Matcher m = r.matcher(line);\r\n      if (m.find( )) {\r\n         System.out.println(&quot;Found value: &quot; + m.group(0) );\r\n         System.out.println(&quot;Found value: &quot; + m.group(1) );\r\n         System.out.println(&quot;Found value: &quot; + m.group(2) );\r\n      } else {\r\n         System.out.println(&quot;NO MATCH&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nFound value: This order was placed for QT3000! OK?\r\nFound value: This order was placed for QT300\r\nFound value: 0\r\n</pre> \n<hr /> \n<h2>正则表达式语法</h2> \n<table class=\"reference\">\n <tbody>\n  <tr>\n   <th><p>字符</p></th>\n   <th><p>说明</p></th>\n  </tr>\n  <tr>\n   <td><p>\\</p></td>\n   <td><p>将下一字符标记为特殊字符、文本、反向引用或八进制转义符。例如，&quot;n&quot;匹配字符&quot;n&quot;。&quot;\\n&quot;匹配换行符。序列&quot;\\\\&quot;匹配&quot;\\&quot;，&quot;\\(&quot;匹配&quot;(&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>^</p></td>\n   <td><p>匹配输入字符串开始的位置。如果设置了 <b>RegExp</b> 对象的 <b>Multiline</b> 属性，^ 还会与&quot;\\n&quot;或&quot;\\r&quot;之后的位置匹配。</p></td>\n  </tr>\n  <tr>\n   <td><p>$</p></td>\n   <td><p>匹配输入字符串结尾的位置。如果设置了 <b>RegExp</b> 对象的 <b>Multiline</b> 属性，$ 还会与&quot;\\n&quot;或&quot;\\r&quot;之前的位置匹配。</p></td>\n  </tr>\n  <tr>\n   <td><p>*</p></td>\n   <td><p>零次或多次匹配前面的字符或子表达式。例如，zo* 匹配&quot;z&quot;和&quot;zoo&quot;。* 等效于 {0,}。</p></td>\n  </tr>\n  <tr>\n   <td><p>+</p></td>\n   <td><p>一次或多次匹配前面的字符或子表达式。例如，&quot;zo+&quot;与&quot;zo&quot;和&quot;zoo&quot;匹配，但与&quot;z&quot;不匹配。+ 等效于 {1,}。</p></td>\n  </tr>\n  <tr>\n   <td><p>?</p></td>\n   <td><p>零次或一次匹配前面的字符或子表达式。例如，&quot;do(es)?&quot;匹配&quot;do&quot;或&quot;does&quot;中的&quot;do&quot;。? 等效于 {0,1}。</p></td>\n  </tr>\n  <tr>\n   <td><p>{<i>n</i>}</p></td>\n   <td><p><i>n </i>是非负整数。正好匹配 <i>n</i> 次。例如，&quot;o{2}&quot;与&quot;Bob&quot;中的&quot;o&quot;不匹配，但与&quot;food&quot;中的两个&quot;o&quot;匹配。</p></td>\n  </tr>\n  <tr>\n   <td><p>{<i>n</i>,}</p></td>\n   <td><p><i>n </i>是非负整数。至少匹配 <i>n </i>次。例如，&quot;o{2,}&quot;不匹配&quot;Bob&quot;中的&quot;o&quot;，而匹配&quot;foooood&quot;中的所有 o。&quot;o{1,}&quot;等效于&quot;o+&quot;。&quot;o{0,}&quot;等效于&quot;o*&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>{<i>n</i>,<i>m</i>}</p></td>\n   <td><p><i>M</i> 和 <i>n</i> 是非负整数，其中 <i>n</i> &lt;= <i>m</i>。匹配至少 <i>n</i> 次，至多 <i>m</i> 次。例如，&quot;o{1,3}&quot;匹配&quot;fooooood&quot;中的头三个 o。\'o{0,1}\' 等效于 \'o?\'。注意：您不能将空格插入逗号和数字之间。</p></td>\n  </tr>\n  <tr>\n   <td><p>?</p></td>\n   <td><p>当此字符紧随任何其他限定符（*、+、?、{<i>n</i>}、{<i>n</i>,}、{<i>n</i>,<i>m</i>}）之后时，匹配模式是&quot;非贪心的&quot;。&quot;非贪心的&quot;模式匹配搜索到的、尽可能短的字符串，而默认的&quot;贪心的&quot;模式匹配搜索到的、尽可能长的字符串。例如，在字符串&quot;oooo&quot;中，&quot;o+?&quot;只匹配单个&quot;o&quot;，而&quot;o+&quot;匹配所有&quot;o&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>.</p></td>\n   <td><p>匹配除&quot;\\r\\n&quot;之外的任何单个字符。若要匹配包括&quot;\\r\\n&quot;在内的任意字符，请使用诸如&quot;[\\s\\S]&quot;之类的模式。</p></td>\n  </tr>\n  <tr>\n   <td><p>(<i>pattern</i>)</p></td>\n   <td><p>匹配 <i>pattern</i> 并捕获该匹配的子表达式。可以使用 <b>$0…$9</b> 属性从结果&quot;匹配&quot;集合中检索捕获的匹配。若要匹配括号字符 ( )，请使用&quot;\\(&quot;或者&quot;\\)&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>(?:<i>pattern</i>)</p></td>\n   <td><p>匹配 <i>pattern</i> 但不捕获该匹配的子表达式，即它是一个非捕获匹配，不存储供以后使用的匹配。这对于用&quot;or&quot;字符 (|) 组合模式部件的情况很有用。例如，\'industr(?:y|ies) 是比 \'industry|industries\' 更经济的表达式。</p></td>\n  </tr>\n  <tr>\n   <td><p>(?=<i>pattern</i>)</p></td>\n   <td><p>执行正向预测先行搜索的子表达式，该表达式匹配处于匹配 <i>pattern</i> 的字符串的起始点的字符串。它是一个非捕获匹配，即不能捕获供以后使用的匹配。例如，\'Windows (?=95|98|NT|2000)\' 匹配&quot;Windows 2000&quot;中的&quot;Windows&quot;，但不匹配&quot;Windows 3.1&quot;中的&quot;Windows&quot;。预测先行不占用字符，即发生匹配后，下一匹配的搜索紧随上一匹配之后，而不是在组成预测先行的字符后。</p></td>\n  </tr>\n  <tr>\n   <td><p>(?!<i>pattern</i>)</p></td>\n   <td><p>执行反向预测先行搜索的子表达式，该表达式匹配不处于匹配 <i>pattern</i> 的字符串的起始点的搜索字符串。它是一个非捕获匹配，即不能捕获供以后使用的匹配。例如，\'Windows (?!95|98|NT|2000)\' 匹配&quot;Windows 3.1&quot;中的 &quot;Windows&quot;，但不匹配&quot;Windows 2000&quot;中的&quot;Windows&quot;。预测先行不占用字符，即发生匹配后，下一匹配的搜索紧随上一匹配之后，而不是在组成预测先行的字符后。</p></td>\n  </tr>\n  <tr>\n   <td><p><i>x</i>|<i>y</i></p></td>\n   <td><p>匹配 <i>x</i> 或 <i>y</i>。例如，\'z|food\' 匹配&quot;z&quot;或&quot;food&quot;。\'(z|f)ood\' 匹配&quot;zood&quot;或&quot;food&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>[<i>xyz</i>]</p></td>\n   <td><p>字符集。匹配包含的任一字符。例如，&quot;[abc]&quot;匹配&quot;plain&quot;中的&quot;a&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>[^<i>xyz</i>]</p></td>\n   <td><p>反向字符集。匹配未包含的任何字符。例如，&quot;[^abc]&quot;匹配&quot;plain&quot;中&quot;p&quot;，&quot;l&quot;，&quot;i&quot;，&quot;n&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>[<i>a-z</i>]</p></td>\n   <td><p>字符范围。匹配指定范围内的任何字符。例如，&quot;[a-z]&quot;匹配&quot;a&quot;到&quot;z&quot;范围内的任何小写字母。</p></td>\n  </tr>\n  <tr>\n   <td><p>[^<i>a-z</i>]</p></td>\n   <td><p>反向范围字符。匹配不在指定的范围内的任何字符。例如，&quot;[^a-z]&quot;匹配任何不在&quot;a&quot;到&quot;z&quot;范围内的任何字符。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\b</p></td>\n   <td><p>匹配一个字边界，即字与空格间的位置。例如，&quot;er\\b&quot;匹配&quot;never&quot;中的&quot;er&quot;，但不匹配&quot;verb&quot;中的&quot;er&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\B</p></td>\n   <td><p>非字边界匹配。&quot;er\\B&quot;匹配&quot;verb&quot;中的&quot;er&quot;，但不匹配&quot;never&quot;中的&quot;er&quot;。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\c<i>x</i></p></td>\n   <td><p>匹配 <i>x</i> 指示的控制字符。例如，\\cM 匹配 Control-M 或回车符。<i>x</i> 的值必须在 A-Z 或 a-z 之间。如果不是这样，则假定 c 就是&quot;c&quot;字符本身。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\d</p></td>\n   <td><p>数字字符匹配。等效于 [0-9]。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\D</p></td>\n   <td><p>非数字字符匹配。等效于 [^0-9]。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\f</p></td>\n   <td><p>换页符匹配。等效于 \\x0c 和 \\cL。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\n</p></td>\n   <td><p>换行符匹配。等效于 \\x0a 和 \\cJ。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\r</p></td>\n   <td><p>匹配一个回车符。等效于 \\x0d 和 \\cM。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\s</p></td>\n   <td><p>匹配任何空白字符，包括空格、制表符、换页符等。与 [&nbsp;\\f\\n\\r\\t\\v] 等效。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\S</p></td>\n   <td><p>匹配任何非空白字符。与 [^&nbsp;\\f\\n\\r\\t\\v] 等效。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\t</p></td>\n   <td><p>制表符匹配。与 \\x09 和 \\cI 等效。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\v</p></td>\n   <td><p>垂直制表符匹配。与 \\x0b 和 \\cK 等效。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\w</p></td>\n   <td><p>匹配任何字类字符，包括下划线。与&quot;[A-Za-z0-9_]&quot;等效。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\W</p></td>\n   <td><p>与任何非单词字符匹配。与&quot;[^A-Za-z0-9_]&quot;等效。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\x<i>n</i></p></td>\n   <td><p>匹配 <i>n</i>，此处的 <i>n</i> 是一个十六进制转义码。十六进制转义码必须正好是两位数长。例如，&quot;\\x41&quot;匹配&quot;A&quot;。&quot;\\x041&quot;与&quot;\\x04&quot;&amp;&quot;1&quot;等效。允许在正则表达式中使用 ASCII 代码。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\<i>num</i></p></td>\n   <td><p>匹配 <i>num</i>，此处的 <i>num</i> 是一个正整数。到捕获匹配的反向引用。例如，&quot;(.)\\1&quot;匹配两个连续的相同字符。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\<i>n</i></p></td>\n   <td><p>标识一个八进制转义码或反向引用。如果 \\<i>n</i> 前面至少有 <i>n</i> 个捕获子表达式，那么 <i>n</i> 是反向引用。否则，如果 <i>n</i> 是八进制数 (0-7)，那么 <i>n</i> 是八进制转义码。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\<i>nm</i></p></td>\n   <td><p>标识一个八进制转义码或反向引用。如果 \\<i>nm</i> 前面至少有 <i>nm</i> 个捕获子表达式，那么 <i>nm</i> 是反向引用。如果 \\<i>nm</i> 前面至少有 <i>n</i> 个捕获，则 <i>n</i> 是反向引用，后面跟有字符 <i>m</i>。如果两种前面的情况都不存在，则 \\<i>nm</i> 匹配八进制值 <i>nm</i>，其中 <i>n </i>和 <i>m</i> 是八进制数字 (0-7)。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\<span class=\"parameter\" sdata=\"paramReference\">nml</span></p></td>\n   <td><p>当 <i>n</i> 是八进制数 (0-3)，<i>m</i> 和 <i>l</i> 是八进制数 (0-7) 时，匹配八进制转义码 <i>nml</i>。</p></td>\n  </tr>\n  <tr>\n   <td><p>\\u<i>n</i></p></td>\n   <td><p>匹配 <i>n</i>，其中 <i>n</i> 是以四位十六进制数表示的 Unicode 字符。例如，\\u00A9 匹配版权符号 (&copy;)。</p></td>\n  </tr>\n </tbody>\n</table> \n<h2>Matcher类的方法 </h2> \n<h2>索引方法</h2>\n<p> 索引方法提供了有用的索引值，精确表明输入字符串中在哪能找到匹配：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:45px;\"> <strong>序号</strong></th> \n   <th style=\"width:532px;\"> <strong>方法及说明</strong></th> \n  </tr> \n  <tr> \n   <td style=\"width:45px;\"> 1</td> \n   <td style=\"width:532px;\"> <strong>public int start() </strong><br /> 返回以前匹配的初始索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:45px;\"> 2</td> \n   <td style=\"width:532px;\"> <strong>public int start(int group)</strong><br /> &nbsp;返回在以前的匹配操作期间，由给定组所捕获的子序列的初始索引</td> \n  </tr> \n  <tr> \n   <td style=\"width:45px;\"> 3</td> \n   <td style=\"width:532px;\"> <strong>public int end()</strong><br /> 返回最后匹配字符之后的偏移量。</td> \n  </tr> \n  <tr> \n   <td style=\"width:45px;\"> 4</td> \n   <td style=\"width:532px;\"> <strong>public int end(int group)</strong><br /> 返回在以前的匹配操作期间，由给定组所捕获子序列的最后字符之后的偏移量。</td> \n  </tr> \n </tbody> \n</table> \n<h2>研究方法</h2> \n<p> 研究方法用来检查输入字符串并返回一个布尔值，表示是否找到该模式： </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:49px;\"> <strong>序号</strong></th> \n   <th style=\"width:528px;\"> <strong>方法及说明</strong></th> \n  </tr> \n  <tr> \n   <td style=\"width:49px;\"> 1</td> \n   <td style=\"width:528px;\"> <strong>public boolean lookingAt() </strong><br /> &nbsp;尝试将从区域开头开始的输入序列与该模式匹配。</td> \n  </tr> \n  <tr> \n   <td style=\"width:49px;\"> 2</td> \n   <td style=\"width:528px;\"> <strong>public boolean find() </strong><br /> 尝试查找与该模式匹配的输入序列的下一个子序列。</td> \n  </tr> \n  <tr> \n   <td style=\"width:49px;\"> 3</td> \n   <td style=\"width:528px;\"> <strong>public boolean find(int start</strong><strong>）</strong><br /> 重置此匹配器，然后尝试查找匹配该模式、从指定索引开始的输入序列的下一个子序列。</td> \n  </tr> \n  <tr> \n   <td style=\"width:49px;\"> 4</td> \n   <td style=\"width:528px;\"> <strong>public boolean matches() </strong><br /> 尝试将整个区域与模式匹配。</td> \n  </tr> \n </tbody> \n</table> \n<h2>替换方法</h2> \n<p> 替换方法是替换输入字符串里文本的方法： </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:43px;\"> <strong>序号</strong></th> \n   <th style=\"width:534px;\"> <strong>方法及说明</strong></th> \n  </tr> \n  <tr> \n   <td style=\"width:43px;\"> 1</td> \n   <td style=\"width:534px;\"> <strong>public Matcher appendReplacement(StringBuffer sb, String replacement)</strong><br /> 实现非终端添加和替换步骤。</td> \n  </tr> \n  <tr> \n   <td style=\"width:43px;\"> 2</td> \n   <td style=\"width:534px;\"> <strong>public StringBuffer appendTail(StringBuffer sb)</strong><br /> 实现终端添加和替换步骤。</td> \n  </tr> \n  <tr> \n   <td style=\"width:43px;\"> 3</td> \n   <td style=\"width:534px;\"> <strong>public String replaceAll(String replacement) </strong><br /> &nbsp;替换模式与给定替换字符串相匹配的输入序列的每个子序列。</td> \n  </tr> \n  <tr> \n   <td style=\"width:43px;\"> 4</td> \n   <td style=\"width:534px;\"> <strong>public String replaceFirst(String replacement)</strong><br /> &nbsp;替换模式与给定替换字符串匹配的输入序列的第一个子序列。</td> \n  </tr> \n  <tr> \n   <td style=\"width:43px;\"> 5</td> \n   <td style=\"width:534px;\"> <strong>public static String quoteReplacement(String s)</strong><br /> 返回指定字符串的字面替换字符串。这个方法返回一个字符串，就像传递给Matcher类的appendReplacement 方法一个字面字符串一样工作。</td> \n  </tr> \n </tbody> \n</table> \n<h2>start 和end 方法</h2> \n<p> 下面是一个对单词&quot;cat&quot;出现在输入字符串中出现次数进行计数的例子： </p> \n<pre>\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class RegexMatches\r\n{\r\n    private static final String REGEX = &quot;\\\\bcat\\\\b&quot;;\r\n    private static final String INPUT =\r\n                                    &quot;cat cat cat cattie cat&quot;;\r\n\r\n    public static void main( String args[] ){\r\n       Pattern p = Pattern.compile(REGEX);\r\n       Matcher m = p.matcher(INPUT); // 获取 matcher 对象\r\n       int count = 0;\r\n\r\n       while(m.find()) {\r\n         count++;\r\n         System.out.println(&quot;Match number &quot;+count);\r\n         System.out.println(&quot;start(): &quot;+m.start());\r\n         System.out.println(&quot;end(): &quot;+m.end());\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nMatch number 1\r\nstart(): 0\r\nend(): 3\r\nMatch number 2\r\nstart(): 4\r\nend(): 7\r\nMatch number 3\r\nstart(): 8\r\nend(): 11\r\nMatch number 4\r\nstart(): 19\r\nend(): 22\r\n</pre> \n<p>可以看到这个例子是使用单词边界，以确保字母 &quot;c&quot; &quot;a&quot; &quot;t&quot; 并非仅是一个较长的词的子串。它也提供了一些关于输入字符串中匹配发生位置的有用信息。 </p>\n<p>Start方法返回在以前的匹配操作期间，由给定组所捕获的子序列的初始索引，end方法最后一个匹配字符的索引加1。 </p> \n<h2>matches 和lookingAt 方法</h2> \n<p> matches 和lookingAt 方法都用来尝试匹配一个输入序列模式。它们的不同是matcher要求整个序列都匹配，而lookingAt 不要求。 </p> \n<p> 这两个方法经常在输入字符串的开始使用。 </p>\n<p> 我们通过下面这个例子，来解释这个功能： </p> \n<pre>\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class RegexMatches\r\n{\r\n    private static final String REGEX = &quot;foo&quot;;\r\n    private static final String INPUT = &quot;fooooooooooooooooo&quot;;\r\n    private static Pattern pattern;\r\n    private static Matcher matcher;\r\n\r\n    public static void main( String args[] ){\r\n       pattern = Pattern.compile(REGEX);\r\n       matcher = pattern.matcher(INPUT);\r\n\r\n       System.out.println(&quot;Current REGEX is: &quot;+REGEX);\r\n       System.out.println(&quot;Current INPUT is: &quot;+INPUT);\r\n\r\n       System.out.println(&quot;lookingAt(): &quot;+matcher.lookingAt());\r\n       System.out.println(&quot;matches(): &quot;+matcher.matches());\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nCurrent REGEX is: foo\r\nCurrent INPUT is: fooooooooooooooooo\r\nlookingAt(): true\r\nmatches(): false\r\n</pre> \n<h2>replaceFirst 和replaceAll 方法</h2> \n<p>replaceFirst 和replaceAll 方法用来替换匹配正则表达式的文本。不同的是，replaceFirst 替换首次匹配，replaceAll 替换所有匹配。 </p>\n<p>下面的例子来解释这个功能：</p> \n<pre>\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class RegexMatches\r\n{\r\n    private static String REGEX = &quot;dog&quot;;\r\n    private static String INPUT = &quot;The dog says meow. &quot; +\r\n                                    &quot;All dogs say meow.&quot;;\r\n    private static String REPLACE = &quot;cat&quot;;\r\n\r\n    public static void main(String[] args) {\r\n       Pattern p = Pattern.compile(REGEX);\r\n       // get a matcher object\r\n       Matcher m = p.matcher(INPUT); \r\n       INPUT = m.replaceAll(REPLACE);\r\n       System.out.println(INPUT);\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nThe cat says meow. All cats say meow.\r\n</pre> \n<h2>appendReplacement 和 appendTail 方法</h2> \n<p> Matcher 类也提供了appendReplacement 和appendTail 方法用于文本替换： </p>\n<p>看下面的例子来解释这个功能：</p> \n<pre>\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class RegexMatches\r\n{\r\n   private static String REGEX = &quot;a*b&quot;;\r\n   private static String INPUT = &quot;aabfooaabfooabfoob&quot;;\r\n   private static String REPLACE = &quot;-&quot;;\r\n   public static void main(String[] args) {\r\n      Pattern p = Pattern.compile(REGEX);\r\n      // 获取 matcher 对象\r\n      Matcher m = p.matcher(INPUT);\r\n      StringBuffer sb = new StringBuffer();\r\n      while(m.find()){\r\n         m.appendReplacement(sb,REPLACE);\r\n      }\r\n      m.appendTail(sb);\r\n      System.out.println(sb.toString());\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n-foo-foo-foo-\r\n</pre> \n<h2>PatternSyntaxException 类的方法</h2> \n<p>PatternSyntaxException 是一个非强制异常类，它指示一个正则表达式模式中的语法错误。 </p>\n<p>PatternSyntaxException 类提供了下面的方法来帮助我们查看发生了什么错误。 </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:45px;\"> <strong>序号</strong></th> \n   <th style=\"width:532px;\"> <strong>方法及说明</strong></th> \n  </tr> \n  <tr> \n   <td style=\"width:45px;\"> 1</td> \n   <td style=\"width:532px;\"> <strong>public String getDescription()</strong><br /> 获取错误的描述。</td> \n  </tr> \n  <tr> \n   <td style=\"width:45px;\"> 2</td> \n   <td style=\"width:532px;\"> <strong>public int getIndex() </strong><br /> &nbsp;获取错误的索引。</td> \n  </tr> \n  <tr> \n   <td style=\"width:45px;\"> 3</td> \n   <td style=\"width:532px;\"> <strong>public String getPattern() </strong><br /> 获取错误的正则表达式模式。</td> \n  </tr> \n  <tr> \n   <td style=\"width:45px;\"> 4</td> \n   <td style=\"width:532px;\"> <strong>public String getMessage() </strong><br /> 返回多行字符串，包含语法错误及其索引的描述、错误的正则表达式模式和模式中错误索引的可视化指示。</td> \n  </tr> \n </tbody> \n</table>', null, 'Java 正则表达式|捕获组|实例|正则表达式语法|Matcher类的方法|索引方法|研究方法|替换方法|start 和end 方法|matches 和lookingAt 方法|replaceFirst 和replaceAll 方法|appendReplacement 和 appendTail 方法|PatternSyntaxException 类的方法|');
INSERT INTO `schoolcontent` VALUES ('302', '305', '<h1>Java 方法</h1> \n<p> 在前面几个章节中我们经常使用到System.out.println()，那么它是什么呢？ </p> \n<p>println()是一个方法(Method)，而System是系统类(Class)，out是标准输出对象(Object)。这句话的用法是调用系统类System中的标准输出对象out中的方法println()。 </p> \n<h3>那么什么是方法呢？</h3> \n<p>Java方法是语句的集合，它们在一起执行一个功能。</p> \n<ul> \n <li>方法是解决一类问题的步骤的有序组合</li> \n <li>方法包含于类或对象中</li> \n <li>方法在程序中被创建，在其他地方被引用</li> \n</ul>\n<hr /> \n<h2>方法的定义</h2> \n<p>一般情况下，定义一个方法包含以下语法：</p> \n<pre>\r\n修饰符 返回值类型 方法名 (参数类型 参数名){\r\n    ...\r\n    方法体\r\n    ...\r\n    return 返回值;\r\n}\r\n</pre> \n<p>方法包含一个方法头和一个方法体。下面是一个方法的所有部分：</p> \n<ul> \n <li> <strong>修饰符：</strong>修饰符，这是可选的，告诉编译器如何调用该方法。定义了该方法的访问类型。</li> \n <li> <strong>返回值类型 ：</strong>方法可能会返回值。returnValueType是方法返回值的数据类型。有些方法执行所需的操作，但没有返回值。在这种情况下，returnValueType是关键字<strong>void</strong>。</li> \n <li> <strong>方法名：</strong>是方法的实际名称。方法名和参数表共同构成方法签名。</li> \n <li> <strong>参数类型：</strong>参数像是一个占位符。当方法被调用时，传递值给参数。这个值被称为实参或变量。参数列表是指方法的参数类型、顺序和参数的个数。参数是可选的，方法可以不包含任何参数。</li> \n <li> <strong>方法体：</strong>方法体包含具体的语句，定义该方法的功能。</li> \n</ul> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/12-130Q1220955916.jpg\" /> </p> \n<p>如：</p> \n<pre>\r\npublic static int age(int birthday){...}\r\n</pre> \n<p> 参数可以有多个： </p>\n<pre>\r\nstatic float interest(float principal, int year){...}\r\n</pre> \n<p> <strong>注意：</strong> 在一些其它语言中方法指过程和函数。一个返回非void类型返回值的方法称为函数；一个返回void类型返回值的方法叫做过程。 </p> \n<h3>实例</h3> \n<p> 下面的方法包含2个参数num1和num2，它返回这两个参数的最大值。 </p> \n<pre>\r\n/** 返回两个整型变量数据的较大值 */\r\npublic static int max(int num1, int num2) {\r\n   int result;\r\n   if (num1 &gt; num2)\r\n      result = num1;\r\n   else\r\n      result = num2;\r\n\r\n   return result; \r\n}\r\n</pre> \n<hr /> \n<h2>方法调用 </h2> \n<p>Java支持两种调用方法的方式，根据方法是否返回值来选择。 </p>\n<p>当程序调用一个方法时，程序的控制权交给了被调用的方法。当被调用方法的返回语句执行或者到达方法体闭括号时候交还控制权给程序。 </p>\n<p>当方法返回一个值的时候，方法调用通常被当做一个值。例如： </p>\n<pre>\r\nint larger = max(30, 40);\r\n</pre> \n<p>如果方法返回值是void，方法调用一定是一条语句。例如，方法println返回void。下面的调用是个语句： </p> \n<pre>\r\nSystem.out.println(&quot;Welcome to Java!&quot;);\r\n</pre> \n<h3>示例</h3> \n<p>下面的例子演示了如何定义一个方法，以及如何调用它：</p> \n<pre>\r\npublic class TestMax {\r\n   /** 主方法 */\r\n   public static void main(String[] args) {\r\n      int i = 5;\r\n      int j = 2;\r\n      int k = max(i, j);\r\n      System.out.println(&quot;The maximum between &quot; + i +\r\n                    &quot; and &quot; + j + &quot; is &quot; + k);\r\n   }\r\n\r\n   /** 返回两个整数变量较大的值 */\r\n   public static int max(int num1, int num2) {\r\n      int result;\r\n      if (num1 &gt; num2)\r\n         result = num1;\r\n      else\r\n         result = num2;\r\n\r\n      return result; \r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nThe maximum between 5 and 2 is 5\r\n</pre> \n<p>这个程序包含main方法和max方法。Main方法是被JVM调用的，除此之外，main方法和其它方法没什么区别。 </p>\n<p>main方法的头部是不变的，如例子所示，带修饰符public和static,返回void类型值，方法名字是main,此外带个一个String[]类型参数。String[]表明参数是字符串数组。 </p> \n<hr /> \n<h2>void 关键字</h2> \n<p>本节说明如何声明和调用一个void方法。 </p>\n<p>下面的例子声明了一个名为printGrade的方法，并且调用它来打印给定的分数。 </p>\n<h3>示例</h3> \n<pre>\r\npublic class TestVoidMethod {\r\n\r\n   public static void main(String[] args) {\r\n      printGrade(78.5);\r\n   }\r\n\r\n   public static void printGrade(double score) {\r\n      if (score &gt;= 90.0) {\r\n         System.out.println(\'A\');\r\n      }\r\n      else if (score &gt;= 80.0) {\r\n         System.out.println(\'B\');\r\n      }\r\n      else if (score &gt;= 70.0) {\r\n         System.out.println(\'C\');\r\n      }\r\n      else if (score &gt;= 60.0) {\r\n         System.out.println(\'D\');\r\n      }\r\n      else {\r\n         System.out.println(\'F\');\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nC\r\n</pre> \n<p>这里printGrade方法是一个void类型方法，它不返回值。 </p>\n<p>一个void方法的调用一定是一个语句。 所以，它被在main方法第三行以语句形式调用。就像任何以分号结束的语句一样。 </p> \n<hr />\n<h2>通过值传递参数</h2> \n<p> 调用一个方法时候需要提供参数，你必须按照参数列表指定的顺序提供。 </p>\n<p>例如，下面的方法连续n次打印一个消息： </p> \n<pre>\r\npublic static void nPrintln(String message, int n) {\r\n  for (int i = 0; i &lt; n; i++)\r\n    System.out.println(message);\r\n}\r\n</pre> \n<h3>示例</h3> \n<p> 下面的例子演示按值传递的效果。</p>\n<p> 该程序创建一个方法，该方法用于交换两个变量。 </p> \n<pre>\r\npublic class TestPassByValue {\r\n\r\n   public static void main(String[] args) {\r\n      int num1 = 1;\r\n      int num2 = 2;\r\n\r\n      System.out.println(&quot;Before swap method, num1 is &quot; +\r\n                          num1 + &quot; and num2 is &quot; + num2);\r\n\r\n      // 调用swap方法\r\n      swap(num1, num2);\r\n      System.out.println(&quot;After swap method, num1 is &quot; +\r\n                         num1 + &quot; and num2 is &quot; + num2);\r\n   }\r\n   /** 交换两个变量的方法 */\r\n   public static void swap(int n1, int n2) {\r\n      System.out.println(&quot;\\tInside the swap method&quot;);\r\n      System.out.println(&quot;\\t\\tBefore swapping n1 is &quot; + n1\r\n                           + &quot; n2 is &quot; + n2);\r\n      // 交换 n1 与 n2的值\r\n      int temp = n1;\r\n      n1 = n2;\r\n      n2 = temp;\r\n\r\n      System.out.println(&quot;\\t\\tAfter swapping n1 is &quot; + n1\r\n                           + &quot; n2 is &quot; + n2);\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nBefore swap method, num1 is 1 and num2 is 2\r\n        Inside the swap method\r\n                Before swapping n1 is 1 n2 is 2\r\n                After swapping n1 is 2 n2 is 1\r\nAfter swap method, num1 is 1 and num2 is 2\r\n</pre> \n<p> 传递两个参数调用swap方法。有趣的是，方法被调用后，实参的值并没有改变。 </p> \n<hr /> \n<h2>方法的重载</h2> \n<p> 上面使用的max方法仅仅适用于int型数据。但如果你想得到两个浮点类型数据的最大值呢？ </p>\n<p>解决方法是创建另一个有相同名字但参数不同的方法，如下面代码所示： </p> \n<pre>\r\npublic static double max(double num1, double num2) {\r\n  if (num1 &gt; num2)\r\n    return num1;\r\n  else\r\n    return num2;\r\n}\r\n</pre> \n<p>如果你调用max方法时传递的是int型参数，则 int型参数的max方法就会被调用； </p>\n<p>如果传递的是double型参数，则double类型的max方法体会被调用，这叫做方法重载； </p>\n<p>就是说一个类的两个方法拥有相同的名字，但是有不同的参数列表。 </p>\n<p>Java编译器根据方法签名判断哪个方法应该被调用。 </p>\n<p>方法重载可以让程序更清晰易读。执行密切相关任务的方法应该使用相同的名字。 </p>\n<p>重载的方法必须拥有不同的参数列表。你不能仅仅依据修饰符或者返回类型的不同来重载方法。 </p>\n<hr />\n<h2>变量作用域</h2> \n<p> 变量的范围是程序中该变量可以被引用的部分。 </p>\n<p>方法内定义的变量被称为局部变量。 </p>\n<p>局部变量的作用范围从声明开始，直到包含它的块结束。 </p>\n<p>局部变量必须声明才可以使用。 </p>\n<p>方法的参数范围涵盖整个方法。参数实际上是一个局部变量。 </p>\n<p>for循环的初始化部分声明的变量，其作用范围在整个循环。 </p>\n<p>但循环体内声明的变量其适用范围是从它声明到循环体结束。它包含如下所示的变量声明： </p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/12-130Q1221013F0.jpg\" /> </p> \n<p>你可以在一个方法里，不同的非嵌套块中多次声明一个具有相同的名称局部变量，但你不能在嵌套块内两次声明局部变量。 </p> \n<h2>命令行参数的使用</h2> \n<p> 有时候你希望运行一个程序时候再传递给它消息。这要靠传递命令行参数给main()函数实现。 </p>\n<p>命令行参数是在执行程序时候紧跟在程序名字后面的信息。</p> \n<h3>实例</h3>\n<p> 下面的程序打印所有的命令行参数： </p> \n<pre>\r\npublic class CommandLine {\r\n\r\n   public static void main(String args[]){ \r\n      for(int i=0; i&lt;args.length; i++){\r\n         System.out.println(&quot;args[&quot; + i + &quot;]: &quot; +\r\n                                           args[i]);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p> 如下所示，运行这个程序： </p> \n<pre>\r\njava CommandLine this is a command line 200 -100\r\n</pre> \n<p>运行结果如下：</p> \n<pre>\r\nargs[0]: this\r\nargs[1]: is\r\nargs[2]: a\r\nargs[3]: command\r\nargs[4]: line\r\nargs[5]: 200\r\nargs[6]: -100\r\n</pre> \n<hr />\n<h2>构造方法</h2> \n<p> 当一个对象被创建时候，构造方法用来初始化该对象。构造方法和它所在类的名字相同，但构造方法没有返回值。 </p>\n<p>通常会使用构造方法给一个类的实例变量赋初值，或者执行其它必要的步骤来创建一个完整的对象。 </p>\n<p>不管你与否自定义构造方法，所有的类都有构造方法，因为Java自动提供了一个默认构造方法，它把所有成员初始化为0。 </p>\n<p>一旦你定义了自己的构造方法，默认构造方法就会失效。 </p>\n<h3>实例</h3> \n<p> 下面是一个使用构造方法的例子： </p> \n<pre>\r\n// 一个简单的构造函数\r\nclass MyClass {\r\n   int x;\r\n   \r\n   // 以下是构造函数\r\n   MyClass() {\r\n      x = 10;\r\n   }\r\n}\r\n</pre> \n<p>你可以像下面这样调用构造方法来初始化一个对象：</p> \n<pre>\r\npublic class ConsDemo {\r\n\r\n   public static void main(String args[]) {\r\n      MyClass t1 = new MyClass();\r\n      MyClass t2 = new MyClass();\r\n      System.out.println(t1.x + &quot; &quot; + t2.x);\r\n   }\r\n}\r\n</pre> \n<p>大多时候需要一个有参数的构造方法。 </p> \n<h3>实例</h3> \n<p>下面是一个使用构造方法的例子：</p> \n<pre>\r\n// 一个简单的构造函数\r\nclass MyClass {\r\n   int x;\r\n   \r\n   // 以下是构造函数\r\n   MyClass(int i ) {\r\n      x = i;\r\n   }\r\n}\r\n</pre> \n<p>你可以像下面这样调用构造方法来初始化一个对象：</p> \n<pre>\r\npublic class ConsDemo {\r\n\r\n   public static void main(String args[]) {\r\n      MyClass t1 = new MyClass( 10 );\r\n      MyClass t2 = new MyClass( 20 );\r\n      System.out.println(t1.x + &quot; &quot; + t2.x);\r\n   }\r\n}\r\n</pre> \n<p>运行结果如下：</p> \n<pre>\r\n10 20\r\n</pre> \n<h2>可变参数</h2> \n<p>JDK 1.5 开始，Java支持传递同类型的可变参数给一个方法。 </p>\n<p>方法的可变参数的声明如下所示：</p> \n<pre>\r\ntypeName... parameterName\r\n</pre> \n<p>在方法声明中，在指定参数类型后加一个省略号(...) 。 </p>\n<p>一个方法中只能指定一个可变参数，它必须是方法的最后一个参数。任何普通的参数必须在它之前声明。 </p> \n<h3>实例</h3> \n<pre>\r\npublic class VarargsDemo {\r\n\r\n   public static void main(String args[]) {\r\n      // 调用可变参数的方法\r\n	  printMax(34, 3, 3, 2, 56.5);\r\n      printMax(new double[]{1, 2, 3});\r\n   }\r\n\r\n   public static void printMax( double... numbers) {\r\n   if (numbers.length == 0) {\r\n      System.out.println(&quot;No argument passed&quot;);\r\n      return;\r\n   }\r\n\r\n   double result = numbers[0];\r\n\r\n   for (int i = 1; i &lt;  numbers.length; i++)\r\n      if (numbers[i] &gt;  result)\r\n      result = numbers[i];\r\n      System.out.println(&quot;The max value is &quot; + result);\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nThe max value is 56.5\r\nThe max value is 3.0\r\n</pre> \n<hr />\n<h2>finalize() 方法</h2> \n<p>Java允许定义这样的方法，它在对象被垃圾收集器析构(回收)之前调用，这个方法叫做finalize( )，它用来清除回收对象。 </p>\n<p>例如，你可以使用finalize()来确保一个对象打开的文件被关闭了。 </p>\n<p>在finalize()方法里，你必须指定在对象销毁时候要执行的操作。 </p>\n<p>finalize()一般格式是：</p> \n<pre>\r\nprotected void finalize()\r\n{\r\n   // 在这里终结代码\r\n}\r\n</pre> \n<p> 关键字protected是一个限定符，它确保finalize() 方法不会被该类以外的代码调用。 </p> \n<p> 当然，Java的内存回收可以由JVM来自动完成。如果你手动使用，则可以使用上面的方法。 </p> \n<h3>实例</h3> \n<pre>\r\npublic class FinalizationDemo {  \r\n    public static void main(String[] args) {  \r\n        Cake c1 = new Cake(1);  \r\n        Cake c2 = new Cake(2);  \r\n        Cake c3 = new Cake(3);  \r\n          \r\n        c2 = c3 = null;  \r\n        System.gc(); //调用Java垃圾收集器\r\n    }  \r\n}  \r\n  \r\nclass Cake extends Object {  \r\n    private int id;  \r\n    public Cake(int id) {  \r\n        this.id = id;  \r\n        System.out.println(&quot;Cake Object &quot; + id + &quot;is created&quot;);  \r\n    }  \r\n      \r\n    protected void finalize() throws java.lang.Throwable {  \r\n        super.finalize();  \r\n        System.out.println(&quot;Cake Object &quot; + id + &quot;is disposed&quot;);  \r\n    }  \r\n}  \r\n</pre> \n<p>运行以上代码，输出结果如下：</p> \n<pre>\r\nC:\\1&gt;java FinalizationDemo  \r\nCake Object 1is created  \r\nCake Object 2is created  \r\nCake Object 3is created  \r\nCake Object 3is disposed  \r\nCake Object 2is disposed \r\n</pre>', null, 'Java 方法|方法的定义|方法调用|void 关键字|通过值传递参数|方法的重载|变量作用域|命令行参数的使用|构造方法|可变参数|finalize() 方法|');
INSERT INTO `schoolcontent` VALUES ('303', '306', '<h1>Java 流(Stream)、文件(File)和IO</h1> \n<p>Java.io包几乎包含了所有操作输入、输出需要的类。所有这些流类代表了输入源和输出目标。 </p>\n<p>Java.io包中的流支持很多种格式，比如：基本类型、对象、本地化字符集等等。 </p>\n<p>一个流可以理解为一个数据的序列。输入流表示从一个源读取数据，输出流表示向一个目标写数据。 </p>\n<p>Java为I/O提供了强大的而灵活的支持，使其更广泛地应用到文件传输和网络编程中。 </p>\n<p>但本节讲述最基本的和流与I/O相关的功能。我们将通过一个个例子来学习这些功能。 </p>\n<hr />\n<h2>读取控制台输入</h2> \n<p> Java的控制台输入由System.in完成。 </p>\n<p>为了获得一个绑定到控制台的字符流，你可以把System.in包装在一个BufferedReader 对象中来创建一个字符流。 </p>\n<p>下面是创建BufferedReader的基本语法：</p> \n<pre>\r\nBufferedReader br = new BufferedReader(new \r\n                      InputStreamReader(System.in));\r\n</pre> \n<p>BufferedReader对象创建后，我们便可以使用read()方法从控制台读取一个字符，或者用readLine()方法读取一个字符串。 </p>\n<hr />\n<h2>从控制台读取多字符输入</h2> \n<p> 从BufferedReader对象读取一个字符要使用read()方法，它的语法如下： </p> \n<pre>\r\nint read( ) throws IOException\r\n</pre> \n<p>每次调用read()方法，它从输入流读取一个字符并把该字符作为整数值返回。 当流结束的时候返回-1。该方法抛出IOException。 </p>\n<p>下面的程序示范了用read()方法从控制台不断读取字符直到用户输入&quot;q&quot;。</p> \n<pre>\r\n// 使用 BufferedReader 在控制台读取字符\r\n\r\nimport java.io.*;\r\n\r\npublic class BRRead {\r\n   public static void main(String args[]) throws IOException\r\n   {\r\n      char c;\r\n      // 使用 System.in 创建 BufferedReader \r\n      BufferedReader br = new BufferedReader(new \r\n                         InputStreamReader(System.in));\r\n      System.out.println(&quot;Enter characters, \'q\' to quit.&quot;);\r\n      // 读取字符\r\n      do {\r\n         c = (char) br.read();\r\n         System.out.println(c);\r\n      } while(c != \'q\');\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nEnter characters, \'q\' to quit.\r\n123abcq\r\n1\r\n2\r\n3\r\na\r\nb\r\nc\r\nq\r\n</pre> \n<hr />\n<h2>从控制台读取字符串</h2> \n<p> 从标准输入读取一个字符串需要使用BufferedReader的readLine()方法。 </p>\n<p>它的一般格式是： </p> \n<pre>\r\nString readLine( ) throws IOException\r\n</pre> \n<p> 下面的程序读取和显示字符行直到你输入了单词&quot;end&quot;。 </p> \n<pre>\r\n// 使用 BufferedReader 在控制台读取字符\r\nimport java.io.*;\r\npublic class BRReadLines {\r\n   public static void main(String args[]) throws IOException\r\n   {\r\n      // 使用 System.in 创建 BufferedReader \r\n      BufferedReader br = new BufferedReader(new\r\n                              InputStreamReader(System.in));\r\n      String str;\r\n      System.out.println(&quot;Enter lines of text.&quot;);\r\n      System.out.println(&quot;Enter \'end\' to quit.&quot;);\r\n      do {\r\n         str = br.readLine();\r\n         System.out.println(str);\r\n      } while(!str.equals(&quot;end&quot;));\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nEnter lines of text.\r\nEnter \'end\' to quit.\r\nThis is line one\r\nThis is line one\r\nThis is line two\r\nThis is line two\r\nend\r\nend\r\n</pre> \n<blockquote> \n <p>JDK 5 后的版本我们也可以使用 <a href=\"http://www.runoob.com/java/java-scanner-class.html\" target=\"_blank\">Java Scanner</a> 类来获取控制台的输入。</p>\n</blockquote> \n<h2>控制台输出</h2> \n<p> 在此前已经介绍过，控制台的输出由 print( ) 和println( )完成。这些方法都由类PrintStream 定义，System.out是该类对象的一个引用。 </p>\n<p>PrintStream 继承了OutputStream类，并且实现了方法write()。这样，write()也可以用来往控制台写操作。 </p>\n<p>PrintStream 定义write()的最简单格式如下所示：</p> \n<pre>\r\nvoid write(int byteval)\r\n</pre> \n<p>该方法将byteval的低八位字节写到流中。 </p> \n<h3>实例</h3> \n<p> 下面的例子用write()把字符&quot;A&quot;和紧跟着的换行符输出到屏幕： </p> \n<pre>\r\nimport java.io.*;\r\n\r\n// 演示 System.out.write().\r\npublic class WriteDemo {\r\n   public static void main(String args[]) {\r\n      int b; \r\n      b = \'A\';\r\n      System.out.write(b);\r\n      System.out.write(\'\\n\');\r\n   }\r\n}\r\n</pre> \n<p>运行以上实例在输出窗口输出&quot;A&quot;字符</p> \n<pre>\r\nA\r\n</pre> \n<p><strong>注意：</strong>write()方法不经常使用，因为print()和println()方法用起来更为方便。 </p> \n<hr />\n<h2>读写文件</h2> \n<p> 如前所述，一个流被定义为一个数据序列。输入流用于从源读取数据，输出流用于向目标写数据。 </p>\n<p>下图是一个描述输入流和输出流的类层次图。</p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/12-130Q122402I57.jpg\" /></p> \n<p>下面将要讨论的两个重要的流是FileInputStream 和FileOutputStream： </p>\n<hr /> \n<h2>FileInputStream</h2> \n<p>该流用于从文件读取数据，它的对象可以用关键字new来创建。 </p>\n<p>有多种构造方法可用来创建对象。 </p>\n<p>可以使用字符串类型的文件名来创建一个输入流对象来读取文件：</p> \n<pre>\r\nInputStream f = new FileInputStream(&quot;C:/java/hello&quot;);\r\n</pre> \n<p>也可以使用一个文件对象来创建一个输入流对象来读取文件。我们首先得使用File()方法来创建一个文件对象： </p> \n<pre>\r\nFile f = new File(&quot;C:/java/hello&quot;);\r\nInputStream f = new FileInputStream(f);\r\n</pre> \n<p>创建了InputStream对象，就可以使用下面的方法来读取流或者进行其他的流操作。</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:44px;\"> <strong>序号</strong></th> \n   <th style=\"width:533px;\"> <strong>方法及描述</strong></th> \n  </tr> \n  <tr> \n   <td style=\"width:44px;\"> 1</td> \n   <td style=\"width:533px;\"> <strong>public void close() throws IOException{}</strong><br /> 关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。</td> \n  </tr> \n  <tr> \n   <td style=\"width:44px;\"> 2</td> \n   <td style=\"width:533px;\"> <strong>protected void finalize()throws IOException {}</strong><br /> 这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出IOException异常。</td> \n  </tr> \n  <tr> \n   <td style=\"width:44px;\"> 3</td> \n   <td style=\"width:533px;\"> <strong>public int read(int r)throws IOException{}</strong><br /> 这个方法从InputStream对象读取指定字节的数据。返回为整数值。返回下一字节数据，如果已经到结尾则返回-1。</td> \n  </tr> \n  <tr> \n   <td style=\"width:44px;\"> 4</td> \n   <td style=\"width:533px;\"> <strong>public int read(byte[] r) throws IOException{}</strong><br /> 这个方法从输入流读取r.length长度的字节。返回读取的字节数。如果是文件结尾则返回-1。</td> \n  </tr> \n  <tr> \n   <td style=\"width:44px;\"> 5</td> \n   <td style=\"width:533px;\"> <strong>public int available() throws IOException{}</strong><br /> 返回下一次对此输入流调用的方法可以不受阻塞地从此输入流读取的字节数。返回一个整数值。</td> \n  </tr> \n </tbody> \n</table> \n<p>除了InputStream外，还有一些其他的输入流，更多的细节参考下面链接：</p> \n<ul> \n <li> <a href=\"http://www.runoob.com/java/java-bytearrayinputstream.html\" target=\"_blank\">ByteArrayInputStream</a></li>\n <li> <a href=\"http://www.runoob.com/java/java-datainputstream.html\" target=\"_blank\">DataInputStream</a></li> \n</ul> \n<hr />\n<h2> FileOutputStream</h2>\n<p> 该类用来创建一个文件并向文件中写数据。</p>\n<p> 如果该流在打开文件进行输出前，目标文件不存在，那么该流会创建该文件。</p>\n<p> 有两个构造方法可以用来创建FileOutputStream 对象。</p>\n<p> 使用字符串类型的文件名来创建一个输出流对象：</p> \n<pre>\r\nOutputStream f = new FileOutputStream(&quot;C:/java/hello&quot;) \r\n</pre> \n<p>也可以使用一个文件对象来创建一个输出流来写文件。我们首先得使用File()方法来创建一个文件对象： </p> \n<pre>\r\nFile f = new File(&quot;C:/java/hello&quot;);\r\nOutputStream f = new FileOutputStream(f);\r\n</pre> \n<p> 创建OutputStream 对象完成后，就可以使用下面的方法来写入流或者进行其他的流操作。 </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th style=\"width:47px;\"> <strong>序号</strong></th> \n   <th style=\"width:529px;\"> <strong>方法及描述</strong></th> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 1</td> \n   <td style=\"width:529px;\"> <strong>public void close() throws IOException{}</strong><br /> 关闭此文件输入流并释放与此流有关的所有系统资源。抛出IOException异常。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 2</td> \n   <td style=\"width:529px;\"> <strong>protected void finalize()throws IOException {}</strong><br /> 这个方法清除与该文件的连接。确保在不再引用文件输入流时调用其 close 方法。抛出IOException异常。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 3</td> \n   <td style=\"width:529px;\"> <strong>public void write(int w)throws IOException{}</strong><br /> 这个方法把指定的字节写到输出流中。</td> \n  </tr> \n  <tr> \n   <td style=\"width:47px;\"> 4</td> \n   <td style=\"width:529px;\"> <strong>public void write(byte[] w)</strong><br /> 把指定数组中w.length长度的字节写到OutputStream中。</td> \n  </tr> \n </tbody> \n</table> \n<p>除了OutputStream外，还有一些其他的输出流，更多的细节参考下面链接：</p> \n<ul> \n <li> <a href=\"http://www.runoob.com/java/java-bytearrayoutputstream.html\" target=\"_blank\">ByteArrayOutputStream</a></li>\n <li> <a href=\"http://www.runoob.com/java/java-dataoutputstream.html\" target=\"_blank\">DataOutputStream</a></li>\n</ul> \n<h3>实例</h3> \n<p> 下面是一个演示InputStream和OutputStream用法的例子： </p> \n<pre>\r\nimport java.io.*;\r\n\r\npublic class fileStreamTest{\r\n\r\n   public static void main(String args[]){\r\n   \r\n   try{\r\n      byte bWrite [] = {11,21,3,40,5};\r\n      OutputStream os = new FileOutputStream(&quot;test.txt&quot;);\r\n      for(int x=0; x &lt; bWrite.length ; x++){\r\n         os.write( bWrite[x] ); // writes the bytes\r\n      }\r\n      os.close();\r\n     \r\n      InputStream is = new FileInputStream(&quot;test.txt&quot;);\r\n      int size = is.available();\r\n\r\n      for(int i=0; i&lt; size; i++){\r\n         System.out.print((char)is.read() + &quot;  &quot;);\r\n      }\r\n      is.close();\r\n   }catch(IOException e){\r\n      System.out.print(&quot;Exception&quot;);\r\n   }	\r\n   }\r\n}\r\n</pre> \n<p>上面的程序首先创建文件test.txt，并把给定的数字以二进制形式写进该文件，同时输出到控制台上。 </p> \n<p>以上代码由于是二进制写入，可能存在乱码，你可以使用以下代码实例来解决乱码问题：</p> \n<pre>\r\n//文件名 :fileStreamTest2.java\r\nimport java.io.*;\r\n\r\npublic class fileStreamTest2{\r\n	public static void main(String[] args) throws IOException {\r\n		\r\n		File f = new File(&quot;a.txt&quot;);\r\n		FileOutputStream fop = new FileOutputStream(f);\r\n		// 构建FileOutputStream对象,文件不存在会自动新建\r\n		\r\n		OutputStreamWriter writer = new OutputStreamWriter(fop, &quot;UTF-8&quot;);\r\n		// 构建OutputStreamWriter对象,参数可以指定编码,默认为操作系统默认编码,windows上是gbk\r\n		\r\n		writer.append(&quot;中文输入&quot;);\r\n		// 写入到缓冲区\r\n		\r\n		writer.append(&quot;\\r\\n&quot;);\r\n		//换行\r\n		\r\n		writer.append(&quot;English&quot;);\r\n		// 刷新缓存冲,写入到文件,如果下面已经没有写入的内容了,直接close也会写入\r\n		\r\n		writer.close();\r\n		//关闭写入流,同时会把缓冲区内容写入文件,所以上面的注释掉\r\n		\r\n		fop.close();\r\n		// 关闭输出流,释放系统资源\r\n\r\n		FileInputStream fip = new FileInputStream(f);\r\n		// 构建FileInputStream对象\r\n		\r\n		InputStreamReader reader = new InputStreamReader(fip, &quot;UTF-8&quot;);\r\n		// 构建InputStreamReader对象,编码与写入相同\r\n\r\n		StringBuffer sb = new StringBuffer();\r\n		while (reader.ready()) {\r\n			sb.append((char) reader.read());\r\n			// 转成char加到StringBuffer对象中\r\n		}\r\n		System.out.println(sb.toString());\r\n		reader.close();\r\n		// 关闭读取流\r\n		\r\n		fip.close();\r\n		// 关闭输入流,释放系统资源\r\n\r\n	}\r\n}\r\n</pre> \n<hr /> \n<h2>文件和I/O</h2>\n<p> 还有一些关于文件和I/O的类，我们也需要知道：</p> \n<ul> \n <li> <a href=\"http://www.runoob.com/java/java-file.html\" target=\"_blank\">File Class(类)</a></li>\n <li> <a href=\"http://www.runoob.com/java/java-filereader.html\" target=\"_blank\">FileReader Class(类)</a></li>\n <li> <a href=\"http://www.runoob.com/java/java-filewriter.html\" target=\"_blank\">FileWriter Class(类)</a></li>\n</ul> \n<hr /> \n<h2>Java中的目录</h2> \n<h3>创建目录：</h3>\n<p> File类中有两个方法可以用来创建文件夹：</p> \n<ul> \n <li> <strong>mkdir( )</strong>方法创建一个文件夹，成功则返回true，失败则返回false。失败表明File对象指定的路径已经存在，或者由于整个路径还不存在，该文件夹不能被创建。</li> \n <li> <strong>mkdirs()</strong>方法创建一个文件夹和它的所有父文件夹。</li> \n</ul> \n<p> 下面的例子创建 &quot;/tmp/user/java/bin&quot;文件夹：</p> \n<pre>\r\nimport java.io.File;\r\n\r\npublic class CreateDir {\r\n   public static void main(String args[]) {\r\n      String dirname = &quot;/tmp/user/java/bin&quot;;\r\n      File d = new File(dirname);\r\n      // 现在创建目录\r\n      d.mkdirs();\r\n  }\r\n}\r\n</pre> \n<p>编译并执行上面代码来创建目录&quot;/tmp/user/java/bin&quot;。 </p>\n<p><strong>注意：</strong>Java在UNIX和Windows自动按约定分辨文件路径分隔符。如果你在Windows版本的Java中使用分隔符(/) ，路径依然能够被正确解析。 </p>\n<hr /> \n<h2>读取目录</h2> \n<p> 一个目录其实就是一个File对象，它包含其他文件和文件夹。 </p>\n<p>如果创建一个File对象并且它是一个目录，那么调用isDirectory( )方法会返回true。 </p>\n<p>可以通过调用该对象上的list()方法，来提取它包含的文件和文件夹的列表。 </p>\n<p>下面展示的例子说明如何使用list()方法来检查一个文件夹中包含的内容：</p> \n<pre>\r\nimport java.io.File;\r\n\r\npublic class DirList {\r\n   public static void main(String args[]) {\r\n      String dirname = &quot;/tmp&quot;;\r\n      File f1 = new File(dirname);\r\n      if (f1.isDirectory()) {\r\n         System.out.println( &quot;Directory of &quot; + dirname);\r\n         String s[] = f1.list();\r\n         for (int i=0; i &lt; s.length; i++) {\r\n            File f = new File(dirname + &quot;/&quot; + s[i]);\r\n            if (f.isDirectory()) {\r\n               System.out.println(s[i] + &quot; is a directory&quot;);\r\n            } else {\r\n               System.out.println(s[i] + &quot; is a file&quot;);\r\n            }\r\n         }\r\n      } else {\r\n         System.out.println(dirname + &quot; is not a directory&quot;);\r\n    }\r\n  }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nDirectory of /tmp\r\nbin is a directory\r\nlib is a directory\r\ndemo is a directory\r\ntest.txt is a file\r\nREADME is a file\r\nindex.html is a file\r\ninclude is a directory\r\n</pre>', null, 'Java 流(Stream)、文件(File)和IO|读取控制台输入|从控制台读取多字符输入|从控制台读取字符串|控制台输出|读写文件|FileInputStream|FileOutputStream|文件和I/O|Java中的目录|读取目录|');
INSERT INTO `schoolcontent` VALUES ('304', '307', '<h1>Java Scanner 类</h1> \n<p>java.util.Scanner是Java5的新特征，我们可以通过 Scanner 类来获取用户的输入。 </p>\n<p>下面是创建 Scanner 对象的基本语法：</p> \n<pre>\r\n Scanner s = new Scanner(System.in); \r\n</pre> \n<p>接下来我们演示一个最简单的的数据输入，并通过 Scanner 类的 next() 与 nextLine() 方法获取输入的字符串，在读取前我们一般需要 使用 hasNext 与 haxNextLine 判断是否还有输入的数据：</p> \n<p></p> \n<h3>使用 next 方法：</h3> \n<pre>\r\nimport java.util.Scanner; \r\n\r\npublic class ScannerDemo {  \r\n    public static void main(String[] args) {  \r\n        Scanner scan = new Scanner(System.in); \r\n		// 从键盘接收数据  \r\n\r\n		//next方式接收字符串\r\n        System.out.println(&quot;next方式接收：&quot;);\r\n        // 判断是否还有输入\r\n        if(scan.hasNext()){   \r\n        	String str1 = scan.next();\r\n        	System.out.println(&quot;输入的数据为：&quot;+str1);  \r\n        }  \r\n\r\n    }  \r\n} \r\n</pre> \n<p>执行以上程序输出结果为：</p> \n<pre>\r\n$ javac ScannerDemo.java\r\n$ java ScannerDemo\r\nnext方式接收：\r\nrunoob com\r\n输入的数据为：runoob\r\n</pre> \n<p>可以看到 com 字符串并未输出，接下来我们看 nextLine。</p> \n<h3>使用 next 方法：<p></p> <pre>\r\nimport java.util.Scanner; \r\n\r\npublic class ScannerDemo {  \r\n    public static void main(String[] args) {  \r\n        Scanner scan = new Scanner(System.in); \r\n		// 从键盘接收数据  \r\n\r\n		//nextLine方式接收字符串\r\n        System.out.println(&quot;nextLine方式接收：&quot;);\r\n        // 判断是否还有输入\r\n        if(scan.hasNextLine()){   \r\n        	String str2 = scan.nextLine();\r\n        	System.out.println(&quot;输入的数据为：&quot;+str2);  \r\n        }  \r\n\r\n    }  \r\n} \r\n</pre> <p>执行以上程序输出结果为：</p> <pre>\r\n$ javac ScannerDemo.java\r\n$ java ScannerDemo\r\nnextLine方式接收：\r\nrunoob com\r\n输入的数据为：runoob com\r\n</pre> <p>可以看到 com 字符串输出。</p> </h3>\n<h3>next()与nextLine()区别</h3> \n<p>next():</p>\n<ul>\n <li> 1、一定要读取到有效字符后才可以结束输入。</li>\n <li> 2、对输入有效字符之前遇到的空白，next()方法会自动将其去掉。 </li>\n <li> 3、只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。 </li>\n <li> next()不能得到带有空格的字符串。</li>\n</ul> \n<p>nextLine()： </p>\n<ul>\n <li> 1、以Enter为结束符,也就是说nextLine()方法返回的是输入回车之前的所有字符。 </li>\n <li> 2、可以获得空白。</li>\n</ul> \n<p>如果要输入int或float类型的数据，在Scanner类中也有支持，但是在输入之前最好先使用 hasNextXxx() 方法进行验证，再使用 nextXxx() 来读取：</p> \n<pre>\r\nimport java.util.Scanner;  \r\n\r\npublic class ScannerDemo {  \r\n    public static void main(String[] args) {  \r\n        Scanner scan = new Scanner(System.in);  \r\n		// 从键盘接收数据  \r\n        int i = 0 ;  \r\n        float f = 0.0f ;  \r\n        System.out.print(&quot;输入整数：&quot;);  \r\n        if(scan.hasNextInt()){                 \r\n			// 判断输入的是否是整数  \r\n            i = scan.nextInt() ;                \r\n			// 接收整数  \r\n            System.out.println(&quot;整数数据：&quot; + i) ;  \r\n        }else{                                 \r\n			// 输入错误的信息  \r\n            System.out.println(&quot;输入的不是整数！&quot;) ;  \r\n        }  \r\n        System.out.print(&quot;输入小数：&quot;);  \r\n        if(scan.hasNextFloat()){              \r\n			// 判断输入的是否是小数  \r\n            f = scan.nextFloat() ;             \r\n			// 接收小数  \r\n            System.out.println(&quot;小数数据：&quot; + f) ;  \r\n        }else{                                \r\n			// 输入错误的信息  \r\n            System.out.println(&quot;输入的不是小数！&quot;) ;  \r\n        }  \r\n    }  \r\n} \r\n</pre> \n<p>执行以上程序输出结果为：</p> \n<pre>\r\n$ javac ScannerDemo.java\r\n$ java ScannerDemo\r\n输入整数：12\r\n整数数据：12\r\n输入小数：1.2\r\n小数数据：1.2\r\n</pre> \n<p>以下实例我们可以输入多个数字，并求其总和与平均数，每输入一个数字用回车确认，通过输入非数字来结束输入并输出执行结果：</p> \n<pre>\r\nimport java.util.Scanner; \r\n\r\nclass ScannerDemo   \r\n{  \r\n    public static void main(String[] args)   \r\n    {  \r\n        Scanner scan = new Scanner(System.in);  \r\n  \r\n        double sum = 0;  \r\n        int m = 0;  \r\n  \r\n        while(scan.hasNextDouble())  \r\n        {  \r\n            double x = scan.nextDouble();  \r\n            m = m + 1;  \r\n            sum = sum + x;  \r\n        }  \r\n  \r\n        System.out.println(m+&quot;个数的和为&quot;+sum);  \r\n        System.out.println(m+&quot;个数的平均值是&quot;+(sum/m));  \r\n    }  \r\n}  \r\n</pre> \n<p>执行以上程序输出结果为：</p> \n<pre>\r\n$ javac ScannerDemo.java\r\n$ java ScannerDemo\r\n12\r\n23\r\n15\r\n21.4\r\nend\r\n4个数的和为71.4\r\n4个数的平均值是17.85\r\n</pre> \n<p>更多内容可以参考 API 文档：<a href=\"http://www.runoob.com/manual/jdk1.6/\" target=\"_blank\">http://www.runoob.com/manual/jdk1.6/</a>。</p>', null, 'Java Scanner 类|');
INSERT INTO `schoolcontent` VALUES ('305', '308', '<h1>Java 异常处理</h1> \n<p> 异常是程序中的一些错误，但并不是所有的错误都是异常，并且错误有时候是可以避免的。 </p>\n<p>比如说，你的代码少了一个分号，那么运行出来结果是提示是错误java.lang.Error；如果你用System.out.println(11/0)，那么你是因为你用0做了除数，会抛出java.lang.ArithmeticException的异常。 </p> \n<p>异常发生的原因有很多，通常包含以下几大类：</p> \n<ul> \n <li> 用户输入了非法数据。</li> \n <li> 要打开的文件不存在。</li> \n <li> 网络通信时连接中断，或者JVM内存溢出。</li> \n</ul> \n<p>这些异常有的是因为用户错误引起，有的是程序错误引起的，还有其它一些是因为物理错误引起的。-<br /> </p>\n<p>要理解Java异常处理是如何工作的，你需要掌握以下三种类型的异常： </p>\n<ul> \n <li> <strong>检查性异常：</strong>最具代表的检查性异常是用户错误或问题引起的异常，这是程序员无法预见的。例如要打开一个不存在文件时，一个异常就发生了，这些异常在编译时不能被简单地忽略。</li> \n <li> <strong>运行时异常：</strong> 运行时异常是可能被程序员避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。</li> \n <li> <strong>错误：</strong> 错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。例如，当栈溢出时，一个错误就发生了，它们在编译也检查不到的。</li> \n</ul> \n<hr />\n<h2>Exception类的层次</h2> \n<p>所有的异常类是从java.lang.Exception类继承的子类。 </p>\n<p>Exception类是Throwable类的子类。除了Exception类外，Throwable还有一个子类Error 。 </p>\n<p>Java程序通常不捕获错误。错误一般发生在严重故障时，它们在Java程序处理的范畴之外。 </p>\n<p>Error用来指示运行时环境发生的错误。 </p>\n<p>例如，JVM内存溢出。一般地，程序不会从错误中恢复。 </p>\n<p>异常类有两个主要的子类：IOException类和RuntimeException类。</p> \n<p> <img src=\"http://www.runoob.com/wp-content/uploads/2013/12/12-130Q1234I6223.jpg\" /> </p> \n<p> 在Java 内置类中(接下来会说明)，有大部分常用检查性和非检查性异常。 </p> \n<hr /> \n<h2>Java 内置异常类</h2> \n<p>Java 语言定义了一些异常类在java.lang标准包中。 </p>\n<p>标准运行时异常类的子类是最常见的异常类。由于java.lang包是默认加载到所有的Java程序的，所以大部分从运行时异常类继承而来的异常都可以直接使用。 </p>\n<p>Java根据各个类库也定义了一些其他的异常，下面的表中列出了Java的非检查性异常。 </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> <strong>异常</strong></th> \n   <th> <strong>描述</strong></th> \n  </tr> \n  <tr> \n   <td> ArithmeticException</td> \n   <td> 当出现异常的运算条件时，抛出此异常。例如，一个整数&quot;除以零&quot;时，抛出此类的一个实例。</td> \n  </tr> \n  <tr> \n   <td> ArrayIndexOutOfBoundsException</td> \n   <td> 用非法索引访问数组时抛出的异常。如果索引为负或大于等于数组大小，则该索引为非法索引。</td> \n  </tr> \n  <tr> \n   <td> ArrayStoreException</td> \n   <td> 试图将错误类型的对象存储到一个对象数组时抛出的异常。</td> \n  </tr> \n  <tr> \n   <td> ClassCastException</td> \n   <td> 当试图将对象强制转换为不是实例的子类时，抛出该异常。</td> \n  </tr> \n  <tr> \n   <td> IllegalArgumentException</td> \n   <td> 抛出的异常表明向方法传递了一个不合法或不正确的参数。</td> \n  </tr> \n  <tr> \n   <td> IllegalMonitorStateException</td> \n   <td> 抛出的异常表明某一线程已经试图等待对象的监视器，或者试图通知其他正在等待对象的监视器而本身没有指定监视器的线程。</td> \n  </tr> \n  <tr> \n   <td> IllegalStateException</td> \n   <td> 在非法或不适当的时间调用方法时产生的信号。换句话说，即 Java 环境或 Java 应用程序没有处于请求操作所要求的适当状态下。</td> \n  </tr> \n  <tr> \n   <td> IllegalThreadStateException</td> \n   <td> 线程没有处于请求操作所要求的适当状态时抛出的异常。</td> \n  </tr> \n  <tr> \n   <td> IndexOutOfBoundsException</td> \n   <td> 指示某排序索引（例如对数组、字符串或向量的排序）超出范围时抛出。</td> \n  </tr> \n  <tr> \n   <td> NegativeArraySizeException</td> \n   <td> 如果应用程序试图创建大小为负的数组，则抛出该异常。</td> \n  </tr> \n  <tr> \n   <td> NullPointerException</td> \n   <td> 当应用程序试图在需要对象的地方使用 <code>null</code> 时，抛出该异常</td> \n  </tr> \n  <tr> \n   <td> NumberFormatException</td> \n   <td> 当应用程序试图将字符串转换成一种数值类型，但该字符串不能转换为适当格式时，抛出该异常。</td> \n  </tr> \n  <tr> \n   <td> SecurityException</td> \n   <td> 由安全管理器抛出的异常，指示存在安全侵犯。</td> \n  </tr> \n  <tr> \n   <td> StringIndexOutOfBoundsException</td> \n   <td> 此异常由 <code>String</code> 方法抛出，指示索引或者为负，或者超出字符串的大小。</td> \n  </tr> \n  <tr> \n   <td> UnsupportedOperationException</td> \n   <td> 当不支持请求的操作时，抛出该异常。</td> \n  </tr> \n </tbody> \n</table> \n<p>下面的表中列出了Java定义在java.lang包中的检查性异常类。 </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> <strong>异常</strong></th> \n   <th> <strong>描述</strong></th> \n  </tr> \n  <tr> \n   <td> ClassNotFoundException</td> \n   <td> 应用程序试图加载类时，找不到相应的类，抛出该异常。</td> \n  </tr> \n  <tr> \n   <td> CloneNotSupportedException</td> \n   <td> 当调用 <code>Object</code> 类中的 <code>clone</code> 方法克隆对象，但该对象的类无法实现 <code>Cloneable</code> 接口时，抛出该异常。</td> \n  </tr> \n  <tr> \n   <td> IllegalAccessException</td> \n   <td> 拒绝访问一个类的时候，抛出该异常。</td> \n  </tr> \n  <tr> \n   <td> InstantiationException</td> \n   <td> 当试图使用 <code>Class</code> 类中的 <code>newInstance</code> 方法创建一个类的实例，而指定的类对象因为是一个接口或是一个抽象类而无法实例化时，抛出该异常。</td> \n  </tr> \n  <tr> \n   <td> InterruptedException</td> \n   <td> 一个线程被另一个线程中断，抛出该异常。</td> \n  </tr> \n  <tr> \n   <td> NoSuchFieldException</td> \n   <td> 请求的变量不存在</td> \n  </tr> \n  <tr> \n   <td> NoSuchMethodException</td> \n   <td> 请求的方法不存在</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2> 异常方法 </h2> \n<p> 下面的列表是Throwable 类的主要方法:</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> <strong>序号</strong></th> \n   <th> <strong>方法及说明</strong></th> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <strong>public String getMessage()</strong><br /> 返回关于发生的异常的详细信息。这个消息在Throwable 类的构造函数中初始化了。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <strong>public Throwable getCause()</strong><br /> 返回一个Throwable 对象代表异常原因。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <strong>public String toString()</strong><br /> 使用getMessage()的结果返回类的串级名字。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <strong>public void printStackTrace()</strong><br /> 打印toString()结果和栈层次到System.err，即错误输出流。</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> <strong>public StackTraceElement [] getStackTrace()</strong><br /> 返回一个包含堆栈层次的数组。下标为0的元素代表栈顶，最后一个元素代表方法调用堆栈的栈底。</td> \n  </tr> \n  <tr> \n   <td> 6</td> \n   <td> <strong>public Throwable fillInStackTrace()</strong><br /> 用当前的调用栈层次填充Throwable 对象栈层次，添加到栈层次任何先前信息中。</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2> 捕获异常</h2> \n<p> 使用try和catch关键字可以捕获异常。try/catch代码块放在异常可能发生的地方。 </p>\n<p>try/catch代码块中的代码称为保护代码，使用 try/catch的语法如下： </p> \n<pre>\r\ntry\r\n{\r\n   // 程序代码\r\n}catch(ExceptionName e1)\r\n{\r\n   //Catch 块\r\n}\r\n</pre> \n<p>Catch语句包含要捕获异常类型的声明。当保护代码块中发生一个异常时，try后面的catch块就会被检查。 </p>\n<p>如果发生的异常包含在catch块中，异常会被传递到该catch块，这和传递一个参数到方法是一样。 </p>\n<h3>实例</h3> \n<p>下面的例子中声明有两个元素的一个数组，当代码试图访问数组的第三个元素的时候就会抛出一个异常。</p> \n<pre>\r\n// 文件名 : ExcepTest.java\r\nimport java.io.*;\r\npublic class ExcepTest{\r\n\r\n   public static void main(String args[]){\r\n      try{\r\n         int a[] = new int[2];\r\n         System.out.println(&quot;Access element three :&quot; + a[3]);\r\n      }catch(ArrayIndexOutOfBoundsException e){\r\n         System.out.println(&quot;Exception thrown  :&quot; + e);\r\n      }\r\n      System.out.println(&quot;Out of the block&quot;);\r\n   }\r\n}\r\n</pre> \n<p>以上代码编译运行输出结果如下：</p> \n<pre>\r\nException thrown  :java.lang.ArrayIndexOutOfBoundsException: 3\r\nOut of the block\r\n</pre> \n<hr />\n<h2>多重捕获块</h2> \n<p> 一个try代码块后面跟随多个catch代码块的情况就叫多重捕获。 </p>\n<p>多重捕获块的语法如下所示：</p> \n<pre>\r\n try{\r\n    // 程序代码\r\n }catch(异常类型1 异常的变量名1){\r\n    // 程序代码\r\n }catch(异常类型2 异常的变量名2){\r\n    // 程序代码\r\n }catch(异常类型2 异常的变量名2){\r\n    // 程序代码\r\n }\r\n</pre> \n<p>上面的代码段包含了3个catch块。 </p>\n<p>可以在try语句后面添加任意数量的catch块。 </p>\n<p>如果保护代码中发生异常，异常被抛给第一个catch块。 </p>\n<p>如果抛出异常的数据类型与ExceptionType1匹配，它在这里就会被捕获。 </p>\n<p>如果不匹配，它会被传递给第二个catch块。 </p>\n<p>如此，直到异常被捕获或者通过所有的catch块。</p> \n<h3>实例</h3> \n<p> 该实例展示了怎么使用多重try/catch。 </p> \n<pre>\r\ntry\r\n{\r\n   file = new FileInputStream(fileName);\r\n   x = (byte) file.read();\r\n}catch(IOException i)\r\n{\r\n   i.printStackTrace();\r\n   return -1;\r\n}catch(FileNotFoundException f) //Not valid!\r\n{\r\n   f.printStackTrace();\r\n   return -1;\r\n}\r\n</pre> \n<hr /> \n<h2> throws/throw关键字： </h2> \n<p>如果一个方法没有捕获一个检查性异常，那么该方法必须使用throws 关键字来声明。throws关键字放在方法签名的尾部。 </p>\n<p>也可以使用throw关键字抛出一个异常，无论它是新实例化的还是刚捕获到的。 </p>\n<p>下面方法的声明抛出一个RemoteException异常：</p> \n<pre>\r\nimport java.io.*;\r\npublic class className\r\n{\r\n   public void deposit(double amount) throws RemoteException\r\n   {\r\n      // Method implementation\r\n      throw new RemoteException();\r\n   }\r\n   //Remainder of class definition\r\n}\r\n</pre> \n<p>一个方法可以声明抛出多个异常，多个异常之间用逗号隔开。 </p>\n<p>例如，下面的方法声明抛出RemoteException和InsufficientFundsException： </p> \n<pre>\r\nimport java.io.*;\r\npublic class className\r\n{\r\n   public void withdraw(double amount) throws RemoteException,\r\n                              InsufficientFundsException\r\n   {\r\n       // Method implementation\r\n   }\r\n   //Remainder of class definition\r\n}\r\n</pre> \n<hr /> \n<h2> finally关键字 </h2> \n<p>finally关键字用来创建在try代码块后面执行的代码块。 </p>\n<p>无论是否发生异常，finally代码块中的代码总会被执行。 </p>\n<p>在finally代码块中，可以运行清理类型等收尾善后性质的语句。 </p>\n<p>finally代码块出现在catch代码块最后，语法如下：</p> \n<pre>\r\n try{\r\n    // 程序代码\r\n }catch(异常类型1 异常的变量名1){\r\n    // 程序代码\r\n }catch(异常类型2 异常的变量名2){\r\n    // 程序代码\r\n }finally{\r\n    // 程序代码\r\n }\r\n </pre> \n<h3>实例</h3> \n<pre>\r\n public class ExcepTest{\r\n\r\n   public static void main(String args[]){\r\n      int a[] = new int[2];\r\n      try{\r\n         System.out.println(&quot;Access element three :&quot; + a[3]);\r\n      }catch(ArrayIndexOutOfBoundsException e){\r\n         System.out.println(&quot;Exception thrown  :&quot; + e);\r\n      }\r\n      finally{\r\n         a[0] = 6;\r\n         System.out.println(&quot;First element value: &quot; +a[0]);\r\n         System.out.println(&quot;The finally statement is executed&quot;);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nException thrown  :java.lang.ArrayIndexOutOfBoundsException: 3\r\nFirst element value: 6\r\nThe finally statement is executed\r\n</pre> \n<p>注意下面事项：</p> \n<ul> \n <li> catch不能独立于try存在。</li> \n <li> 在try/catch后面添加finally块并非强制性要求的。</li> \n <li> try代码后不能既没catch块也没finally块。</li> \n <li> try, catch, finally块之间不能添加任何代码。</li> \n</ul>\n<hr /> \n<h2>声明自定义异常</h2> \n<p>在Java中你可以自定义异常。编写自己的异常类时需要记住下面的几点。<br /> </p>\n<ul> \n <li> 所有异常都必须是Throwable的子类。</li> \n <li> 如果希望写一个检查性异常类，则需要继承Exception类。</li> \n <li> 如果你想写一个运行时异常类，那么需要继承RuntimeException 类。</li> \n</ul> \n<p>可以像下面这样定义自己的异常类：</p> \n<pre>\r\nclass MyException extends Exception{\r\n}\r\n</pre> \n<p> 只继承Exception 类来创建的异常类是检查性异常类。 </p>\n<p>下面的InsufficientFundsException类是用户定义的异常类，它继承自Exception。 </p>\n<p>一个异常类和其它任何类一样，包含有变量和方法。 </p> \n<h3>实例</h3> \n<pre>\r\n// 文件名InsufficientFundsException.java\r\nimport java.io.*;\r\n\r\npublic class InsufficientFundsException extends Exception\r\n{\r\n   private double amount;\r\n   public InsufficientFundsException(double amount)\r\n   {\r\n      this.amount = amount;\r\n   } \r\n   public double getAmount()\r\n   {\r\n      return amount;\r\n   }\r\n}\r\n</pre> \n<p>为了展示如何使用我们自定义的异常类， </p>\n<p>在下面的CheckingAccount 类中包含一个withdraw()方法抛出一个InsufficientFundsException异常。 </p> \n<pre>\r\n// 文件名称 CheckingAccount.java\r\nimport java.io.*;\r\n\r\npublic class CheckingAccount\r\n{\r\n   private double balance;\r\n   private int number;\r\n   public CheckingAccount(int number)\r\n   {\r\n      this.number = number;\r\n   }\r\n   public void deposit(double amount)\r\n   {\r\n      balance += amount;\r\n   }\r\n   public void withdraw(double amount) throws\r\n                              InsufficientFundsException\r\n   {\r\n      if(amount &lt;= balance)\r\n      {\r\n         balance -= amount;\r\n      }\r\n      else\r\n      {\r\n         double needs = amount - balance;\r\n         throw new InsufficientFundsException(needs);\r\n      }\r\n   }\r\n   public double getBalance()\r\n   {\r\n      return balance;\r\n   }\r\n   public int getNumber()\r\n   {\r\n      return number;\r\n   }\r\n}\r\n</pre> \n<p> 下面的BankDemo程序示范了如何调用CheckingAccount类的deposit() 和withdraw()方法。 </p> \n<pre>\r\n//文件名称 BankDemo.java\r\npublic class BankDemo\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n      CheckingAccount c = new CheckingAccount(101);\r\n      System.out.println(&quot;Depositing $500...&quot;);\r\n      c.deposit(500.00);\r\n      try\r\n      {\r\n         System.out.println(&quot;\\nWithdrawing $100...&quot;);\r\n         c.withdraw(100.00);\r\n         System.out.println(&quot;\\nWithdrawing $600...&quot;);\r\n         c.withdraw(600.00);\r\n      }catch(InsufficientFundsException e)\r\n      {\r\n         System.out.println(&quot;Sorry, but you are short $&quot;\r\n                                  + e.getAmount());\r\n         e.printStackTrace();\r\n      }\r\n    }\r\n}\r\n</pre> \n<p>编译上面三个文件，并运行程序BankDemo，得到结果如下所示： </p> \n<pre>\r\nDepositing $500...\r\n\r\nWithdrawing $100...\r\n\r\nWithdrawing $600...\r\nSorry, but you are short $200.0\r\nInsufficientFundsException\r\n        at CheckingAccount.withdraw(CheckingAccount.java:25)\r\n        at BankDemo.main(BankDemo.java:13)\r\n</pre> \n<hr /> \n<h2>通用异常</h2> \n<p>在Java中定义了两种类型的异常和错误。</p> \n<ul> \n <li> <strong>JVM(Java</strong><strong>虚拟机</strong><strong>)</strong><strong>异常：</strong>由JVM抛出的异常或错误。例如：NullPointerException类，ArrayIndexOutOfBoundsException类，ClassCastException类。</li> \n <li> <strong>程序级异常：</strong>由程序或者API程序抛出的异常。例如IllegalArgumentException类，IllegalStateException类。</li> \n</ul>', null, 'Java 异常处理|Exception类的层次|Java 内置异常类|异常方法|捕获异常|多重捕获块|throws/throw关键字：|finally关键字|声明自定义异常|通用异常|');
INSERT INTO `schoolcontent` VALUES ('306', '309', '<h1>Java 继承</h1> \n<p>继承是java面向对象编程技术的一块基石，因为它允许创建分等级层次的类。继承可以理解为一个对象从另一个对象获取属性的过程。 </p> \n<p>如果类A是类B的父类，而类B是类C的父类，我们也称C是A的子类，类C是从类A继承而来的。在Java中，类的继承是单一继承，也就是说，一个子类只能拥有一个父类 </p> \n<p>继承中最常使用的两个关键字是extends和implements。</p> \n<p>这两个关键字的使用决定了一个对象和另一个对象是否是IS-A(是一个)关系。</p> \n<p>通过使用这两个关键字，我们能实现一个对象获取另一个对象的属性。</p> \n<p>所有Java的类均是由java.lang.Object类继承而来的，所以Object是所有类的祖先类，而除了Object外，所有类必须有一个父类。 </p>\n<p> 通过过extends关键字可以申明一个类是继承另外一个类而来的，一般形式如下： </p>\n<pre>\r\n// A.java\r\npublic class A {\r\n    private int i;\r\n    protected int j;\r\n \r\n    public void func() {\r\n \r\n    }\r\n}\r\n \r\n// B.java\r\npublic class B extends A {\r\n}\r\n</pre> \n<p> 以上的代码片段说明，B由A继承而来的，B是A的子类。而A是Object的子类，这里可以不显示地声明。 </p>\n<p></p> 作为子类，B的实例拥有A所有的成员变量，但对于private的成员变量B却没有访问权限，这保障了A的封装性。\n<p></p> \n<hr />\n<h2>IS-A关系</h2> \n<p>IS-A就是说:一个对象是另一个对象的一个分类。</p> \n<p>下面是使用关键字extends实现继承。</p> \n<pre>\r\npublic class Animal{\r\n}\r\n\r\npublic class Mammal extends Animal{\r\n}\r\n\r\npublic class Reptile extends Animal{\r\n}\r\n\r\npublic class Dog extends Mammal{\r\n}\r\n</pre> \n<p>基于上面的例子，以下说法是正确的：</p> \n<ul> \n <li value=\"23\"> Animal类是Mammal类的父类。</li> \n <li value=\"23\"> Animal类是Reptile类的父类。</li> \n <li value=\"23\"> Mammal类和Reptile类是Animal类的子类。</li> \n <li value=\"23\"> Dog类既是Mammal类的子类又是Animal类的子类。</li> \n</ul> \n<p>分析以上示例中的IS-A关系，如下：</p> \n<ul> \n <li value=\"23\"> Mammal IS-A Animal</li> \n <li value=\"23\"> Reptile IS-A Animal</li> \n <li value=\"23\"> Dog IS-A Mammal</li> \n</ul> \n<p>因此 : Dog IS-A Animal</p> \n<p>通过使用关键字<strong>extends</strong>，子类可以继承父类所有的方法和属性，但是无法使用 private(私有) 的方法和属性。</p> \n<p>我们通过使用instanceof 操作符，能够确定Mammal IS-A Animal<br /></p> \n<h3>实例</h3> \n<pre>\r\npublic class Dog extends Mammal{\r\n\r\n   public static void main(String args[]){\r\n\r\n      Animal a = new Animal();\r\n      Mammal m = new Mammal();\r\n      Dog d = new Dog();\r\n\r\n      System.out.println(m instanceof Animal);\r\n      System.out.println(d instanceof Mammal);\r\n      System.out.println(d instanceof Animal);\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\ntrue\r\ntrue\r\ntrue\r\n</pre> \n<p>介绍完<strong>extends</strong>关键字之后，我们再来看下<strong>implements</strong>关键字是怎样使用来表示IS-A关系。</p> \n<p><strong>Implements</strong>关键字使用在类继承接口的情况下， 这种情况不能使用关键字<strong>extends</strong>。</p> \n<h3>实例</h3> \n<pre>\r\npublic interface Animal {}\r\n\r\npublic class Mammal implements Animal{\r\n}\r\n\r\npublic class Dog extends Mammal{\r\n}\r\n</pre> \n<hr /> \n<h2>instanceof 关键字</h2> \n<p>可以使用 <strong>instanceof</strong> 运算符来检验Mammal和dog对象是否是Animal类的一个实例。 </p> \n<pre>\r\ninterface Animal{}\r\n\r\nclass Mammal implements Animal{}\r\n\r\npublic class Dog extends Mammal{\r\n   public static void main(String args[]){\r\n\r\n      Mammal m = new Mammal();\r\n      Dog d = new Dog();\r\n\r\n      System.out.println(m instanceof Animal);\r\n      System.out.println(d instanceof Mammal);\r\n      System.out.println(d instanceof Animal);\r\n   }\r\n} \r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\ntrue\r\ntrue\r\ntrue\r\n</pre> \n<hr />\n<h2>HAS-A 关系</h2> \n<p> HAS-A代表类和它的成员之间的从属关系。这有助于代码的重用和减少代码的错误。</p> \n<h3> 例子</h3> \n<pre>\r\npublic class Vehicle{}\r\npublic class Speed{}\r\npublic class Van extends Vehicle{\r\n	private Speed sp;\r\n} \r\n</pre> \n<p> Van类和Speed类是HAS-A关系(Van有一个Speed)，这样就不用将Speed类的全部代码粘贴到Van类中了，并且Speed类也可以重复利用于多个应用程序。</p>\n<p> 在面向对象特性中，用户不必担心类的内部怎样实现。</p>\n<p> Van类将实现的细节对用户隐藏起来，因此，用户只需要知道怎样调用Van类来完成某一功能，而不必知道Van类是自己来做还是调用其他类来做这些工作。</p>\n<p> Java只支持单继承，也就是说，一个类不能继承多个类。</p>\n<p> 下面的做法是不合法的：</p> \n<pre>\r\npublic class extends Animal, Mammal{} \r\n</pre> \n<p>Java只支持单继承（继承基本类和抽象类），但是我们可以用接口来实现（多继承接口来实现）,脚本结构如：</p> \n<pre>\r\npublic class Apple extends Fruit implements Fruit1, Fruit2{}\r\n</pre> \n<p>一般我们继承基本类和抽象类用extends关键字，实现接口类的继承用implements关键字。</p>', null, 'Java 继承|IS-A关系|instanceof 关键字|HAS-A 关系|');
INSERT INTO `schoolcontent` VALUES ('307', '310', '<h1>Java 重写(Override)与重载(Overload)</h1> \n<hr /> \n<h2>重写(Override)</h2> \n<p> 重写是子类对父类的允许访问的方法的实现过程进行重新编写！返回值和形参都不能改变。即外壳不变，核心重写！ </p> \n<p>重写的好处在于子类可以根据需要，定义特定于自己的行为。</p>\n<p> 也就是说子类能够根据需要实现父类的方法。</p>\n<p> 在面向对象原则里，重写意味着可以重写任何现有方法。实例如下：</p> \n<pre>\r\nclass Animal{\r\n\r\n   public void move(){\r\n      System.out.println(&quot;动物可以移动&quot;);\r\n   }\r\n}\r\n\r\nclass Dog extends Animal{\r\n\r\n   public void move(){\r\n      System.out.println(&quot;狗可以跑和走&quot;);\r\n   }\r\n}\r\n\r\npublic class TestDog{\r\n\r\n   public static void main(String args[]){\r\n      Animal a = new Animal(); // Animal 对象\r\n      Animal b = new Dog(); // Dog 对象\r\n\r\n      a.move();// 执行 Animal 类的方法\r\n\r\n      b.move();//执行 Dog 类的方法\r\n   }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n动物可以移动\r\n狗可以跑和走\r\n</pre> \n<p>在上面的例子中可以看到，尽管b属于Animal类型，但是它运行的是Dog类的move方法。</p>\n<p> 这是由于在编译阶段，只是检查参数的引用类型。</p>\n<p> 然而在运行时，Java虚拟机(JVM)指定对象的类型并且运行该对象的方法。</p>\n<p> 因此在上面的例子中，之所以能编译成功，是因为Animal类中存在move方法，然而运行时，运行的是特定对象的方法。</p>\n<p> 思考以下例子：</p> \n<pre>\r\nclass Animal{\r\n\r\n   public void move(){\r\n      System.out.println(&quot;动物可以移动&quot;);\r\n   }\r\n}\r\n\r\nclass Dog extends Animal{\r\n\r\n   public void move(){\r\n      System.out.println(&quot;狗可以跑和走&quot;);\r\n   }\r\n   public void bark(){\r\n      System.out.println(&quot;狗可以吠叫&quot;);\r\n   }\r\n}\r\n\r\npublic class TestDog{\r\n\r\n   public static void main(String args[]){\r\n      Animal a = new Animal(); // Animal 对象\r\n      Animal b = new Dog(); // Dog 对象\r\n\r\n      a.move();// 执行 Animal 类的方法\r\n      b.move();//执行 Dog 类的方法\r\n      b.bark();\r\n   }\r\n}\r\n</pre>\n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nTestDog.java:30: cannot find symbol\r\nsymbol  : method bark()\r\nlocation: class Animal\r\n                b.bark();\r\n                 ^\r\n</pre> \n<p>该程序将抛出一个编译错误，因为b的引用类型Animal没有bark方法。</p> \n<hr /> \n<h2>方法的重写规则</h2> \n<ul> \n <li> 参数列表必须完全与被重写方法的相同；</li> \n <li> 返回类型必须完全与被重写方法的返回类型相同；</li> \n <li> 访问权限不能比父类中被重写的方法的访问权限更低。例如：如果父类的一个方法被声明为public，那么在子类中重写该方法就不能声明为protected。</li> \n <li> 父类的成员方法只能被它的子类重写。</li> \n <li> 声明为final的方法不能被重写。</li> \n <li> 声明为static的方法不能被重写，但是能够被再次声明。</li> \n <li> 子类和父类在同一个包中，那么子类可以重写父类所有方法，除了声明为private和final的方法。</li> \n <li> 子类和父类不在同一个包中，那么子类只能够重写父类的声明为public和protected的非final方法。</li> \n <li> 重写的方法能够抛出任何非强制异常，无论被重写的方法是否抛出异常。但是，重写的方法不能抛出新的强制性异常，或者比被重写方法声明的更广泛的强制性异常，反之则可以。</li> \n <li> 构造方法不能被重写。</li> \n <li>如果不能继承一个方法，则不能重写这个方法。</li> \n</ul> \n<hr />\n<h2>Super关键字的使用</h2> \n<p> 当需要在子类中调用父类的被重写方法时，要使用super关键字。 </p> \n<pre>\r\nclass Animal{\r\n\r\n   public void move(){\r\n      System.out.println(&quot;动物可以移动&quot;);\r\n   }\r\n}\r\n\r\nclass Dog extends Animal{\r\n\r\n   public void move(){\r\n      super.move(); // 应用super类的方法\r\n      System.out.println(&quot;狗可以跑和走&quot;);\r\n   }\r\n}\r\n\r\npublic class TestDog{\r\n\r\n   public static void main(String args[]){\r\n\r\n      Animal b = new Dog(); // Dog 对象\r\n      b.move(); //执行 Dog类的方法\r\n\r\n   }\r\n}\r\n</pre>\n<p>以上实例编译运行结果如下：</p> \n<pre>\r\n动物可以移动\r\n狗可以跑和走\r\n</pre>  \n<h2>重载(Overload)</h2> \n<p>重载(overloading) 是在一个类里面，方法名字相同，而参数不同。返回类型呢？可以相同也可以不同。</p> \n<p>每个重载的方法（或者构造函数）都必须有一个独一无二的参数类型列表。</p> \n<p>只能重载构造函数</p> \n<p>重载规则</p> \n<ul> \n <li>被重载的方法必须改变参数列表；</li> \n <li>被重载的方法可以改变返回类型；</li> \n <li>被重载的方法可以改变访问修饰符；</li> \n <li>被重载的方法可以声明新的或更广的检查异常；</li> \n <li>方法能够在同一个类中或者在一个子类中被重载。</li> \n</ul> \n<h3>实例</h3> \n<pre>\r\npublic class Overloading {\r\n \r\n	public int test(){\r\n		System.out.println(&quot;test1&quot;);\r\n		return 1;\r\n	}\r\n \r\n	public void test(int a){\r\n		System.out.println(&quot;test2&quot;);\r\n	}	\r\n \r\n	//以下两个参数类型顺序不同\r\n	public String test(int a,String s){\r\n		System.out.println(&quot;test3&quot;);\r\n		return &quot;returntest3&quot;;\r\n	}	\r\n \r\n	public String test(String s,int a){\r\n		System.out.println(&quot;test4&quot;);\r\n		return &quot;returntest4&quot;;\r\n	}	\r\n \r\n	public static void main(String[] args){\r\n		Overloading o = new Overloading();\r\n		System.out.println(o.test());\r\n		o.test(1);\r\n		System.out.println(o.test(1,&quot;test3&quot;));\r\n		System.out.println(o.test(&quot;test4&quot;,1));\r\n	}\r\n}\r\n</pre> \n<hr />\n<h2>重写与重载之间的区别</h2> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th width=\"72\"> 区别点 </th> \n   <th width=\"80\"> 重载方法 </th> \n   <th width=\"340\"> 重写方法 </th> \n  </tr> \n  <tr> \n   <td width=\"72\"> 参数列表 </td> \n   <td width=\"80\"> 必须修改 </td> \n   <td width=\"340\"> 一定不能修改 </td> \n  </tr> \n  <tr> \n   <td width=\"72\"> 返回类型 </td> \n   <td width=\"80\"> 可以修改 </td> \n   <td width=\"340\"> 一定不能修改 </td> \n  </tr> \n  <tr> \n   <td width=\"72\"> 异常 </td> \n   <td width=\"80\"> 可以修改 </td> \n   <td width=\"340\"> 可以减少或删除，一定不能抛出新的或者更广的异常 </td> \n  </tr> \n  <tr> \n   <td width=\"72\"> 访问 </td> \n   <td width=\"80\"> 可以修改 </td> \n   <td width=\"340\"> 一定不能做更严格的限制（可以降低限制） </td> \n  </tr> \n </tbody> \n</table>', null, 'Java 重写(Override)与重载(Overload)|重写(Override)|方法的重写规则|Super关键字的使用|重载(Overload)|重写与重载之间的区别|');
INSERT INTO `schoolcontent` VALUES ('308', '311', '<h1>Java 多态</h1> \n<hr /> \n<p>多态是同一个行为具有多个不同表现形式或形态的能力。 </p> \n<p>多态性是对象多种表现形式的体现。</p> \n<blockquote> \n <p>现实中，比如我们按下 F1 键这个动作： </p> \n <ul>\n  <li> 如果当前在 Flash 界面下弹出的就是 AS 3 的帮助文档；</li>\n  <li>如果当前在 Word 下弹出的就是 Word 帮助；</li>\n  <li>在 Windows 下弹出的就是 Windows 帮助和支持。</li>\n </ul>\n <p>同一个事件发生在不同的对象上会产生不同的结果。</p> \n</blockquote> \n<p>多态存在的三个必要条件:</p> \n<ul>\n <li>继承</li>\n <li>重写</li>\n <li>父类引用指向子类对象</li>\n</ul>\n<p> 比如：</p>\n<pre>Parent p = new Child();</pre> \n<p>当使用多态方式调用方法时，首先检查父类中是否有该方法，如果没有，则编译错误；如果有，再去调用子类的同名方法。</p> \n<p>多态的好处：可以使程序有良好的扩展，并可以对所有类的对象进行通用处理。</p> \n<p>以下是一个多态实例的演示，详细说明请看注释：</p> \n<pre>\r\npublic class Test {\r\n    public static void main(String[] args) {\r\n      show(new Cat());  // 以 Cat 对象调用 show 方法\r\n      show(new Dog());  // 以 Dog 对象调用 show 方法\r\n                \r\n      Animal a = new Cat();  // 向上转型  \r\n      a.eat();               // 调用的是 Cat 的 eat\r\n      Cat c = (Cat)a;        // 向下转型  \r\n      c.work();        // 调用的是 Cat 的 catchMouse\r\n  }  \r\n            \r\n    public static void show(Animal a)  {\r\n      a.eat();  \r\n        // 类型判断\r\n        if (a instanceof Cat)  {  // 猫做的事情 \r\n            Cat c = (Cat)a;  \r\n            c.work();  \r\n        } else if (a instanceof Dog) { // 狗做的事情 \r\n            Dog c = (Dog)a;  \r\n            c.work();  \r\n        }  \r\n    }  \r\n}\r\n\r\nabstract class Animal {  \r\n    abstract void eat();  \r\n}  \r\n  \r\nclass Cat extends Animal {  \r\n    public void eat() {  \r\n        System.out.println(&quot;吃鱼&quot;);  \r\n    }  \r\n    public void work() {  \r\n        System.out.println(&quot;抓老鼠&quot;);  \r\n    }  \r\n}  \r\n  \r\nclass Dog extends Animal {  \r\n    public void eat() {  \r\n        System.out.println(&quot;吃骨头&quot;);  \r\n    }  \r\n    public void work() {  \r\n        System.out.println(&quot;看家&quot;);  \r\n    }  \r\n}  \r\n</pre> \n<p>执行以上程序，输出结果为：</p> \n<pre>\r\n吃鱼\r\n抓老鼠\r\n吃骨头\r\n看家\r\n吃鱼\r\n抓老鼠\r\n</pre> \n<hr /> \n<h2>虚方法</h2> \n<p>我们将介绍在Java中，当设计类时，被重写的方法的行为怎样影响多态性。</p>\n<p> 我们已经讨论了方法的重写，也就是子类能够重写父类的方法。</p>\n<p> 当子类对象调用重写的方法时，调用的是子类的方法，而不是父类中被重写的方法。</p>\n<p> 要想调用父类中被重写的方法，则必须使用关键字super。</p> \n<pre>\r\n/* 文件名 : Employee.java */\r\npublic class Employee {\r\n   private String name;\r\n   private String address;\r\n   private int number;\r\n   public Employee(String name, String address, int number) {\r\n      System.out.println(&quot;Employee 构造函数&quot;);\r\n      this.name = name;\r\n      this.address = address;\r\n      this.number = number;\r\n   }\r\n   public void mailCheck() {\r\n      System.out.println(&quot;邮寄支票给： &quot; + this.name\r\n       + &quot; &quot; + this.address);\r\n   }\r\n   public String toString() {\r\n      return name + &quot; &quot; + address + &quot; &quot; + number;\r\n   }\r\n   public String getName() {\r\n      return name;\r\n   }\r\n   public String getAddress() {\r\n      return address;\r\n   }\r\n   public void setAddress(String newAddress) {\r\n      address = newAddress;\r\n   }\r\n   public int getNumber() {\r\n     return number;\r\n   }\r\n}\r\n</pre> \n<p>假设下面的类继承Employee类：</p> \n<pre>\r\n/* 文件名 : Salary.java */\r\n/* 文件名 : Salary.java */\r\npublic class Salary extends Employee\r\n{\r\n   private double salary; // 全年工资\r\n   public Salary(String name, String address, int number, double salary) {\r\n       super(name, address, number);\r\n       setSalary(salary);\r\n   }\r\n   public void mailCheck() {\r\n       System.out.println(&quot;Salary 类的 mailCheck 方法 &quot;);\r\n       System.out.println(&quot;邮寄支票给：&quot; + getName()\r\n       + &quot; ，工资为：&quot; + salary);\r\n   }\r\n   public double getSalary() {\r\n       return salary;\r\n   }\r\n   public void setSalary(double newSalary) {\r\n       if(newSalary &gt;= 0.0) {\r\n          salary = newSalary;\r\n       }\r\n   }\r\n   public double computePay() {\r\n      System.out.println(&quot;计算工资，付给：&quot; + getName());\r\n      return salary/52;\r\n   }\r\n}\r\n</pre> \n<p>现在我们仔细阅读下面的代码，尝试给出它的输出结果：</p> \n<pre>\r\n/* 文件名 : VirtualDemo.java */\r\npublic class VirtualDemo {\r\n   public static void main(String [] args) {\r\n      Salary s = new Salary(&quot;员工 A&quot;, &quot;北京&quot;, 3, 3600.00);\r\n      Employee e = new Salary(&quot;员工 B&quot;, &quot;上海&quot;, 2, 2400.00);\r\n      System.out.println(&quot;使用 Salary 的引用调用 mailCheck -- &quot;);\r\n      s.mailCheck();\r\n      System.out.println(&quot;\\n使用 Employee 的引用调用 mailCheck--&quot;);\r\n      e.mailCheck();\r\n    }\r\n}\r\n</pre> \n<p>以上实例编译运行结果如下：</p> \n<pre>\r\nEmployee 构造函数\r\nEmployee 构造函数\r\n使用 Salary 的引用调用 mailCheck -- \r\nSalary 类的 mailCheck 方法 \r\n邮寄支票给：员工 A ，工资为：3600.0\r\n\r\n使用 Employee 的引用调用 mailCheck--\r\nSalary 类的 mailCheck 方法 \r\n邮寄支票给：员工 B ，工资为：2400.0\r\n</pre> \n<h3>例子解析</h3> \n<ul>\n <li> <p>实例中，实例化了两个 Salary 对象：一个使用 Salary 引用 s，另一个使用 Employee 引用 e。</p></li>\n <li> <p> 当调用 s.mailCheck() 时，编译器在编译时发现 mailCheck() 在 Salary 类中，执行过程 JVM 就调用 Salary 类的 mailCheck()。</p></li>\n <li><p> 在调用s.mailCheck()时，Java虚拟机(JVM)调用Salary类的mailCheck()方法。</p> </li>\n <li> <p> 因为 e 是 Employee 的引用，所以调用 e 的 mailCheck() 方法时，编译器会去 Employee 类查找 mailCheck() 方法 。</p> </li>\n <li> <p> 在编译的时候，编译器使用 Employee 类中的 mailCheck() 方法验证该语句， 但是在运行的时候，Java虚拟机(JVM)调用的是 Salary 类中的mailCheck()方法。</p></li> \n</ul> \n<p> 以上整个过程被称为虚拟方法调用，该方法被称为虚拟方法。</p>\n<p> Java中所有的方法都能以这种方式表现，因此，重写的方法能在运行时调用，不管编译的时候源代码中引用变量是什么数据类型。</p>', null, 'Java 多态|虚方法|');
INSERT INTO `schoolcontent` VALUES ('309', '312', '<h1>Java 抽象类</h1> \n<hr /> \n<p>在面向对象的概念中，所有的对象都是通过类来描绘的，但是反过来，并不是所有的类都是用来描绘对象的，如果一个类中没有包含足够的信息来描绘一个具体的对象，这样的类就是抽象类。 </p> \n<p>抽象类除了不能实例化对象之外，类的其它功能依然存在，成员变量、成员方法和构造方法的访问方式和普通类一样。</p> \n<p>由于抽象类不能实例化对象，所以抽象类必须被继承，才能被使用。也是因为这个原因，通常在设计阶段决定要不要设计抽象类。</p> \n<p>父类包含了子类集合的常见的方法，但是由于父类本身是抽象的，所以不能使用这些方法。</p> \n<hr />\n<h2>抽象类</h2> \n<p>在Java语言中使用abstract class来定义抽象类。如下实例：</p> \n<pre>\r\n/* 文件名 : Employee.java */\r\npublic abstract class Employee\r\n{\r\n   private String name;\r\n   private String address;\r\n   private int number;\r\n   public Employee(String name, String address, int number)\r\n   {\r\n      System.out.println(&quot;Constructing an Employee&quot;);\r\n      this.name = name;\r\n      this.address = address;\r\n      this.number = number;\r\n   }\r\n   public double computePay()\r\n   {\r\n     System.out.println(&quot;Inside Employee computePay&quot;);\r\n     return 0.0;\r\n   }\r\n   public void mailCheck()\r\n   {\r\n      System.out.println(&quot;Mailing a check to &quot; + this.name\r\n       + &quot; &quot; + this.address);\r\n   }\r\n   public String toString()\r\n   {\r\n      return name + &quot; &quot; + address + &quot; &quot; + number;\r\n   }\r\n   public String getName()\r\n   {\r\n      return name;\r\n   }\r\n   public String getAddress()\r\n   {\r\n      return address;\r\n   }\r\n   public void setAddress(String newAddress)\r\n   {\r\n      address = newAddress;\r\n   }\r\n   public int getNumber()\r\n   {\r\n     return number;\r\n   }\r\n}\r\n</pre> \n<p>注意到该Employee类没有什么不同，尽管该类是抽象类，但是它仍然有3个成员变量，7个成员方法和1个构造方法。 现在如果你尝试如下的例子：</p> \n<pre>\r\n/* 文件名 : AbstractDemo.java */\r\npublic class AbstractDemo\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n      /* 以下是不允许的，会引发错误 */\r\n      Employee e = new Employee(&quot;George W.&quot;, &quot;Houston, TX&quot;, 43);\r\n\r\n      System.out.println(&quot;\\n Call mailCheck using Employee reference--&quot;);\r\n      e.mailCheck();\r\n    }\r\n}\r\n</pre> \n<p>当你尝试编译AbstractDemo类时，会产生如下错误：</p> \n<pre>\r\nEmployee.java:46: Employee is abstract; cannot be instantiated\r\n      Employee e = new Employee(&quot;George W.&quot;, &quot;Houston, TX&quot;, 43);\r\n                   ^\r\n1 error\r\n</pre> \n<hr /> \n<h2>继承抽象类</h2> \n<p>我们能通过一般的方法继承Employee类：</p> \n<pre>\r\n/* 文件名 : Salary.java */\r\npublic class Salary extends Employee\r\n{\r\n   private double salary; //Annual salary\r\n   public Salary(String name, String address, int number, double\r\n      salary)\r\n   {\r\n       super(name, address, number);\r\n       setSalary(salary);\r\n   }\r\n   public void mailCheck()\r\n   {\r\n       System.out.println(&quot;Within mailCheck of Salary class &quot;);\r\n       System.out.println(&quot;Mailing check to &quot; + getName()\r\n       + &quot; with salary &quot; + salary);\r\n   }\r\n   public double getSalary()\r\n   {\r\n       return salary;\r\n   }\r\n   public void setSalary(double newSalary)\r\n   {\r\n       if(newSalary &gt;= 0.0)\r\n       {\r\n          salary = newSalary;\r\n       }\r\n   }\r\n   public double computePay()\r\n   {\r\n      System.out.println(&quot;Computing salary pay for &quot; + getName());\r\n      return salary/52;\r\n   }\r\n}\r\n</pre> \n<p>尽管我们不能实例化一个Employee类的对象，但是如果我们实例化一个Salary类对象，该对象将从Employee类继承3个成员变量和7个成员方法。</p> \n<pre>\r\n/* 文件名 : AbstractDemo.java */\r\npublic class AbstractDemo\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n      Salary s = new Salary(&quot;Mohd Mohtashim&quot;, &quot;Ambehta, UP&quot;, 3, 3600.00);\r\n      Employee e = new Salary(&quot;John Adams&quot;, &quot;Boston, MA&quot;, 2, 2400.00);\r\n\r\n      System.out.println(&quot;Call mailCheck using Salary reference --&quot;);\r\n      s.mailCheck();\r\n\r\n      System.out.println(&quot;\\n Call mailCheck using Employee reference--&quot;);\r\n      e.mailCheck();\r\n    }\r\n}\r\n</pre> \n<p>以上程序编译运行结果如下：</p> \n<pre>\r\nConstructing an Employee\r\nConstructing an Employee\r\nCall mailCheck using  Salary reference --\r\nWithin mailCheck of Salary class\r\nMailing check to Mohd Mohtashim with salary 3600.0\r\n\r\nCall mailCheck using Employee reference--\r\nWithin mailCheck of Salary class\r\nMailing check to John Adams with salary 2400.\r\n</pre> \n<hr /> \n<h2>抽象方法</h2> \n<p> 如果你想设计这样一个类，该类包含一个特别的成员方法，该方法的具体实现由它的子类确定，那么你可以在父类中声明该方法为抽象方法。</p>\n<p> Abstract关键字同样可以用来声明抽象方法，抽象方法只包含一个方法名，而没有方法体。</p>\n<p> 抽象方法没有定义，方法名后面直接跟一个分号，而不是花括号。</p> \n<pre>\r\npublic abstract class Employee\r\n{\r\n   private String name;\r\n   private String address;\r\n   private int number;\r\n   \r\n   public abstract double computePay();\r\n   \r\n   //其余代码\r\n}\r\n</pre> \n<p>声明抽象方法会造成以下两个结果：</p> \n<ul> \n <li value=\"23\"> 如果一个类包含抽象方法，那么该类必须是抽象类。</li> \n <li value=\"23\"> 任何子类必须重写父类的抽象方法，或者声明自身为抽象类。</li> \n</ul> \n<p>继承抽象方法的子类必须重写该方法。否则，该子类也必须声明为抽象类。最终，必须有子类实现该抽象方法，否则，从最初的父类到最终的子类都不能用来实例化对象。</p> \n<p>如果Salary类继承了Employee类，那么它必须实现computePay()方法：</p> \n<pre>\r\n/* 文件名 : Salary.java */\r\npublic class Salary extends Employee\r\n{\r\n   private double salary; // Annual salary\r\n  \r\n   public double computePay()\r\n   {\r\n      System.out.println(&quot;Computing salary pay for &quot; + getName());\r\n      return salary/52;\r\n   }\r\n\r\n   //其余代码\r\n}\r\n</pre>', null, 'Java 抽象类|抽象类|继承抽象类|抽象方法|');
INSERT INTO `schoolcontent` VALUES ('310', '313', '<h1>Java 封装</h1> \n<hr /> \n<p>在面向对象程式设计方法中，封装（英语：Encapsulation）是指，一种将抽象性函式接口的实作细节部份包装、隐藏起来的方法。 </p> \n<p>封装可以被认为是一个保护屏障，防止该类的代码和数据被外部类定义的代码随机访问。</p>\n<p> 要访问该类的代码和数据，必须通过严格的接口控制。</p>\n<p> 封装最主要的功能在于我们能修改自己的实现代码，而不用修改那些调用我们代码的程序片段。</p>\n<p> 适当的封装可以让程式码更容易理解与维护，也加强了程式码的安全性。</p> \n<h3>实例</h3> \n<p>让我们来看一个java封装类的例子：</p> \n<pre>\r\n/* 文件名: EncapTest.java */\r\npublic class EncapTest{\r\n\r\n   private String name;\r\n   private String idNum;\r\n   private int age;\r\n\r\n   public int getAge(){\r\n      return age;\r\n   }\r\n\r\n   public String getName(){\r\n      return name;\r\n   }\r\n\r\n   public String getIdNum(){\r\n      return idNum;\r\n   }\r\n\r\n   public void setAge( int newAge){\r\n      age = newAge;\r\n   }\r\n\r\n   public void setName(String newName){\r\n      name = newName;\r\n   }\r\n\r\n   public void setIdNum( String newId){\r\n      idNum = newId;\r\n   }\r\n}\r\n</pre> \n<p>以上实例中public方法是外部类访问该类成员变量的入口。</p>\n<p> 通常情况下，这些方法被称为getter和setter方法。</p>\n<p> 因此，任何要访问类中私有成员变量的类都要通过这些getter和setter方法。</p>\n<p> 通过如下的例子说明EncapTest类的变量怎样被访问：</p> \n<pre>\r\n/* F文件名 : RunEncap.java */\r\npublic class RunEncap{\r\n\r\n   public static void main(String args[]){\r\n      EncapTest encap = new EncapTest();\r\n      encap.setName(&quot;James&quot;);\r\n      encap.setAge(20);\r\n      encap.setIdNum(&quot;12343ms&quot;);\r\n\r\n      System.out.print(&quot;Name : &quot; + encap.getName()+ \r\n                             &quot; Age : &quot;+ encap.getAge());\r\n    }\r\n}\r\n</pre> \n<p>以上代码编译运行结果如下:</p> \n<pre>\r\nName : James Age : 20\r\n</pre>', null, 'Java 封装|');
INSERT INTO `schoolcontent` VALUES ('311', '314', '<h1>Java 接口</h1> \n<hr /> \n<p>接口（英文：Interface），在JAVA编程语言中是一个抽象类型，是抽象方法的集合，接口通常以interface来声明。一个类通过继承接口的方式，从而来继承接口的抽象方法。</p> \n<p>接口并不是类，编写接口的方式和类很相似，但是它们属于不同的概念。类描述对象的属性和方法。接口则包含类要实现的方法。</p> \n<p>除非实现接口的类是抽象类，否则该类要定义接口中的所有方法。</p> \n<p>接口无法被实例化，但是可以被实现。一个实现接口的类，必须实现接口内所描述的所有方法，否则就必须声明为抽象类。另外，在Java中，接口类型可用来声明一个变量，他们可以成为一个空指针，或是被绑定在一个以此接口实现的对象。</p> \n<p>接口与类相似点：</p> \n<ul> \n <li> 一个接口可以有多个方法。</li> \n <li> 接口文件保存在.java结尾的文件中，文件名使用接口名。</li> \n <li> 接口的字节码文件保存在.class结尾的文件中。</li> \n <li> 接口相应的字节码文件必须在与包名称相匹配的目录结构中。<span id=\"cke_bm_87E\" style=\"display: none;\">&nbsp;</span></li> \n</ul> 接口与类的区别：\n<br /> \n<ul> \n <li> 接口不能用于实例化对象。</li> \n <li> 接口没有构造方法。</li> \n <li> 接口中所有的方法必须是抽象方法。</li> \n <li> 接口不能包含成员变量，除了static和final变量。</li> \n <li> 接口不是被类继承了，而是要被类实现。</li> \n <li> 接口支持多重继承。</li> \n</ul> \n<hr />\n<h2>接口的声明</h2> \n<p>接口的声明语法格式如下：</p> \n<pre>\r\n[可见度] interface 接口名称 [extends 其他的类名] {\r\n        // 声明变量\r\n        // 抽象方法\r\n}\r\n</pre> \n<p>Interface关键字用来声明一个接口。下面是接口声明的一个简单例子。</p> \n<pre>\r\n/* 文件名 : NameOfInterface.java */\r\nimport java.lang.*;\r\n//引入包\r\n\r\npublic interface NameOfInterface\r\n{\r\n   //任何类型 final, static 字段\r\n   //抽象方法\r\n}\r\n</pre> \n<p></p>接口有以下特性：\n<p></p> \n<ul> \n <li> 接口是隐式抽象的，当声明一个接口的时候，不必使用<strong>abstract</strong>关键字。</li> \n <li> 接口中每一个方法也是隐式抽象的，声明时同样不需要<strong>abstract</strong>关键子。</li> \n <li> 接口中的方法都是公有的。</li> \n</ul> \n<h3>实例</h3> \n<pre>\r\n/* 文件名 : Animal.java */\r\ninterface Animal {\r\n\r\n   public void eat();\r\n   public void travel();\r\n}\r\n</pre> \n<hr />\n<h2>接口的实现</h2> \n<p>当类实现接口的时候，类要实现接口中所有的方法。否则，类必须声明为抽象的类。</p> \n<p>类使用implements关键字实现接口。在类声明中，Implements关键字放在class声明后面。</p> \n<p>实现一个接口的语法，可以使用这个公式：</p> \n<pre>\r\n... implements 接口名称[, 其他接口, 其他接口..., ...] ...\r\n</pre> \n<h3>实例</h3> \n<pre>\r\n/* 文件名 : MammalInt.java */\r\npublic class MammalInt implements Animal{\r\n\r\n   public void eat(){\r\n      System.out.println(&quot;Mammal eats&quot;);\r\n   }\r\n\r\n   public void travel(){\r\n      System.out.println(&quot;Mammal travels&quot;);\r\n   } \r\n\r\n   public int noOfLegs(){\r\n      return 0;\r\n   }\r\n\r\n   public static void main(String args[]){\r\n      MammalInt m = new MammalInt();\r\n      m.eat();\r\n      m.travel();\r\n   }\r\n} \r\n</pre> \n<p>以上实例编译运行结果如下:</p> \n<pre>\r\nMammal eats\r\nMammal travels\r\n</pre> \n<p>重写接口中声明的方法时，需要注意以下规则：</p> \n<ul> \n <li> 类在实现接口的方法时，不能抛出强制性异常，只能在接口中，或者继承接口的抽象类中抛出该强制性异常。</li> \n <li> 类在重写方法时要保持一致的方法名，并且应该保持相同或者相兼容的返回值类型。</li> \n <li> 如果实现接口的类是抽象类，那么就没必要实现该接口的方法。</li> \n</ul> \n<p>在实现接口的时候，也要注意一些规则：</p> \n<ul> \n <li> 一个类可以同时实现多个接口。</li> \n <li> 一个类只能继承一个类，但是能实现多个接口。</li> \n <li> 一个接口能继承另一个接口，这和类之间的继承比较相似。</li> \n</ul>\n<hr /> \n<h2> 接口的继承</h2> \n<p>一个接口能继承另一个接口，和类之间的继承方式比较相似。接口的继承使用extends关键字，子接口继承父接口的方法。</p> \n<p>下面的Sports接口被Hockey和Football接口继承：</p>\n<p> </p>\n<pre>\r\n// 文件名: Sports.java\r\npublic interface Sports\r\n{\r\n   public void setHomeTeam(String name);\r\n   public void setVisitingTeam(String name);\r\n}\r\n\r\n// 文件名: Football.java\r\npublic interface Football extends Sports\r\n{\r\n   public void homeTeamScored(int points);\r\n   public void visitingTeamScored(int points);\r\n   public void endOfQuarter(int quarter);\r\n}\r\n\r\n// 文件名: Hockey.java\r\npublic interface Hockey extends Sports\r\n{\r\n   public void homeGoalScored();\r\n   public void visitingGoalScored();\r\n   public void endOfPeriod(int period);\r\n   public void overtimePeriod(int ot);\r\n}\r\n</pre> \n<p>Hockey接口自己声明了四个方法，从Sports接口继承了两个方法，这样，实现Hockey接口的类需要实现六个方法。</p>\n<p> 相似的，实现Football接口的类需要实现五个方法，其中两个来自于Sports接口。 </p>\n<hr /> \n<h2>接口的多重继承</h2> \n<p>在Java中，类的多重继承是不合法，但接口允许多重继承，。</p> \n<p>在接口的多重继承中extends关键字只需要使用一次，在其后跟着继承接口。 如下所示：</p> \n<pre>\r\npublic interface Hockey extends Sports, Event\r\n</pre> \n<p>以上的程序片段是合法定义的子接口，与类不同的是，接口允许多重继承，而 Sports及 Event 可能定义或是继承相同的方法 </p> \n<hr />\n<h2> 标记接口</h2> \n<p>最常用的继承接口是没有包含任何方法的接口。</p> \n<p>标识接口是没有任何方法和属性的接口.它仅仅表明它的类属于一个特定的类型,供其他代码来测试允许做一些事情。</p> \n<p>标识接口作用：简单形象的说就是给某个对象打个标（盖个戳），使对象拥有某个或某些特权。</p> \n<p>例如：java.awt.event包中的MouseListener接口继承的java.util.EventListener接口定义如下：</p> \n<pre>\r\npackage java.util;\r\npublic interface EventListener\r\n{}\r\n</pre> \n<p>没有任何方法的接口被称为标记接口。标记接口主要用于以下两种目的： </p> \n<ul>\n <li><strong> 建立一个公共的父接口：</strong><p>正如EventListener接口，这是由几十个其他接口扩展的Java API，你可以使用一个标记接口来建立一组接口的父接口。例如：当一个接口继承了EventListener接口，Java虚拟机(JVM)就知道该接口将要被用于一个事件的代理方案。 </p></li>\n <li><strong>向一个类添加数据类型：</strong><p>这种情况是标记接口最初的目的，实现标记接口的类不需要定义任何接口方法(因为标记接口根本就没有方法)，但是该类通过多态性变成一个接口类型。</p></li>\n</ul>', null, 'Java 接口|接口的声明|接口的实现|接口的继承|接口的多重继承|标记接口|');
INSERT INTO `schoolcontent` VALUES ('312', '315', '<h1>Java 包(package)</h1> \n<p>为了更好地组织类，Java提供了包机制，用于区别类名的命名空间。</p> \n<p><strong>包的作用</strong></p> \n<ul>\n <li> 1 把功能相似或相关的类或接口组织在同一个包中，方便类的查找和使用。</li>\n <li> 2 如同文件夹一样，包也采用了树形目录的存储方式。同一个包中的类名字是不同的，不同的包中的类的名字是可以相同的，当同时调用两个不同包中相同类名的类时，应该加上包名加以区别。因此，包可以避免名字冲突。 </li>\n <li>3 包也限定了访问权限，拥有包访问权限的类才能访问某个包中的类。</li>\n</ul> \n<p>Java使用包（package）这种机制是为了防止命名冲突，访问控制，提供搜索和定位类（class）、接口、枚举（enumerations）和注释（annotation）等。 </p> \n<p>包语句的语法格式为：</p> \n<pre>\r\npackage pkg1[．pkg2[．pkg3…]];\r\n</pre> \n<p>例如,一个Something.java 文件它的内容 </p> \n<pre>\r\npackage net.java.util\r\npublic class Something{\r\n   ...\r\n}\r\n</pre> \n<p>那么它的路径应该是 net/java/util/Something.java 这样保存的。 package(包)的作用是把不同的java程序分类保存，更方便的被其他java程序调用。</p> \n<p>一个包（package）可以定义为一组相互联系的类型（类、接口、枚举和注释），为这些类型提供访问保护和命名空间管理的功能。</p> \n<p>以下是一些Java中的包：</p> \n<ul>\n <li>java.lang-打包基础的类</li>\n <li> java.io-包含输入输出功能的函数</li>\n</ul> \n<p>开发者可以自己把一组类和接口等打包，并定义自己的package。而且在实际开发中这样做是值得提倡的，当你自己完成类的实现之后，将相关的类分组，可以让其他的编程者更容易地确定哪些类、接口、枚举和注释等是相关的。 </p>\n<p>由于package创建了新的命名空间（namespace），所以不会跟其他package中的任何名字产生命名冲突。使用包这种机制，更容易实现访问控制，并且让定位相关类更加简单。 </p> \n<hr /> \n<h2>创建包</h2> \n<p>创建package的时候，你需要为这个package取一个合适的名字。之后，如果其他的一个源文件包含了这个包提供的类、接口、枚举或者注释类型的时候，都必须将这个package的声明放在这个源文件的开头。 </p>\n<p>包声明应该在源文件的第一行，每个源文件只能有一个包声明，这个文件中的每个类型都应用于它。 </p>\n<p>如果一个源文件中没有使用包声明，那么其中的类，函数，枚举，注释等将被放在一个无名的包（unnamed package）中。</p> \n<h3>例子</h3> \n<p>让我们来看一个例子，这个例子创建了一个叫做animals的包。通常使用小写的字母来命名避免与类、接口名字的冲突。 </p>\n<p>在animals包中加入一个接口（interface）：</p> \n<pre>\r\n/* 文件名: Animal.java */\r\npackage animals;\r\n\r\ninterface Animal {\r\n   public void eat();\r\n   public void travel();\r\n}\r\n</pre> \n<p>接下来，在同一个包中加入该接口的实现：</p> \n<pre>\r\npackage animals;\r\n\r\n/* 文件名 : MammalInt.java */\r\npublic class MammalInt implements Animal{\r\n\r\n   public void eat(){\r\n      System.out.println(&quot;Mammal eats&quot;);\r\n   }\r\n\r\n   public void travel(){\r\n      System.out.println(&quot;Mammal travels&quot;);\r\n   } \r\n\r\n   public int noOfLegs(){\r\n      return 0;\r\n   }\r\n\r\n   public static void main(String args[]){\r\n      MammalInt m = new MammalInt();\r\n      m.eat();\r\n      m.travel();\r\n   }\r\n} \r\n</pre> \n<p>然后，编译这两个文件，并把他们放在一个叫做animals的子目录中。 用下面的命令来运行：</p> \n<pre>\r\n$ mkdir animals\r\n$ cp Animal.class  MammalInt.class animals\r\n$ java animals/MammalInt\r\nMammal eats\r\nMammal travel\r\n</pre> \n<hr />\n<h2>import关键字</h2> \n<p>为了能够使用某一个包的成员，我们需要在 Java 程序中明确导入该包。使用&quot;import&quot;语句可完成此功能。 </p>\n<p>在 java 源文件中 import 语句应位于 package 语句之后，所有类的定义之前，可以没有，也可以有多条，其语法格式为：</p> \n<pre>\r\nimport package1[.package2…].(classname|*);\r\n</pre> \n<p>如果在一个包中，一个类想要使用本包中的另一个类，那么该包名可以省略。 </p>\n<h3>例子</h3>\n<p> 下面的payroll包已经包含了Employee类，接下来向payroll包中添加一个Boss类。Boss类引用Employee类的时候可以不用使用payroll前缀，Boss类的实例如下。 </p> \n<pre>\r\npackage payroll;\r\n\r\npublic class Boss\r\n{\r\n   public void payEmployee(Employee e)\r\n   {\r\n      e.mailCheck();\r\n   }\r\n}\r\n</pre> \n<p>如果Boss类不在payroll包中又会怎样？Boss类必须使用下面几种方法之一来引用其他包中的类 </p>\n<p>使用类全名描述，例如：</p> \n<pre>\r\npayroll.Employee\r\n</pre> \n<p>用import关键字引入，使用通配符&quot;*&quot;</p> \n<pre>\r\nimport payroll.*;\r\n</pre> \n<p> 使用import关键字引入Employee类</p> \n<pre>\r\nimport payroll.Employee;\r\n</pre> \n<p><strong> 注意：</strong> </p>\n<p> 类文件中可以包含任意数量的import声明。import声明必须在包声明之后，类声明之前。 </p> \n<hr /> \n<h2> package的目录结构 </h2> \n<p> 类放在包中会有两种主要的结果：</p> \n<ul> \n <li> 包名成为类名的一部分，正如我们前面讨论的一样。</li> \n <li> 包名必须与相应的字节码所在的目录结构相吻合。</li> \n</ul> \n<p>下面是管理你自己java中文件的一种简单方式：</p> \n<p>将类、接口等类型的源码放在一个文本中，这个文件的名字就是这个类型的名字，并以.java作为扩展名。例如：</p> \n<pre>\r\n// 文件名 :  Car.java\r\n\r\npackage vehicle;\r\n\r\npublic class Car {\r\n   // 类实现  \r\n}\r\n</pre> \n<p>接下来，把源文件放在一个目录中，这个目录要对应类所在包的名字。</p> \n<pre>\r\n....\\vehicle\\Car.java\r\n</pre> \n<p>现在，正确的类名和路径将会是如下样子：</p> \n<ul class=\"list\"> \n <li><p>类名 -&gt; vehicle.Car</p></li> \n <li><p>路径名 -&gt; vehicle\\Car.java (in windows)</p></li> \n</ul> \n<p> 通常，一个公司使用它互联网域名的颠倒形式来作为它的包名.例如：互联网域名是apple.com，所有的包名都以com.apple开头。包名中的每一个部分对应一个子目录。 </p>\n<p>例如：这个公司有一个com.apple.computers的包，这个包包含一个叫做Dell.java的源文件，那么相应的，应该有如下面的一连串子目录： </p> \n<pre>\r\n....\\com\\apple\\computers\\Dell.java\r\n</pre> \n<p>编译的时候，编译器为包中定义的每个类、接口等类型各创建一个不同的输出文件，输出文件的名字就是这个类型的名字，并加上.class作为扩展后缀。 例如：</p> \n<pre>\r\n// 文件名: Dell.java\r\n\r\npackage com.apple.computers;\r\npublic class Dell{\r\n      \r\n}\r\nclass Ups{\r\n      \r\n}\r\n</pre> \n<p> 现在，我们用-d选项来编译这个文件，如下： </p> \n<pre>\r\n$javac -d . Dell.java\r\n</pre>\n<p>这样会像下面这样放置编译了的文件： </p> \n<pre>\r\n.\\com\\apple\\computers\\Dell.class.\\com\\apple\\computers\\Ups.class\r\n</pre> \n<p>你可以像下面这样来导入所有 \\com\\apple\\computers\\中定义的类、接口等： </p> \n<pre>\r\nimport com.apple.computers.*;\r\n</pre>\n<p> 编译之后的.class文件应该和.java源文件一样，它们放置的目录应该跟包的名字对应起来。但是，并不要求.class文件的路径跟相应的.java的路径一样。你可以分开来安排源码和类的目录。 </p> \n<pre>\r\n&lt;path-one&gt;\\sources\\com\\apple\\computers\\Dell.java\r\n&lt;path-two&gt;\\classes\\com\\apple\\computers\\Dell.class\r\n</pre> \n<p>这样，你可以将你的类目录分享给其他的编程人员，而不用透露自己的源码。用这种方法管理源码和类文件可以让编译器和java虚拟机（JVM）可以找到你程序中使用的所有类型。</p>\n<p> 类目录的绝对路径叫做class path。设置在系统变量CLASSPATH中。编译器和java虚拟机通过将package名字加到class path后来构造.class文件的路径。</p>\n<p> &lt;path- two&gt;\\classes是class path，package名字是com.apple.computers,而编译器和JVM会在 &lt;path-two&gt;\\classes\\com\\apple\\compters中找.class文件。</p>\n<p> 一个class path可能会包含好几个路径。多路径应该用分隔符分开。默认情况下，编译器和JVM查找当前目录。JAR文件按包含Java平台相关的类，所以他们的目录默认放在了class path中。</p> \n<hr /> \n<h2>设置CLASSPATH系统变量</h2> \n<p>用下面的命令显示当前的CLASSPATH变量：</p> \n<ul> \n <li> Windows平台（DOS 命令行下）-&gt; C:\\&gt; set CLASSPATH</li> \n <li> UNIX平台（Bourne shell下）-&gt; % echo $CLASSPATH</li> \n</ul> 删除当前CLASSPATH变量内容：\n<br /> \n<ul> \n <li> Windows平台（DOS 命令行下）-&gt; C:\\&gt; set CLASSPATH=</li> \n <li> UNIX平台（Bourne shell下）-&gt; % unset CLASSPATH; export CLASSPATH</li> \n</ul> \n<p>设置CLASSPATH变量:</p> \n<ul> \n <li> Windows平台（DOS 命令行下）-&gt; set CLASSPATH=C:\\users\\jack\\java\\classes</li> \n <li> UNIX平台（Bourne shell下）-&gt; % CLASSPATH=/home/jack/java/classes; export CLASSPATH</li> \n</ul>', null, 'Java 包(package)|创建包|import关键字|package的目录结构|设置CLASSPATH系统变量|');
INSERT INTO `schoolcontent` VALUES ('313', '316', '<h1>Java 数据结构</h1> \n<p>Java工具包提供了强大的数据结构。在Java中的数据结构主要包括以下几种接口和类：</p> \n<ul> \n <li> 枚举（Enumeration）</li> \n <li> 位集合（BitSet）</li> \n <li> 向量（Vector）</li> \n <li> 栈（Stack）</li> \n <li> 字典（Dictionary）</li> \n <li> 哈希表（Hashtable）</li> \n <li> 属性（Properties）</li> \n</ul> \n<p>以上这些类是传统遗留的，在Java2中引入了一种新的框架-集合框架(Collection)，我们后面再讨论。</p> \n<hr /> \n<h2> 枚举（Enumeration）</h2> \n<p>枚举（Enumeration）接口虽然它本身不属于数据结构,但它在其他数据结构的范畴里应用很广。 枚举（The Enumeration）接口定义了一种从数据结构中取回连续元素的方式。 </p>\n<p>例如，枚举定义了一个叫nextElement 的方法，该方法用来得到一个包含多元素的数据结构的下一个元素。 </p>\n<p>关于枚举接口的更多信息，<a href=\"http://www.runoob.com/java/java-enumeration-interface.html\" target=\"_blank\">请参见枚举（Enumeration）</a>。</p> \n<hr /> \n<h2> 位集合（BitSet）</h2> \n<p> 位集合类实现了一组可以单独设置和清除的位或标志。</p>\n<p> 该类在处理一组布尔值的时候非常有用，你只需要给每个值赋值一&quot;位&quot;，然后对位进行适当的设置或清除，就可以对布尔值进行操作了。</p>\n<p> 关于该类的更多信息，<a href=\"http://www.runoob.com/java/java-bitset-class.html\" target=\"_blank\">请参见位集合（BitSet）</a>。</p> \n<hr /> \n<h2> 向量（Vector）</h2> \n<p>向量（Vector）类和传统数组非常相似，但是Vector的大小能根据需要动态的变化。</p>\n<p> 和数组一样，Vector对象的元素也能通过索引访问。</p>\n<p> 使用Vector类最主要的好处就是在创建对象的时候不必给对象指定大小，它的大小会根据需要动态的变化。</p>\n<p> 关于该类的更多信息，<a href=\"http://www.runoob.com/java/java-vector-class.html\" target=\"_blank\">请参见向量(Vector)</a></p> \n<hr /> \n<h2> 栈（Stack）</h2> \n<p>栈（Stack）实现了一个后进先出（LIFO）的数据结构。</p>\n<p> 你可以把栈理解为对象的垂直分布的栈，当你添加一个新元素时，就将新元素放在其他元素的顶部。</p>\n<p> 当你从栈中取元素的时候，就从栈顶取一个元素。换句话说，最后进栈的元素最先被取出。</p>\n<p> 关于该类的更多信息，<a href=\"http://www.runoob.com/java/java-stack-class.html\" target=\"_blank\">请参见栈（Stack）</a>。</p> \n<hr /> \n<h2> 字典（Dictionary）</h2> \n<p>字典（Dictionary） 类是一个抽象类，它定义了键映射到值的数据结构。</p>\n<p> 当你想要通过特定的键而不是整数索引来访问数据的时候，这时候应该使用Dictionary。</p>\n<p> 由于Dictionary类是抽象类，所以它只提供了键映射到值的数据结构，而没有提供特定的实现。</p>\n<p> 关于该类的更多信息，<a href=\"http://www.runoob.com/java/java-dictionary-class.html\" target=\"_blank\">请参见字典（ Dictionary）</a>。</p> \n<hr /> \n<h2> 哈希表（Hashtable）</h2> \n<p>Hashtable类提供了一种在用户定义键结构的基础上来组织数据的手段。</p>\n<p> 例如，在地址列表的哈希表中，你可以根据邮政编码作为键来存储和排序数据，而不是通过人名。</p>\n<p> 哈希表键的具体含义完全取决于哈希表的使用情景和它包含的数据。</p>\n<p> 关于该类的更多信息，<a href=\"http://www.runoob.com/java/java-hashTable-class.html\" target=\"_blank\">请参见哈希表（HashTable）</a>。</p> \n<hr /> \n<h2> 属性（Properties）</h2> \n<p>Properties 继承于 Hashtable.Properties 类表示了一个持久的属性集.属性列表中每个键及其对应值都是一个字符串。</p>\n<p> Properties 类被许多Java类使用。例如，在获取环境变量时它就作为System.getProperties()方法的返回值。</p>\n<p> 关于该类的更多信息，<a href=\"http://www.runoob.com/java/java-properties-class.html\" target=\"_blank\">请参见属性（Properties）</a>。</p>', null, 'Java 数据结构|枚举（Enumeration）|位集合（BitSet）|向量（Vector）|栈（Stack）|字典（Dictionary）|哈希表（Hashtable）|属性（Properties）|');
INSERT INTO `schoolcontent` VALUES ('314', '317', '<h1>Java 集合框架</h1> \n<p> 早在Java 2中之前，Java就提供了特设类。比如：Dictionary, Vector, Stack, 和Properties这些类用来存储和操作对象组。 </p> \n<p> 虽然这些类都非常有用，但是它们缺少一个核心的，统一的主题。由于这个原因，使用Vector类的方式和使用Properties类的方式有着很大不同。</p> \n<p> 集合框架被设计成要满足以下几个目标。</p> \n<ul> \n <li> 该框架必须是高性能的。基本集合（动态数组，链表，树，哈希表）的实现也必须是高效的。</li> \n <li> 该框架允许不同类型的集合，以类似的方式工作，具有高度的互操作性。</li> \n <li> 对一个集合的扩展和适应必须是简单的。</li> \n</ul> \n<p> 为此，整个集合框架就围绕一组标准接口而设计。你可以直接使用这些接口的标准实现，诸如： LinkedList, HashSet, 和 TreeSet等,除此之外你也可以通过这些接口实现自己的集合。</p> \n<p> 集合框架是一个用来代表和操纵集合的统一架构。所有的集合框架都包含如下内容：</p> \n<ul> \n <li> <strong>接口：</strong>是代表集合的抽象数据类型。接口允许集合独立操纵其代表的细节。在面向对象的语言，接口通常形成一个层次。</li> \n <li> <strong>实现（类）：</strong>是集合接口的具体实现。从本质上讲，它们是可重复使用的数据结构。</li> \n <li> <strong>算法：</strong>是实现集合接口的对象里的方法执行的一些有用的计算，例如：搜索和排序。这些算法被称为多态，那是因为相同的方法可以在相似的接口上有着不同的实现。</li> \n</ul>\n<p> 除了集合，该框架也定义了几个Map接口和类。Map里存储的是键/值对。尽管Map不是collections，但是它们完全整合在集合中。</p> \n<hr />\n<h2>集合接口</h2> \n<p> 集合框架定义了一些接口。本节提供了每个接口的概述：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th>序号</th> \n   <th>接口描述</th> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td>Collection 接口<br /> 允许你使用一组对象，是Collection层次结构的根接口。</td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td> List 接口<br /> 继承于<strong>Collection</strong>和一个 List实例存储一个有序集合的元素。</td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td> Set<br /> 继承于&nbsp;<strong>Collection，是</strong>一个不包含重复元素的集合。</td> \n  </tr> \n  <tr> \n   <td>4</td> \n   <td> SortedSet<br /> 继承于Set保存有序的集合。</td> \n  </tr> \n  <tr> \n   <td>5</td> \n   <td> Map<br /> 将唯一的键映射到值。</td> \n  </tr> \n  <tr> \n   <td>6</td> \n   <td> Map.Entry<br /> 描述在一个Map中的一个元素（键/值对）。是一个Map的内部类。</td> \n  </tr> \n  <tr> \n   <td>7</td> \n   <td> SortedMap<br /> 继承于Map，使Key保持在升序排列。</td> \n  </tr> \n  <tr> \n   <td>8</td> \n   <td> Enumeration<br /> 这是一个传统的接口和定义的方法，通过它可以枚举（一次获得一个）对象集合中的元素。这个传统接口已被迭代器取代。</td> \n  </tr> \n </tbody> \n</table> \n<hr />\n<h2>集合类</h2> \n<p> Java提供了一套实现了Collection接口的标准集合类。其中一些是具体类，这些类可以直接拿来使用，而另外一些是抽象类，提供了接口的部分实现。 </p>\n<p>标准集合类汇总于下表：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th>序号</th> \n   <th>类描述</th> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td><strong>AbstractCollection&nbsp;</strong><br /> 实现了大部分的集合接口。</td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td><strong>AbstractList&nbsp;</strong><br /> 继承于AbstractCollection 并且实现了大部分List接口。</td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td><strong>AbstractSequentialList&nbsp;</strong><br /> 继承于 AbstractList ，提供了对数据元素的链式访问而不是随机访问。</td> \n  </tr> \n  <tr> \n   <td>4</td> \n   <td>LinkedList<br /> 继承于&nbsp;AbstractSequentialList，实现了一个链表。</td> \n  </tr> \n  <tr> \n   <td>5</td> \n   <td>ArrayList<br /> 通过继承AbstractList，实现动态数组。</td> \n  </tr> \n  <tr> \n   <td>6</td> \n   <td><strong>AbstractSet&nbsp;</strong><br /> 继承于AbstractCollection 并且实现了大部分Set接口。</td> \n  </tr> \n  <tr> \n   <td>7</td> \n   <td>HashSet<br /> 继承了AbstractSet，并且使用一个哈希表。</td> \n  </tr> \n  <tr> \n   <td>8</td> \n   <td>LinkedHashSet<br /> 具有可预知迭代顺序的&nbsp;<tt>Set</tt>&nbsp;接口的哈希表和链接列表实现。</td> \n  </tr> \n  <tr> \n   <td>9</td> \n   <td>TreeSet<br /> 继承于AbstractSet，使用元素的自然顺序对元素进行排序.</td> \n  </tr> \n  <tr> \n   <td>10</td> \n   <td><strong>AbstractMap&nbsp;</strong><br /> 实现了大部分的Map接口。</td> \n  </tr> \n  <tr> \n   <td>11</td> \n   <td>HashMap <br /> 继承了HashMap，并且使用一个哈希表。</td> \n  </tr> \n  <tr> \n   <td>12</td> \n   <td>TreeMap <br /> 继承了AbstractMap，并且使用一颗树。</td> \n  </tr> \n  <tr> \n   <td>13</td> \n   <td>WeakHashMap <br /> 继承AbstractMap类，使用弱密钥的哈希表。</td> \n  </tr> \n  <tr> \n   <td>14</td> \n   <td>LinkedHashMap <br /> 继承于HashMap，使用元素的自然顺序对元素进行排序.</td> \n  </tr> \n  <tr> \n   <td>15</td> \n   <td>IdentityHashMap <br /> 继承AbstractMap类，比较文档时使用引用相等。</td> \n  </tr> \n </tbody> \n</table> \n<p>在前面的教程中已经讨论通过java.util包中定义的类，如下所示： </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th>序号</th> \n   <th>类描述</th> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td>Vector <br /> Vector类实现了一个动态数组。和ArrayList和相似，但是两者是不同的。</td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td>Stack <br /> 栈是Vector的一个子类，它实现了一个标准的后进先出的栈。</td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td>Dictionary <br /> Dictionary 类是一个抽象类，用来存储键/值对，作用和Map类相似。</td> \n  </tr> \n  <tr> \n   <td>4</td> \n   <td>Hashtable <br /> Hashtable是原始的java.util的一部分，&nbsp;是一个Dictionary具体的实现&nbsp;。</td> \n  </tr> \n  <tr> \n   <td>5</td> \n   <td>Properties <br /> Properties 继承于 Hashtable.表示一个持久的属性集.属性列表中每个键及其对应值都是一个字符串。</td> \n  </tr> \n  <tr> \n   <td>6</td> \n   <td>BitSet<br /> 一个Bitset类创建一种特殊类型的数组来保存位值。BitSet中数组大小会随需要增加。</td> \n  </tr> \n </tbody> \n</table> \n<p>一个Bitset类创建一种特殊类型的数组来保存位值。BitSet中数组大小会随需要增加。 </p> \n<hr /> \n<h2>集合算法</h2> \n<p> 集合框架定义了几种算法，可用于集合和映射。这些算法被定义为集合类的静态方法。</p> \n<p> 在尝试比较不兼容的类型时，一些方法能够抛出 ClassCastException异常。当试图修改一个不可修改的集合时，抛出UnsupportedOperationException异常。</p> \n<p> 集合定义三个静态的变量：EMPTY_SET EMPTY_LIST，EMPTY_MAP的。这些变量都不可改变。</p> \n<p> </p>\n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> 序号</th> \n   <th> 算法描述</th> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> Collection Algorithms<br /> 这里是一个列表中的所有算法实现。</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2> 如何使用迭代器 </h2> \n<p> 通常情况下，你会希望遍历一个集合中的元素。例如，显示集合中的每个元素。</p> \n<p> 做到这一点最简单的方法是采用一个迭代器，它是一个对象，实现了Iterator 接口或ListIterator接口。</p> \n<p> 迭代器，使你能够通过循环来得到或删除集合的元素。ListIterator继承了Iterator，以允许双向遍历列表和修改元素。</p> \n<table class=\"reference&gt;\r\n	&lt;tbody&gt;\r\n		&lt;tr&gt;\r\n			&lt;th&gt;\r\n				序号&lt;/th&gt;\r\n			&lt;th&gt;\r\n				迭代器方法描述&lt;/th&gt;\r\n		&lt;/tr&gt;\r\n		&lt;tr&gt;\r\n			&lt;td&gt;\r\n				1&lt;/td&gt;\r\n			&lt;td&gt;\r\n				使用 Java Iterator&lt;br&gt;\r\n				&lt;span id=\" result_box\"=\"\" tabindex=\"-1\">\n 这里通过实例列出Iterator和listIterator接口提供的所有方法。   \n</table> \n<hr /> \n<h2> 如何使用比较器 </h2> \n<p> TreeSet和TreeMap的按照排序顺序来存储元素. 然而，这是通过比较器来精确定义按照什么样的排序顺序。</p> \n<p> 这个接口可以让我们以不同的方式来排序一个集合。</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> 序号</th> \n   <th> 比较器方法描述</th> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> 使用 Java Comparator<br /> 这里通过实例列出Comparator接口提供的所有方法</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2>总结 </h2> \n<p> Java集合框架为程序员提供了预先包装的数据结构和算法来操纵他们。</p> \n<p> 集合是一个对象，可容纳其他对象的引用。集合接口声明对每一种类型的集合可以执行的操作。</p> \n<p> 集合框架的类和接口均在java.util包中。</p>', null, 'Java 集合框架|集合接口|集合类|集合算法|如何使用迭代器|如何使用比较器|总结|');
INSERT INTO `schoolcontent` VALUES ('315', '318', '<h1>Java 泛型</h1> Java 泛型（generics）是 JDK 5 中引入的一个新特性, 泛型提供了编译时类型安全检测机制，该机制允许程序员在编译时检测到非法的类型。\n<p></p> \n<p>泛型的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数。</p> \n<blockquote> \n <p> 假定我们有这样一个需求：写一个排序方法，能够对整形数组、字符串数组甚至其他任何类型的数组进行排序，该如何实现？ </p> \n <p>答案是可以使用 <strong>Java 泛型</strong>。</p> \n <p> 使用 Java 泛型的概念，我们可以写一个泛型方法来对一个对象数组排序。然后，调用该泛型方法来对整型数组、浮点数数组、字符串数组等进行排序。</p>\n</blockquote> \n<hr />\n<h2> 泛型方法</h2> \n<p> 你可以写一个泛型方法，该方法在调用时可以接收不同类型的参数。根据传递给泛型方法的参数类型，编译器适当地处理每一个方法调用。</p>\n<p> 下面是定义泛型方法的规则：</p> \n<ul> \n <li> <span id=\"result_box\">所有</span>泛型方法声明都有一个类型参数声明部分（由尖括号分隔），该类型参数声明部分在方法返回类型之前（在下面例子中的&lt;E&gt;）。</li> \n <li> 每一个类型参数声明部分包含一个或多个类型参数，参数间用逗号隔开。一个泛型参数，也被称为一个类型变量，是用于指定一个泛型类型名称的标识符。</li> \n <li> 类型参数能被用来声明返回值类型，并且能作为泛型方法得到的实际参数类型的占位符。</li> \n <li> 泛型方法体的声明和其他方法一样。注意类型参数只能代表引用型类型，不能是原始类型（像int,double,char的等）。</li> \n</ul> \n<h3>实例</h3> \n<p> 下面的例子演示了如何使用泛型方法打印不同字符串的元素： </p> \n<pre>\r\npublic class GenericMethodTest\r\n{\r\n   // 泛型方法 printArray                         \r\n   public static &lt; E &gt; void printArray( E[] inputArray )\r\n   {\r\n      // 输出数组元素            \r\n         for ( E element : inputArray ){        \r\n            System.out.printf( &quot;%s &quot;, element );\r\n         }\r\n         System.out.println();\r\n    }\r\n\r\n    public static void main( String args[] )\r\n    {\r\n        // 创建不同类型数组： Integer, Double 和 Character\r\n        Integer[] intArray = { 1, 2, 3, 4, 5 };\r\n        Double[] doubleArray = { 1.1, 2.2, 3.3, 4.4 };\r\n        Character[] charArray = { \'H\', \'E\', \'L\', \'L\', \'O\' };\r\n\r\n        System.out.println( &quot;整型数组元素为:&quot; );\r\n        printArray( intArray  ); // 传递一个整型数组\r\n\r\n        System.out.println( &quot;\\n双精度型数组元素为:&quot; );\r\n        printArray( doubleArray ); // 传递一个双精度型数组\r\n\r\n        System.out.println( &quot;\\n字符型数组元素为:&quot; );\r\n        printArray( charArray ); // 传递一个字符型数组\r\n    } \r\n}\r\n</pre> \n<p> 编译以上代码，运行结果如下所示： </p> \n<pre>\r\n整型数组元素为:\r\n1 2 3 4 5 \r\n\r\n双精度型数组元素为:\r\n1.1 2.2 3.3 4.4 \r\n\r\n字符型数组元素为:\r\nH E L L O \r\n</pre> \n<p> 有界的类型参数: </p>\n<p> 可能有时候，你会想限制那些被允许传递到一个类型参数的类型种类范围。例如，一个操作数字的方法可能只希望接受Number或者Number子类的实例。这就是有界类型参数的目的。 </p>\n<p>要声明一个有界的类型参数，首先列出类型参数的名称，后跟extends关键字，最后紧跟它的上界。</p> \n<h3> 实例</h3> \n<p> 下面的例子演示了&quot;extends&quot;如何使用在一般意义上的意思&quot;extends&quot;（类）或者&quot;implements&quot;（接口）。该例子中的泛型方法返回三个可比较对象的最大值。 </p> \n<pre>\r\npublic class MaximumTest\r\n{\r\n   // 比较三个值并返回最大值\r\n   public static &lt;T extends Comparable&lt;T&gt;&gt; T maximum(T x, T y, T z)\r\n   {                     \r\n      T max = x; // 假设x是初始最大值\r\n      if ( y.compareTo( max ) &gt; 0 ){\r\n         max = y; //y 更大\r\n      }\r\n      if ( z.compareTo( max ) &gt; 0 ){\r\n         max = z; // 现在 z 更大           \r\n      }\r\n      return max; // 返回最大对象\r\n   }\r\n   public static void main( String args[] )\r\n   {\r\n      System.out.printf( &quot;%d, %d 和 %d 中最大的数为 %d\\n\\n&quot;,\r\n                   3, 4, 5, maximum( 3, 4, 5 ) );\r\n \r\n      System.out.printf( &quot;%.1f, %.1f 和 %.1f 中最大的数为 %.1f\\n\\n&quot;,\r\n                   6.6, 8.8, 7.7, maximum( 6.6, 8.8, 7.7 ) );\r\n \r\n      System.out.printf( &quot;%s, %s 和 %s 中最大的数为 %s\\n&quot;,&quot;pear&quot;,\r\n         &quot;apple&quot;, &quot;orange&quot;, maximum( &quot;pear&quot;, &quot;apple&quot;, &quot;orange&quot; ) );\r\n   }\r\n}\r\n</pre> \n<p> 编译以上代码，运行结果如下所示： </p> \n<pre>\r\n3, 4 和 5 中最大的数为 5\r\n\r\n6.6, 8.8 和 7.7 中最大的数为 8.8\r\n\r\npear, apple 和 orange 中最大的数为 pear\r\n</pre> \n<hr /> \n<h2> 泛型类</h2> \n<p> 泛型类的声明和非泛型类的声明类似，除了在类名后面添加了类型参数声明部分。 </p>\n<p>和泛型方法一样，泛型类的类型参数声明部分也包含一个或多个类型参数，参数间用逗号隔开。一个泛型参数，也被称为一个类型变量，是用于指定一个泛型类型名称的标识符。因为他们接受一个或多个参数，这些类被称为参数化的类或参数化的类型。 </p>\n<h3>实例</h3> \n<p> 如下实例演示了我们如何定义一个泛型类:</p> \n<pre>\r\npublic class Box&lt;T&gt; {\r\n   \r\n  private T t;\r\n\r\n  public void add(T t) {\r\n    this.t = t;\r\n  }\r\n\r\n  public T get() {\r\n    return t;\r\n  }\r\n\r\n  public static void main(String[] args) {\r\n    Box&lt;Integer&gt; integerBox = new Box&lt;Integer&gt;();\r\n    Box&lt;String&gt; stringBox = new Box&lt;String&gt;();\r\n\r\n    integerBox.add(new Integer(10));\r\n    stringBox.add(new String(&quot;菜鸟教程&quot;));\r\n\r\n    System.out.printf(&quot;整型值为 :%d\\n\\n&quot;, integerBox.get());\r\n    System.out.printf(&quot;字符串为 :%s\\n&quot;, stringBox.get());\r\n  }\r\n}\r\n</pre> \n<p> 编译以上代码，运行结果如下所示： </p> \n<pre>\r\n整型值为 :10\r\n\r\n字符串为 :菜鸟教程\r\n</pre>', null, 'Java 泛型|泛型方法|泛型类|');
INSERT INTO `schoolcontent` VALUES ('316', '319', '<h1>Java 序列化</h1> \n<p>Java 提供了一种对象序列化的机制，该机制中，一个对象可以被表示为一个字节序列，该字节序列包括该对象的数据、有关对象的类型的信息和存储在对象中数据的类型。 </p>\n<p>将序列化对象写入文件之后，可以从文件中读取出来，并且对它进行反序列化，也就是说，对象的类型信息、对象的数据，还有对象中的数据类型可以用来在内存中新建对象。 </p>\n<p>整个过程都是Java虚拟机（JVM）独立的，也就是说，在一个平台上序列化的对象可以在另一个完全不同的平台上反序列化该对象。 </p>\n<p>类ObjectInputStream 和ObjectOutputStream是高层次的数据流，它们包含序列化和反序列化对象的方法。 </p>\n<p>ObjectOutputStream 类包含很多写方法来写各种数据类型，但是一个特别的方法例外：</p> \n<pre>\r\npublic final void writeObject(Object x) throws IOException\r\n</pre>\n<p> 上面的方法序列化一个对象，并将它发送到输出流。相似的ObjectInputStream 类包含如下反序列化一个对象的方法：</p> \n<pre>\r\npublic final Object readObject() throws IOException, \r\n                                 ClassNotFoundException\r\n</pre> \n<p> 该方法从流中取出下一个对象，并将对象反序列化。它的返回值为Object，因此，你需要将它转换成合适的数据类型。</p>\n<p> 为了演示序列化在Java中是怎样工作的，我将使用之前教程中提到的Employee类，假设我们定义了如下的Employee类，该类实现了Serializable 接口。</p> \n<pre>\r\npublic class Employee implements java.io.Serializable\r\n{\r\n   public String name;\r\n   public String address;\r\n   public transient int SSN;\r\n   public int number;\r\n   public void mailCheck()\r\n   {\r\n      System.out.println(&quot;Mailing a check to &quot; + name\r\n                           + &quot; &quot; + address);\r\n   }\r\n}\r\n</pre>\n<p> 请注意，一个类的对象要想序列化成功，必须满足两个条件：</p>\n<p> 该类必须实现 java.io.Serializable 对象。</p>\n<p> 该类的所有属性必须是可序列化的。如果有一个属性不是可序列化的，则该属性必须注明是短暂的。</p>\n<p> 如果你想知道一个Java标准类是否是可序列化的，请查看该类的文档。检验一个类的实例是否能序列化十分简单， 只需要查看该类有没有实现java.io.Serializable接口。 </p> \n<hr /> \n<h2> 序列化对象 </h2>\n<p> ObjectOutputStream 类用来序列化一个对象，如下的SerializeDemo例子实例化了一个Employee对象，并将该对象序列化到一个文件中。</p>\n<p> 该程序执行后，就创建了一个名为employee.ser文件。该程序没有任何输出，但是你可以通过代码研读来理解程序的作用。</p>\n<p> <b>注意：</b> 当序列化一个对象到文件时， 按照Java的标准约定是给文件一个.ser扩展名。</p> \n<pre>\r\nimport java.io.*;\r\n\r\npublic class SerializeDemo\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n      Employee e = new Employee();\r\n      e.name = &quot;Reyan Ali&quot;;\r\n      e.address = &quot;Phokka Kuan, Ambehta Peer&quot;;\r\n      e.SSN = 11122333;\r\n      e.number = 101;\r\n      try\r\n      {\r\n         FileOutputStream fileOut =\r\n         new FileOutputStream(&quot;/tmp/employee.ser&quot;);\r\n         ObjectOutputStream out = new ObjectOutputStream(fileOut);\r\n         out.writeObject(e);\r\n         out.close();\r\n         fileOut.close();\r\n         System.out.printf(&quot;Serialized data is saved in /tmp/employee.ser&quot;);\r\n      }catch(IOException i)\r\n      {\r\n          i.printStackTrace();\r\n      }\r\n   }\r\n}\r\n</pre> \n<hr /> \n<h2> 反序列化对象 </h2> \n<p> 下面的DeserializeDemo程序实例了反序列化，/tmp/employee.ser存储了Employee对象。 </p> \n<pre>\r\nimport java.io.*;\r\npublic class DeserializeDemo\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n      Employee e = null;\r\n      try\r\n      {\r\n         FileInputStream fileIn = new FileInputStream(&quot;/tmp/employee.ser&quot;);\r\n         ObjectInputStream in = new ObjectInputStream(fileIn);\r\n         e = (Employee) in.readObject();\r\n         in.close();\r\n         fileIn.close();\r\n      }catch(IOException i)\r\n      {\r\n         i.printStackTrace();\r\n         return;\r\n      }catch(ClassNotFoundException c)\r\n      {\r\n         System.out.println(&quot;Employee class not found&quot;);\r\n         c.printStackTrace();\r\n         return;\r\n      }\r\n      System.out.println(&quot;Deserialized Employee...&quot;);\r\n      System.out.println(&quot;Name: &quot; + e.name);\r\n      System.out.println(&quot;Address: &quot; + e.address);\r\n      System.out.println(&quot;SSN: &quot; + e.SSN);\r\n      System.out.println(&quot;Number: &quot; + e.number);\r\n    }\r\n}\r\n</pre> \n<p>以上程序编译运行结果如下所示：</p> \n<pre>\r\nDeserialized Employee...\r\nName: Reyan Ali\r\nAddress:Phokka Kuan, Ambehta Peer\r\nSSN: 0\r\nNumber:101\r\n</pre> \n<p> 这里要注意以下要点：</p>\n<p> readObject() 方法中的try/catch代码块尝试捕获 ClassNotFoundException异常。对于JVM可以反序列化对象，它必须是能够找到字节码的类。如果JVM在反序列化对象的过程中找不到该类，则抛出一个 ClassNotFoundException异常。 </p>\n<p>注意，readObject()方法的返回值被转化成Employee引用。 </p>\n<p>当对象被序列化时，属性SSN的值为111222333，但是因为该属性是短暂的，该值没有被发送到输出流。所以反序列化后Employee对象的SSN属性为0。</p>', null, 'Java 序列化|序列化对象|反序列化对象|');
INSERT INTO `schoolcontent` VALUES ('317', '320', '<h1>Java 网络编程</h1> \n<p> 网络编程是指编写运行在多个设备（计算机）的程序，这些设备都通过网络连接起来。</p>\n<p> java.net包中J2SE的API包含有类和接口，它们提供低层次的通信细节。你可以直接使用这些类和接口，来专注于解决问题，而不用关注通信细节。</p>\n<p> java.net包中提供了两种常见的网络协议的支持：</p> \n<ul> \n <li> <strong>TCP</strong>： TCP是传输控制协议的缩写，它保障了两个应用程序之间的可靠通信。通常用于互联网协议，被称TCP / IP。</li> \n <li> <strong>UDP</strong>:UDP是用户数据报协议的缩写，一个无连接的协议。提供了应用程序之间要发送的数据的数据包。</li> \n</ul> \n<p>本教程主要讲解以下两个主题。</p> \n<ul> \n <li> <strong>Socket </strong><strong>编程</strong>:&nbsp;这是使用最广泛的网络概念，它已被解释地非常详细</li> \n <li> <strong>URL </strong><strong>处理</strong>:&nbsp;这部分会在另外的篇幅里讲，点击这里更详细地了解在<a href=\"http://www.w3cschool.cc/java/java-url-processing.html\" title=\"java url处理\" target=\"_blank\">Java语言中的URL处理</a>。</li> \n</ul> \n<hr /> \n<h2> Socket 编程 </h2> \n<p> 套接字使用TCP提供了两台计算机之间的通信机制。 客户端程序创建一个套接字，并尝试连接服务器的套接字。</p>\n<p> 当连接建立时，服务器会创建一个Socket对象。客户端和服务器现在可以通过对Socket对象的写入和读取来进行进行通信。</p>\n<p> java.net.Socket类代表一个套接字，并且java.net.ServerSocket类为服务器程序提供了一种来监听客户端，并与他们建立连接的机制。</p>\n<p> 以下步骤在两台计算机之间使用套接字建立TCP连接时会出现：</p> \n<ul> \n <li> 服务器实例化一个ServerSocket对象，表示通过服务器上的端口通信。</li> \n <li> 服务器调用&nbsp;ServerSocket类&nbsp;的accept（）方法，该方法将一直等待，直到客户端连接到服务器上给定的端口。</li> \n <li> 服务器正在等待时，一个客户端实例化一个Socket对象，指定服务器名称和端口号来请求连接。</li> \n <li> Socket类的构造函数试图将客户端连接到指定的服务器和端口号。如果通信被建立，则在客户端创建一个Socket对象能够与服务器进行通信。</li> \n <li> 在服务器端，accept()方法返回服务器上一个新的socket引用，该socket连接到客户端的socket。</li> \n</ul>\n<p></p> 连接建立后，通过使用I/O流在进行通信。每一个socket都有一个输出流和一个输入流。客户端的输出流连接到服务器端的输入流，而客户端的输入流连接到服务器端的输出流。 \n<p></p>\n<p>TCP是一个双向的通信协议，因此数据可以通过两个数据流在同一时间发送.以下是一些类提供的一套完整的有用的方法来实现sockets。 </p> \n<hr /> \n<h2> ServerSocket 类的方法</h2> \n<p> 服务器应用程序通过使用java.net.ServerSocket类以获取一个端口,并且侦听客户端请求。</p>\n<p> ServerSocket类有四个构造方法：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <td> <strong>序号</strong></td> \n   <td style=\"text-align: center;\"> <strong>方法描述</strong></td> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <strong>public ServerSocket(int port) throws IOException</strong><br /> 创建绑定到特定端口的服务器套接字。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <strong>public ServerSocket(int port, int backlog) throws IOException</strong><br /> 利用指定的 backlog 创建服务器套接字并将其绑定到指定的本地端口号。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <strong>public ServerSocket(int port, int backlog, InetAddress address) throws IOException</strong><br /> 使用指定的端口、侦听 backlog 和要绑定到的本地 IP 地址创建服务器。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <strong>public ServerSocket() throws IOException</strong><br /> 创建非绑定服务器套接字。</td> \n  </tr> \n </tbody> \n</table> \n<p> 创建非绑定服务器套接字。 如果ServerSocket构造方法没有抛出异常，就意味着你的应用程序已经成功绑定到指定的端口，并且侦听客户端请求。 </p>\n<p>这里有一些ServerSocket类的常用方法：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <td> <strong>序号</strong></td> \n   <td style=\"text-align: center;\"> <strong>方法描述</strong></td> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <strong>public int getLocalPort()</strong><br /> &nbsp;&nbsp;返回此套接字在其上侦听的端口。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <strong>public Socket accept() throws IOException</strong><br /> 侦听并接受到此套接字的连接。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <strong>public void setSoTimeout(int timeout)</strong><br /> &nbsp;通过指定超时值启用/禁用 SO_TIMEOUT，以毫秒为单位。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <strong>public void bind(SocketAddress host, int backlog)</strong><br /> 将&nbsp;ServerSocket&nbsp;绑定到特定地址（IP 地址和端口号）。</td> \n  </tr> \n </tbody> \n</table> \n<hr />\n<h2> Socket 类的方法</h2> \n<p> java.net.Socket类代表客户端和服务器都用来互相沟通的套接字。客户端要获取一个Socket对象通过实例化 ，而 服务器获得一个Socket对象则通过accept()方法的返回值。 </p>\n<p>Socket类有五个构造方法.</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <td> <strong>序号</strong></td> \n   <td style=\"text-align: center;\"> <strong>方法描述</strong></td> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <strong>public Socket(String host, int port) throws UnknownHostException, IOException.</strong><br /> 创建一个流套接字并将其连接到指定主机上的指定端口号。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <strong>public Socket(InetAddress host, int port) throws IOException</strong><br /> 创建一个流套接字并将其连接到指定 IP 地址的指定端口号。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <strong>public Socket(String host, int port, InetAddress localAddress, int localPort) throws IOException.</strong><br /> 创建一个套接字并将其连接到指定远程主机上的指定远程端口。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <strong>public Socket(InetAddress host, int port, InetAddress localAddress, int localPort) throws IOException.</strong><br /> 创建一个套接字并将其连接到指定远程地址上的指定远程端口。</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> <strong>public Socket()</strong><br /> 通过系统默认类型的 SocketImpl 创建未连接套接字</td> \n  </tr> \n </tbody> \n</table> \n<p>当Socket构造方法返回，并没有简单的实例化了一个Socket对象，它实际上会尝试连接到指定的服务器和端口。</p> \n<p> 下面列出了一些感兴趣的方法，注意客户端和服务器端都有一个Socket对象，所以无论客户端还是服务端都能够调用这些方法。 </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <td> <strong>序号</strong></td> \n   <td style=\"text-align: center;\"> <strong>方法描述</strong></td> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <strong>public void connect(SocketAddress host, int timeout) throws IOException</strong><br /> 将此套接字连接到服务器，并指定一个超时值。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <strong>public InetAddress getInetAddress()</strong><br /> &nbsp;返回套接字连接的地址。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <strong>public int getPort()</strong><br /> 返回此套接字连接到的远程端口。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <strong>public int getLocalPort()</strong><br /> 返回此套接字绑定到的本地端口。</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> <strong>public SocketAddress getRemoteSocketAddress()</strong><br /> 返回此套接字连接的端点的地址，如果未连接则返回&nbsp;null。</td> \n  </tr> \n  <tr> \n   <td> 6</td> \n   <td> <strong>public InputStream getInputStream() throws IOException</strong><br /> 返回此套接字的输入流。</td> \n  </tr> \n  <tr> \n   <td> 7</td> \n   <td> <strong>public OutputStream getOutputStream() throws IOException</strong><br /> 返回此套接字的输出流。</td> \n  </tr> \n  <tr> \n   <td> 8</td> \n   <td> <strong>public void close() throws IOException</strong><br /> 关闭此套接字。</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2> InetAddress 类的方法 </h2> \n<p>这个类表示互联网协议(IP)地址。下面列出了Socket编程时比较有用的方法：</p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <td> <strong>序号</strong></td> \n   <td style=\"text-align: center;\"> <strong>方法描述</strong></td> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <strong>static InetAddress getByAddress(byte[] addr)</strong><br /> 在给定原始 IP 地址的情况下，返回&nbsp;InetAddress&nbsp;对象。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <strong>static InetAddress getByAddress(String host, byte[] addr)</strong><br /> 根据提供的主机名和 IP 地址创建 InetAddress。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <strong>static InetAddress getByName(String host)</strong><br /> 在给定主机名的情况下确定主机的 IP 地址。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <strong>String getHostAddress()&nbsp;</strong><br /> 返回 IP 地址字符串（以文本表现形式）。</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> <strong>String getHostName()&nbsp;</strong><br /> &nbsp;获取此 IP 地址的主机名。</td> \n  </tr> \n  <tr> \n   <td> 6</td> \n   <td> <strong>static InetAddress getLocalHost()</strong><br /> 返回本地主机。</td> \n  </tr> \n  <tr> \n   <td> 7</td> \n   <td> <strong>String toString()</strong><br /> 将此 IP 地址转换为&nbsp;String。</td> \n  </tr> \n </tbody> \n</table> \n<hr /> \n<h2> Socket 客户端实例</h2> \n<p> 如下的GreetingClient 是一个客户端程序，该程序通过socket连接到服务器并发送一个请求，然后等待一个响应。 </p> \n<pre>\r\n// 文件名 GreetingClient.java\r\n\r\nimport java.net.*;\r\nimport java.io.*;\r\n \r\npublic class GreetingClient\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n      String serverName = args[0];\r\n      int port = Integer.parseInt(args[1]);\r\n      try\r\n      {\r\n         System.out.println(&quot;Connecting to &quot; + serverName\r\n                             + &quot; on port &quot; + port);\r\n         Socket client = new Socket(serverName, port);\r\n         System.out.println(&quot;Just connected to &quot;\r\n                      + client.getRemoteSocketAddress());\r\n         OutputStream outToServer = client.getOutputStream();\r\n         DataOutputStream out =\r\n                       new DataOutputStream(outToServer);\r\n \r\n         out.writeUTF(&quot;Hello from &quot;\r\n                      + client.getLocalSocketAddress());\r\n         InputStream inFromServer = client.getInputStream();\r\n         DataInputStream in =\r\n                        new DataInputStream(inFromServer);\r\n         System.out.println(&quot;Server says &quot; + in.readUTF());\r\n         client.close();\r\n      }catch(IOException e)\r\n      {\r\n         e.printStackTrace();\r\n      }\r\n   }\r\n}\r\n</pre> \n<hr />\n<h2> Socket 服务端实例 </h2> \n<p> 如下的GreetingServer 程序是一个服务器端应用程序，使用Socket来监听一个指定的端口。 </p> \n<pre>\r\n// 文件名 GreetingServer.java\r\n\r\nimport java.net.*;\r\nimport java.io.*;\r\n\r\npublic class GreetingServer extends Thread\r\n{\r\n   private ServerSocket serverSocket;\r\n   \r\n   public GreetingServer(int port) throws IOException\r\n   {\r\n      serverSocket = new ServerSocket(port);\r\n      serverSocket.setSoTimeout(10000);\r\n   }\r\n\r\n   public void run()\r\n   {\r\n      while(true)\r\n      {\r\n         try\r\n         {\r\n            System.out.println(&quot;Waiting for client on port &quot; +\r\n            serverSocket.getLocalPort() + &quot;...&quot;);\r\n            Socket server = serverSocket.accept();\r\n            System.out.println(&quot;Just connected to &quot;\r\n                  + server.getRemoteSocketAddress());\r\n            DataInputStream in =\r\n                  new DataInputStream(server.getInputStream());\r\n            System.out.println(in.readUTF());\r\n            DataOutputStream out =\r\n                 new DataOutputStream(server.getOutputStream());\r\n            out.writeUTF(&quot;Thank you for connecting to &quot;\r\n              + server.getLocalSocketAddress() + &quot;\\nGoodbye!&quot;);\r\n            server.close();\r\n         }catch(SocketTimeoutException s)\r\n         {\r\n            System.out.println(&quot;Socket timed out!&quot;);\r\n            break;\r\n         }catch(IOException e)\r\n         {\r\n            e.printStackTrace();\r\n            break;\r\n         }\r\n      }\r\n   }\r\n   public static void main(String [] args)\r\n   {\r\n      int port = Integer.parseInt(args[0]);\r\n      try\r\n      {\r\n         Thread t = new GreetingServer(port);\r\n         t.start();\r\n      }catch(IOException e)\r\n      {\r\n         e.printStackTrace();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>编译以上 java 代码，并执行以下命令来启动服务，使用端口号为 6066：</p> \n<pre>\r\n$ java GreetingServer 6066\r\nWaiting for client on port 6066...\r\n</pre> 像下面一样开启客户端： \n<pre>\r\n$ java GreetingClient localhost 6066\r\nConnecting to localhost on port 6066\r\nJust connected to localhost/127.0.0.1:6066\r\nServer says Thank you for connecting to /127.0.0.1:6066\r\nGoodbye!\r\n</pre>', null, 'Java 网络编程|Socket 编程|ServerSocket 类的方法|Socket 类的方法|InetAddress 类的方法|Socket 客户端实例|Socket 服务端实例|');
INSERT INTO `schoolcontent` VALUES ('318', '321', '<h1>Java 发送邮件 </h1> \n<p> 使用Java应用程序发送E-mail十分简单，但是首先你应该在你的机器上安装JavaMail API 和Java Activation Framework (JAF) 。</p>\n<p> 你可以在 <a href=\"http://www.oracle.com/technetwork/java/index-138643.html\" target=\"_blank\">JavaMail (Version 1.2)</a> 下载最新的版本。</p>\n<p> 你可以再 在<a href=\"http://www.oracle.com/technetwork/java/jaf11-139815.html\" target=\"_blank\">JAF (Version 1.1.1)</a>下载最新的版本。</p>\n<p> 下载并解压这些文件，最上层文件夹你会发现很多的jar文件。你需要将mail.jar和activation.jar 添加到你的CLASSPATH中。</p> \n<p>如果你使用第三方邮件服务器如QQ的SMTP服务器，可查看文章底部用户认证完整的实例。</p> \n<hr /> \n<h2> 发送一封简单的 E-mail</h2> \n<p> 下面是一个发送简单E-mail的例子。假设你的localhost已经连接到网络。</p> \n<pre>\r\n// 文件名 SendEmail.java\r\n \r\nimport java.util.*;\r\nimport javax.mail.*;\r\nimport javax.mail.internet.*;\r\nimport javax.activation.*;\r\n \r\npublic class SendEmail\r\n{\r\n   public static void main(String [] args)\r\n   {   \r\n      // 收件人电子邮箱\r\n      String to = &quot;abcd@gmail.com&quot;;\r\n \r\n      // 发件人电子邮箱\r\n      String from = &quot;web@gmail.com&quot;;\r\n \r\n      // 指定发送邮件的主机为 localhost\r\n      String host = &quot;localhost&quot;;\r\n \r\n      // 获取系统属性\r\n      Properties properties = System.getProperties();\r\n \r\n      // 设置邮件服务器\r\n      properties.setProperty(&quot;mail.smtp.host&quot;, host);\r\n \r\n      // 获取默认session对象\r\n      Session session = Session.getDefaultInstance(properties);\r\n \r\n      try{\r\n         // 创建默认的 MimeMessage 对象\r\n         MimeMessage message = new MimeMessage(session);\r\n \r\n         // Set From: 头部头字段\r\n         message.setFrom(new InternetAddress(from));\r\n \r\n         // Set To: 头部头字段\r\n         message.addRecipient(Message.RecipientType.TO,\r\n                                  new InternetAddress(to));\r\n \r\n         // Set Subject: 头部头字段\r\n         message.setSubject(&quot;This is the Subject Line!&quot;);\r\n \r\n         // 设置消息体\r\n         message.setText(&quot;This is actual message&quot;);\r\n \r\n         // 发送消息\r\n         Transport.send(message);\r\n         System.out.println(&quot;Sent message successfully....&quot;);\r\n      }catch (MessagingException mex) {\r\n         mex.printStackTrace();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p> 编译并运行这个程序来发送一封简单的E-mail： </p> \n<pre>\r\n$ java SendEmail\r\nSent message successfully....\r\n</pre> \n<p> 如果你想发送一封e-mail给多个收件人，那么使用下面的方法来指定多个收件人ID： </p> \n<pre>\r\nvoid addRecipients(Message.RecipientType type,\r\n                   Address[] addresses)\r\nthrows MessagingException\r\n</pre> \n<p> 下面是对于参数的描述： </p> \n<ul> \n <li><p><b>type:</b>要被设置为TO, CC 或者BCC. 这里CC 代表抄送、BCC 代表秘密抄送y. 举例：<em>Message.RecipientType.TO</em></p></li> \n <li><p><b>addresses:</b> 这是email ID的数组。在指定电子邮件ID时，你将需要使用InternetAddress()方法。</p></li> \n</ul> \n<hr /> \n<h2> 发送一封HTML E-mail</h2> \n<p> 下面是一个发送HTML E-mail的例子。假设你的localhost已经连接到网络。</p>\n<p> 和上一个例子很相似，除了我们要使用setContent()方法来通过第二个参数为&quot;text/html&quot;，来设置内容来指定要发送HTML内容。</p> \n<pre>\r\n// 文件名 SendHTMLEmail.java\r\n \r\nimport java.util.*;\r\nimport javax.mail.*;\r\nimport javax.mail.internet.*;\r\nimport javax.activation.*;\r\n \r\npublic class SendHTMLEmail\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n     \r\n      // 收件人电子邮箱\r\n      String to = &quot;abcd@gmail.com&quot;;\r\n \r\n      // 发件人电子邮箱\r\n      String from = &quot;web@gmail.com&quot;;\r\n \r\n      // 指定发送邮件的主机为 localhost\r\n      String host = &quot;localhost&quot;;\r\n \r\n      // 获取系统属性\r\n      Properties properties = System.getProperties();\r\n \r\n      // 设置邮件服务器\r\n      properties.setProperty(&quot;mail.smtp.host&quot;, host);\r\n \r\n      // 获取默认的 Session 对象。\r\n      Session session = Session.getDefaultInstance(properties);\r\n \r\n      try{\r\n         // 创建默认的 MimeMessage 对象。\r\n         MimeMessage message = new MimeMessage(session);\r\n \r\n         // Set From: 头部头字段\r\n         message.setFrom(new InternetAddress(from));\r\n \r\n         // Set To: 头部头字段\r\n         message.addRecipient(Message.RecipientType.TO,\r\n                                  new InternetAddress(to));\r\n \r\n         // Set Subject: 头字段\r\n         message.setSubject(&quot;This is the Subject Line!&quot;);\r\n \r\n         // 发送 HTML 消息, 可以插入html标签\r\n         message.setContent(&quot;&lt;h1&gt;This is actual message&lt;/h1&gt;&quot;,\r\n                            &quot;text/html&quot; );\r\n \r\n         // 发送消息\r\n         Transport.send(message);\r\n         System.out.println(&quot;Sent message successfully....&quot;);\r\n      }catch (MessagingException mex) {\r\n         mex.printStackTrace();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p> 编译并运行此程序来发送HTML e-mail：</p> \n<pre>\r\n$ java SendHTMLEmail\r\nSent message successfully....\r\n</pre>\n<hr /> \n<h2>发送带有附件的 E-mail </h2> \n<p> 下面是一个发送带有附件的 E-mail的例子。假设你的localhost已经连接到网络。 </p> \n<pre>\r\n// 文件名 SendFileEmail.java\r\n \r\nimport java.util.*;\r\nimport javax.mail.*;\r\nimport javax.mail.internet.*;\r\nimport javax.activation.*;\r\n \r\npublic class SendFileEmail\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n     \r\n      // 收件人电子邮箱\r\n      String to = &quot;abcd@gmail.com&quot;;\r\n \r\n      // 发件人电子邮箱\r\n      String from = &quot;web@gmail.com&quot;;\r\n \r\n      // 指定发送邮件的主机为 localhost\r\n      String host = &quot;localhost&quot;;\r\n \r\n      // 获取系统属性\r\n      Properties properties = System.getProperties();\r\n \r\n      // 设置邮件服务器\r\n      properties.setProperty(&quot;mail.smtp.host&quot;, host);\r\n \r\n      // 获取默认的 Session 对象。\r\n      Session session = Session.getDefaultInstance(properties);\r\n \r\n      try{\r\n         // 创建默认的 MimeMessage 对象。\r\n         MimeMessage message = new MimeMessage(session);\r\n \r\n         // Set From: 头部头字段\r\n         message.setFrom(new InternetAddress(from));\r\n \r\n         // Set To: 头部头字段\r\n         message.addRecipient(Message.RecipientType.TO,\r\n                                  new InternetAddress(to));\r\n \r\n         // Set Subject: 头字段\r\n         message.setSubject(&quot;This is the Subject Line!&quot;);\r\n \r\n         // 创建消息部分\r\n         BodyPart messageBodyPart = new MimeBodyPart();\r\n \r\n         // 消息\r\n         messageBodyPart.setText(&quot;This is message body&quot;);\r\n        \r\n         // 创建多重消息\r\n         Multipart multipart = new MimeMultipart();\r\n \r\n         // 设置文本消息部分\r\n         multipart.addBodyPart(messageBodyPart);\r\n \r\n         // 附件部分\r\n         messageBodyPart = new MimeBodyPart();\r\n         String filename = &quot;file.txt&quot;;\r\n         DataSource source = new FileDataSource(filename);\r\n         messageBodyPart.setDataHandler(new DataHandler(source));\r\n         messageBodyPart.setFileName(filename);\r\n         multipart.addBodyPart(messageBodyPart);\r\n \r\n         // 发送完整消息\r\n         message.setContent(multipart );\r\n \r\n         //   发送消息\r\n         Transport.send(message);\r\n         System.out.println(&quot;Sent message successfully....&quot;);\r\n      }catch (MessagingException mex) {\r\n         mex.printStackTrace();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p> 编译并运行你的程序来发送一封带有附件的邮件。 </p> \n<pre>\r\n$ java SendFileEmail\r\nSent message successfully....\r\n</pre> \n<hr />\n<h2> 用户认证部分</h2> \n<p> 如果需要提供用户名和密码给e-mail服务器来达到用户认证的目的，你可以通过如下设置来完成： </p> \n<pre>\r\n props.put(&quot;mail.smtp.auth&quot;, &quot;true&quot;);\r\n props.setProperty(&quot;mail.user&quot;, &quot;myuser&quot;);\r\n props.setProperty(&quot;mail.password&quot;, &quot;mypwd&quot;);\r\n</pre> \n<p> e-mail其他的发送机制和上述保持一致。</p> \n<h3>需要用户名密码验证邮件发送实例:</h3> \n<p>本实例以QQ邮件服务器为例，你需要在登录QQ邮箱后台在&quot;设置&quot;=》账号中开启POP3/SMTP服务 ，如下图所示：</p> \n<p><img src=\"http://www.runoob.com/wp-content/uploads/2014/01/qqmailset.jpg\" alt=\"qqmailset\" width=\"652\" height=\"236\" class=\"alignnone size-full wp-image-8503\" srcset=\"http://www.runoob.com/wp-content/uploads/2014/01/qqmailset.jpg 652w, http://www.runoob.com/wp-content/uploads/2014/01/qqmailset-300x108.jpg 300w\" sizes=\"(max-width: 652px) 100vw, 652px\" /></p> \n<p>Java 代码如下：</p> \n<pre>\r\n// 需要用户名密码邮件发送实例\r\n//文件名 SendEmail2.java\r\n//本实例以QQ邮箱为例，你需要在qq后台设置\r\n\r\nimport java.util.Properties;\r\n\r\nimport javax.mail.Authenticator;\r\nimport javax.mail.Message;\r\nimport javax.mail.MessagingException;\r\nimport javax.mail.PasswordAuthentication;\r\nimport javax.mail.Session;\r\nimport javax.mail.Transport;\r\nimport javax.mail.internet.InternetAddress;\r\nimport javax.mail.internet.MimeMessage;\r\n\r\npublic class SendEmail2\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n      // 收件人电子邮箱\r\n      String to = &quot;xxx@qq.com&quot;;\r\n\r\n      // 发件人电子邮箱\r\n      String from = &quot;xxx@qq.com&quot;;\r\n\r\n      // 指定发送邮件的主机为 localhost\r\n      String host = &quot;smtp.qq.com&quot;;  //QQ 邮件服务器\r\n\r\n      // 获取系统属性\r\n      Properties properties = System.getProperties();\r\n\r\n      // 设置邮件服务器\r\n      properties.setProperty(&quot;mail.smtp.host&quot;, host);\r\n\r\n      properties.put(&quot;mail.smtp.auth&quot;, &quot;true&quot;);\r\n      // 获取默认session对象\r\n      Session session = Session.getDefaultInstance(properties,new Authenticator(){\r\n	    public PasswordAuthentication getPasswordAuthentication()\r\n	    {\r\n	     return new PasswordAuthentication(&quot;xxx@qq.com&quot;, &quot;qq邮箱密码&quot;); //发件人邮件用户名、密码\r\n	    }\r\n	   });\r\n\r\n      try{\r\n         // 创建默认的 MimeMessage 对象\r\n         MimeMessage message = new MimeMessage(session);\r\n\r\n         // Set From: 头部头字段\r\n         message.setFrom(new InternetAddress(from));\r\n\r\n         // Set To: 头部头字段\r\n         message.addRecipient(Message.RecipientType.TO,\r\n                                  new InternetAddress(to));\r\n\r\n         // Set Subject: 头部头字段\r\n         message.setSubject(&quot;This is the Subject Line!&quot;);\r\n\r\n         // 设置消息体\r\n         message.setText(&quot;This is actual message&quot;);\r\n\r\n         // 发送消息\r\n         Transport.send(message);\r\n         System.out.println(&quot;Sent message successfully....from w3cschool.cc&quot;);\r\n      }catch (MessagingException mex) {\r\n         mex.printStackTrace();\r\n      }\r\n   }\r\n}\r\n</pre>', null, 'Java 发送邮件|发送一封简单的 E-mail|发送一封HTML E-mail|发送带有附件的 E-mail|用户认证部分|');
INSERT INTO `schoolcontent` VALUES ('319', '322', '<h1>Java 多线程编程 </h1> \n<p> Java给多线程编程提供了内置的支持。一个多线程程序包含两个或多个能并发运行的部分。程序的每一部分都称作一个线程，并且每个线程定义了一个独立的执行路径。</p>\n<p> 多线程是多任务的一种特别的形式，但多线程使用了更小的资源开销。</p>\n<p> 这里定义和线程相关的另一个术语 - 进程：一个进程包括由操作系统分配的内存空间，包含一个或多个线程。一个线程不能独立的存在，它必须是进程的一部分。一个进程一直运行，直到所有的非守候线程都结束运行后才能结束。</p>\n<p> 多线程能满足程序员编写高效率的程序来达到充分利用CPU的目的。</p>\n<hr /> \n<h2> 一个线程的生命周 </h2> \n<p> 线程经过其生命周期的各个阶段。下图显示了一个线程完整的生命周期。</p> \n<p> <img class=\"attachment-full\" alt=\"java_thread\" src=\"http://www.runoob.com/wp-content/uploads/2014/01/java-thread.jpg\" /> </p> \n<ul> \n <li><b>新建状态:</b><p>使用 <strong>new</strong> 关键字和 <strong>Thread</strong> 类或其子类建立一个线程对象后，该线程对象就处于新建状态。它保持这个状态直到程序 <strong>start()</strong> 这个线程。</p></li> \n <li><b>就绪状态:</b><p>当线程对象调用了start()方法之后，该线程就进入就绪状态。就绪状态的线程处于就绪队列中，要等待JVM里线程调度器的调度。</p></li> \n <li><b>运行状态:</b><p>如果就绪状态的线程获取 CPU 资源，就可以执行 <strong>run()</strong>，此时线程便处于运行状态。处于运行状态的线程最为复杂，它可以变为阻塞状态、就绪状态和死亡状态。</p></li> \n <li><b>阻塞状态:</b><p>如果一个线程执行了sleep（睡眠）、suspend（挂起）等方法，失去所占用资源之后，该线程就从运行状态进入阻塞状态。在睡眠时间已到或获得设备资源后可以重新进入就绪状态。</p></li> \n <li><b>死亡状态: </b><p>一个运行状态的线程完成任务或者其他终止条件发生时，该线程就切换到终止状态。</p></li> \n</ul> \n<hr /> \n<h2> 线程的优先级</h2> \n<p> 每一个Java线程都有一个优先级，这样有助于操作系统确定线程的调度顺序。</p>\n<p>Java线程的优先级是一个整数，其取值范围是1 （Thread.MIN_PRIORITY ） - 10 （Thread.MAX_PRIORITY ）。</p>\n<p>默认情况下，每一个线程都会分配一个优先级NORM_PRIORITY（5）。 </p>\n<p>具有较高优先级的线程对程序更重要，并且应该在低优先级的线程之前分配处理器资源。但是，线程优先级不能保证线程执行的顺序，而且非常依赖于平台。</p> \n<hr /> \n<h2> 创建一个线程</h2> \n<p>Java提供了两种创建线程方法：</p> \n<ul>\n <li> 通过实现Runable接口；</li>\n <li> 通过继承Thread类本身。</li>\n</ul> \n<hr />\n<h2> 通过实现Runnable接口来创建线程</h2> \n<p> 创建一个线程，最简单的方法是创建一个实现Runnable接口的类。</p>\n<p> 为了实现Runnable，一个类只需要执行一个方法调用run()，声明如下：</p>\n<p> </p>\n<pre>\r\npublic void run()\r\n</pre> \n<p> 你可以重写该方法，重要的是理解的run()可以调用其他方法，使用其他类，并声明变量，就像主线程一样。</p>\n<p> 在创建一个实现Runnable接口的类之后，你可以在类中实例化一个线程对象。</p>\n<p> Thread定义了几个构造方法，下面的这个是我们经常使用的：</p> \n<pre>\r\nThread(Runnable threadOb,String threadName);\r\n</pre> \n<p> 这里，threadOb 是一个实现Runnable 接口的类的实例，并且 threadName指定新线程的名字。</p>\n<p> 新线程创建之后，你调用它的start()方法它才会运行。</p> \n<pre>\r\nvoid start();\r\n</pre> \n<h3> 实例</h3> \n<p> 下面是一个创建线程并开始让它执行的实例： </p> \n<pre>\r\n// 创建一个新的线程\r\nclass NewThread implements Runnable {\r\n   Thread t;\r\n   NewThread() {\r\n      // 创建第二个新线程\r\n      t = new Thread(this, &quot;Demo Thread&quot;);\r\n      System.out.println(&quot;Child thread: &quot; + t);\r\n      t.start(); // 开始线程\r\n   }\r\n  \r\n   // 第二个线程入口\r\n   public void run() {\r\n      try {\r\n         for(int i = 5; i &gt; 0; i--) {\r\n            System.out.println(&quot;Child Thread: &quot; + i);\r\n            // 暂停线程\r\n            Thread.sleep(50);\r\n         }\r\n     } catch (InterruptedException e) {\r\n         System.out.println(&quot;Child interrupted.&quot;);\r\n     }\r\n     System.out.println(&quot;Exiting child thread.&quot;);\r\n   }\r\n}\r\n \r\npublic class ThreadDemo {\r\n   public static void main(String args[]) {\r\n      new NewThread(); // 创建一个新线程\r\n      try {\r\n         for(int i = 5; i &gt; 0; i--) {\r\n           System.out.println(&quot;Main Thread: &quot; + i);\r\n           Thread.sleep(100);\r\n         }\r\n      } catch (InterruptedException e) {\r\n         System.out.println(&quot;Main thread interrupted.&quot;);\r\n      }\r\n      System.out.println(&quot;Main thread exiting.&quot;);\r\n   }\r\n}\r\n</pre> \n<p> 编译以上程序运行结果如下： </p> \n<pre>\r\nChild thread: Thread[Demo Thread,5,main]\r\nMain Thread: 5\r\nChild Thread: 5\r\nChild Thread: 4\r\nMain Thread: 4\r\nChild Thread: 3\r\nChild Thread: 2\r\nMain Thread: 3\r\nChild Thread: 1\r\nExiting child thread.\r\nMain Thread: 2\r\nMain Thread: 1\r\nMain thread exiting.\r\n</pre> \n<hr /> \n<h2> 通过继承Thread来创建线程</h2> \n<p> 创建一个线程的第二种方法是创建一个新的类，该类继承Thread类，然后创建一个该类的实例。</p>\n<p> 继承类必须重写run()方法，该方法是新线程的入口点。它也必须调用start()方法才能执行。</p> \n<h3> 实例</h3> \n<pre>\r\n// 通过继承 Thread 创建线程\r\nclass NewThread extends Thread {\r\n   NewThread() {\r\n      // 创建第二个新线程\r\n      super(&quot;Demo Thread&quot;);\r\n      System.out.println(&quot;Child thread: &quot; + this);\r\n      start(); // 开始线程\r\n   }\r\n \r\n   // 第二个线程入口\r\n   public void run() {\r\n      try {\r\n         for(int i = 5; i &gt; 0; i--) {\r\n            System.out.println(&quot;Child Thread: &quot; + i);\r\n                            // 让线程休眠一会\r\n            Thread.sleep(50);\r\n         }\r\n      } catch (InterruptedException e) {\r\n         System.out.println(&quot;Child interrupted.&quot;);\r\n      }\r\n      System.out.println(&quot;Exiting child thread.&quot;);\r\n   }\r\n}\r\n \r\npublic class ExtendThread {\r\n   public static void main(String args[]) {\r\n      new NewThread(); // 创建一个新线程\r\n      try {\r\n         for(int i = 5; i &gt; 0; i--) {\r\n            System.out.println(&quot;Main Thread: &quot; + i);\r\n            Thread.sleep(100);\r\n         }\r\n      } catch (InterruptedException e) {\r\n         System.out.println(&quot;Main thread interrupted.&quot;);\r\n      }\r\n      System.out.println(&quot;Main thread exiting.&quot;);\r\n   }\r\n}\r\n</pre> \n<p>编译以上程序运行结果如下： </p> \n<pre>\r\nChild thread: Thread[Demo Thread,5,main]\r\nMain Thread: 5\r\nChild Thread: 5\r\nChild Thread: 4\r\nMain Thread: 4\r\nChild Thread: 3\r\nChild Thread: 2\r\nMain Thread: 3\r\nChild Thread: 1\r\nExiting child thread.\r\nMain Thread: 2\r\nMain Thread: 1\r\nMain thread exiting.\r\n</pre>\n<hr /> \n<h2> Thread 方法</h2> \n<p> 下表列出了Thread类的一些重要方法： </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> <strong>序号</strong></th> \n   <th style=\"text-align: center;\"> <strong>方法描述</strong></th> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <strong>public void start()</strong><br /> 使该线程开始执行；<b style=\"color:black;background-color:#ffff66\">Java</b> 虚拟机调用该线程的&nbsp;run&nbsp;方法。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <strong>public void run()</strong><br /> 如果该线程是使用独立的&nbsp;Runnable&nbsp;运行对象构造的，则调用该&nbsp;Runnable&nbsp;对象的&nbsp;run&nbsp;方法；否则，该方法不执行任何操作并返回。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <strong>public final void setName(String name)</strong><br /> 改变线程名称，使之与参数&nbsp;name&nbsp;相同。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <strong>public final void setPriority(int priority)</strong><br /> &nbsp;更改线程的优先级。</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> <strong>public final void setDaemon(boolean on)</strong><br /> 将该线程标记为守护线程或用户线程。</td> \n  </tr> \n  <tr> \n   <td> 6</td> \n   <td> <strong>public final void join(long millisec)</strong><br /> 等待该线程终止的时间最长为&nbsp;millis&nbsp;毫秒。</td> \n  </tr> \n  <tr> \n   <td> 7</td> \n   <td> <strong>public void interrupt()</strong><br /> 中断线程。</td> \n  </tr> \n  <tr> \n   <td> 8</td> \n   <td> <strong>public final boolean isAlive()</strong><br /> 测试线程是否处于活动状态。</td> \n  </tr> \n </tbody> \n</table> \n<p>测试线程是否处于活动状态。 上述方法是被Thread对象调用的。下面的方法是Thread类的静态方法。 </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> <strong>序号</strong></th> \n   <th style=\"text-align: center;\"> <strong>方法描述</strong></th> \n  </tr> \n  <tr> \n   <td> 1</td> \n   <td> <strong>public static void yield()</strong><br /> 暂停当前正在执行的线程对象，并执行其他线程。</td> \n  </tr> \n  <tr> \n   <td> 2</td> \n   <td> <strong>public static void sleep(long millisec)</strong><br /> 在指定的毫秒数内让当前正在执行的线程休眠（暂停执行），此操作受到系统计时器和调度程序精度和准确性的影响。</td> \n  </tr> \n  <tr> \n   <td> 3</td> \n   <td> <strong>public static boolean holdsLock(Object x)</strong><br /> 当且仅当当前线程在指定的对象上保持监视器锁时，才返回&nbsp;true。</td> \n  </tr> \n  <tr> \n   <td> 4</td> \n   <td> <strong>public static Thread currentThread()</strong><br /> 返回对当前正在执行的线程对象的引用。</td> \n  </tr> \n  <tr> \n   <td> 5</td> \n   <td> <strong>public static void dumpStack()</strong><br /> 将当前线程的堆栈跟踪打印至标准错误流。</td> \n  </tr> \n </tbody> \n</table> \n<h3>实例</h3> \n<p> 如下的ThreadClassDemo 程序演示了Thread类的一些方法： </p> \n<pre>\r\n// 文件名 : DisplayMessage.java\r\n// 通过实现 Runnable 接口创建线程\r\npublic class DisplayMessage implements Runnable\r\n{\r\n   private String message;\r\n   public DisplayMessage(String message)\r\n   {\r\n      this.message = message;\r\n   }\r\n   public void run()\r\n   {\r\n      while(true)\r\n      {\r\n         System.out.println(message);\r\n      }\r\n   }\r\n}\r\n</pre> \n<pre>\r\n// 文件名 : GuessANumber.java\r\n// 通过继承 Thread 类创建线程\r\n\r\npublic class GuessANumber extends Thread\r\n{\r\n   private int number;\r\n   public GuessANumber(int number)\r\n   {\r\n      this.number = number;\r\n   }\r\n   public void run()\r\n   {\r\n      int counter = 0;\r\n      int guess = 0;\r\n      do\r\n      {\r\n          guess = (int) (Math.random() * 100 + 1);\r\n          System.out.println(this.getName()\r\n                       + &quot; guesses &quot; + guess);\r\n          counter++;\r\n      }while(guess != number);\r\n      System.out.println(&quot;** Correct! &quot; + this.getName()\r\n                       + &quot; in &quot; + counter + &quot; guesses.**&quot;);\r\n   }\r\n}\r\n</pre> \n<pre>\r\n// 文件名 : ThreadClassDemo.java\r\npublic class ThreadClassDemo\r\n{\r\n   public static void main(String [] args)\r\n   {\r\n      Runnable hello = new DisplayMessage(&quot;Hello&quot;);\r\n      Thread thread1 = new Thread(hello);\r\n      thread1.setDaemon(true);\r\n      thread1.setName(&quot;hello&quot;);\r\n      System.out.println(&quot;Starting hello thread...&quot;);\r\n      thread1.start();\r\n     \r\n      Runnable bye = new DisplayMessage(&quot;Goodbye&quot;);\r\n      Thread thread2 = new Thread(bye);\r\n      thread2.setPriority(Thread.MIN_PRIORITY);\r\n      thread2.setDaemon(true);\r\n      System.out.println(&quot;Starting goodbye thread...&quot;);\r\n      thread2.start();\r\n \r\n      System.out.println(&quot;Starting thread3...&quot;);\r\n      Thread thread3 = new GuessANumber(27);\r\n      thread3.start();\r\n      try\r\n      {\r\n         thread3.join();\r\n      }catch(InterruptedException e)\r\n      {\r\n         System.out.println(&quot;Thread interrupted.&quot;);\r\n      }\r\n      System.out.println(&quot;Starting thread4...&quot;);\r\n      Thread thread4 = new GuessANumber(75);\r\n     \r\n           thread4.start();\r\n      System.out.println(&quot;main() is ending...&quot;);\r\n   }\r\n}\r\n</pre> \n<p> 运行结果如下，每一次运行的结果都不一样。 </p> \n<pre>\r\nStarting hello thread...\r\nStarting goodbye thread...\r\nHello\r\nHello\r\nHello\r\nHello\r\nHello\r\nHello\r\nHello\r\nHello\r\nHello\r\nThread-2 guesses 27\r\nHello\r\n** Correct! Thread-2 in 102 guesses.**\r\nHello\r\nStarting thread4...\r\nHello\r\nHello\r\n..........remaining result produced.\r\n</pre> \n<h2>线程的几个主要概念: </h2> \n<p> 在多线程编程时，你需要了解以下几个概念：</p> \n<ul> \n <li> 线程同步</li>\n <li> 线程间通信</li>\n <li> 线程死锁</li>\n <li> 线程控制：挂起、停止和恢复</li>\n</ul> \n<hr />\n<h2>多线程的使用</h2> \n<p> 有效利用多线程的关键是理解程序是并发执行而不是串行执行的。例如：程序中有两个子系统需要并发执行，这时候就需要利用多线程编程。</p>\n<p> 通过对多线程的使用，可以编写出非常高效的程序。不过请注意，如果你创建太多的线程，程序执行的效率实际上是降低了，而不是提升了。</p>\n<p> 请记住，上下文的切换开销也很重要，如果你创建了太多的线程，CPU花费在上下文的切换的时间将多于执行程序的时间！</p>', null, 'Java 多线程编程|一个线程的生命周|线程的优先级|创建一个线程|通过实现Runnable接口来创建线程|通过继承Thread来创建线程|Thread 方法|线程的几个主要概念:|多线程的使用|');
INSERT INTO `schoolcontent` VALUES ('320', '323', '<h1>Java Applet基础 </h1>\n<p> applet是一种Java程序。它一般运行在支持Java的Web浏览器内。因为它有完整的Java API支持,所以applet是一个全功能的Java应用程序。</p>\n<p> 如下所示是独立的Java应用程序和applet程序之间重要的不同：</p> \n<ul> \n <li> Java中applet类继承了 java.applet.Applet类</li> \n <li> Applet类没有定义main()，所以一个 Applet程序不会调用main()方法，</li> \n <li> Applets被设计为嵌入在一个HTML页面。</li> \n <li> 当用户浏览包含Applet的HTML页面，Applet的代码就被下载到用户的机器上。</li> \n <li> 要查看一个applet需要JVM。 JVM可以是Web浏览器的一个插件，或一个独立的运行时环境。</li> \n <li> 用户机器上的JVM创建一个applet类的实例，并调用Applet生命周期过程中的各种方法。</li> \n <li> Applets有Web浏览器强制执行的严格的安全规则，applet的安全机制被称为沙箱安全。</li> \n <li> applet需要的其他类可以用Java归档（JAR）文件的形式下载下来。</li> \n</ul> \n<hr /> \n<h2> Applet的生命周期 </h2> \n<p> Applet类中的四个方法给你提供了一个框架，你可以再该框架上开发小程序： </p> \n<ul>\n <li><strong> init: </strong>该方法的目的是为你的applet提供所需的任何初始化。在Applet标记内的param标签被处理后调用该方法。</li>\n <li><strong> start:</strong> 浏览器调用init方法后，该方法被自动调用。每当用户从其他页面返回到包含Applet的页面时，则调用该方法。</li>\n <li><strong> stop:</strong>当用户从包含applet的页面移除的时候，该方法自动被调用。因此，可以在相同的applet中反复调用该方法。</li>\n <li><strong> destroy: </strong>此方法仅当浏览器正常关闭时调用。因为applets只有在HTML网页上有效，所以你不应该在用户离开包含Applet的页面后遗漏任何资源.</li>\n <li><strong> paint:</strong> 该方法在start()方法之后立即被调用，或者在applet需要重绘在浏览器的时候调用。paint()方法实际上继承于java.awt。</li>\n</ul> \n<hr />\n<h2>&quot;Hello, World&quot; Applet: </h2> \n<p> 下面是一个简单的Applet程序HelloWorldApplet.java: </p> \n<pre>\r\nimport java.applet.*;\r\nimport java.awt.*;\r\n \r\npublic class HelloWorldApplet extends Applet\r\n{\r\n   public void paint (Graphics g)\r\n   {\r\n      g.drawString (&quot;Hello World&quot;, 25, 50);\r\n   }\r\n}\r\n</pre> \n<p> 这些import语句将以下类导入到我们的applet类中： </p> \n<pre>\r\njava.applet.Applet.\r\njava.awt.Graphics.\r\n</pre> \n<p> 没有这些import语句，Java编译器就识别不了Applet和Graphics类。 </p> \n<hr /> \n<h2> Applet 类</h2> \n<p> 每一个applet都是java.applet.Applet 类的子类，基础的Applet类提供了供衍生类调用的方法,以此来得到浏览器上下文的信息和服务。 </p>\n<p> 这些方法做了如下事情：</p> \n<ul>\n <li> 得到applet的参数</li>\n <li> 得到包含applet的HTML文件的网络位置</li>\n <li> 得到applet类目录的网络位置</li>\n <li> 打印浏览器的状态信息</li>\n <li> 获取一张图片</li>\n <li> 获取一个音频片段</li>\n <li> 播放一个音频片段</li>\n <li> 调整此 applet 的大小</li>\n</ul> \n<p>除此之外，Applet类还提供了一个接口，该接口供Viewer或浏览器来获取applet的信息，并且来控制applet的执行。 </p>\n<p>Viewer可能是：</p>\n<ul>\n <li> 请求applet作者、版本和版权的信息</li>\n <li> 请求applet识别的参数的描述</li>\n <li> 初始化applet</li>\n <li> 销毁applet</li>\n <li> 开始执行applet</li>\n <li> 结束执行applet</li>\n</ul>\n<p> Applet类提供了对这些方法的默认实现，这些方法可以在需要的时候重写。</p>\n<p> &quot;Hello，World&quot;applet都是按标准编写的。唯一被重写的方法是paint方法。</p> \n<hr /> \n<h2> Applet的调用</h2> \n<p> applet是一种Java程序。它一般运行在支持Java的Web浏览器内。因为它有完整的Java API支持,所以applet是一个全功能的Java应用程序。 </p> \n<p> &lt;applet&gt;标签是在HTML文件中嵌入applet的基础。以下是一个调用&quot;Hello World&quot;applet的例子； </p> \n<pre>\r\n&lt;html&gt;\r\n&lt;title&gt;The Hello, World Applet&lt;/title&gt;\r\n&lt;hr&gt;\r\n&lt;applet code=&quot;HelloWorldApplet.class&quot; width=&quot;320&quot; height=&quot;120&quot;&gt;\r\nIf your browser was Java-enabled, a &quot;Hello, World&quot;\r\nmessage would appear here.\r\n&lt;/applet&gt;\r\n&lt;hr&gt;\r\n&lt;/html&gt;\r\n</pre> \n<p><strong> 注意: </strong>你可以参照HTML Applet标签来更多的了解从HTML中调用applet的方法。</p>\n<p> &lt;applet&gt;标签的属性指定了要运行的Applet类。Width和height用来指定applet运行面板的初始大小。applet必须使用&lt;/applet&gt;标签来关闭。</p>\n<p> 如果applet接受参数，那么参数的值需要在<param></param>标签里添加，该标签位于&lt;applet&gt;和&lt;/applet&gt;之间。浏览器忽略了applet标签之间的文本和其他标签。</p>\n<p> 不支持Java的浏览器不能执行&lt;applet&gt;和&lt;/applet&gt;。因此，在标签之间显示并且和applet没有关系的任何东西，在不支持的Java的浏览器里是可见的。</p>\n<p> Viewer或者浏览器在文档的位置寻找编译过的Java代码，要指定文档的路径，得使用&lt;applet&gt;标签的codebase属性指定。</p>\n<p> 如下所示：</p> \n<pre>\r\n&lt;applet codebase=&quot;http://amrood.com/applets&quot;\r\ncode=&quot;HelloWorldApplet.class&quot; width=&quot;320&quot; height=&quot;120&quot;&gt;\r\n</pre> \n<p> 如果applet所在一个包中而不是默认包，那么所在的包必须在code属性里指定，例如： </p> \n<pre>\r\n&lt;applet code=&quot;mypackage.subpackage.TestApplet.class&quot;\r\n           width=&quot;320&quot; height=&quot;120&quot;&gt;\r\n</pre> \n<h2></h2>\n<h2>获得applet参数</h2> \n<p> 下面的例子演示了如何使用一个applet响应来设置文件中指定的参数。该Applet显示了一个黑色棋盘图案和第二种颜色。</p>\n<p> 第二种颜色和每一列的大小通过文档中的applet的参数指定。</p>\n<p> CheckerApplet 在init()方法里得到它的参数。也可以在paint()方法里得到它的参数。然而，在applet开始得到值并保存了设置，而不是每一次刷新的时候都得到值，这样是很方便，并且高效的。 </p>\n<p>applet viewer或者浏览器在applet每次运行的时候调用init()方法。在加载applet之后，Viewer立即调用init()方法（Applet.init()什么也没做），重写该方法的默认实现，添加一些自定义的初始化代码。 </p>\n<p>Applet.getParameter()方法通过给出参数名称得到参数值。如果得到的值是数字或者其他非字符数据，那么必须解析为字符串类型。 </p>\n<p>下例是CheckerApplet.java的梗概：</p> \n<pre>\r\nimport java.applet.*;\r\nimport java.awt.*;\r\npublic class CheckerApplet extends Applet\r\n{\r\n   int squareSize = 50;// 初始化默认大小\r\n   public void init () {}\r\n   private void parseSquareSize (String param) {}\r\n   private Color parseColor (String param) {}\r\n   public void paint (Graphics g) {}\r\n}\r\n</pre> \n<p> 下面是CheckerApplet类的init()方法和私有的parseSquareSize()方法：</p> \n<pre>\r\npublic void init ()\r\n{\r\n   String squareSizeParam = getParameter (&quot;squareSize&quot;);\r\n   parseSquareSize (squareSizeParam);\r\n   String colorParam = getParameter (&quot;color&quot;);\r\n   Color fg = parseColor (colorParam);\r\n   setBackground (Color.black);\r\n   setForeground (fg);\r\n}\r\nprivate void parseSquareSize (String param)\r\n{\r\n   if (param == null) return;\r\n   try {\r\n      squareSize = Integer.parseInt (param);\r\n   }\r\n   catch (Exception e) {\r\n     // 保留默认值\r\n   }\r\n}\r\n</pre> \n<p> 该applet调用parseSquareSize()，来解析squareSize参数。parseSquareSize()调用了库方法Integer. parseInt()，该方法将一个字符串解析为一个整数，当参数无效的时候，Integer.parseInt()抛出异常。 </p>\n<p>因此，parseSquareSize()方法也是捕获异常的，并不允许applet接受无效的输入。 </p>\n<p>Applet调用parseColor()方法将颜色参数解析为一个Color值。parseColor()方法做了一系列字符串的比较，来匹配参数的值和预定义颜色的名字。你需要实现这些方法来使applet工作。 </p> \n<hr />\n<h2> 指定applet参数</h2> \n<p> 如下的例子是一个HTML文件，其中嵌入了CheckerApplet类。HTML文件通过使用<param></param>标签的方法给applet指定了两个参数。 </p> \n<pre>\r\n&lt;html&gt;\r\n&lt;title&gt;Checkerboard Applet&lt;/title&gt;\r\n&lt;hr&gt;\r\n&lt;applet code=&quot;CheckerApplet.class&quot; width=&quot;480&quot; height=&quot;320&quot;&gt;\r\n&lt;param name=&quot;color&quot; value=&quot;blue&quot;&gt;\r\n&lt;param name=&quot;squaresize&quot; value=&quot;30&quot;&gt;\r\n&lt;/applet&gt;\r\n&lt;hr&gt;\r\n&lt;/html&gt;\r\n</pre> \n<p><strong> 注意: </strong>参数名字大小写不敏感。</p> \n<hr /> \n<h2>应用程序转换成Applet </h2>\n<p> 将图形化的Java应用程序（是指，使用AWT的应用程序和使用java程序启动器启动的程序）转换成嵌入在web页面里的applet是很简单的。</p>\n<p> 下面是将应用程序转换成applet的几个步骤：</p> \n<ul>\n <li> 编写一个HTML页面，该页面带有能加载applet代码的标签。</li>\n <li> 编写一个JApplet类的子类，将该类设置为public。否则，applet不能被加载。</li>\n <li> 消除应用程序的main()方法。不要为应用程序构造框架窗口，因为你的应用程序要显示在浏览器中。</li>\n <li> 将应用程序中框架窗口的构造方法里的初始化代码移到applet的init()方法中，你不必显示的构造applet对象，浏览器将通过调用init()方法来实例化一个对象。</li>\n <li> 移除对setSize()方法的调用，对于applet来讲，大小已经通过HTML文件里的width和height参数设定好了。</li>\n <li> 移除对 setDefaultCloseOperation()方法的调用。Applet不能被关闭，它随着浏览器的退出而终止。</li>\n <li> 如果应用程序调用了setTitle()方法，消除对该方法的调用。applet不能有标题栏。（当然你可以给通过html的title标签给网页自身命名）</li>\n <li> 不要调用setVisible(true),applet是自动显示的。</li>\n</ul> \n<hr /> \n<h2> 事件处理</h2> \n<p> Applet类从Container类继承了许多事件处理方法。Container类定义了几个方法，例如：processKeyEvent()和processMouseEvent()，用来处理特别类型的事件，还有一个捕获所有事件的方法叫做processEvent。 </p>\n<p>为了响应一个事件，applet必须重写合适的事件处理方法。</p> \n<pre>\r\nimport java.awt.event.MouseListener;\r\nimport java.awt.event.MouseEvent;\r\nimport java.applet.Applet;\r\nimport java.awt.Graphics;\r\n \r\npublic class ExampleEventHandling extends Applet\r\n                             implements MouseListener {\r\n \r\n    StringBuffer strBuffer;\r\n \r\n    public void init() {\r\n         addMouseListener(this);\r\n         strBuffer = new StringBuffer();\r\n        addItem(&quot;initializing the apple &quot;);\r\n    }\r\n \r\n    public void start() {\r\n        addItem(&quot;starting the applet &quot;);\r\n    }\r\n \r\n    public void stop() {\r\n        addItem(&quot;stopping the applet &quot;);\r\n    }\r\n \r\n    public void destroy() {\r\n        addItem(&quot;unloading the applet&quot;);\r\n    }\r\n \r\n    void addItem(String word) {\r\n        System.out.println(word);\r\n        strBuffer.append(word);\r\n        repaint();\r\n    }\r\n \r\n    public void paint(Graphics g) {\r\n         //Draw a Rectangle around the applet\'s display area.\r\n        g.drawRect(0, 0,\r\n                      getWidth() - 1,\r\n                      getHeight() - 1);\r\n \r\n         //display the string inside the rectangle.\r\n        g.drawString(strBuffer.toString(), 10, 20);\r\n    }\r\n \r\n  \r\n    public void mouseEntered(MouseEvent event) {\r\n    }\r\n    public void mouseExited(MouseEvent event) {\r\n    }\r\n    public void mousePressed(MouseEvent event) {\r\n    }\r\n    public void mouseReleased(MouseEvent event) {\r\n    }\r\n \r\n    public void mouseClicked(MouseEvent event) {\r\n         addItem(&quot;mouse clicked! &quot;);\r\n    }\r\n}\r\n</pre> \n<p> 如下调用该applet：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;title&gt;Event Handling&lt;/title&gt;\r\n&lt;hr&gt;\r\n&lt;applet code=&quot;ExampleEventHandling.class&quot;\r\nwidth=&quot;300&quot; height=&quot;300&quot;&gt;\r\n&lt;/applet&gt;\r\n&lt;hr&gt;\r\n&lt;/html&gt;\r\n</pre> \n<p> 最开始运行，applet显示 &quot;initializing the applet. Starting the applet.&quot;，然后你一点击矩形框，就会显示&quot;mouse clicked&quot; 。 </p> \n<hr />\n<h2>显示图片</h2> \n<p> applet能显示GIF,JPEG,BMP等其他格式的图片。为了在applet中显示图片，你需要使用java.awt.Graphics类的drawImage()方法。 </p>\n<p> 如下实例演示了显示图片的所有步骤：</p> \n<pre>\r\nimport java.applet.*;\r\nimport java.awt.*;\r\nimport java.net.*;\r\npublic class ImageDemo extends Applet\r\n{\r\n  private Image image;\r\n  private AppletContext context;\r\n  public void init()\r\n  {\r\n      context = this.getAppletContext();\r\n      String imageURL = this.getParameter(&quot;image&quot;);\r\n      if(imageURL == null)\r\n      {\r\n         imageURL = &quot;java.jpg&quot;;\r\n      }\r\n      try\r\n      {\r\n         URL url = new URL(this.getDocumentBase(), imageURL);\r\n         image = context.getImage(url);\r\n      }catch(MalformedURLException e)\r\n      {\r\n         e.printStackTrace();\r\n         // Display in browser status bar\r\n         context.showStatus(&quot;Could not load image!&quot;);\r\n      }\r\n   }\r\n   public void paint(Graphics g)\r\n   {\r\n      context.showStatus(&quot;Displaying image&quot;);\r\n      g.drawImage(image, 0, 0, 200, 84, null);\r\n      g.drawString(&quot;www.javalicense.com&quot;, 35, 100);\r\n   } \r\n}\r\n</pre>\n<p> 如下调用该applet：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;title&gt;The ImageDemo applet&lt;/title&gt;\r\n&lt;hr&gt;\r\n&lt;applet code=&quot;ImageDemo.class&quot; width=&quot;300&quot; height=&quot;200&quot;&gt;\r\n&lt;param name=&quot;image&quot; value=&quot;java.jpg&quot;&gt;\r\n&lt;/applet&gt;\r\n&lt;hr&gt;\r\n&lt;/html&gt;\r\n</pre> \n<hr />\n<h2>播放音频</h2> \n<p> Applet能通过使用java.applet包中的AudioClip接口播放音频。AudioClip接口定义了三个方法：</p> \n<ul>\n <li><strong> public void play():</strong> 从一开始播放音频片段一次。</li>\n <li><strong> public void loop(): </strong> 循环播放音频片段</li>\n <li><strong> public void stop(): </strong> 停止播放音频片段</li>\n</ul> \n<p> 为了得到AudioClip对象，你必须调用Applet类的getAudioClip()方法。无论URL指向的是否是一个真实的音频文件，该方法都会立即返回结果。 </p>\n<p>直到要播放音频文件时，该文件才会下载下来。</p>\n<p> 如下实例演示了播放音频的所有步骤：</p> \n<pre>\r\nimport java.applet.*;\r\nimport java.awt.*;\r\nimport java.net.*;\r\npublic class AudioDemo extends Applet\r\n{\r\n   private AudioClip clip;\r\n   private AppletContext context;\r\n   public void init()\r\n   {\r\n      context = this.getAppletContext();\r\n      String audioURL = this.getParameter(&quot;audio&quot;);\r\n      if(audioURL == null)\r\n      {\r\n         audioURL = &quot;default.au&quot;;\r\n      }\r\n      try\r\n      {\r\n         URL url = new URL(this.getDocumentBase(), audioURL);\r\n         clip = context.getAudioClip(url);\r\n      }catch(MalformedURLException e)\r\n      {\r\n         e.printStackTrace();\r\n         context.showStatus(&quot;Could not load audio file!&quot;);\r\n      }\r\n   }\r\n   public void start()\r\n   {\r\n      if(clip != null)\r\n      {\r\n         clip.loop();\r\n      }\r\n   }\r\n   public void stop()\r\n   {\r\n      if(clip != null)\r\n      {\r\n         clip.stop();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p> 如下调用applet：</p> \n<pre>\r\n&lt;html&gt;\r\n&lt;title&gt;The ImageDemo applet&lt;/title&gt;\r\n&lt;hr&gt;\r\n&lt;applet code=&quot;ImageDemo.class&quot; width=&quot;0&quot; height=&quot;0&quot;&gt;\r\n&lt;param name=&quot;audio&quot; value=&quot;test.wav&quot;&gt;\r\n&lt;/applet&gt;\r\n&lt;hr&gt;\r\n</pre> \n<p> 你可以使用你电脑上的test.wav来测试上面的实例。 </p>', null, 'Java Applet基础|Applet的生命周期|\"Hello, World\" Applet:|Applet 类|Applet的调用||获得applet参数|指定applet参数|应用程序转换成Applet|事件处理|显示图片|播放音频|');
INSERT INTO `schoolcontent` VALUES ('321', '324', '<h1>Java 文档注释 </h1> \n<p> Java只是三种注释方式。前两种分别是// 和/* */，第三种被称作说明注释，它以/** 开始，以 */结束。</p>\n<p> 说明注释允许你在程序中嵌入关于程序的信息。你可以使用javadoc工具软件来生成信息，并输出到HTML文件中。</p>\n<p> 说明注释，是你更加方面的记录你的程序的信息。</p>\n<hr /> \n<h2> javadoc 标签</h2> \n<p> javadoc工具软件识别以下标签： </p> \n<table class=\"reference\"> \n <tbody> \n  <tr> \n   <th> <strong>标签</strong></th> \n   <th style=\"text-align: center;\"> <strong>描述</strong></th> \n   <th style=\"text-align: center;\"> <strong>示例</strong></th> \n  </tr> \n  <tr> \n   <td> @author</td> \n   <td> 标识一个类的作者</td> \n   <td> @author description</td> \n  </tr> \n  <tr> \n   <td> @deprecated</td> \n   <td> 指名一个过期的类或成员</td> \n   <td> @deprecated description</td> \n  </tr> \n  <tr> \n   <td> {@docRoot}</td> \n   <td> 指明当前文档根目录的路径</td> \n   <td> Directory Path</td> \n  </tr> \n  <tr> \n   <td> @exception</td> \n   <td> 标志一个类抛出的异常</td> \n   <td> @exception exception-name explanation</td> \n  </tr> \n  <tr> \n   <td> {@inheritDoc}</td> \n   <td> 从直接父类继承的注释</td> \n   <td> Inherits a comment from the immediate surperclass.</td> \n  </tr> \n  <tr> \n   <td> {@link}</td> \n   <td> 插入一个到另一个主题的链接</td> \n   <td> {@link name text}</td> \n  </tr> \n  <tr> \n   <td> {@linkplain}</td> \n   <td> 插入一个到另一个主题的链接，但是该链接显示纯文本字体</td> \n   <td> Inserts an in-line link to another topic.</td> \n  </tr> \n  <tr> \n   <td> @param</td> \n   <td> 说明一个方法的参数</td> \n   <td> @param parameter-name explanation</td> \n  </tr> \n  <tr> \n   <td> @return</td> \n   <td> 说明返回值类型</td> \n   <td> @return explanation</td> \n  </tr> \n  <tr> \n   <td> @see</td> \n   <td> 指定一个到另一个主题的链接</td> \n   <td> @see anchor</td> \n  </tr> \n  <tr> \n   <td> @serial</td> \n   <td> 说明一个序列化属性</td> \n   <td> @serial description</td> \n  </tr> \n  <tr> \n   <td> @serialData</td> \n   <td> 说明通过writeObject( ) 和&nbsp;writeExternal( )方法写的数据</td> \n   <td> @serialData description</td> \n  </tr> \n  <tr> \n   <td> @serialField</td> \n   <td> 说明一个ObjectStreamField组件</td> \n   <td> @serialField name type description</td> \n  </tr> \n  <tr> \n   <td> @since</td> \n   <td> 标记当引入一个特定的变化时</td> \n   <td> @since release</td> \n  </tr> \n  <tr> \n   <td> @throws</td> \n   <td> 和 @exception标签一样.</td> \n   <td> The @throws tag has the same meaning as the @exception tag.</td> \n  </tr> \n  <tr> \n   <td> {@value}</td> \n   <td> 显示常量的值，该常量必须是static属性。</td> \n   <td> Displays the value of a constant, which must be a static field.</td> \n  </tr> \n  <tr> \n   <td> @version</td> \n   <td> 指定类的版本</td> \n   <td> @version info</td> \n  </tr> \n </tbody> \n</table> \n<hr />\n<h2>文档注释</h2> \n<p> 在开始的/**之后，第一行或几行是关于类、变量和方法的主要描述.</p>\n<p> 之后，你可以包含一个或多个何种各样的@标签。每一个@标签必须在一个新行的开始或者在一行的开始紧跟星号(*).</p>\n<p> 多个相同类型的标签应该放成一组。例如，如果你有三个@see标签，可以将它们一个接一个的放在一起。</p>\n<p> 下面是一个类的说明注释的示例：</p> \n<pre>\r\n/*** This class draws a bar chart.\r\n* @author Zara Ali\r\n* @version 1.2\r\n*/\r\n</pre> \n<hr />\n<h2> javadoc输出什么</h2> \n<p> javadoc工具将你Java程序的源代码作为输入，输出一些包含你程序注释的HTML文件。</p>\n<p> 每一个类的信息将在独自的HTML文件里。javadoc也可以输出继承的树形结构和索引。</p>\n<p> 由于javadoc的实现不同，工作也可能不同，你需要检查你的Java开发系统的版本等细节，选择合适的Javadoc版本。</p> \n<h3> 实例</h3> \n<p> 下面是一个使用说明注释的简单实例。注意每一个注释都在它描述的项目的前面。</p>\n<p> 在经过javadoc处理之后，SquareNum类的注释将在SquareNum.html中找到。</p> \n<pre>\r\nimport java.io.*;\r\n \r\n/**\r\n* This class demonstrates documentation comments.\r\n* @author Ayan Amhed\r\n* @version 1.2\r\n*/\r\npublic class SquareNum {\r\n   /**\r\n   * This method returns the square of num.\r\n   * This is a multiline description. You can use\r\n   * as many lines as you like.\r\n   * @param num The value to be squared.\r\n   * @return num squared.\r\n   */\r\n   public double square(double num) {\r\n      return num * num;\r\n   }\r\n   /**\r\n   * This method inputs a number from the user.\r\n   * @return The value input as a double.\r\n   * @exception IOException On input error.\r\n   * @see IOException\r\n   */\r\n   public double getNumber() throws IOException {\r\n      InputStreamReader isr = new InputStreamReader(System.in);\r\n      BufferedReader inData = new BufferedReader(isr);\r\n      String str;\r\n      str = inData.readLine();\r\n      return (new Double(str)).doubleValue();\r\n   }\r\n   /**\r\n   * This method demonstrates square().\r\n   * @param args Unused.\r\n   * @return Nothing.\r\n   * @exception IOException On input error.\r\n   * @see IOException\r\n   */\r\n   public static void main(String args[]) throws IOException\r\n   {\r\n      SquareNum ob = new SquareNum();\r\n      double val;\r\n      System.out.println(&quot;Enter value to be squared: &quot;);\r\n      val = ob.getNumber();\r\n      val = ob.square(val);\r\n      System.out.println(&quot;Squared value is &quot; + val);\r\n   }\r\n}\r\n</pre> \n<p> 如下，使用javadoc工具处理SquareNum.java文件： </p> \n<pre>\r\n$ javadoc SquareNum.java\r\nLoading source file SquareNum.java...\r\nConstructing Javadoc information...\r\nStandard Doclet version 1.5.0_13\r\nBuilding tree for all the packages and classes...\r\nGenerating SquareNum.html...\r\nSquareNum.java:39: warning - @return tag cannot be used\\\r\n                      in method with void return type.\r\nGenerating package-frame.html...\r\nGenerating package-summary.html...\r\nGenerating package-tree.html...\r\nGenerating constant-values.html...\r\nBuilding index for all the packages and classes...\r\nGenerating overview-tree.html...\r\nGenerating index-all.html...\r\nGenerating deprecated-list.html...\r\nBuilding index for all classes...\r\nGenerating allclasses-frame.html...\r\nGenerating allclasses-noframe.html...\r\nGenerating index.html...\r\nGenerating help-doc.html...\r\nGenerating stylesheet.css...\r\n1 warning\r\n$\r\n</pre>', null, 'Java 文档注释|javadoc 标签|文档注释|javadoc输出什么|');
INSERT INTO `schoolcontent` VALUES ('322', '325', '<h1> Java 实例</h1> 本章节我们将为大家介绍 Java 常用的实例，通过实例学习我们可以更快的掌握 Java 的应用。 \n<hr /> \n<h2>Java 环境设置实例</h2> \n<ol class=\"list\"> \n <li><a href=\"http://www.runoob.com/java/env-compile.html\">Java 实例 – 如何编译一个Java 文件？</a></li> \n <li><a href=\"http://www.runoob.com/java/env-run.html\">Java 实例 – Java 如何运行一个编译过的类文件?</a></li> \n <li><a href=\"http://www.runoob.com/java/env-classpath.html\">Java 实例 - 如何执行指定class文件目录（classpath）？</a></li> \n <li><a href=\"http://www.runoob.com/java/env-version.html\">Java 实例 – 如何查看当前 Java 运行的版本?</a></li>  \n</ol> \n<hr /> \n<h2>Java 字符串</h2> \n<ol> \n <li><a href=\"http://www.runoob.com/java/string-compare.html\">Java 实例 – 字符串比较</a></li> \n <li><a href=\"http://www.runoob.com/java/string-last-occurance.html\">Java 实例 - 查找字符串最后一次出现的位置</a></li> \n <li><a href=\"http://www.runoob.com/java/string-removing-char.html\">Java 实例 - 删除字符串中的一个字符</a></li> \n <li><a href=\"http://www.runoob.com/java/string-replace.html\">Java 实例 - 字符串替换</a></li> \n <li><a href=\"http://www.runoob.com/java/string-reverse.html\">Java 实例 - 字符串反转</a></li> \n <li><a href=\"http://www.runoob.com/java/string-search.html\">Java 实例 - 字符串查找</a></li> \n <li><a href=\"http://www.runoob.com/java/string-split.html\">Java 实例 - 字符串分割</a></li> \n <li><a href=\"http://www.runoob.com/java/string-uppercase.html\">Java 实例 - 字符串小写转大写</a></li> \n <li><a href=\"http://www.runoob.com/java/string-regionmatch.html\">Java 实例 - 测试两个字符串区域是否相等</a></li> \n <li><a href=\"http://www.runoob.com/java/string-performance.html\">Java 实例 - 字符串性能比较测试</a></li> \n <li><a href=\"http://www.runoob.com/java/string-optimization.html\">Java 实例 - 字符串优化</a></li> \n <li><a href=\"http://www.runoob.com/java/string-format.html\">Java 实例 - 字符串格式化</a></li> \n <li><a href=\"http://www.runoob.com/java/string-concatenation.html\">Java 实例 - 连接字符串</a></li> \n</ol> \n<hr /> \n<h2>Java 数组</h2> \n<ol>\n <li> <a href=\"http://www.runoob.com/java/arrays-search.html\">Java 实例 – 数组排序及元素查找</a></li>\n <li> <a href=\"http://www.runoob.com/java/arrays-insert.html\" title=\"Java 实例 – 数组添加元素\">Java 实例 – 数组添加元素</a></li>\n <li> <a href=\"http://www.runoob.com/java/arrays-upperbound.html\" title=\"Java 实例 – 获取数组长度\">Java 实例 – 获取数组长度</a></li>\n <li> <a href=\"http://www.runoob.com/java/arrays-reverse.html\" title=\"Java 实例 – 数组反转\">Java 实例 – 数组反转</a></li>\n <li> <a href=\"http://www.runoob.com/java/arrays-output.html\" title=\"Java 实例 – 数组输出\">Java 实例 – 数组输出</a></li>\n <li> <a href=\"http://www.runoob.com/java/arrays-min-max.html\" title=\"Java 实例 – 数组获取最大和最小值\">Java 实例 – 数组获取最大和最小值</a></li>\n <li> <a href=\"http://www.runoob.com/java/arrays_merge.html\" title=\"Java 实例 – 数组合并\">Java 实例 – 数组合并</a></li>\n <li> <a href=\"http://www.runoob.com/java/arrays-fill.html\" title=\"Java 实例 – 数组填充\">Java 实例 – 数组填充</a></li>\n <li> <a href=\"http://www.runoob.com/java/arrays-extension.html\" title=\"Java 实例 – 数组扩容\">Java 实例 – 数组扩容</a></li> \n <li><a href=\"http://www.runoob.com/java/arrays-compare.html\" title=\"Java 实例 – 数组排序及查找\">Java 实例 – 数组排序及查找</a> </li> \n <li><a href=\"http://www.runoob.com/java/arrays-remove.html\" title=\"Java 实例 – 数组排序及查找\">Java 实例 – 删除数组元素</a> </li> \n <li><a href=\"http://www.runoob.com/java/arrays-removeall.html\" title=\"Java 实例 – 数组排序及查找\">Java 实例 – 数组差集</a> </li> \n <li><a href=\"http://www.runoob.com/java/arrays-retainall.html\" title=\"Java 实例 – 数组排序及查找\">Java 实例 – 数组交集</a> </li> \n <li><a href=\"http://www.runoob.com/java/arrays-find.html\" title=\"Java 实例 – 数组排序及查找\">Java 实例 – 在数组中查找指定元素</a> </li> \n <li><a href=\"http://www.runoob.com/java/arrays-equal.html\" title=\"Java 实例 – 数组排序及查找\">Java 实例 – 判断数组是否相等</a> </li> \n <li><a href=\"http://www.runoob.com/java/arrays-union.html\" title=\"Java 实例 – 数组排序及查找\">Java 实例 - 数组并集</a> </li> \n</ol> \n<hr /> \n<h2>Java 时间处理</h2> \n<ol> \n <li><a href=\"http://www.runoob.com/java/date-time-am-pm.html\">Java 实例 - 格式化时间（SimpleDateFormat）</a> </li> \n <li><a href=\"http://www.runoob.com/java/date-time-datetime.html\">Java 实例 - 获取当前时间</a> </li> \n <li><a href=\"http://www.runoob.com/java/date-year-month.html\">Java 实例 - 获取年份、月份等</a> </li> \n <li><a href=\"http://www.runoob.com/java/date-timestamp2date.html\">Java 实例 - 时间戳转换成时间</a> </li> \n</ol> \n<hr /> \n<h2>Java 方法</h2> \n<ol> \n <li> <a href=\"http://www.runoob.com/java/method-overloading.html\"> Java 实例 – 方法重载</a></li>\n <li> <a href=\"http://www.runoob.com/java/method-array.html\"> Java 实例 – 输出数组元素</a></li>\n <li> <a href=\"http://www.runoob.com/java/method-tower.html\"> Java 实例 – 汉诺塔算法</a></li>\n <li> <a href=\"http://www.runoob.com/java/method-fibonacci.html\"> Java 实例 – 斐波那契数列</a></li>\n <li> <a href=\"http://www.runoob.com/java/method-factorial.html\"> Java 实例 – 阶乘</a></li>\n <li> <a href=\"java/method-override.html\"> Java 实例 – 方法覆盖</a></li>\n <li> <a href=\"java/method-instanceof.html\"> Java 实例 – instanceOf 关键字用法</a></li>\n <li> <a href=\"java/method-break.html\"> Java 实例 – break 关键字用法</a></li>\n <li> <a href=\"java/method-continue.html\"> Java 实例 – continue 关键字用法</a></li>\n <li> <a href=\"java/method-label.html\"> Java 实例 – 标签(Label)</a></li>\n <li> <a href=\"java/method-enum.html\"> Java 实例 – enum 和 switch 语句使用</a></li>\n <li> <a href=\"java/method-enum1.html\"> Java 实例 – Enum（枚举）构造函数及方法的使用</a></li>\n <li> <a href=\"java/method-for.html\"> Java 实例 – for 和 foreach循环使用</a></li>\n <li> <a href=\"java/method-varargs.html\"> Java 实例 – Varargs 可变参数使用</a></li>\n <li> <a href=\"java/method-varargs1.html\">Java 实例 – 重载(overloading)方法中使用 Varargs</a></li>\n</ol> \n<hr /> \n<h2>Java 文件操作</h2> \n<ol> \n <li><a href=\"http://www.w3cschool.cc/java/file-write.html\" target=\"_blank\">Java 实例 - 文件写入</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-read.html\" target=\"_blank\">Java 实例 - 读取文件内容</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-delete.html\" target=\"_blank\">Java 实例 - 删除文件</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-copy.html\" target=\"_blank\">Java 实例 - 将文件内容复制到另一个文件</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-append.html\" target=\"_blank\">Java 实例 - 向文件中追加数据</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-create-temp.html\" target=\"_blank\">Java 实例 - 创建临时文件</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-date-modify.html\" target=\"_blank\">Java 实例 - 修改文件最后的修改日期</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-size.html\" target=\"_blank\">Java 实例 - 获取文件大小</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-rename.html\" target=\"_blank\">Java 实例 - 文件重命名</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-read-only.html\" target=\"_blank\">Java 实例 - 设置文件只读</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-exist.html\" target=\"_blank\">Java 实例 - 检测文件是否存在</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-dir.html\" target=\"_blank\">Java 实例 - 在指定目录中创建文件</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-date.html\" target=\"_blank\">Java 实例 - 获取文件修改时间</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-create.html\" target=\"_blank\">Java 实例 - 创建文件</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/file-compare.html\" target=\"_blank\">Java 实例 - 文件路径比较</a></li> \n</ol> \n<hr /> \n<h2>Java 目录操作</h2> \n<ol> \n <li><a href=\"http://www.w3cschool.cc/java/dir-create.html\" target=\"_blank\">Java 实例 - 递归创建目录</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-delete.html\" target=\"_blank\">Java 实例 - 删除目录</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-empty.html\" target=\"_blank\">Java 实例 - 判断目录是否为空</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-hidden.html\" target=\"_blank\">Java 实例 - 判断文件是否隐藏</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-size.html\" target=\"_blank\">Java 实例 - 获取目录大小</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-search.html\" target=\"_blank\">Java 实例 - 在指定目录中查找文件</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-parent.html\" target=\"_blank\">Java 实例 - 获取文件的上级目录</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-modification.html\" target=\"_blank\">Java 实例 - 获取目录最后修改时间</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-hierarchy.html\" target=\"_blank\">Java 实例 - 打印目录结构</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-display.html\" target=\"_blank\">Java 实例 - 遍历指定目录下的所有目录</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-sub.html\" target=\"_blank\">Java 实例 - 遍历指定目录下的所有文件</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-search-file.html\" target=\"_blank\">Java 实例 - 在指定目录中查找文件</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-root.html\" target=\"_blank\">Java 实例 - 遍历系统根目录</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-current.html\" target=\"_blank\">Java 实例 - 查看当前工作目录</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/dir-traverse.html\" target=\"_blank\">Java 实例 - 遍历目录</a></li> \n</ol> \n<hr /> \n<h2>Java 异常处理</h2> \n<ol> \n <li><a href=\"http://www.w3cschool.cc/java/exception-method.html\" target=\"_blank\">Java 实例 - 异常处理方法</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/exception-hierarchy.html\" target=\"_blank\">Java 实例 - 多个异常处理（多个catch）</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/exception-finally.html\" target=\"_blank\">Java 实例 - Finally的用法</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/exception-catch.html\" target=\"_blank\">Java 实例 - 使用 catch 处理异常</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/exception-thread.html\" target=\"_blank\">Java 实例 - 多线程异常处理</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/exception-printstack.html\" target=\"_blank\">Java 实例 - 获取异常的堆栈信息</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/exception-overloaded-method.html\" target=\"_blank\">Java 实例 - 重载方法异常处理</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/exception-chain.html\" target=\"_blank\">Java 实例 - 链试异常</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/exception-user.html\" target=\"_blank\">Java 实例 - 自定义异常</a></li> \n</ol> \n<hr /> \n<h2>Java 数据结构</h2> \n<ol> \n <li><a href=\"http://www.w3cschool.cc/java/data-add.html\" target=\"_blank\">Java 实例 – 数字求和运算</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-intopost.html\" target=\"_blank\">Java 实例 – 利用堆栈将中缀表达式转换成后缀 </a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-insert.html\" target=\"_blank\">Java 实例 – 在链表（LinkedList）的开头和结 </a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-element.html\" target=\"_blank\">Java 实例 – 获取链表（LinkedList）的第一个 </a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-replace.html\" target=\"_blank\">Java 实例 – 删除链表中的元素</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data_linklist.html\" target=\"_blank\">Java 实例 – 获取链表的元素</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-vecsort.html\" target=\"_blank\">Java 实例 – 获取向量元素的索引值</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-stack.html\" target=\"_blank\">Java 实例 – 栈的实现</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-search.html\" target=\"_blank\">Java 实例 – 链表元素查找</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-reverse.html\" target=\"_blank\">Java 实例 – 压栈出栈的方法实现字符串反转</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-queue.html\" target=\"_blank\">Java 实例 – 队列（Queue）用法</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-vec-max.html\" target=\"_blank\">Java 实例 – 获取向量的最大元素</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-update.html\" target=\"_blank\">Java 实例 – 链表修改</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/data-swap.html\" target=\"_blank\">Java 实例 – 旋转向量</a></li> \n</ol> \n<hr /> \n<h2>Java 集合</h2> \n<ol> \n <li><a href=\"http://www.w3cschool.cc/java/collection-array.html\" target=\"_blank\">Java 实例 – 数组转集合</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-compare.html\" target=\"_blank\">Java 实例 – 集合比较</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-iterate.html\" target=\"_blank\">Java 实例 – HashMap遍历</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-size.html\" target=\"_blank\">Java 实例 – 集合长度</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-shuffle.html\" target=\"_blank\">Java 实例 – 集合打乱顺序</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-iterator.html\" target=\"_blank\">Java 实例 – 集合遍历</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-reverse.html\" target=\"_blank\">Java 实例 – 集合反转</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-remove.html\" target=\"_blank\">Java 实例 – 删除集合中指定元素</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-readonly.html\" target=\"_blank\">Java 实例 – 只读集合</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-print.html\" target=\"_blank\">Java 实例 – 集合输出</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-conversion.html\" target=\"_blank\">Java 实例 – 集合转数组</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-rotate.html\" target=\"_blank\">Java 实例 – List 循环移动元素</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-minmax.html\" target=\"_blank\">Java 实例 – 查找 List 中的最大最小值</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-hashtable-key.html\" target=\"_blank\">Java 实例 – 遍历 HashTable 的键值</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-enumeration.html\" target=\"_blank\">Java 实例 – 使用 Enumeration 遍历 HashTable</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-all.html\" target=\"_blank\">Java 实例 – 集合中添加不同类型元素</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-replace.html\" target=\"_blank\">Java 实例 – List 元素替换</a></li> \n <li><a href=\"http://www.w3cschool.cc/java/collection-sublist.html\" target=\"_blank\">Java 实例 – List 截取</a></li> \n</ol> \n<hr /> \n<h2>Java 网络实例</h2> \n<ol> \n <li><a href=\"http://www.runoob.com/java/net-address.html\" target=\"_blank\">Java 实例 – 获取指定主机的IP地址</a></li> \n <li><a href=\"http://www.runoob.com/java/net-port.html\" target=\"_blank\">Java 实例 – 查看端口是否已使用</a></li> \n <li><a href=\"http://www.runoob.com/java/net-localip.html\" target=\"_blank\">Java 实例 – 获取本机ip地址及主机名</a></li> \n <li><a href=\"http://www.runoob.com/java/net-serverfile.html\" target=\"_blank\">Java 实例 – 获取远程文件大小</a></li> \n <li><a href=\"http://www.runoob.com/java/net-multisoc.html\" target=\"_blank\">Java 实例 – Socket 实现多线程服务器程序</a></li> \n <li><a href=\"http://www.runoob.com/java/net-filetime.html\" target=\"_blank\">Java 实例 – 查看主机指定文件的最后修改时间</a></li> \n <li><a href=\"http://www.runoob.com/java/net-connected.html\" target=\"_blank\">Java 实例 – 使用 Socket 连接到指定主机</a></li> \n <li><a href=\"http://www.runoob.com/java/net-webpage.html\" target=\"_blank\">Java 实例 – 网页抓取</a></li> \n <li><a href=\"http://www.runoob.com/java/net-urldate.html\" target=\"_blank\">Java 实例 – 获取 URL响应头的日期信息</a></li> \n <li><a href=\"http://www.runoob.com/java/net-url-header.html\" target=\"_blank\">Java 实例 – 获取 URL 响应头信息</a></li> \n <li><a href=\"http://www.runoob.com/java/net-url.html\" target=\"_blank\">Java 实例 – 解析 URL</a></li> \n <li><a href=\"http://www.runoob.com/java/net-serversocket-socket.html\" target=\"_blank\">Java 实例 – ServerSocket 和 Socket 通信实例</a></li> \n</ol> \n<hr /> \n<h2> Java 线程</h2> \n<ol> \n <li><a href=\"http://www.runoob.com/java/thread-alive.html\" target=\"_blank\">Java 实例 – 查看线程是否存活</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-name.html\" target=\"_blank\">Java 实例 – 获取当前线程名称</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-monitor.html\" target=\"_blank\">Java 实例 – 状态监测</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-getpri.html\" target=\"_blank\">Java 实例 – 线程优先级设置</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-deadlock.html\" target=\"_blank\">Java 实例 – 死锁及解决方法</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-id.html\" target=\"_blank\">Java 实例 – 获取线程id</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-suspend.html\" target=\"_blank\">Java 实例 – 线程挂起</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-stop.html\" target=\"_blank\">Java 实例 – 终止线程</a></li> \n <li><a href=\"http://www.runoob.com/html/thread-procon.html\" target=\"_blank\">Java 实例 – 生产者/消费者问题</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-name.html\" target=\"_blank\">Java 实例 – 获取当前线程名称</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-monitor.html\" target=\"_blank\">Java 实例 – 状态监测</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-getpri.html\" target=\"_blank\">Java 实例 – 线程优先级设置</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-deadlock.html\" target=\"_blank\">Java 实例 – 死锁及解决方法</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-status.html\" target=\"_blank\">Java 实例 – 获取线程状态</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-showall.html\" target=\"_blank\">Java 实例 – 获取所有线程</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-priorityinfo.html\" target=\"_blank\">Java 实例 – 查看线程优先级</a></li> \n <li><a href=\"http://www.runoob.com/java/thread-interrupt.html\" target=\"_blank\">Java 实例 – 中断线程</a></li> \n</ol>', null, 'Java 实例|Java 环境设置实例|Java 字符串|Java 数组|Java 时间处理|Java 方法|Java 文件操作|Java 目录操作|Java 异常处理|Java 数据结构|Java 集合|Java 网络实例|Java 线程|');
INSERT INTO `schoolcontent` VALUES ('323', '326', '<h1>Java 8 新特性</h1> \n<p>Java 8 (又称为 jdk 1.8) 是 Java 语言开发的一个主要版本。 Oracle 公司于 2014 年 3 月 18 日发布 Java 8 ，它支持函数式编程，新的 JavaScript 引擎，新的日期 API，新的Stream API 等。</p> \n<hr /> \n<h2>新特性</h2> \n<p>Java8 新增了非常多的特性，我们主要讨论以下几个：</p> \n<ul class=\"list\"> \n <li><p><b>Lambda 表达式</b> − Lambda允许把函数作为一个方法的参数（函数作为参数传递进方法中。</p></li> \n <li><p><b>方法引用</b> − 方法引用提供了非常有用的语法，可以直接引用已有Java类或对象（实例）的方法或构造器。与lambda联合使用，方法引用可以使语言的构造更紧凑简洁，减少冗余代码。</p></li> \n <li><p><b>默认方法</b> − 默认方法就是一个在接口里面有了一个实现的方法。</p></li> \n <li><p><b>新工具</b> − 新的编译工具，如：Nashorn引擎 jjs、 类依赖分析器jdeps。</p></li> \n <li><p><b>Stream API</b> −新添加的Stream API（java.util.stream） 把真正的函数式编程风格引入到Java中。</p></li> \n <li><p><b>Date Time API</b> − 加强对日期与时间的处理。</p></li> \n <li><p><b>Optional 类</b> − Optional 类已经成为 Java 8 类库的一部分，用来解决空指针异常。</p></li> \n <li><p><b>Nashorn, JavaScript 引擎</b> − Java 8提供了一个新的Nashorn javascript引擎，它允许我们在JVM上运行特定的javascript应用。</p></li> \n</ul> \n<p>更多的新特性可以参阅官网：<a target=\"_blank\" href=\"http://www.oracle.com/technetwork/java/javase/8-whats-new-2157071.html\">What\'s New in JDK 8</a> </p>\n<p>在关于 Java 8 文章的实例，我们均使用 jdk 1.8 环境，你可以使用以下命令查看当前 jdk 的版本：</p> \n<pre>\r\n$ java -version\r\njava version &quot;1.8.0_31&quot;\r\nJava(TM) SE Runtime Environment (build 1.8.0_31-b13)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.31-b07, mixed mode)\r\n</pre> \n<hr /> \n<h2>编程风格</h2> \n<p>Java 8 希望有自己的编程风格，并与 Java 7 区别开，以下实例展示了 Java 7 和 Java 8 的编程格式：</p> \n<pre>\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.ArrayList;\r\nimport java.util.Comparator;\r\n\r\npublic class Java8Tester {\r\n   public static void main(String args[]){\r\n   \r\n      List&lt;String&gt; names1 = new ArrayList&lt;String&gt;();\r\n      names1.add(&quot;Google &quot;);\r\n      names1.add(&quot;Runoob &quot;);\r\n      names1.add(&quot;Taobao &quot;);\r\n      names1.add(&quot;Baidu &quot;);\r\n      names1.add(&quot;Sina &quot;);\r\n		\r\n      List&lt;String&gt; names2 = new ArrayList&lt;String&gt;();\r\n      names2.add(&quot;Google &quot;);\r\n      names2.add(&quot;Runoob &quot;);\r\n      names2.add(&quot;Taobao &quot;);\r\n      names2.add(&quot;Baidu &quot;);\r\n      names2.add(&quot;Sina &quot;);\r\n		\r\n      Java8Tester tester = new Java8Tester();\r\n      System.out.println(&quot;使用 Java 7 语法: &quot;);\r\n		\r\n      tester.sortUsingJava7(names1);\r\n      System.out.println(names1);\r\n      System.out.println(&quot;使用 Java 8 语法: &quot;);\r\n		\r\n      tester.sortUsingJava8(names2);\r\n      System.out.println(names2);\r\n   }\r\n   \r\n   // 使用 java 7 排序\r\n   private void sortUsingJava7(List&lt;String&gt; names){   \r\n      Collections.sort(names, new Comparator&lt;String&gt;() {\r\n         @Override\r\n         public int compare(String s1, String s2) {\r\n            return s1.compareTo(s2);\r\n         }\r\n      });\r\n   }\r\n   \r\n   // 使用 java 8 排序\r\n   private void sortUsingJava8(List&lt;String&gt; names){\r\n      Collections.sort(names, (s1, s2) -&gt; s1.compareTo(s2));\r\n   }\r\n}\r\n</pre> \n<p>执行以上脚本，输出结果为：</p> \n<pre>\r\n$ javac Java8Tester.java\r\n$ java Java8Tester\r\n使用 Java 7 语法: \r\n[Baidu , Google , Runoob , Sina , Taobao ]\r\n使用 Java 8 语法: \r\n[Baidu , Google , Runoob , Sina , Taobao ]\r\n</pre> \n<p>接下来我们将详细为大家简介 Java 8 的新特性：</p> \n<table class=\"reference\"> \n <tbody>\n  <tr> \n   <th>序号</th> \n   <th>特性</th> \n  </tr> \n  <tr> \n   <td>1</td> \n   <td><a href=\"java8-lambda-expressions.html\">Lambda 表达式</a></td> \n  </tr> \n  <tr> \n   <td>2</td> \n   <td><a href=\"java8-method-references.html\">方法引用</a></td> \n  </tr> \n  <tr> \n   <td>3</td> \n   <td><a href=\"java8-functional-interfaces.html\">函数式接口</a></td> \n  </tr> \n  <tr> \n   <td>4</td> \n   <td><a href=\"java8-default-methods.html\">默认方法</a></td> \n  </tr> \n  <tr> \n   <td>5</td> \n   <td><a href=\"java8-streams.html\">Stream</a></td> \n  </tr> \n  <tr> \n   <td>6</td> \n   <td><a href=\"java8-optional-class.html\">Optional 类</a></td> \n  </tr> \n  <tr> \n   <td>7</td> \n   <td><a href=\"java8-nashorn-javascript.html\">Nashorn, JavaScript 引擎</a></td> \n  </tr> \n  <tr> \n   <td>8</td> \n   <td><a href=\"java8-datetime-api.html\">新的日期时间 API</a></td> \n  </tr> \n  <tr> \n   <td>9</td> \n   <td><a href=\"java8-base64.html\">Base64</a></td> \n  </tr> \n </tbody>\n</table>', null, 'Java 8 新特性|新特性|编程风格|');
INSERT INTO `schoolcontent` VALUES ('324', '327', '<h1>C# <span class=\"color_h1\">教程</span></h1> \n<div class=\"tutintro\"> \n <p>C# 是一个简单的、现代的、通用的、面向对象的编程语言，它是由微软（Microsoft）开发的。</p> \n <p>本教程将告诉您基础的 C# 编程，同时将向您讲解 C# 编程语言相关的各种先进理念。</p> \n <p><b><a href=\"http://www.runoob.com/csharp/csharp-intro.html\">现在开始学习 C#！</a></b></p> \n <p><a href=\"http://www.runoob.com/try/showcs.php?filename=HelloWorld\" target=\"_blank\">C# 在线工具</a></p> \n</div> \n<h2 class=\"tutheader\">谁适合阅读本教程？</h2> \n<p>本教程有助于初学者理解基础的 C# 编程。在学习完本教程后，您将到达一个中级的 C# 编程水平。</p> \n<h2 class=\"tutheader\">阅读本教程前，您需要了解的知识：</h2> \n<p>C# 编程是基于 C 和 C++ 编程语言的，因此如果您对 C 和 C++ 编程有基本的了解，将有助于您学习 C# 编程语言。</p> \n<h2 class=\"tutheader\">编译/执行 C# 程序</h2> \n<p>菜鸟教程提供了在线的 C# 在线编译环境，您只需进行简单的点击动作，即可在高端的服务器上体验真实的编程经验。这是完全免费的在线工具。</p> \n<div class=\"example\"> \n <h2 class=\"example\">实例</h2> \n <div class=\"example_code\">\n   using System;\n  <br /> namespace HelloWorldApplication\n  <br /> {\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;class HelloWorld\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static void Main(string[] args)\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* 我的第一个 C# 程序*/\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.WriteLine(&quot;Hello World!&quot;);\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Console.ReadKey();\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\n  <br /> &nbsp;&nbsp;&nbsp;&nbsp;}\n  <br /> } \n </div>\n <br /> \n <a target=\"_blank\" href=\"http://www.runoob.com/try/showcs.php?filename=HelloWorld\" class=\"showbtn\">运行实例 &raquo;</a> \n</div> \n<h2 class=\"tutheader\">C# 有用的资源</h2> \n<p>本教程列出了 C# 网站、书籍和文章。</p> \n<h4>C# 有用的网站</h4> \n<ul class=\"list\"> \n <li><a target=\"_blank\" rel=\"nofollow\" href=\"http://msdn.microsoft.com/en-us/library/67ef8sbd.aspx\">C# Programming Guide</a> - 介绍了有关关键的 C# 语言特征以及如何通过 .NET 框架访问 C# 的详细信息。</li> \n <li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.microsoft.com/visualstudio/eng/downloads\">Visual Studio</a> - 下载作为 C# 集成开发环境的 Visual Studio 的最新版本。</li> \n <li><a target=\"_blank\" rel=\"nofollow\" href=\"http://www.mono-project.com/Main_Page\">Go Mono</a> - Mono 是一个允许开发人员简单地创建跨平台应用程序的软件平台。</li> \n <li><a target=\"_blank\" rel=\"nofollow\" href=\"http://en.wikipedia.org/wiki/C_Sharp_(programming_language)\">C Sharp (programming language) </a> - 维基百科解释 C#（编程语言）。</li> \n</ul> \n<h4>C# 有用的书籍</h4> \n<div class=\"central\"> \n <table style=\"width:100%;\"> \n  <tbody>\n   <tr> \n    <td style=\"border:1px solid #aaa; padding:10px;\"> <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.amazon.cn/exec/obidos/ASIN/1449380344/httpwwwtuto0a-20\"><img src=\"http://ecx.images-amazon.com/images/I/51IZ1knn96L.jpg\" alt=\"Head First C#\" style=\"width:90px;\" /></a> </td> \n    <td style=\"border:1px solid #aaa; padding:10px;\"> <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.amazon.cn/exec/obidos/ASIN/1449320104/httpwwwtuto0a-20\"><img src=\"http://ecx.images-amazon.com/images/I/41euutVMQdL.jpg\" alt=\"C# 5.0 in a Nutshell\" style=\"width:90px;\" /></a> </td> \n    <td style=\"border:1px solid #aaa; padding:10px;\"> <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.amazon.cn/exec/obidos/ASIN/1430242337/httpwwwtuto0a-20\"><img src=\"http://ecx.images-amazon.com/images/I/51NzXiuNBIL.jpg\" alt=\"\r\nPro C# 5.0 and the .NET 4.5 Framework\" style=\"width:90px;\" /></a> </td> \n    <td style=\"border:1px solid #aaa; padding:10px;\"> <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.amazon.cn/exec/obidos/ASIN/1935182471/httpwwwtuto0a-20\"><img src=\"http://ecx.images-amazon.com/images/I/41Xefw6MD6L.jpg\" alt=\"C# in Depth, Second Edition\" style=\"width:90px;\" /></a> </td> \n    <td style=\"border:1px solid #aaa; padding:10px;\"> <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.amazon.cn/exec/obidos/ASIN/0470563486/httpwwwtuto0a-20\"><img src=\"http://ecx.images-amazon.com/images/I/51AzJLky6dL.jpg\" alt=\"C# 2010 All-in-One For Dummies\" style=\"width:90px;\" /></a> </td> \n    <td style=\"border:1px solid #aaa; padding:10px;\"> <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.amazon.cn/exec/obidos/ASIN/1430235306/httpwwwtuto0a-20\"><img src=\"http://ecx.images-amazon.com/images/I/516wfAZoP5L.jpg\" alt=\"Beginning C# Object-Oriented Programming\" style=\"width:90px;\" /></a> </td> \n   </tr> \n  </tbody>\n </table> \n</div>', null, 'C# 教程|谁适合阅读本教程？|阅读本教程前，您需要了解的知识：|编译/执行 C# 程序|实例|C# 有用的资源|');
INSERT INTO `schoolcontent` VALUES ('325', '328', '<h1>C# <span class=\"color_h1\">简介</span></h1> \n<div class=\"tutintro\"> \n <p>C# 是一个现代的、通用的、面向对象的编程语言，它是由微软（Microsoft）开发的，由 Ecma 和 ISO 核准认可的。</p> \n <p>C# 是由 Anders Hejlsberg 和他的团队在 .Net 框架开发期间开发的。</p> \n <p>C# 是专为公共语言基础结构（CLI）设计的。CLI 由可执行代码和运行时环境组成，允许在不同的计算机平台和体系结构上使用各种高级语言。</p> \n <p>下面列出了 C# 成为一种广泛应用的专业语言的原因：</p> \n <ul class=\"list\"> \n  <li>现代的、通用的编程语言。</li> \n  <li>面向对象。</li> \n  <li>面向组件。</li> \n  <li>容易学习。</li> \n  <li>结构化语言。</li> \n  <li>它产生高效率的程序。</li> \n  <li>它可以在多种计算机平台上编译。</li> \n  <li>.Net 框架的一部分。</li> \n </ul> \n</div> \n<h2 class=\"tutheader\">C# 强大的编程功能</h2> \n<p>虽然 C# 的构想十分接近于传统高级语言 C 和 C++，是一门面向对象的编程语言，但是它与 Java 非常相似，有许多强大的编程功能，因此得到广大程序员的亲睐。</p> \n<p>下面列出 C# 一些重要的功能：</p> \n<ul class=\"list\"> \n <li>布尔条件（Boolean Conditions）</li> \n <li>自动垃圾回收（Automatic Garbage Collection）</li> \n <li>标准库（Standard Library）</li> \n <li>组件版本（Assembly Versioning）</li> \n <li>属性（Properties）和事件（Events）</li> \n <li>委托（Delegates）和事件管理（Events Management）</li> \n <li>易于使用的泛型（Generics）</li> \n <li>索引器（Indexers）</li> \n <li>条件编译（Conditional Compilation）</li> \n <li>简单的多线程（Multithreading）</li> \n <li>LINQ 和 Lambda 表达式</li> \n <li>集成 Windows</li> \n</ul>', null, 'C# 简介|C# 强大的编程功能|');
INSERT INTO `schoolcontent` VALUES ('326', '329', '<h1>C# <span class=\"color_h1\">环境</span></h1> \n<div class=\"tutintro\"> \n <p>在这一章中，我们将讨论创建 C# 编程所需的工具。我们已经提到 C# 是 .Net 框架的一部分，且用于编写 .Net 应用程序。因此，在讨论运行 C# 程序的可用工具之前，让我们先了解一下 C# 与 .Net 框架之间的关系。</p> \n</div> \n<h2 class=\"tutheader\">.Net 框架（.Net Framework）</h2> \n<p>.Net 框架是一个创新的平台，能帮您编写出下面类型的应用程序：</p> \n<ul class=\"list\"> \n <li>Windows 应用程序</li> \n <li>Web 应用程序</li> \n <li>Web 服务</li> \n</ul> \n<p>.Net 框架应用程序是多平台的应用程序。框架的设计方式使它适用于下列各种语言：C#、C++、Visual Basic、Jscript、COBOL 等等。所有这些语言可以访问框架，彼此之间也可以互相交互。</p> \n<p>.Net 框架由一个巨大的代码库组成，用于 C# 等客户端语言。下面列出一些 .Net 框架的组件：</p> \n<ul class=\"list\"> \n <li>公共语言运行库（Common Language Runtime - CLR）</li> \n <li>.Net 框架类库（.Net Framework Class Library）</li> \n <li>公共语言规范（Common Language Specification）</li> \n <li>通用类型系统（Common Type System）</li> \n <li>元数据（Metadata）和组件（Assemblies）</li> \n <li>Windows 窗体（Windows Forms）</li> \n <li>ASP.Net 和 ASP.Net AJAX</li> \n <li>ADO.Net</li> \n <li>Windows 工作流基础（Windows Workflow Foundation - WF）</li> \n <li>Windows 显示基础（Windows Presentation Foundation）</li> \n <li>Windows 通信基础（Windows Communication Foundation - WCF）</li> \n <li>LINQ</li> \n</ul> \n<p>如需了解每个组件的详细信息，请参阅微软（Microsoft）的文档。</p> \n<h2 class=\"tutheader\">C# 的集成开发环境（Integrated Development Environment - IDE）</h2> \n<p>微软（Microsoft）提供了下列用于 C# 编程的开发工具：</p> \n<ul class=\"list\"> \n <li>Visual Studio 2010 (VS)</li> \n <li>Visual C# 2010 Express (VCE)</li> \n <li>Visual Web Developer</li> \n</ul> \n<p>后面两个是免费使用的，可从微软官方网址下载。使用这些工具，您可以编写各种 C# 程序，从简单的命令行应用程序到更复杂的应用程序。您也可以使用基本的文本编辑器（比如 Notepad）编写 C# 源代码文件，并使用命令行编译器（.NET 框架的一部分）编译代码为组件。</p> \n<p>Visual C# Express 和 Visual Web Developer Express 版本是 Visual Studio 的定制版本，且具有相同的外观和感观。它们保留 Visual Studio 的大部分功能。在本教程中，我们使用的是 Visual C# 2010 Express。</p> \n<p>您可以从 <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.microsoft.com/visualstudio/eng/downloads\">Microsoft Visual Studio</a> 上进行下载。它会自动安装在您的机器上。请注意，您需要一个可用的网络连接来完成速成版的安装。</p> \n<h2 class=\"tutheader\">在 Linux 或 Mac OS 上编写 C# 程序</h2> \n<p>虽然 .NET 框架是运行在 Windows 操作系统上，但是也有一些运行于其它操作系统上的版本可供选择。<b>Mono</b> 是 .NET 框架的一个开源版本，它包含了一个 C# 编译器，且可运行于多种操作系统上，比如各种版本的 Linux 和 Mac OS。如需了解更多详情，请访问 <a target=\"_blank\" rel=\"nofollow\" href=\"http://www.go-mono.com/mono-downloads/download.html\">Go Mono</a>。</p> \n<p>Mono 的目的不仅仅是跨平台地运行微软 .NET 应用程序，而且也为 Linux 开发者提供了更好的开发工具。Mono 可运行在多种操作系统上，包括 Android、BSD、iOS、Linux、OS X、Windows、Solaris 和 UNIX。</p>', null, 'C# 环境|.Net 框架（.Net Framework）|C# 的集成开发环境（Integrated Development Environment - IDE）|在 Linux 或 Mac OS 上编写 C# 程序|');
INSERT INTO `schoolcontent` VALUES ('327', '330', '<h1>C# <span class=\"color_h1\">程序结构</span></h1> \n<div class=\"tutintro\"> \n <p>在我们学习 C# 编程语言的基础构件块之前，让我们先看一下 C# 的最小的程序结构，以便作为接下来章节的参考。</p> \n</div> \n<h2 class=\"tutheader\">C# Hello World 实例</h2> \n<p>一个 C# 程序主要包括以下部分：</p> \n<ul class=\"list\"> \n <li>命名空间声明（Namespace declaration）</li> \n <li>一个 class</li> \n <li>Class 方法</li> \n <li>Class 属性</li> \n <li>一个 Main 方法</li> \n <li>语句（Statements）&amp; 表达式（Expressions）</li> \n <li>注释</li> \n</ul> \n<p>让我们看一个可以打印出 &quot;Hello World&quot; 的简单的代码：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace HelloWorldApplication\r\n{\r\n   class HelloWorld\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         /* 我的第一个 C# 程序*/\r\n         Console.WriteLine(&quot;Hello World&quot;);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nHello World\r\n</pre> \n<p>让我们看一下上面程序的各个部分：</p> \n<ul class=\"list\"> \n <li>程序的第一行 <b>using System;</b> - <b>using</b> 关键字用于在程序中包含 <b>System </b> 命名空间。 一个程序一般有多个 <b>using</b> 语句。</li> \n <li>下一行是 <b>namespace</b> 声明。一个 <b>namespace</b> 是一系列的类。<i>HelloWorldApplication</i> 命名空间包含了类 <i>HelloWorld</i>。</li> \n <li>下一行是 <b>class</b> 声明。类 <i>HelloWorld</i> 包含了程序使用的数据和方法声明。类一般包含多个方法。方法定义了类的行为。在这里，<i>HelloWorld</i> 类只有一个 <b> Main</b> 方法。</li> \n <li>下一行定义了 <b>Main</b> 方法，是所有 C# 程序的 <b>入口点</b>。<b>Main </b> 方法说明当执行时 类将做什么动作。</li> \n <li>下一行 /*...*/ 将会被编译器忽略，且它会在程序中添加额外的 <b>注释</b>。</li> \n <li>Main 方法通过语句 <b>Console.WriteLine(&quot;Hello World&quot;); </b> 指定了它的行为。 <p><i>WriteLine</i> 是一个定义在 <i>System</i> 命名空间中的 <i>Console</i> 类的一个方法。该语句会在屏幕上显示消息 &quot;Hello, World!&quot;。</p> </li> \n <li>最后一行 <b>Console.ReadKey();</b> 是针对 VS.NET 用户的。这使得程序会等待一个按键的动作，防止程序从 Visual Studio .NET 启动时屏幕会快速运行并关闭。</li> \n</ul> \n<p>以下几点值得注意：</p> \n<ul class=\"list\"> \n <li>C# 是大小写敏感的。</li> \n <li>所有的语句和表达式必须以分号（;）结尾。</li> \n <li>程序的执行从 Main 方法开始。</li> \n <li>与 Java 不同的是，文件名可以不同于类的名称。</li> \n</ul> \n<h2 class=\"tutheader\">编译 &amp; 执行 C# 程序</h2> \n<p>如果您使用 Visual Studio.Net 编译和执行 C# 程序，请按下面的步骤进行：</p> \n<ul class=\"list\"> \n <li>启动 Visual Studio。</li> \n <li>在菜单栏上，选择 File -&gt; New -&gt; Project。</li> \n <li>从模板中选择 Visual C#，然后选择 Windows。</li> \n <li>选择 Console Application。</li> \n <li>为您的项目制定一个名称，然后点击 OK 按钮。</li> \n <li>新项目会出现在解决方案资源管理器（Solution Explorer）中。</li> \n <li>在代码编辑器（Code Editor）中编写代码。</li> \n <li>点击 Run 按钮或者按下 F5 键来运行程序。会出现一个命令提示符窗口（Command Prompt window），显示 Hello World。</li> \n</ul> \n<p>您也可以使用命令行代替 Visual Studio IDE 来编译 C# 程序：</p> \n<ul class=\"list\"> \n <li>打开一个文本编辑器，添加上面提到的代码。</li> \n <li>保存文件为 <b>helloworld.cs</b>。</li> \n <li>打开命令提示符工具，定位到文件所保存的目录。</li> \n <li>键入 <b>csc helloworld.cs</b> 并按下 enter 键来编译代码。</li> \n <li>如果代码没有错误，命令提示符会进入下一行，并生成 <b>helloworld.exe</b> 可执行文件。</li> \n <li>接下来，键入 <b>helloworld</b> 来执行程序。</li> \n <li>您将看到 &quot;Hello World&quot; 打印在屏幕上。</li> \n</ul>', null, 'C# 程序结构|C# Hello World 实例|编译 & 执行 C# 程序|');
INSERT INTO `schoolcontent` VALUES ('328', '331', '<h1>C# <span class=\"color_h1\">基本语法</span></h1> \n<div class=\"tutintro\"> \n <p>C# 是一种面向对象的编程语言。在面向对象的程序设计方法中，程序由各种相互交互的对象组成。相同种类的对象通常具有相同的类型，或者说，是在相同的 class 中。</p> \n <p>例如，以 Rectangle（矩形）对象为例。它具有 length 和 width 属性。根据设计，它可能需要接受这些属性值、计算面积和显示细节。</p> \n <p>让我们来看看一个 Rectangle（矩形）类的实现，并借此讨论 C# 的基本语法：</p> \n <pre class=\"prettyprint\">\r\nusing System;\r\nnamespace RectangleApplication\r\n{\r\n    class Rectangle\r\n    {\r\n        // 成员变量\r\n        double length;\r\n        double width;\r\n        public void Acceptdetails()\r\n        {\r\n            length = 4.5;    \r\n            width = 3.5;\r\n        }\r\n        public double GetArea()\r\n        {\r\n            return length * width;\r\n        }\r\n        public void Display()\r\n        {\r\n            Console.WriteLine(&quot;Length: {0}&quot;, length);\r\n            Console.WriteLine(&quot;Width: {0}&quot;, width);\r\n            Console.WriteLine(&quot;Area: {0}&quot;, GetArea());\r\n        }\r\n    }\r\n    \r\n    class ExecuteRectangle\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Rectangle r = new Rectangle();\r\n            r.Acceptdetails();\r\n            r.Display();\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre>\n <p><a href=\"http://www.runoob.com/try/showcs.php?filename=Rectangle\" target=\"_blank\"><button class=\"btn example-btn\">尝试一下 &raquo;</button></a></p> \n <p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n <pre>\r\nLength: 4.5\r\nWidth: 3.5\r\nArea: 15.75\r\n</pre> \n</div> \n<h2 class=\"tutheader\"><i>using</i> 关键字</h2> \n<p>在任何 C# 程序中的第一条语句都是：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n</pre> \n<p><b>using</b> 关键字用于在程序中包含命名空间。一个程序可以包含多个 using 语句。</p> \n<h2 class=\"tutheader\"><i>class</i> 关键字</h2> \n<p><b>class</b> 关键字用于声明一个类。</p> \n<h2 class=\"tutheader\">C# 中的注释</h2> \n<p>注释是用于解释代码。编译器会忽略注释的条目。在 C# 程序中，多行注释以 /* 开始，并以字符 */ 终止，如下所示：</p> \n<pre class=\"prettyprint\">\r\n/* This program demonstrates\r\nThe basic syntax of C# programming \r\nLanguage */\r\n</pre> \n<p>单行注释是用 \'//\' 符号表示。例如：</p> \n<pre class=\"prettyprint\">\r\n}//end class Rectangle    \r\n</pre> \n<h2 class=\"tutheader\">成员变量</h2> \n<p>变量是类的属性或数据成员，用于存储数据。在上面的程序中，<i>Rectangle</i> 类有两个成员变量，名为 <i>length</i> 和 <i>width</i>。</p> \n<h2 class=\"tutheader\">成员函数</h2> \n<p>函数是一系列执行指定任务的语句。类的成员函数是在类内声明的。我们举例的类 Rectangle 包含了三个成员函数：<i> AcceptDetails</i>、<i>GetArea</i> 和 <i>Display</i>。</p> \n<h2 class=\"tutheader\">实例化一个类</h2> \n<p>在上面的程序中，类 <i>ExecuteRectangle</i> 是一个包含 <i>Main() </i> 方法和实例化 <i>Rectangle</i> 类的类。</p> \n<h2 class=\"tutheader\">标识符</h2> \n<p>标识符是用来识别类、变量、函数或任何其它用户定义的项目。在 C# 中，类的命名必须遵循如下基本规则：</p> \n<ul class=\"list\"> \n <li>标识符必须以字母开头，后面可以跟一系列的字母、数字（ 0 - 9 ）或下划线（ _ ）。标识符中的第一个字符不能是数字。</li> \n <li>标识符必须不包含任何嵌入的空格或符号，比如 ? - +! @ # % ^ &amp; * ( ) [ ] { } . ; : &quot; \' / \\。但是，可以使用下划线（ _ ）。</li> \n <li>标识符不能是 C# 关键字。</li> \n</ul> \n<h2 class=\"tutheader\">C# 关键字</h2> \n<p>关键字是 C# 编译器预定义的保留字。这些关键字不能用作标识符，但是，如果您想使用这些关键字作为标识符，可以在关键字前面加上 @ 字符作为前缀。</p> \n<p>在 C# 中，有些标识符在代码的上下文中有特殊的意义，如 get 和 set，这些被称为上下文关键字（contextual keywords）。</p> \n<p>下表列出了 C# 中的保留关键字（Reserved Keywords）和上下文关键字（Contextual Keywords）：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <td colspan=\"7\"><b>保留关键字</b></td>\n  </tr> \n  <tr>\n   <td>abstract</td>\n   <td>as</td>\n   <td>base</td>\n   <td>bool</td>\n   <td>break</td>\n   <td>byte</td>\n   <td>case</td>\n  </tr> \n  <tr>\n   <td>catch</td>\n   <td>char</td>\n   <td>checked</td>\n   <td>class</td>\n   <td>const</td>\n   <td>continue</td>\n   <td>decimal</td>\n  </tr> \n  <tr>\n   <td>default</td>\n   <td>delegate</td>\n   <td>do</td>\n   <td>double</td>\n   <td>else</td>\n   <td>enum</td>\n   <td>event</td>\n  </tr> \n  <tr>\n   <td>explicit</td>\n   <td>extern</td>\n   <td>false</td>\n   <td>finally</td>\n   <td>fixed</td>\n   <td>float</td>\n   <td>for</td>\n  </tr> \n  <tr>\n   <td>foreach</td>\n   <td>goto</td>\n   <td>if</td>\n   <td>implicit</td>\n   <td>in</td>\n   <td>in (generic<br /> modifier)</td>\n   <td>int</td>\n  </tr> \n  <tr>\n   <td>interface</td>\n   <td>internal</td>\n   <td>is</td>\n   <td>lock</td>\n   <td>long</td>\n   <td>namespace</td>\n   <td>new</td>\n  </tr> \n  <tr>\n   <td>null</td>\n   <td>object</td>\n   <td>operator</td>\n   <td>out</td>\n   <td>out<br /> (generic<br /> modifier)</td>\n   <td>override</td>\n   <td>params</td>\n  </tr> \n  <tr>\n   <td>private</td>\n   <td>protected</td>\n   <td>public</td>\n   <td>readonly</td>\n   <td>ref</td>\n   <td>return</td>\n   <td>sbyte</td>\n  </tr> \n  <tr>\n   <td>sealed</td>\n   <td>short</td>\n   <td>sizeof</td>\n   <td>stackalloc</td>\n   <td>static</td>\n   <td>string</td>\n   <td>struct</td>\n  </tr> \n  <tr>\n   <td>switch</td>\n   <td>this</td>\n   <td>throw</td>\n   <td>true</td>\n   <td>try</td>\n   <td>typeof</td>\n   <td>uint</td>\n  </tr> \n  <tr>\n   <td>ulong</td>\n   <td>unchecked</td>\n   <td>unsafe</td>\n   <td>ushort</td>\n   <td>using</td>\n   <td>virtual</td>\n   <td>void</td>\n  </tr> \n  <tr>\n   <td>volatile</td>\n   <td>while</td>\n   <td></td>\n   <td></td>\n   <td></td>\n   <td></td>\n   <td></td>\n  </tr> \n  <tr>\n   <td colspan=\"7\"><b>上下文关键字</b></td>\n  </tr> \n  <tr>\n   <td>add</td>\n   <td>alias</td>\n   <td>ascending</td>\n   <td>descending</td>\n   <td>dynamic</td>\n   <td>from</td>\n   <td>get</td>\n  </tr> \n  <tr>\n   <td>global</td>\n   <td>group</td>\n   <td>into</td>\n   <td>join</td>\n   <td>let</td>\n   <td>orderby</td>\n   <td>partial<br />(type)</td>\n  </tr> \n  <tr>\n   <td>partial<br /> (method)</td>\n   <td>remove</td>\n   <td>select</td>\n   <td>set</td>\n   <td></td>\n   <td></td>\n   <td></td>\n  </tr> \n </tbody>\n</table>', null, 'C# 基本语法|using 关键字|class 关键字|C# 中的注释|成员变量|成员函数|实例化一个类|标识符|C# 关键字|');
INSERT INTO `schoolcontent` VALUES ('329', '332', '<h1>C# <span class=\"color_h1\">数据类型</span></h1> \n<div class=\"tutintro\"> \n <p>在 C# 中，变量分为以下几种类型：</p> \n <ul class=\"list\"> \n  <li>值类型（Value types）</li> \n  <li>引用类型（Reference types）</li> \n  <li>指针类型（Pointer types）</li> \n </ul> \n</div> \n<h2 class=\"tutheader\">值类型（Value types）</h2> \n<p>值类型变量可以直接分配给一个值。它们是从类 <b>System.ValueType</b> 中派生的。</p> \n<p>值类型直接包含数据。比如 <b>int、char、float</b>，它们分别存储数字、字母、浮点数。当您声明一个 <b>int</b> 类型时，系统分配内存来存储值。</p> \n<p>下表列出了 C# 2010 中可用的值类型：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%;\">类型</th>\n   <th style=\"width:35%;\">描述</th>\n   <th style=\"width:45%;\">范围</th>\n   <th style=\"width:10%;\">默认值</th>\n  </tr> \n  <tr>\n   <td>bool</td>\n   <td>布尔值</td>\n   <td>True 或 False</td>\n   <td>False</td>\n  </tr> \n  <tr>\n   <td>byte</td>\n   <td>8 位无符号整数</td>\n   <td>0 到 255</td>\n   <td>0</td>\n  </tr> \n  <tr>\n   <td>char</td>\n   <td>16 位 Unicode 字符</td>\n   <td>U +0000 到 U +ffff</td>\n   <td>\'\\0\'</td>\n  </tr> \n  <tr>\n   <td>decimal</td>\n   <td>128 位精确的十进制值，28-29 有效位数</td>\n   <td>(-7.9 x 10<sup>28</sup> 到 7.9 x 10<sup>28</sup>) / 10<sup>0 到 28</sup> </td>\n   <td>0.0M</td>\n  </tr> \n  <tr>\n   <td>double</td>\n   <td>64 位双精度浮点型</td>\n   <td>(+/-)5.0 x 10<sup>-324</sup> 到 (+/-)1.7 x 10<sup>308</sup></td>\n   <td>0.0D</td>\n  </tr> \n  <tr>\n   <td>float</td>\n   <td>32 位单精度浮点型</td>\n   <td>-3.4 x 10<sup>38</sup> 到 + 3.4 x 10<sup>38</sup></td>\n   <td>0.0F</td>\n  </tr> \n  <tr>\n   <td>int</td>\n   <td>32 位有符号整数类型</td>\n   <td>-2,147,483,648 到 2,147,483,647</td>\n   <td>0</td>\n  </tr> \n  <tr>\n   <td>long</td>\n   <td>64 位有符号整数类型</td>\n   <td>-923,372,036,854,775,808 到 9,223,372,036,854,775,807 </td>\n   <td>0L</td>\n  </tr> \n  <tr>\n   <td>sbyte</td>\n   <td>8 位有符号整数类型</td>\n   <td>-128 到 127</td>\n   <td>0</td>\n  </tr> \n  <tr>\n   <td>short</td>\n   <td>16 位有符号整数类型</td>\n   <td>-32,768 到 32,767</td>\n   <td>0</td>\n  </tr> \n  <tr>\n   <td>uint</td>\n   <td>32 位无符号整数类型</td>\n   <td>0 到 4,294,967,295</td>\n   <td>0</td>\n  </tr> \n  <tr>\n   <td>ulong</td>\n   <td>64 位无符号整数类型</td>\n   <td>0 到 18,446,744,073,709,551,615</td>\n   <td>0</td>\n  </tr> \n  <tr>\n   <td>ushort</td>\n   <td>16 位无符号整数类型</td>\n   <td>0 到 65,535</td>\n   <td>0</td>\n  </tr> \n </tbody>\n</table> \n<p>如需得到一个类型或一个变量在特定平台上的准确尺寸，可以使用 <b>sizeof</b> 方法。表达式 <i>sizeof(type)</i> 产生以字节为单位存储对象或类型的存储尺寸。下面举例获取任何机器上 <i>int</i> 类型的存储尺寸：</p> \n<pre class=\"prettyprint\">\r\nnamespace DataTypeApplication\r\n{\r\n   class Program\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Console.WriteLine(&quot;Size of int: {0}&quot;, sizeof(int));\r\n         Console.ReadLine();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nSize of int: 4\r\n</pre> \n<h2 class=\"tutheader\">引用类型（Reference types）</h2> \n<p>引用类型不包含存储在变量中的实际数据，但它们包含对变量的引用。</p> \n<p>换句话说，它们指的是一个内存位置。使用多个变量时，引用类型可以指向一个内存位置。如果内存位置的数据是由一个变量改变的，其他变量会自动反映这种值的变化。<b>内置的</b> 引用类型有：<b>object</b>、<b>dynamic</b> 和 <b>string</b>。</p> \n<h3>对象（Object）类型</h3> \n<p><b>对象（Object）类型</b> 是 C# 通用类型系统（Common Type System - CTS）中所有数据类型的终极基类。Object 是 System.Object 类的别名。所以对象（Object）类型可以被分配任何其他类型（值类型、引用类型、预定义类型或用户自定义类型）的值。但是，在分配值之前，需要先进行类型转换。</p> \n<p>当一个值类型转换为对象类型时，则被称为 <b>装箱</b>；另一方面，当一个对象类型转换为值类型时，则被称为 <b>拆箱</b>。</p> \n<pre class=\"prettyprint\">\r\nobject obj;\r\nobj = 100; // 这是装箱\r\n</pre> \n<h3>动态（Dynamic）类型</h3> \n<p>您可以存储任何类型的值在动态数据类型变量中。这些变量的类型检查是在运行时发生的。</p> \n<p>声明动态类型的语法：</p> \n<pre class=\"prettyprint\">\r\ndynamic &lt;variable_name&gt; = value;\r\n</pre> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\ndynamic d = 20;\r\n</pre> \n<p>动态类型与对象类型相似，但是对象类型变量的类型检查是在编译时发生的，而动态类型变量的类型检查是在运行时发生的。</p> \n<h3>字符串（String）类型</h3> \n<p><b>字符串（String）类型</b> 允许您给变量分配任何字符串值。字符串（String）类型是 System.String 类的别名。它是从对象（Object）类型派生的。字符串（String）类型的值可以通过两种形式进行分配：引号和 @引号。</p> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\nString str = &quot;w3cschool.cc&quot;;\r\n</pre> \n<p>一个 @引号字符串：</p> \n<pre class=\"prettyprint\">\r\n@&quot;w3cschool.cc&quot;;\r\n</pre> \n<p>C# string 字符串的前面可以加 @（称作&quot;逐字字符串&quot;）将转义字符（\\）当作普通字符对待，比如：</p> \n<pre>\r\nstring str = @&quot;C:\\Windows&quot;;\r\n</pre> \n<p>等价于：</p> \n<pre>\r\nstring str = &quot;C:\\\\Windows&quot;;\r\n</pre> \n<p> @ 字符串中可以任意换行，换行符及缩进空格都计算在字符串长度之内。 </p> \n<pre>\r\nstring str = @&quot;&lt;script type=&quot;&quot;text/javascript&quot;&quot;&gt;\r\n    &lt;!--\r\n    --&gt;\r\n    &lt;/script&gt;&quot;;\r\n</pre> \n<p>用户自定义引用类型有：class、interface 或 delegate。我们将在以后的章节中讨论这些类型。</p> \n<h2 class=\"tutheader\">指针类型（Pointer types）</h2> \n<p>指针类型变量存储另一种类型的内存地址。C# 中的指针与 C 或 C++ 中的指针有相同的功能。</p> \n<p>声明指针类型的语法：</p> \n<pre class=\"prettyprint\">\r\ntype* identifier;\r\n</pre> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\nchar* cptr;\r\nint* iptr;\r\n</pre> \n<p>我们将在章节&quot;不安全的代码&quot;中讨论指针类型。</p>', null, 'C# 数据类型|值类型（Value types）|引用类型（Reference types）|指针类型（Pointer types）|');
INSERT INTO `schoolcontent` VALUES ('330', '333', '<h1>C# <span class=\"color_h1\">类型转换</span></h1> \n<div class=\"tutintro\"> \n <p>类型转换从根本上说是类型铸造，或者说是把数据从一种类型转换为另一种类型。在 C# 中，类型铸造有两种形式：</p> \n <ul class=\"list\"> \n  <li><b>隐式类型转换</b> - 这些转换是 C# 默认的以安全方式进行的转换。例如，从小的整数类型转换为大的整数类型，从派生类转换为基类。</li> \n  <li><b>显式类型转换</b> - 这些转换是通过用户使用预定义的函数显式完成的。显式转换需要强制转换运算符。</li> \n </ul> \n <p>下面的实例显示了一个显式的类型转换：</p> \n <pre class=\"prettyprint\">\r\nnamespace TypeConversionApplication\r\n{\r\n    class ExplicitConversion\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            double d = 5673.74;\r\n            int i;\r\n\r\n            // 强制转换 double 为 int\r\n            i = (int)d;\r\n            Console.WriteLine(i);\r\n            Console.ReadKey();\r\n            \r\n        }\r\n    }\r\n}\r\n</pre> \n <p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n <pre class=\"result\">\r\n5673\r\n</pre> \n</div> \n<h2 class=\"tutheader\">C# 类型转换方法</h2> \n<p>C# 提供了下列内置的类型转换方法：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:5%;\">序号</th>\n   <th>方法 &amp; 描述</th>\n  </tr> \n  <tr>\n   <td>1</td>\n   <td><b>ToBoolean</b><br />如果可能的话，把类型转换为布尔型。</td>\n  </tr> \n  <tr>\n   <td>2</td>\n   <td><b>ToByte</b><br />把类型转换为字节类型。</td>\n  </tr> \n  <tr>\n   <td>3</td>\n   <td><b>ToChar</b><br />如果可能的话，把类型转换为单个 Unicode 字符类型。</td>\n  </tr> \n  <tr>\n   <td>4</td>\n   <td><b>ToDateTime</b><br />把类型（整数或字符串类型）转换为 日期-时间 结构。</td>\n  </tr> \n  <tr>\n   <td>5</td>\n   <td><b>ToDecimal</b><br />把浮点型或整数类型转换为十进制类型。</td>\n  </tr> \n  <tr>\n   <td>6</td>\n   <td><b>ToDouble</b><br />把类型转换为双精度浮点型。</td>\n  </tr> \n  <tr>\n   <td>7</td>\n   <td><b>ToInt16</b><br />把类型转换为 16 位整数类型。</td>\n  </tr> \n  <tr>\n   <td>8</td>\n   <td><b>ToInt32</b><br />把类型转换为 32 位整数类型。</td>\n  </tr> \n  <tr>\n   <td>9</td>\n   <td><b>ToInt64</b><br />把类型转换为 64 位整数类型。</td>\n  </tr> \n  <tr>\n   <td>10</td>\n   <td><b>ToSbyte</b><br />把类型转换为有符号字节类型。</td>\n  </tr> \n  <tr>\n   <td>11</td>\n   <td><b>ToSingle</b><br />把类型转换为小浮点数类型。</td>\n  </tr> \n  <tr>\n   <td>12</td>\n   <td><b>ToString</b><br />把类型转换为字符串类型。</td>\n  </tr> \n  <tr>\n   <td>13</td>\n   <td><b>ToType</b><br />把类型转换为指定类型。</td>\n  </tr> \n  <tr>\n   <td>14</td>\n   <td><b>ToUInt16</b><br />把类型转换为 16 位无符号整数类型。</td>\n  </tr> \n  <tr>\n   <td>15</td>\n   <td><b>ToUInt32</b><br />把类型转换为 32 位无符号整数类型。</td>\n  </tr> \n  <tr>\n   <td>16</td>\n   <td><b>ToUInt64</b><br />把类型转换为 64 位无符号整数类型。</td>\n  </tr> \n </tbody>\n</table> \n<p>下面的实例把不同值的类型转换为字符串类型：</p> \n<pre class=\"prettyprint\">\r\nnamespace TypeConversionApplication\r\n{\r\n    class StringConversion\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int i = 75;\r\n            float f = 53.005f;\r\n            double d = 2345.7652;\r\n            bool b = true;\r\n\r\n            Console.WriteLine(i.ToString());\r\n            Console.WriteLine(f.ToString());\r\n            Console.WriteLine(d.ToString());\r\n            Console.WriteLine(b.ToString());\r\n            Console.ReadKey();\r\n            \r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n75\r\n53.005\r\n2345.7652\r\nTrue\r\n</pre>', null, 'C# 类型转换|C# 类型转换方法|');
INSERT INTO `schoolcontent` VALUES ('331', '334', '<h1>C# <span class=\"color_h1\">变量</span></h1> \n<div class=\"tutintro\"> \n <p>一个变量只不过是一个供程序操作的存储区的名字。在 C# 中，每个变量都有一个特定的类型，类型决定了变量的内存大小和布局。范围内的值可以存储在内存中，可以对变量进行一系列操作。</p> \n <p>我们已经讨论了各种数据类型。C# 中提供的基本的值类型大致可以分为以下几类：</p> \n <table class=\"reference notranslate\"> \n  <tbody>\n   <tr>\n    <th style=\"width:25%;\">类型</th>\n    <th>举例</th>\n   </tr> \n   <tr>\n    <td>整数类型</td>\n    <td>sbyte、byte、short、ushort、int、uint、long、ulong 和 char</td>\n   </tr> \n   <tr>\n    <td>浮点型</td>\n    <td>float 和 double</td>\n   </tr> \n   <tr>\n    <td>十进制类型</td>\n    <td>decimal</td>\n   </tr> \n   <tr>\n    <td>布尔类型</td>\n    <td>true 或 false 值，指定的值</td>\n   </tr> \n   <tr>\n    <td>空类型</td>\n    <td>可为空值的数据类型</td>\n   </tr> \n  </tbody>\n </table> \n <p>C# 允许定义其他值类型的变量，比如 <b>enum</b>，也允许定义引用类型变量，比如 <b>class</b>。这些我们将在以后的章节中进行讨论。在本章节中，我们只研究基本变量类型。</p> \n</div> \n<h2 class=\"tutheader\">C# 中的变量定义</h2> \n<p>C# 中变量定义的语法：</p> \n<pre class=\"prettyprint\">\r\n&lt;data_type&gt; &lt;variable_list&gt;;\r\n</pre> \n<p>在这里，data_type 必须是一个有效的 C# 数据类型，可以是 char、int、float、double 或其他用户自定义的数据类型。variable_list 可以由一个或多个用逗号分隔的标识符名称组成。</p> \n<p>一些有效的变量定义如下所示：</p> \n<pre class=\"prettyprint\">\r\nint i, j, k;\r\nchar c, ch;\r\nfloat f, salary;\r\ndouble d;\r\n</pre> \n<p>您可以在变量定义时进行初始化：</p> \n<pre class=\"prettyprint\">\r\nint i = 100;\r\n</pre> \n<h2 class=\"tutheader\">C# 中的变量初始化</h2> \n<p>变量通过在等号后跟一个常量表达式进行初始化（赋值）。初始化的一般形式为：</p> \n<pre class=\"prettyprint\">\r\nvariable_name = value;\r\n</pre> \n<p>变量可以在声明时被初始化（指定一个初始值）。初始化由一个等号后跟一个常量表达式组成，如下所示：</p> \n<pre class=\"prettyprint\">\r\n&lt;data_type&gt; &lt;variable_name&gt; = value;\r\n</pre> \n<p>一些实例：</p> \n<pre class=\"prettyprint\">\r\nint d = 3, f = 5;    /* 初始化 d 和 f. */\r\nbyte z = 22;         /* 初始化 z. */\r\ndouble pi = 3.14159; /* 声明 pi 的近似值 */\r\nchar x = \'x\';        /* 变量 x 的值为 \'x\' */\r\n</pre> \n<p>正确地初始化变量是一个良好的编程习惯，否则有时程序会产生意想不到的结果。</p> \n<p>请看下面的实例，使用了各种类型的变量：</p> \n<pre class=\"prettyprint\">\r\nnamespace VariableDefinition\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            short a;\r\n            int b ;\r\n            double c;\r\n\r\n            /* 实际初始化 */\r\n            a = 10;\r\n            b = 20;\r\n            c = a + b;\r\n            Console.WriteLine(&quot;a = {0}, b = {1}, c = {2}&quot;, a, b, c);\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\na = 10, b = 20, c = 30\r\n</pre> \n<h2 class=\"tutheader\">接受来自用户的值</h2> \n<b>System</b> 命名空间中的 \n<b>Console</b> 类提供了一个函数 \n<b>ReadLine()</b>，用于接收来自用户的输入，并把它存储到一个变量中。\n<p></p> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\nint num;\r\nnum = Convert.ToInt32(Console.ReadLine());\r\n</pre> \n<p>函数 <b>Convert.ToInt32()</b> 把用户输入的数据转换为 int 数据类型，因为 <b>Console.ReadLine()</b> 只接受字符串格式的数据。</p> \n<h2 class=\"tutheader\">C# 中的 Lvalues 和 Rvalues</h2> \n<p>C# 中的两种表达式：</p> \n<ol class=\"list\"> \n <li><p><b>lvalue</b>：lvalue 表达式可以出现在赋值语句的左边或右边。</p></li> \n <li><p><b>rvalue</b>：rvalue 表达式可以出现在赋值语句的右边，不能出现在赋值语句的左边。</p></li> \n</ol> \n<p>变量是 lvalue 的，所以可以出现在赋值语句的左边。数值是 rvalue 的，因此不能被赋值，不能出现在赋值语句的左边。下面是一个有效的语句：</p> \n<pre class=\"prettyprint\">\r\nint g = 20;\r\n</pre> \n<p>下面是一个无效的语句，会产生编译时错误：</p> \n<pre class=\"prettyprint\">\r\n10 = 20;\r\n</pre>', null, 'C# 变量|C# 中的变量定义|C# 中的变量初始化|接受来自用户的值|C# 中的 Lvalues 和 Rvalues|');
INSERT INTO `schoolcontent` VALUES ('332', '335', '<h1>C# <span class=\"color_h1\">常量</span></h1> \n<div class=\"tutintro\"> \n <p>常量是固定值，程序执行期间不会改变。常量可以是任何基本数据类型，比如整数常量、浮点常量、字符常量或者字符串常量，还有枚举常量。</p> \n <p>常量可以被当作常规的变量，只是它们的值在定义后不能被修改。</p> \n</div> \n<h2 class=\"tutheader\">整数常量</h2> \n<p>整数常量可以是十进制、八进制或十六进制的常量。前缀指定基数：0x 或 0X 表示十六进制，0 表示八进制，没有前缀则表示十进制。</p> \n<p>整数常量也可以有后缀，可以是 U 和 L 的组合，其中，U 和 L 分别表示 unsigned 和 long。后缀可以是大写或者小写，多个后缀以任意顺序进行组合。</p> \n<p>这里有一些整数常量的实例：</p> \n<pre class=\"prettyprint\">\r\n212         /* 合法 */\r\n215u        /* 合法 */\r\n0xFeeL      /* 合法 */\r\n078         /* 非法：8 不是一个八进制数字 */\r\n032UU       /* 非法：不能重复后缀 */\r\n</pre> \n<p>以下是各种类型的整数常量的实例：</p> \n<pre class=\"prettyprint\">\r\n85         /* 十进制 */\r\n0213       /* 八进制 */\r\n0x4b       /* 十六进制 */\r\n30         /* int */\r\n30u        /* 无符号 int */\r\n30l        /* long */\r\n30ul       /* 无符号 long */\r\n</pre> \n<h2>浮点常量</h2> \n<p>一个浮点常量是由整数部分、小数点、小数部分和指数部分组成。您可以使用小数形式或者指数形式来表示浮点常量。</p> \n<p>这里有一些浮点常量的实例：</p> \n<pre class=\"prettyprint\">\r\n3.14159       /* 合法 */\r\n314159E-5L    /* 合法 */\r\n510E          /* 非法：不完全指数 */\r\n210f          /* 非法：没有小数或指数 */\r\n.e55          /* 非法：缺少整数或小数 */\r\n</pre> \n<p>使用小数形式表示时，必须包含小数点、指数或同时包含两者。使用指数形式表示时，必须包含整数部分、小数部分或同时包含两者。有符号的指数是用 e 或 E 表示的。</p> \n<h2>字符常量</h2> \n<p>字符常量是括在单引号里，例如，\'x\'，且可存储在一个简单的字符类型变量中。一个字符常量可以是一个普通字符（例如 \'x\'）、一个转义序列（例如 \'\\t\'）或者一个通用字符（例如 \'\\u02C0\'）。</p> \n<p>在 C# 中有一些特定的字符，当它们的前面带有反斜杠时有特殊的意义，可用于表示换行符（\\n）或制表符 tab（\\t）。在这里，列出一些转义序列码：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:20%\">转义序列</th>\n   <th>含义</th>\n  </tr> \n  <tr>\n   <td>\\\\</td>\n   <td>\\ 字符</td>\n  </tr> \n  <tr>\n   <td>\\\'</td>\n   <td>\' 字符</td>\n  </tr> \n  <tr>\n   <td>\\&quot;</td>\n   <td>&quot; 字符</td>\n  </tr> \n  <tr>\n   <td>\\?</td>\n   <td>? 字符</td>\n  </tr> \n  <tr>\n   <td>\\a</td>\n   <td>Alert 或 bell</td>\n  </tr> \n  <tr>\n   <td>\\b</td>\n   <td>退格键（Backspace）</td>\n  </tr> \n  <tr>\n   <td>\\f</td>\n   <td>换页符（Form feed）</td>\n  </tr> \n  <tr>\n   <td>\\n</td>\n   <td>换行符（Newline）</td>\n  </tr> \n  <tr>\n   <td>\\r</td>\n   <td>回车</td>\n  </tr> \n  <tr>\n   <td>\\t</td>\n   <td>水平制表符 tab</td>\n  </tr> \n  <tr>\n   <td>\\v</td>\n   <td>垂直制表符 tab</td>\n  </tr> \n  <tr>\n   <td>\\ooo</td>\n   <td>一到三位的八进制数</td>\n  </tr> \n  <tr>\n   <td>\\xhh . . .</td>\n   <td>一个或多个数字的十六进制数</td>\n  </tr> \n </tbody>\n</table> \n<p>以下是一些转义序列字符的实例：</p> \n<pre class=\"prettyprint\">\r\nnamespace EscapeChar\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(&quot;Hello\\tWorld\\n\\n&quot;);\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nHello   World\r\n</pre> \n<h2>字符串常量</h2> \n<p>字符常量是括在双引号 &quot;&quot; 里，或者是括在 @&quot;&quot; 里。字符串常量包含的字符与字符常量相似，可以是：普通字符、转义序列和通用字符</p> \n<p>使用字符串常量时，可以把一个很长的行拆成多个行，可以使用空格分隔各个部分。</p> \n<p>这里是一些字符串常量的实例。下面所列的各种形式表示相同的字符串。</p> \n<pre class=\"prettyprint\">\r\n&quot;hello, dear&quot;\r\n&quot;hello, \\\r\ndear&quot;\r\n&quot;hello, &quot; &quot;d&quot; &quot;ear&quot;\r\n@&quot;hello dear&quot;\r\n</pre> \n<h2>定义常量</h2> \n<p>常量是使用 <b>const</b> 关键字来定义的 。定义一个常量的语法如下：</p> \n<pre class=\"prettyprint\">\r\nconst &lt;data_type&gt; &lt;constant_name&gt; = value;\r\n</pre> \n<p>下面的代码演示了如何在程序中定义和使用常量：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace DeclaringConstants\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            const double pi = 3.14159; // 常量声明\r\n            double r;\r\n            Console.WriteLine(&quot;Enter Radius: &quot;);\r\n            r = Convert.ToDouble(Console.ReadLine());\r\n            double areaCircle = pi * r * r;\r\n            Console.WriteLine(&quot;Radius: {0}, Area: {1}&quot;, r, areaCircle);\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nEnter Radius: \r\n3\r\nRadius: 3, Area: 28.27431\r\n</pre>', null, 'C# 常量|整数常量|浮点常量|字符常量|字符串常量|定义常量|');
INSERT INTO `schoolcontent` VALUES ('333', '336', '<h1>C# <span class=\"color_h1\">运算符</span></h1> \n<div class=\"tutintro\"> \n <p>运算符是一种告诉编译器执行特定的数学或逻辑操作的符号。C# 有丰富的内置运算符，分类如下：</p> \n <ul class=\"list\"> \n  <li>算术运算符</li> \n  <li>关系运算符</li> \n  <li>逻辑运算符</li> \n  <li>位运算符</li> \n  <li>赋值运算符</li> \n  <li>杂项运算符</li> \n </ul> \n <p>本教程将逐一讲解算术运算符、关系运算符、逻辑运算符、位运算符、赋值运算符及其他运算符。</p> \n</div> \n<h2 class=\"tutheader\">算术运算符</h2> \n<p>下表显示了 C# 支持的所有算术运算符。假设变量 <b>A</b> 的值为 10，变量 <b>B</b> 的值为 20，则：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%\">运算符</th>\n   <th style=\"width:55%;\">描述</th>\n   <th>实例</th>\n  </tr> \n  <tr>\n   <td>+</td>\n   <td>把两个操作数相加</td>\n   <td> A + B 将得到 30</td>\n  </tr> \n  <tr>\n   <td>-</td>\n   <td>从第一个操作数中减去第二个操作数</td>\n   <td> A - B 将得到 -10</td>\n  </tr> \n  <tr>\n   <td>*</td>\n   <td>把两个操作数相乘</td>\n   <td> A * B 将得到 200</td>\n  </tr> \n  <tr>\n   <td>/</td>\n   <td>分子除以分母</td>\n   <td> B / A 将得到 2</td>\n  </tr> \n  <tr>\n   <td>%</td>\n   <td>取模运算符，整除后的余数</td>\n   <td> B % A 将得到 0</td>\n  </tr> \n  <tr>\n   <td>++</td>\n   <td>自增运算符，整数值增加 1</td>\n   <td> A++ 将得到 11</td>\n  </tr> \n  <tr>\n   <td>--</td>\n   <td>自减运算符，整数值减少 1</td>\n   <td> A-- 将得到 9</td>\n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>请看下面的实例，了解 C# 中所有可用的算术运算符：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace OperatorsAppl\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int a = 21;\r\n            int b = 10;\r\n            int c;\r\n\r\n            c = a + b;\r\n            Console.WriteLine(&quot;Line 1 - c 的值是 {0}&quot;, c);\r\n            c = a - b;\r\n            Console.WriteLine(&quot;Line 2 - c 的值是 {0}&quot;, c);\r\n            c = a * b;\r\n            Console.WriteLine(&quot;Line 3 - c 的值是 {0}&quot;, c);\r\n            c = a / b;\r\n            Console.WriteLine(&quot;Line 4 - c 的值是 {0}&quot;, c);\r\n            c = a % b;\r\n            Console.WriteLine(&quot;Line 5 - c 的值是 {0}&quot;, c);\r\n\r\n            // ++a 先进行自增运算再赋值\r\n            c = ++a;\r\n            Console.WriteLine(&quot;Line 6 - c 的值是 {0}&quot;, c);\r\n\r\n            // 此时 a 的值为 22\r\n            // --a 先进行自减运算再赋值\r\n            c = --a;\r\n            Console.WriteLine(&quot;Line 7 - c 的值是 {0}&quot;, c);\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nLine 1 - c 的值是 31\r\nLine 2 - c 的值是 11\r\nLine 3 - c 的值是 210\r\nLine 4 - c 的值是 2\r\nLine 5 - c 的值是 1\r\nLine 6 - c 的值是 22\r\nLine 7 - c 的值是 21\r\n</pre> \n<ul> \n <li><strong>c = a++</strong>: 先将 a 赋值给 c，再对 a 进行自增运算。</li> \n <li><strong>c = ++a</strong>: 先将 a 进行自增运算，再将 a 赋值给 c 。</li> \n <li><strong>c = a--</strong>: 先将 a 赋值给 c，再对 a 进行自减运算。</li> \n <li><strong>c = --a</strong>: 先将 a 进行自减运算，再将 a 赋值给 c 。</li> \n</ul> \n<pre>\r\nusing System;\r\n\r\nnamespace OperatorsAppl\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int a = 1;\r\n            int b;\r\n\r\n            // a++ 先赋值再进行自增运算\r\n            b = a++;\r\n            Console.WriteLine(&quot;a = {0}&quot;, a);\r\n            Console.WriteLine(&quot;b = {0}&quot;, b);\r\n            Console.ReadLine();\r\n\r\n            // ++a 先进行自增运算再赋值\r\n            a = 1; // 重新初始化 a\r\n            b = ++a;\r\n            Console.WriteLine(&quot;a = {0}&quot;, a);\r\n            Console.WriteLine(&quot;b = {0}&quot;, b);\r\n            Console.ReadLine();\r\n\r\n            // a-- 先赋值再进行自减运算\r\n            a = 1;  // 重新初始化 a\r\n            b= a--;\r\n            Console.WriteLine(&quot;a = {0}&quot;, a);\r\n            Console.WriteLine(&quot;b = {0}&quot;, b);\r\n            Console.ReadLine();\r\n\r\n            // --a 先进行自减运算再赋值\r\n            a = 1;  // 重新初始化 a\r\n            b= --a;\r\n            Console.WriteLine(&quot;a = {0}&quot;, a);\r\n            Console.WriteLine(&quot;b = {0}&quot;, b);\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre>\n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/runcode.php?filename=csharp_inc_des_ope&amp;type=cs\" class=\"showbtn\">运行实例 &raquo;</a></p> \n<p>执行以上程序，输出结果为：</p> \n<pre>\r\na = 2\r\nb = 1\r\na = 2\r\nb = 2\r\na = 0\r\nb = 1\r\na = 0\r\nb = 0\r\n</pre> \n<h2 class=\"tutheader\">关系运算符</h2> \n<p>下表显示了 C# 支持的所有关系运算符。假设变量 <b>A</b> 的值为 10，变量 <b>B</b> 的值为 20，则：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%\">运算符</th>\n   <th style=\"width:55%;\">描述</th>\n   <th>实例</th>\n  </tr> \n  <tr>\n   <td>==</td>\n   <td>检查两个操作数的值是否相等，如果相等则条件为真。</td>\n   <td> (A == B) 不为真。 </td>\n  </tr> \n  <tr>\n   <td>!=</td>\n   <td>检查两个操作数的值是否相等，如果不相等则条件为真。</td>\n   <td> (A != B) 为真。 </td>\n  </tr> \n  <tr>\n   <td>&gt;</td>\n   <td>检查左操作数的值是否大于右操作数的值，如果是则条件为真。</td>\n   <td> (A &gt; B) 不为真。</td>\n  </tr> \n  <tr>\n   <td>&lt;</td>\n   <td>检查左操作数的值是否小于右操作数的值，如果是则条件为真。</td>\n   <td> (A &lt; B) 为真。</td>\n  </tr> \n  <tr>\n   <td>&gt;=</td>\n   <td>检查左操作数的值是否大于或等于右操作数的值，如果是则条件为真。</td>\n   <td> (A &gt;= B) 不为真。</td>\n  </tr> \n  <tr>\n   <td>&lt;=</td>\n   <td>检查左操作数的值是否小于或等于右操作数的值，如果是则条件为真。</td>\n   <td> (A &lt;= B) 为真。</td>\n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>请看下面的实例，了解 C# 中所有可用的关系运算符：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nclass Program\r\n{\r\n  static void Main(string[] args)\r\n  {\r\n      int a = 21;\r\n      int b = 10;\r\n      \r\n      if (a == b)\r\n      {\r\n          Console.WriteLine(&quot;Line 1 - a 等于 b&quot;);\r\n      }\r\n      else\r\n      {\r\n          Console.WriteLine(&quot;Line 1 - a 不等于 b&quot;);\r\n      }\r\n      if (a &lt; b)\r\n      {\r\n          Console.WriteLine(&quot;Line 2 - a 小于 b&quot;);\r\n      }\r\n      else\r\n      {\r\n          Console.WriteLine(&quot;Line 2 - a 不小于 b&quot;);\r\n      }\r\n      if (a &gt; b)\r\n      {\r\n          Console.WriteLine(&quot;Line 3 - a 大于 b&quot;);\r\n      }\r\n      else\r\n      {\r\n          Console.WriteLine(&quot;Line 3 - a 不大于 b&quot;);\r\n      }\r\n      /* 改变 a 和 b 的值 */\r\n      a = 5;\r\n      b = 20;\r\n      if (a &lt;= b)\r\n      {\r\n         Console.WriteLine(&quot;Line 4 - a 小于或等于 b&quot;);\r\n      }\r\n      if (b &gt;= a)\r\n      {\r\n         Console.WriteLine(&quot;Line 5 - b 大于或等于 a&quot;);\r\n      }\r\n  }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nLine 1 - a 不等于 b\r\nLine 2 - a 不小于 b\r\nLine 3 - a 大于 b\r\nLine 4 - a 小于或等于 b\r\nLine 5 - b 大于或等于 a\r\n</pre> \n<h2 class=\"tutheader\">逻辑运算符</h2> \n<p>下表显示了 C# 支持的所有逻辑运算符。假设变量 <b>A</b> 为布尔值 true，变量 <b>B</b> 为布尔值 false，则：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%\">运算符</th>\n   <th style=\"width:55%;\">描述</th>\n   <th>实例</th>\n  </tr> \n  <tr>\n   <td>&amp;&amp;</td>\n   <td>称为逻辑与运算符。如果两个操作数都非零，则条件为真。</td>\n   <td> (A &amp;&amp; B) 为假。</td>\n  </tr> \n  <tr>\n   <td>||</td>\n   <td>称为逻辑或运算符。如果两个操作数中有任意一个非零，则条件为真。</td>\n   <td> (A || B) 为真。</td>\n  </tr> \n  <tr>\n   <td>!</td>\n   <td>称为逻辑非运算符。用来逆转操作数的逻辑状态。如果条件为真则逻辑非运算符将使其为假。</td>\n   <td> !(A &amp;&amp; B) 为真。</td>\n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>请看下面的实例，了解 C# 中所有可用的逻辑运算符：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace OperatorsAppl\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            bool a = true;\r\n            bool b = true;\r\n           \r\n            if (a &amp;&amp; b)\r\n            {\r\n               Console.WriteLine(&quot;Line 1 - 条件为真&quot;);\r\n            }\r\n            if (a || b)\r\n            {\r\n                Console.WriteLine(&quot;Line 2 - 条件为真&quot;);\r\n            }\r\n            /* 改变 a 和 b 的值 */\r\n            a = false;\r\n            b = true;\r\n            if (a &amp;&amp; b)\r\n            {\r\n                Console.WriteLine(&quot;Line 3 - 条件为真&quot;);\r\n            }\r\n            else\r\n            {\r\n                Console.WriteLine(&quot;Line 3 - 条件不为真&quot;);\r\n            }\r\n            if (!(a &amp;&amp; b))\r\n            {\r\n                Console.WriteLine(&quot;Line 4 - 条件为真&quot;);\r\n            }\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nLine 1 - 条件为真\r\nLine 2 - 条件为真\r\nLine 3 - 条件不为真\r\nLine 4 - 条件为真\r\n</pre> \n<h2 class=\"tutheader\">位运算符</h2> \n<p>位运算符作用于位，并逐位执行操作。&amp;、 | 和 ^ 的真值表如下所示：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:20%\">p</th>\n   <th style=\"width:20%\">q</th>\n   <th style=\"width:20%\">p &amp; q</th>\n   <th style=\"width:20%\">p | q</th>\n   <th style=\"width:20%\">p ^ q</th>\n  </tr> \n  <tr>\n   <td>0</td>\n   <td>0</td>\n   <td>0</td>\n   <td>0</td>\n   <td>0</td>\n  </tr> \n  <tr>\n   <td>0</td>\n   <td>1</td>\n   <td>0</td>\n   <td>1</td>\n   <td>1</td>\n  </tr> \n  <tr>\n   <td>1</td>\n   <td>1</td>\n   <td>1</td>\n   <td>1</td>\n   <td>0</td>\n  </tr> \n  <tr>\n   <td>1</td>\n   <td>0</td>\n   <td>0</td>\n   <td>1</td>\n   <td>1</td>\n  </tr> \n </tbody>\n</table> \n<p>假设如果 A = 60，且 B = 13，现在以二进制格式表示，它们如下所示：</p> \n<p>A = 0011 1100</p> \n<p>B = 0000 1101</p> \n<p>-----------------</p> \n<p>A&amp;B = 0000 1100</p> \n<p>A|B = 0011 1101</p> \n<p>A^B = 0011 0001</p> \n<p>~A&nbsp; = 1100 0011</p> \n<p>下表列出了 C# 支持的位运算符。假设变量 <b>A</b> 的值为 60，变量 <b>B</b> 的值为 13，则：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%\">运算符</th>\n   <th style=\"width:55%;\">描述</th>\n   <th>实例</th>\n  </tr> \n  <tr>\n   <td>&amp;</td>\n   <td>如果同时存在于两个操作数中，二进制 AND 运算符复制一位到结果中。</td>\n   <td> (A &amp; B) 将得到 12，即为 0000 1100</td>\n  </tr> \n  <tr>\n   <td>|</td>\n   <td>如果存在于任一操作数中，二进制 OR 运算符复制一位到结果中。</td>\n   <td> (A | B) 将得到 61，即为 0011 1101</td>\n  </tr> \n  <tr>\n   <td>^</td>\n   <td>如果存在于其中一个操作数中但不同时存在于两个操作数中，二进制异或运算符复制一位到结果中。</td>\n   <td> (A ^ B) 将得到 49，即为 0011 0001</td>\n  </tr> \n  <tr>\n   <td>~</td>\n   <td>二进制补码运算符是一元运算符，具有&quot;翻转&quot;位效果。</td>\n   <td>(~A ) 将得到 -61，即为 1100 0011，2 的补码形式，带符号的二进制数。</td>\n  </tr> \n  <tr>\n   <td>&lt;&lt;</td>\n   <td>二进制左移运算符。左操作数的值向左移动右操作数指定的位数。</td>\n   <td> A &lt;&lt; 2 将得到 240，即为 1111 0000</td>\n  </tr> \n  <tr>\n   <td>&gt;&gt;</td>\n   <td>二进制右移运算符。左操作数的值向右移动右操作数指定的位数。</td>\n   <td> A &gt;&gt; 2 将得到 15，即为 0000 1111</td>\n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>请看下面的实例，了解 C# 中所有可用的位运算符：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace OperatorsAppl\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int a = 60;	           /* 60 = 0011 1100 */  \r\n            int b = 13;	           /* 13 = 0000 1101 */\r\n            int c = 0;           \r\n\r\n             c = a &amp; b;           /* 12 = 0000 1100 */ \r\n             Console.WriteLine(&quot;Line 1 - c 的值是 {0}&quot;, c );\r\n\r\n             c = a | b;           /* 61 = 0011 1101 */\r\n             Console.WriteLine(&quot;Line 2 - c 的值是 {0}&quot;, c);\r\n\r\n             c = a ^ b;           /* 49 = 0011 0001 */\r\n             Console.WriteLine(&quot;Line 3 - c 的值是 {0}&quot;, c);\r\n\r\n             c = ~a;               /*-61 = 1100 0011 */\r\n             Console.WriteLine(&quot;Line 4 - c 的值是 {0}&quot;, c);\r\n\r\n             c = a &lt;&lt; 2;     /* 240 = 1111 0000 */\r\n             Console.WriteLine(&quot;Line 5 - c 的值是 {0}&quot;, c);\r\n\r\n             c = a &gt;&gt; 2;     /* 15 = 0000 1111 */\r\n             Console.WriteLine(&quot;Line 6 - c 的值是 {0}&quot;, c);\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nLine 1 - c 的值是 12\r\nLine 2 - c 的值是 61\r\nLine 3 - c 的值是 49\r\nLine 4 - c 的值是 -61\r\nLine 5 - c 的值是 240\r\nLine 6 - c 的值是 15\r\n</pre> \n<h2 class=\"tutheader\">赋值运算符</h2> \n<p>下表列出了 C# 支持的赋值运算符：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%\">运算符</th>\n   <th style=\"width:55%;\">描述</th>\n   <th>实例</th>\n  </tr> \n  <tr>\n   <td>=</td>\n   <td>简单的赋值运算符，把右边操作数的值赋给左边操作数</td>\n   <td> C = A + B 将把 A + B 的值赋给 C</td>\n  </tr> \n  <tr>\n   <td>+=</td>\n   <td>加且赋值运算符，把右边操作数加上左边操作数的结果赋值给左边操作数</td>\n   <td> C += A 相当于 C = C + A</td>\n  </tr> \n  <tr>\n   <td>-=</td>\n   <td>减且赋值运算符，把左边操作数减去右边操作数的结果赋值给左边操作数</td>\n   <td> C -= A 相当于 C = C - A</td>\n  </tr> \n  <tr>\n   <td>*=</td>\n   <td>乘且赋值运算符，把右边操作数乘以左边操作数的结果赋值给左边操作数</td>\n   <td> C *= A 相当于 C = C * A</td>\n  </tr> \n  <tr>\n   <td>/=</td>\n   <td>除且赋值运算符，把左边操作数除以右边操作数的结果赋值给左边操作数</td>\n   <td> C /= A 相当于 C = C / A</td>\n  </tr> \n  <tr>\n   <td>%=</td>\n   <td>求模且赋值运算符，求两个操作数的模赋值给左边操作数</td>\n   <td> C %= A 相当于 C = C % A</td>\n  </tr> \n  <tr>\n   <td>&lt;&lt;=</td>\n   <td>左移且赋值运算符</td>\n   <td> C &lt;&lt;= 2 等同于 C = C &lt;&lt; 2</td>\n  </tr> \n  <tr>\n   <td>&gt;&gt;=</td>\n   <td>右移且赋值运算符</td>\n   <td> C &gt;&gt;= 2 等同于 C = C &gt;&gt; 2</td>\n  </tr> \n  <tr>\n   <td>&amp;=</td>\n   <td>按位与且赋值运算符</td>\n   <td> C &amp;= 2 等同于 C = C &amp; 2</td>\n  </tr> \n  <tr>\n   <td>^=</td>\n   <td>按位异或且赋值运算符</td>\n   <td> C ^= 2 等同于 C = C ^ 2</td>\n  </tr> \n  <tr>\n   <td>|=</td>\n   <td>按位或且赋值运算符</td>\n   <td> C |= 2 等同于 C = C | 2</td>\n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<p>请看下面的实例，了解 C# 中所有可用的赋值运算符：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace OperatorsAppl\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            int a = 21;\r\n            int c;\r\n\r\n            c = a;\r\n            Console.WriteLine(&quot;Line 1 - =  c 的值 = {0}&quot;, c);\r\n\r\n            c += a;\r\n            Console.WriteLine(&quot;Line 2 - += c 的值 = {0}&quot;, c);\r\n\r\n            c -= a;\r\n            Console.WriteLine(&quot;Line 3 - -=  c 的值 = {0}&quot;, c);\r\n\r\n            c *= a;\r\n            Console.WriteLine(&quot;Line 4 - *=  c 的值 = {0}&quot;, c);\r\n\r\n            c /= a;\r\n            Console.WriteLine(&quot;Line 5 - /=  c 的值 = {0}&quot;, c);\r\n\r\n            c = 200;\r\n            c %= a;\r\n            Console.WriteLine(&quot;Line 6 - %=  c 的值 = {0}&quot;, c);\r\n\r\n            c &lt;&lt;= 2;\r\n            Console.WriteLine(&quot;Line 7 - &lt;&lt;=  c 的值 = {0}&quot;, c);\r\n\r\n            c &gt;&gt;= 2;\r\n            Console.WriteLine(&quot;Line 8 - &gt;&gt;=  c 的值 = {0}&quot;, c);\r\n\r\n            c &amp;= 2;\r\n            Console.WriteLine(&quot;Line 9 - &amp;=  c 的值 = {0}&quot;, c);\r\n\r\n            c ^= 2;\r\n            Console.WriteLine(&quot;Line 10 - ^=  c 的值 = {0}&quot;, c);\r\n\r\n            c |= 2;\r\n            Console.WriteLine(&quot;Line 11 - |=  c 的值 = {0}&quot;, c);\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nLine 1 - =     c 的值 = 21\r\nLine 2 - +=    c 的值 = 42\r\nLine 3 - -=    c 的值 = 21\r\nLine 4 - *=    c 的值 = 441\r\nLine 5 - /=    c 的值 = 21\r\nLine 6 - %=    c 的值 = 11\r\nLine 7 - &lt;&lt;=    c 的值 = 44\r\nLine 8 - &gt;&gt;=    c 的值 = 11\r\nLine 9 - &amp;=    c 的值 = 2\r\nLine 10 - ^=    c 的值 = 0\r\nLine 11 - |=    c 的值 = 2\r\n</pre> \n<h2 class=\"tutheader\">杂项运算符</h2> \n<p>下表列出了 C# 支持的其他一些重要的运算符，包括 <b>sizeof</b>、<b>typeof</b> 和 <b>? :</b>。</p> 运算符描述实例  sizeof()返回数据类型的大小。sizeof(int)，将返回 4.   typeof()返回 class 的类型。typeof(StreamReader);   &amp;返回变量的地址。&amp;a; 将得到变量的实际地址。   *变量的指针。*a; 将指向一个变量。   ? :条件表达式 如果条件为真 ? 则为 X : 否则为 Y   is判断对象是否为某一类型。If( Ford is Car) // 检查 Ford 是否是 Car 类的一个对象。   as强制转换，即使转换失败也不会抛出异常。Object obj = new StringReader(&quot;Hello&quot;);\n<br /> StringReader r = obj as StringReader;    \n<h3>实例</h3> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace OperatorsAppl\r\n{\r\n    \r\n   class Program\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         \r\n         /* sizeof 运算符的实例 */\r\n         Console.WriteLine(&quot;int 的大小是 {0}&quot;, sizeof(int));\r\n         Console.WriteLine(&quot;short 的大小是 {0}&quot;, sizeof(short));\r\n         Console.WriteLine(&quot;double 的大小是 {0}&quot;, sizeof(double));\r\n         \r\n         /* 三元运算符符的实例 */\r\n         int a, b;\r\n         a = 10;\r\n         b = (a == 1) ? 20 : 30;\r\n         Console.WriteLine(&quot;b 的值是 {0}&quot;, b);\r\n\r\n         b = (a == 10) ? 20 : 30;\r\n         Console.WriteLine(&quot;b 的值是 {0}&quot;, b);\r\n         Console.ReadLine();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nint 的大小是 4\r\nshort 的大小是 2\r\ndouble 的大小是 8\r\nb 的值是 30\r\nb 的值是 20\r\n</pre> \n<h2 class=\"tutheader\">C# 中的运算符优先级</h2> \n<p>运算符的优先级确定表达式中项的组合。这会影响到一个表达式如何计算。某些运算符比其他运算符有更高的优先级，例如，乘除运算符具有比加减运算符更高的优先级。</p> \n<p>例如 x = 7 + 3 * 2，在这里，x 被赋值为 13，而不是 20，因为运算符 * 具有比 + 更高的优先级，所以首先计算乘法 3*2，然后再加上 7。</p> \n<p>下表将按运算符优先级从高到低列出各个运算符，具有较高优先级的运算符出现在表格的上面，具有较低优先级的运算符出现在表格的下面。在表达式中，较高优先级的运算符会优先被计算。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr> \n   <th>类别&nbsp;</th> \n   <th>运算符&nbsp;</th>\n   <th>结合性&nbsp;</th> \n  </tr> \n  <tr> \n   <td>后缀&nbsp;</td>\n   <td>() [] -&gt; . ++ - - &nbsp;</td> \n   <td>从左到右&nbsp;</td> \n  </tr> \n  <tr> \n   <td>一元&nbsp;</td> \n   <td>+ - ! ~ ++ - - (type)* &amp; sizeof&nbsp;</td> \n   <td>从右到左&nbsp;</td>\n  </tr> \n  <tr> \n   <td>乘除&nbsp;</td> \n   <td>* / %&nbsp;</td>\n   <td>从左到右&nbsp;</td> \n  </tr> \n  <tr> \n   <td>加减&nbsp;</td>\n   <td>+ -&nbsp;</td> \n   <td>从左到右&nbsp;</td> \n  </tr> \n  <tr> \n   <td>移位&nbsp;</td> \n   <td>&lt;&lt; &gt;&gt;&nbsp;</td> \n   <td>从左到右&nbsp;</td> \n  </tr> \n  <tr> \n   <td>关系&nbsp;</td>\n   <td>&lt; &lt;= &gt; &gt;=&nbsp;</td> \n   <td>从左到右&nbsp;</td> \n  </tr> \n  <tr> \n   <td>相等&nbsp;</td> \n   <td>== !=&nbsp;</td> \n   <td>从左到右&nbsp;</td> \n  </tr> \n  <tr> \n   <td>位与 AND&nbsp;</td>\n   <td>&amp;&nbsp;</td> \n   <td>从左到右&nbsp;</td> \n  </tr> \n  <tr> \n   <td>位异或 XOR&nbsp;</td> \n   <td>^&nbsp;</td> \n   <td>从左到右&nbsp;</td>\n  </tr> \n  <tr> \n   <td>位或 OR&nbsp;</td> \n   <td>|&nbsp;</td> \n   <td>从左到右&nbsp;</td>\n  </tr> \n  <tr> \n   <td>逻辑与 AND&nbsp;</td>\n   <td>&amp;&amp;&nbsp;</td> \n   <td>从左到右&nbsp;</td>\n  </tr> \n  <tr> \n   <td>逻辑或 OR&nbsp;</td> \n   <td>||&nbsp;</td> \n   <td>从左到右&nbsp;</td>\n  </tr> \n  <tr> \n   <td>条件&nbsp;</td>\n   <td>?:&nbsp;</td> \n   <td>从右到左&nbsp;</td> \n  </tr> \n  <tr> \n   <td>赋值&nbsp;</td> \n   <td>= += -= *= /= %=&gt;&gt;= &lt;&lt;= &amp;= ^= |=&nbsp;</td>\n   <td>从右到左&nbsp;</td>\n  </tr> \n  <tr> \n   <td>逗号&nbsp;</td> \n   <td>,&nbsp;</td> \n   <td>从左到右&nbsp;</td>\n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace OperatorsAppl\r\n{\r\n    \r\n   class Program\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         int a = 20;\r\n         int b = 10;\r\n         int c = 15;\r\n         int d = 5;\r\n         int e;\r\n         e = (a + b) * c / d;     // ( 30 * 15 ) / 5\r\n         Console.WriteLine(&quot;(a + b) * c / d 的值是 {0}&quot;, e);\r\n\r\n         e = ((a + b) * c) / d;   // (30 * 15 ) / 5\r\n         Console.WriteLine(&quot;((a + b) * c) / d 的值是 {0}&quot;, e);\r\n\r\n         e = (a + b) * (c / d);   // (30) * (15/5)\r\n         Console.WriteLine(&quot;(a + b) * (c / d) 的值是 {0}&quot;, e);\r\n\r\n         e = a + (b * c) / d;    //  20 + (150/5)\r\n         Console.WriteLine(&quot;a + (b * c) / d 的值是 {0}&quot;, e);\r\n         Console.ReadLine();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n(a + b) * c / d 的值是 90\r\n((a + b) * c) / d 的值是 90\r\n(a + b) * (c / d) 的值是 90\r\na + (b * c) / d 的值是 50\r\n</pre>', null, 'C# 运算符|算术运算符|关系运算符|逻辑运算符|位运算符|赋值运算符|杂项运算符|C# 中的运算符优先级|');
INSERT INTO `schoolcontent` VALUES ('334', '337', '<h1>C# <span class=\"color_h1\">判断</span></h1> \n<div class=\"tutintro\"> \n <p>判断结构要求程序员指定一个或多个要评估或测试的条件，以及条件为真时要执行的语句（必需的）和条件为假时要执行的语句（可选的）。</p> \n <p>下面是大多数编程语言中典型的判断结构的一般形式：</p> \n <img src=\"http://www.runoob.com/wp-content/uploads/2015/12/if.png\" alt=\"C# 中的判断语句\" /> \n</div> \n<h2 class=\"tutheader\">判断语句</h2> \n<p>C# 提供了以下类型的判断语句。点击链接查看每个语句的细节。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:35%\">语句</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-if.html\" title=\"C# 中的 if 语句\">if 语句</a></td>\n   <td>一个 <b>if 语句</b> 由一个布尔表达式后跟一个或多个语句组成。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-if-else.html\" title=\"C# 中的 if...else 语句\">if...else 语句</a></td>\n   <td>一个 <b>if 语句</b> 后可跟一个可选的 <b>else 语句</b>，else 语句在布尔表达式为假时执行。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-nested-if.html\" title=\"C# 中的嵌套 if 语句\">嵌套 if 语句</a></td>\n   <td>您可以在一个 <b>if</b> 或 <b>else if</b> 语句内使用另一个 <b>if</b> 或 <b>else if</b> 语句。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-switch.html\" title=\"C# 中的 switch 语句\">switch 语句</a></td>\n   <td>一个 <b>switch</b> 语句允许测试一个变量等于多个值时的情况。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-nested-switch.html\" title=\"C# 中的嵌套 switch 语句\">嵌套 switch 语句</a></td>\n   <td>您可以在一个 <b>switch</b> 语句内使用另一个 <b>switch </b> 语句。</td>\n  </tr> \n </tbody>\n</table> \n<br /> \n<h2 class=\"tutheader\">? : 运算符</h2> \n<p>我们已经在前面的章节中讲解了 <b>条件运算符 ? :</b>，可以用来替代 <b>if...else</b> 语句。它的一般形式如下：</p> \n<pre class=\"prettyprint\">\r\nExp1 ? Exp2 : Exp3;\r\n</pre> \n<p>其中，Exp1、Exp2 和 Exp3 是表达式。请注意，冒号的使用和位置。</p> \n<p>? 表达式的值是由 Exp1 决定的。如果 Exp1 为真，则计算 Exp2 的值，结果即为整个 ? 表达式的值。如果 Exp1 为假，则计算 Exp3 的值，结果即为整个 ? 表达式的值。</p>', null, 'C# 判断|判断语句|? : 运算符|');
INSERT INTO `schoolcontent` VALUES ('335', '338', '<h1>C# <span class=\"color_h1\">循环</span></h1> \n<div class=\"tutintro\"> \n <p>有的时候，可能需要多次执行同一块代码。一般情况下，语句是顺序执行的：函数中的第一个语句先执行，接着是第二个语句，依此类推。</p> \n <p>编程语言提供了允许更为复杂的执行路径的多种控制结构。</p> \n <p>循环语句允许我们多次执行一个语句或语句组，下面是大多数编程语言中循环语句的一般形式：</p> \n <img src=\"http://www.runoob.com/wp-content/uploads/2014/04/loop_architecture.jpg\" alt=\"循环结构\" /> \n</div> \n<h2 class=\"tutheader\">循环类型</h2> \n<p>C# 提供了以下几种循环类型。点击链接查看每个类型的细节。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:30%\">循环类型</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-while-loop.html\" title=\"C# 中的 while 循环\">while 循环</a></td>\n   <td>当给定条件为真时，重复语句或语句组。它会在执行循环主体之前测试条件。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-for-loop.html\" title=\"C# 中的 for 循环\">for 循环</a></td>\n   <td>多次执行一个语句序列，简化管理循环变量的代码。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-do-while-loop.html\" title=\"C# 中的 do...while 循环\">do...while 循环</a></td>\n   <td>除了它是在循环主体结尾测试条件外，其他与 while 语句类似。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-nested-loops.html\" title=\"C# 中的嵌套循环\">嵌套循环</a></td>\n   <td>您可以在 while、for 或 do..while 循环内使用一个或多个循环。</td>\n  </tr> \n </tbody>\n</table> \n<br /> \n<h2 class=\"tutheader\">循环控制语句</h2> \n<p>循环控制语句更改执行的正常序列。当执行离开一个范围时，所有在该范围中创建的自动对象都会被销毁。</p> \n<p>C# 提供了下列的控制语句。点击链接查看每个语句的细节。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:30%\">控制语句</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-break-statement.html\" title=\"C# 中的 break 语句\">break 语句</a></td>\n   <td>终止 <b>loop</b> 或 <b>switch</b> 语句，程序流将继续执行紧接着 loop 或 switch 的下一条语句。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-continue-statement.html\" title=\"C# 中的 continue 语句\">continue 语句</a></td>\n   <td>引起循环跳过主体的剩余部分，立即重新开始测试条件。</td>\n  </tr> \n </tbody>\n</table> \n<br /> \n<h2 class=\"tutheader\">无限循环</h2> \n<p>如果条件永远不为假，则循环将变成无限循环。<b>for</b> 循环在传统意义上可用于实现无限循环。由于构成循环的三个表达式中任何一个都不是必需的，您可以将某些条件表达式留空来构成一个无限循环。</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace Loops\r\n{\r\n    \r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            for (; ; )\r\n            {\r\n                Console.WriteLine(&quot;Hey! I am Trapped&quot;);\r\n            }\r\n \r\n        }\r\n    }\r\n} \r\n</pre> \n<p>当条件表达式不存在时，它被假设为真。您也可以设置一个初始值和增量表达式，但是一般情况下，程序员偏向于使用 for(;;) 结构来表示一个无限循环。</p>', null, 'C# 循环|循环类型|循环控制语句|无限循环|');
INSERT INTO `schoolcontent` VALUES ('336', '339', '<h1>C# <span class=\"color_h1\">封装</span></h1> \n<div class=\"tutintro\"> \n <p><b>封装</b> 被定义为&quot;把一个或多个项目封闭在一个物理的或者逻辑的包中&quot;。在面向对象程序设计方法论中，封装是为了防止对实现细节的访问。</p> \n <p>抽象和封装是面向对象程序设计的相关特性。抽象允许相关信息可视化，封装则使程序员<i>实现所需级别的抽象</i>。</p> \n <p>封装使用 <b>访问修饰符</b> 来实现。一个 <b>访问修饰符</b> 定义了一个类成员的范围和可见性。C# 支持的访问修饰符如下所示：</p> \n <ul class=\"list\"> \n  <li>Public</li> \n  <li>Private</li> \n  <li>Protected</li> \n  <li>Internal</li> \n  <li>Protected internal</li> \n </ul> \n</div> \n<h2 class=\"tutheader\">Public 访问修饰符</h2> \n<p>Public 访问修饰符允许一个类将其成员变量和成员函数暴露给其他的函数和对象。任何公有成员可以被外部的类访问。</p> \n<p>下面的实例说明了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace RectangleApplication\r\n{\r\n    class Rectangle\r\n    {\r\n        //成员变量\r\n        public double length;\r\n        public double width;\r\n\r\n        public double GetArea()\r\n        {\r\n            return length * width;\r\n        }\r\n        public void Display()\r\n        {\r\n            Console.WriteLine(&quot;长度： {0}&quot;, length);\r\n            Console.WriteLine(&quot;宽度： {0}&quot;, width);\r\n            Console.WriteLine(&quot;面积： {0}&quot;, GetArea());\r\n        }\r\n    }// Rectangle 结束\r\n\r\n    class ExecuteRectangle\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Rectangle r = new Rectangle();\r\n            r.length = 4.5;\r\n	    r.width = 3.5;\r\n            r.Display();\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre>\r\n长度： 4.5\r\n宽度： 3.5\r\n面积： 15.75\r\n</pre> \n<p>在上面的实例中，成员变量 length 和 width 被声明为 <b>public</b>，所以它们可以被函数 Main() 使用 Rectangle 类的实例 <b>r</b> 访问。</p> \n<p>成员函数 <i>Display()</i> 和 <i>GetArea()</i> 可以直接访问这些变量。</p> \n<p>成员函数 <i>Display()</i> 也被声明为 <b>public</b>，所以它也能被 <i>Main()</i> 使用 Rectangle 类的实例 <b>r</b> 访问。</p> \n<h2 class=\"tutheader\">Private 访问修饰符</h2> \n<p>Private 访问修饰符允许一个类将其成员变量和成员函数对其他的函数和对象进行隐藏。只有同一个类中的函数可以访问它的私有成员。即使是类的实例也不能访问它的私有成员。</p> \n<p>下面的实例说明了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace RectangleApplication\r\n{\r\n    class Rectangle\r\n    {\r\n        //成员变量\r\n        private double length;\r\n        private double width;\r\n\r\n        public void Acceptdetails()\r\n        {\r\n            Console.WriteLine(&quot;请输入长度：&quot;);\r\n            length = Convert.ToDouble(Console.ReadLine());\r\n            Console.WriteLine(&quot;请输入宽度：&quot;);\r\n            width = Convert.ToDouble(Console.ReadLine());\r\n        }\r\n        public double GetArea()\r\n        {\r\n            return length * width;\r\n        }\r\n        public void Display()\r\n        {\r\n            Console.WriteLine(&quot;长度： {0}&quot;, length);\r\n            Console.WriteLine(&quot;宽度： {0}&quot;, width);\r\n            Console.WriteLine(&quot;面积： {0}&quot;, GetArea());\r\n        }\r\n    }//end class Rectangle    \r\n    class ExecuteRectangle\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Rectangle r = new Rectangle();\r\n            r.Acceptdetails();\r\n            r.Display();\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n请输入长度：\r\n4.4\r\n请输入宽度：\r\n3.3\r\n长度： 4.4\r\n宽度： 3.3\r\n面积： 14.52\r\n</pre> \n<p>在上面的实例中，成员变量 length 和 width 被声明为 <b>private</b>，所以它们不能被函数 Main() 访问。</p> \n<p>成员函数 <i>AcceptDetails()</i> 和 <i>Display()</i> 可以访问这些变量。</p> \n<p>由于成员函数 <i>AcceptDetails()</i> 和 <i>Display()</i> 被声明为 <b>public</b>，所以它们可以被 <i>Main()</i> 使用 Rectangle 类的实例 <b>r</b> 访问。</p> \n<h2 class=\"tutheader\">Protected 访问修饰符</h2> \n<p>Protected 访问修饰符允许子类访问它的基类的成员变量和成员函数。这样有助于实现继承。我们将在继承的章节详细讨论这个。更详细地讨论这个。</p> \n<h2 class=\"tutheader\">Internal 访问修饰符</h2> \n<p>Internal 访问说明符允许一个类将其成员变量和成员函数暴露给当前程序中的其他函数和对象。换句话说，带有 internal 访问修饰符的任何成员可以被定义在该成员所定义的应用程序内的任何类或方法访问。</p> \n<p>下面的实例说明了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace RectangleApplication\r\n{\r\n    class Rectangle\r\n    {\r\n        //成员变量\r\n        internal double length;\r\n        internal double width;\r\n        \r\n        double GetArea()\r\n        {\r\n            return length * width;\r\n        }\r\n       public void Display()\r\n        {\r\n            Console.WriteLine(&quot;长度： {0}&quot;, length);\r\n            Console.WriteLine(&quot;宽度： {0}&quot;, width);\r\n            Console.WriteLine(&quot;面积： {0}&quot;, GetArea());\r\n        }\r\n    }//end class Rectangle    \r\n    class ExecuteRectangle\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Rectangle r = new Rectangle();\r\n            r.length = 4.5;\r\n            r.width = 3.5;\r\n            r.Display();\r\n            Console.ReadLine();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n长度： 4.5\r\n宽度： 3.5\r\n面积： 15.75\r\n</pre> \n<p>在上面的实例中，请注意成员函数 <i>GetArea()</i> 声明的时候不带有任何访问修饰符。如果没有指定访问修饰符，则使用类成员的默认访问修饰符，即为 <b>private</b>。</p> \n<h2 class=\"tutheader\">Protected Internal 访问修饰符</h2> \n<p>Protected Internal 访问修饰符允许一个类将其成员变量和成员函数对同一应用程序内的子类以外的其他的类对象和函数进行隐藏。这也被用于实现继承。</p>', null, 'C# 封装|Public 访问修饰符|Private 访问修饰符|Protected 访问修饰符|Internal 访问修饰符|Protected Internal 访问修饰符|');
INSERT INTO `schoolcontent` VALUES ('337', '340', '<h1>C# <span class=\"color_h1\">方法</span></h1> \n<div class=\"tutintro\"> \n <p>一个方法是把一些相关的语句组织在一起，用来执行一个任务的语句块。每一个 C# 程序至少有一个带有 Main 方法的类。</p> \n <p>要使用一个方法，您需要：</p> \n <ul class=\"list\"> \n  <li>定义方法</li> \n  <li>调用方法</li> \n </ul> \n</div> \n<h2 class=\"tutheader\">C# 中定义方法</h2> \n<p>当定义一个方法时，从根本上说是在声明它的结构的元素。在 C# 中，定义方法的语法如下：</p> \n<pre class=\"prettyprint\">\r\n&lt;Access Specifier&gt; &lt;Return Type&gt; &lt;Method Name&gt;(Parameter List)\r\n{\r\n   Method Body\r\n}\r\n</pre> \n<p>下面是方法的各个元素：</p> \n<ul class=\"list\"> \n <li><b>Access Specifier</b>：访问修饰符，这个决定了变量或方法对于另一个类的可见性。</li> \n <li><b>Return type</b>：返回类型，一个方法可以返回一个值。返回类型是方法返回的值的数据类型。如果方法不返回任何值，则返回类型为 <b>void</b>。</li> \n <li><b>Method name</b>：方法名称，是一个唯一的标识符，且是大小写敏感的。它不能与类中声明的其他标识符相同。</li> \n <li><b>Parameter list</b>：参数列表，使用圆括号括起来，该参数是用来传递和接收方法的数据。参数列表是指方法的参数类型、顺序和数量。参数是可选的，也就是说，一个方法可能不包含参数。</li> \n <li><b>Method body</b>：方法主体，包含了完成任务所需的指令集。</li> \n</ul> \n<h2 class=\"tutheader\">实例</h2> \n<p>下面的代码片段显示一个函数 <i>FindMax</i>，它接受两个整数值，并返回两个中的较大值。它有 public 访问修饰符，所以它可以使用类的实例从类的外部进行访问。</p> \n<pre>\r\nclass NumberManipulator\r\n{\r\n   public int FindMax(int num1, int num2)\r\n   {\r\n      /* 局部变量声明 */\r\n      int result;\r\n\r\n      if (num1 &gt; num2)\r\n         result = num1;\r\n      else\r\n         result = num2;\r\n\r\n      return result;\r\n   }\r\n   ...\r\n}\r\n</pre> \n<h2 class=\"tutheader\">C# 中调用方法</h2> \n<p>您可以使用方法名调用方法。下面的实例演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace CalculatorApplication\r\n{\r\n   class NumberManipulator\r\n   {\r\n      public int FindMax(int num1, int num2)\r\n      {\r\n         /* 局部变量声明 */\r\n         int result;\r\n\r\n         if (num1 &gt; num2)\r\n            result = num1;\r\n         else\r\n            result = num2;\r\n\r\n         return result;\r\n      }\r\n      static void Main(string[] args)\r\n      {\r\n         /* 局部变量定义 */\r\n         int a = 100;\r\n         int b = 200;\r\n         int ret;\r\n         NumberManipulator n = new NumberManipulator();\r\n\r\n         //调用 FindMax 方法\r\n         ret = n.FindMax(a, b);\r\n         Console.WriteLine(&quot;最大值是： {0}&quot;, ret );\r\n         Console.ReadLine();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n最大值是： 200\r\n</pre> \n<p>您也可以使用类的实例从另一个类中调用其他类的公有方法。例如，方法 <i>FindMax</i> 属于 <i>NumberManipulator</i> 类，您可以从另一个类 <i>Test</i> 中调用它。</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace CalculatorApplication\r\n{\r\n    class NumberManipulator\r\n    {\r\n        public int FindMax(int num1, int num2)\r\n        {\r\n            /* 局部变量声明 */\r\n            int result;\r\n\r\n            if (num1 &gt; num2)\r\n                result = num1;\r\n            else\r\n                result = num2;\r\n\r\n            return result;\r\n        }\r\n    }\r\n    class Test\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            /* 局部变量定义 */\r\n            int a = 100;\r\n            int b = 200;\r\n            int ret;\r\n            NumberManipulator n = new NumberManipulator();\r\n            //调用 FindMax 方法\r\n            ret = n.FindMax(a, b);\r\n            Console.WriteLine(&quot;最大值是： {0}&quot;, ret );\r\n            Console.ReadLine();\r\n\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre>\r\n最大值是： 200\r\n</pre> \n<h2 class=\"tutheader\">递归方法调用</h2> \n<p>一个方法可以自我调用。这就是所谓的 <b>递归</b>。下面的实例使用递归函数计算一个数的阶乘：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace CalculatorApplication\r\n{\r\n    class NumberManipulator\r\n    {\r\n        public int factorial(int num)\r\n        {\r\n            /* 局部变量定义 */\r\n            int result;\r\n\r\n            if (num == 1)\r\n            {\r\n                return 1;\r\n            }\r\n            else\r\n            {\r\n                result = factorial(num - 1) * num;\r\n                return result;\r\n            }\r\n        }\r\n    \r\n        static void Main(string[] args)\r\n        {\r\n            NumberManipulator n = new NumberManipulator();\r\n            //调用 factorial 方法\r\n            Console.WriteLine(&quot;6 的阶乘是： {0}&quot;, n.factorial(6));\r\n            Console.WriteLine(&quot;7 的阶乘是： {0}&quot;, n.factorial(7));\r\n            Console.WriteLine(&quot;8 的阶乘是： {0}&quot;, n.factorial(8));\r\n            Console.ReadLine();\r\n\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n6 的阶乘是： 720\r\n7 的阶乘是： 5040\r\n8 的阶乘是： 40320\r\n</pre> \n<h2 class=\"tutheader\">参数传递</h2> \n<p>当调用带有参数的方法时，您需要向方法传递参数。在 C# 中，有三种向方法传递参数的方式：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:30%\">方式</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>值参数</td>\n   <td>这种方式复制参数的实际值给函数的形式参数，实参和形参使用的是两个不同内存中的值。在这种情况下，当形参的值发生改变时，不会影响实参的值，从而保证了实参数据的安全。</td> \n  </tr> \n  <tr>\n   <td>引用参数</td>\n   <td>这种方式复制参数的内存位置的引用给形式参数。这意味着，当形参的值发生改变时，同时也改变实参的值。</td> \n  </tr> \n  <tr>\n   <td>输出参数</td>\n   <td>这种方式可以返回多个值。</td> \n  </tr> \n </tbody>\n</table> \n<h2>按值传递参数</h2> \n<p>这是参数传递的默认方式。在这种方式下，当调用一个方法时，会为每个值参数创建一个新的存储位置。</p> \n<p>实际参数的值会复制给形参，实参和形参使用的是两个不同内存中的值。所以，当形参的值发生改变时，不会影响实参的值，从而保证了实参数据的安全。下面的实例演示了这个概念：</p> \n<pre>\r\nusing System;\r\nnamespace CalculatorApplication\r\n{\r\n   class NumberManipulator\r\n   {\r\n      public void swap(int x, int y)\r\n      {\r\n         int temp;\r\n         \r\n         temp = x; /* 保存 x 的值 */\r\n         x = y;    /* 把 y 赋值给 x */\r\n         y = temp; /* 把 temp 赋值给 y */\r\n      }\r\n      \r\n      static void Main(string[] args)\r\n      {\r\n         NumberManipulator n = new NumberManipulator();\r\n         /* 局部变量定义 */\r\n         int a = 100;\r\n         int b = 200;\r\n         \r\n         Console.WriteLine(&quot;在交换之前，a 的值： {0}&quot;, a);\r\n         Console.WriteLine(&quot;在交换之前，b 的值： {0}&quot;, b);\r\n         \r\n         /* 调用函数来交换值 */\r\n         n.swap(a, b);\r\n         \r\n         Console.WriteLine(&quot;在交换之后，a 的值： {0}&quot;, a);\r\n         Console.WriteLine(&quot;在交换之后，b 的值： {0}&quot;, b);\r\n         \r\n         Console.ReadLine();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre>\r\n在交换之前，a 的值：100\r\n在交换之前，b 的值：200\r\n在交换之后，a 的值：100\r\n在交换之后，b 的值：200\r\n</pre> \n<p>结果表明，即使在函数内改变了值，值也没有发生任何的变化。</p> \n<h2>按引用传递参数</h2> \n<p>引用参数是一个对变量的<b>内存位置的引用</b>。当按引用传递参数时，与值参数不同的是，它不会为这些参数创建一个新的存储位置。引用参数表示与提供给方法的实际参数具有相同的内存位置。</p> \n<p>在 C# 中，使用 <b>ref</b> 关键字声明引用参数。下面的实例演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace CalculatorApplication\r\n{\r\n   class NumberManipulator\r\n   {\r\n      public void swap(ref int x, ref int y)\r\n      {\r\n         int temp;\r\n\r\n         temp = x; /* 保存 x 的值 */\r\n         x = y;    /* 把 y 赋值给 x */\r\n         y = temp; /* 把 temp 赋值给 y */\r\n       }\r\n   \r\n      static void Main(string[] args)\r\n      {\r\n         NumberManipulator n = new NumberManipulator();\r\n         /* 局部变量定义 */\r\n         int a = 100;\r\n         int b = 200;\r\n\r\n         Console.WriteLine(&quot;在交换之前，a 的值： {0}&quot;, a);\r\n         Console.WriteLine(&quot;在交换之前，b 的值： {0}&quot;, b);\r\n\r\n         /* 调用函数来交换值 */\r\n         n.swap(ref a, ref b);\r\n\r\n         Console.WriteLine(&quot;在交换之后，a 的值： {0}&quot;, a);\r\n         Console.WriteLine(&quot;在交换之后，b 的值： {0}&quot;, b);\r\n \r\n         Console.ReadLine();\r\n\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre>\r\n在交换之前，a 的值：100\r\n在交换之前，b 的值：200\r\n在交换之后，a 的值：200\r\n在交换之后，b 的值：100\r\n</pre> \n<p>结果表明，<i>swap</i> 函数内的值改变了，且这个改变可以在 <i> Main</i> 函数中反映出来。</p> \n<h2>按输出传递参数</h2> \n<p>return 语句可用于只从函数中返回一个值。但是，可以使用 <b>输出参数</b> 来从函数中返回两个值。输出参数会把方法输出的数据赋给自己，其他方面与引用参数相似。</p> \n<p>下面的实例演示了这点：</p> \n<pre>\r\nusing System;\r\n\r\nnamespace CalculatorApplication\r\n{\r\n   class NumberManipulator\r\n   {\r\n      public void getValue(out int x )\r\n      {\r\n         int temp = 5;\r\n         x = temp;\r\n      }\r\n   \r\n      static void Main(string[] args)\r\n      {\r\n         NumberManipulator n = new NumberManipulator();\r\n         /* 局部变量定义 */\r\n         int a = 100;\r\n         \r\n         Console.WriteLine(&quot;在方法调用之前，a 的值： {0}&quot;, a);\r\n         \r\n         /* 调用函数来获取值 */\r\n         n.getValue(out a);\r\n\r\n         Console.WriteLine(&quot;在方法调用之后，a 的值： {0}&quot;, a);\r\n         Console.ReadLine();\r\n\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre>\r\n在方法调用之前，a 的值： 100\r\n在方法调用之后，a 的值： 5\r\n</pre> \n<p>提供给输出参数的变量不需要赋值。当需要从一个参数没有指定初始值的方法中返回值时，输出参数特别有用。请看下面的实例，来理解这一点：</p> \n<pre>\r\nusing System;\r\n\r\nnamespace CalculatorApplication\r\n{\r\n   class NumberManipulator\r\n   {\r\n      public void getValues(out int x, out int y )\r\n      {\r\n          Console.WriteLine(&quot;请输入第一个值： &quot;);\r\n          x = Convert.ToInt32(Console.ReadLine());\r\n          Console.WriteLine(&quot;请输入第二个值： &quot;);\r\n          y = Convert.ToInt32(Console.ReadLine());\r\n      }\r\n   \r\n      static void Main(string[] args)\r\n      {\r\n         NumberManipulator n = new NumberManipulator();\r\n         /* 局部变量定义 */\r\n         int a , b;\r\n         \r\n         /* 调用函数来获取值 */\r\n         n.getValues(out a, out b);\r\n\r\n         Console.WriteLine(&quot;在方法调用之后，a 的值： {0}&quot;, a);\r\n         Console.WriteLine(&quot;在方法调用之后，b 的值： {0}&quot;, b);\r\n         Console.ReadLine();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果（取决于用户输入）：</p> \n<pre class=\"result\">\r\n请输入第一个值：\r\n7\r\n请输入第二个值：\r\n8\r\n在方法调用之后，a 的值： 7\r\n在方法调用之后，b 的值： 8\r\n</pre>', null, 'C# 方法|C# 中定义方法|实例|C# 中调用方法|递归方法调用|参数传递|按值传递参数|按引用传递参数|按输出传递参数|');
INSERT INTO `schoolcontent` VALUES ('338', '341', '<h1>C# <span class=\"color_h1\">可空类型（Nullable）</span></h1> \n<h2 class=\"tutheader\">C# 可空类型（Nullable）</h2> \n<p>C# 提供了一个特殊的数据类型，<b>nullable</b> 类型（可空类型），可空类型可以表示其基础值类型正常范围内的值，再加上一个 null 值。</p> \n<p>例如，Nullable&lt; Int32 &gt;，读作&quot;可空的 Int32&quot;，可以被赋值为 -2,147,483,648 到 2,147,483,647 之间的任意值，也可以被赋值为 null 值。类似的，Nullable&lt; bool &gt; 变量可以被赋值为 true 或 false 或 null。</p> \n<p>在处理数据库和其他包含可能未赋值的元素的数据类型时，将 null 赋值给数值类型或布尔型的功能特别有用。例如，数据库中的布尔型字段可以存储值 true 或 false，或者，该字段也可以未定义。</p> \n<p>声明一个 <b>nullable</b> 类型（可空类型）的语法如下：</p> \n<pre class=\"prettyprint\">\r\n&lt; data_type&gt; ? &lt;variable_name&gt; = null;\r\n</pre> \n<p>下面的实例演示了可空数据类型的用法：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace CalculatorApplication\r\n{\r\n   class NullablesAtShow\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         int? num1 = null;\r\n         int? num2 = 45;\r\n         double? num3 = new double?();\r\n         double? num4 = 3.14157;\r\n         \r\n         bool? boolval = new bool?();\r\n\r\n         // 显示值\r\n         \r\n         Console.WriteLine(&quot;显示可空类型的值： {0}, {1}, {2}, {3}&quot;, \r\n                            num1, num2, num3, num4);\r\n         Console.WriteLine(&quot;一个可空的布尔值： {0}&quot;, boolval);\r\n         Console.ReadLine();\r\n\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n显示可空类型的值： , 45,  , 3.14157\r\n一个可空的布尔值：\r\n</pre> \n<h2 class=\"tutheader\">Null 合并运算符（ ?? ）</h2> \n<p>Null 合并运算符用于定义可空类型和引用类型的默认值。Null 合并运算符为类型转换定义了一个预设值，以防可空类型的值为 Null。Null 合并运算符把操作数类型隐式转换为另一个可空（或不可空）的值类型的操作数的类型。</p> \n<p>如果第一个操作数的值为 null，则运算符返回第二个操作数的值，否则返回第一个操作数的值。下面的实例演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace CalculatorApplication\r\n{\r\n   class NullablesAtShow\r\n   {\r\n         \r\n      static void Main(string[] args)\r\n      {\r\n         \r\n         double? num1 = null;\r\n         double? num2 = 3.14157;\r\n         double num3;\r\n         num3 = num1 ?? 5.34;      \r\n         Console.WriteLine(&quot;num3 的值： {0}&quot;, num3);\r\n         num3 = num2 ?? 5.34;\r\n         Console.WriteLine(&quot;num3 的值： {0}&quot;, num3);\r\n         Console.ReadLine();\r\n\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nnum3 的值： 5.34\r\nnum3 的值： 3.14157\r\n</pre>', null, 'C# 可空类型（Nullable）|C# 可空类型（Nullable）|Null 合并运算符（ ?? ）|');
INSERT INTO `schoolcontent` VALUES ('339', '342', '<h1>C# <span class=\"color_h1\">数组（Array）</span></h1> \n<div class=\"tutintro\"> \n <p>数组是一个存储相同类型元素的固定大小的顺序集合。数组是用来存储数据的集合，通常认为数组是一个同一类型变量的集合。</p> \n <p>声明数组变量并不是声明 number0、number1、...、number99 一个个单独的变量，而是声明一个就像 numbers 这样的变量，然后使用 numbers[0]、numbers[1]、...、numbers[99] 来表示一个个单独的变量。数组中某个指定的元素是通过索引来访问的。</p> \n <p>所有的数组都是由连续的内存位置组成的。最低的地址对应第一个元素，最高的地址对应最后一个元素。</p> \n <img src=\"http://www.runoob.com/wp-content/uploads/2014/04/arrays.jpg\" alt=\"C# 中的数组\" /> \n</div> \n<h2 class=\"tutheader\">声明数组</h2> \n<p>在 C# 中声明一个数组，您可以使用下面的语法：</p> \n<pre class=\"prettyprint\">\r\ndatatype[] arrayName;\r\n</pre> \n<p>其中，</p> \n<ul class=\"list\"> \n <li><i>datatype</i> 用于指定被存储在数组中的元素的类型。</li> \n <li><i>[ ]</i> 指定数组的秩（维度）。秩指定数组的大小。</li> \n <li><i>arrayName</i> 指定数组的名称。</li> \n</ul> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\ndouble[] balance;\r\n</pre> \n<h2 class=\"tutheader\">初始化数组</h2> \n<p>声明一个数组不会在内存中初始化数组。当初始化数组变量时，您可以赋值给数组。</p> \n<p>数组是一个引用类型，所以您需要使用 <b>new</b> 关键字来创建数组的实例。</p> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\ndouble[] balance = new double[10];\r\n</pre> \n<h2 class=\"tutheader\">赋值给数组</h2> \n<p>您可以通过使用索引号赋值给一个单独的数组元素，比如：</p> \n<pre class=\"prettyprint\">\r\ndouble[] balance = new double[10];\r\nbalance[0] = 4500.0;\r\n</pre> \n<p>您可以在声明数组的同时给数组赋值，比如：</p> \n<pre class=\"prettyprint\">\r\ndouble[] balance = { 2340.0, 4523.69, 3421.0};\r\n</pre> \n<p>您也可以创建并初始化一个数组，比如：</p> \n<pre class=\"prettyprint\">\r\nint [] marks = new int[5]  { 99,  98, 92, 97, 95};\r\n</pre> \n<p>在上述情况下，你也可以省略数组的大小，比如：</p> \n<pre class=\"prettyprint\">\r\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\r\n</pre> \n<p>您也可以赋值一个数组变量到另一个目标数组变量中。在这种情况下，目标和源会指向相同的内存位置：</p> \n<pre class=\"prettyprint\">\r\nint [] marks = new int[]  { 99,  98, 92, 97, 95};\r\nint[] score = marks;\r\n</pre> \n<p>当您创建一个数组时，C# 编译器会根据数组类型隐式初始化每个数组元素为一个默认值。例如，int 数组的所有元素都会被初始化为 0。</p> \n<h2 class=\"tutheader\">访问数组元素</h2> \n<p>元素是通过带索引的数组名称来访问的。这是通过把元素的索引放置在数组名称后的方括号中来实现的。例如：</p> \n<pre class=\"prettyprint\">\r\ndouble salary = balance[9];\r\n</pre> \n<p>下面是一个实例，使用上面提到的三个概念，即声明、赋值、访问数组：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace ArrayApplication\r\n{\r\n   class MyArray\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         int []  n = new int[10]; /* n 是一个带有 10 个整数的数组 */\r\n         int i,j;\r\n\r\n\r\n         /* 初始化数组 n 中的元素 */         \r\n         for ( i = 0; i &lt; 10; i++ )\r\n         {\r\n            n[ i ] = i + 100;\r\n         }\r\n\r\n         /* 输出每个数组元素的值 */\r\n         for (j = 0; j &lt; 10; j++ )\r\n         {\r\n            Console.WriteLine(&quot;Element[{0}] = {1}&quot;, j, n[j]);\r\n         }\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nElement[0] = 100\r\nElement[1] = 101\r\nElement[2] = 102\r\nElement[3] = 103\r\nElement[4] = 104\r\nElement[5] = 105\r\nElement[6] = 106\r\nElement[7] = 107\r\nElement[8] = 108\r\nElement[9] = 109\r\n</pre> \n<h2 class=\"tutheader\">使用 <i>foreach</i> 循环</h2> \n<p>在前面的实例中，我们使用一个 for 循环来访问每个数组元素。您也可以使用一个 <b> foreach</b> 语句来遍历数组。</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace ArrayApplication\r\n{\r\n   class MyArray\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         int []  n = new int[10]; /* n 是一个带有 10 个整数的数组 */\r\n\r\n\r\n         /* 初始化数组 n 中的元素 */         \r\n         for ( int i = 0; i &lt; 10; i++ )\r\n         {\r\n            n[i] = i + 100;\r\n         }\r\n\r\n         /* 输出每个数组元素的值 */\r\n         foreach (int j in n )\r\n         {\r\n            int i = j-100;\r\n            Console.WriteLine(&quot;Element[{0}] = {1}&quot;, i, j);\r\n         }\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre>\r\nElement[0] = 100\r\nElement[1] = 101\r\nElement[2] = 102\r\nElement[3] = 103\r\nElement[4] = 104\r\nElement[5] = 105\r\nElement[6] = 106\r\nElement[7] = 107\r\nElement[8] = 108\r\nElement[9] = 109\r\n</pre> \n<h2 class=\"tutheader\">C# 数组细节</h2> \n<p>在 C# 中，数组是非常重要的，且需要了解更多的细节。下面列出了 C# 程序员必须清楚的一些与数组相关的重要概念：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:30%\">概念</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td> <a href=\"http://www.runoob.com/csharp/csharp-multi-dimensional-arrays.html\" title=\"C# 中的多维数组\">多维数组</a></td>\n   <td>C# 支持多维数组。多维数组最简单的形式是二维数组。</td> \n  </tr> \n  <tr>\n   <td> <a href=\"http://www.runoob.com/csharp/csharp-jagged-arrays.html\" title=\"C# 中的交错数组\">交错数组</a></td>\n   <td>C# 支持交错数组，即数组的数组。</td> \n  </tr> \n  <tr>\n   <td> <a href=\"http://www.runoob.com/csharp/csharp-passing-arrays-to-functions.html\" title=\"C# 中传递数组给函数作为参数\">传递数组给函数</a></td>\n   <td>您可以通过指定不带索引的数组名称来给函数传递一个指向数组的指针。</td> \n  </tr> \n  <tr>\n   <td> <a href=\"http://www.runoob.com/csharp/csharp-param-arrays.html\" title=\"C# 中的参数数组\">参数数组</a></td>\n   <td>这通常用于传递未知数量的参数给函数。</td> \n  </tr> \n  <tr>\n   <td> <a href=\"http://www.runoob.com/csharp/csharp-array-class.html\" title=\"C# 中的 Array 类\">Array 类</a></td>\n   <td>在 System 命名空间中定义，是所有数组的基类，并提供了各种用于数组的属性和方法。</td> \n  </tr> \n </tbody>\n</table>', null, 'C# 数组（Array）|声明数组|初始化数组|赋值给数组|访问数组元素|使用 foreach 循环|C# 数组细节|');
INSERT INTO `schoolcontent` VALUES ('340', '343', '<h1>C# <span class=\"color_h1\">字符串（String）</span></h1> \n<div class=\"tutintro\"> \n <p>在 C# 中，您可以使用字符数组来表示字符串，但是，更常见的做法是使用 <b>string</b> 关键字来声明一个字符串变量。string 关键字是 <b>System.String</b> 类的别名。</p> \n</div> \n<h2 class=\"tutheader\">创建 String 对象</h2> \n<p>您可以使用以下方法之一来创建 string 对象：</p> \n<ul class=\"list\"> \n <li>通过给 String 变量指定一个字符串</li> \n <li>通过使用 String 类构造函数</li> \n <li>通过使用字符串串联运算符（ + ）</li> \n <li>通过检索属性或调用一个返回字符串的方法</li> \n <li>通过格式化方法来转换一个值或对象为它的字符串表示形式</li> \n</ul> \n<p>下面的实例演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace StringApplication\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n           //字符串，字符串连接\r\n            string fname, lname;\r\n            fname = &quot;Rowan&quot;;\r\n            lname = &quot;Atkinson&quot;;\r\n\r\n            string fullname = fname + lname;\r\n            Console.WriteLine(&quot;Full Name: {0}&quot;, fullname);\r\n\r\n            //通过使用 string 构造函数\r\n            char[] letters = { \'H\', \'e\', \'l\', \'l\',\'o\' };\r\n            string greetings = new string(letters);\r\n            Console.WriteLine(&quot;Greetings: {0}&quot;, greetings);\r\n\r\n            //方法返回字符串\r\n            string[] sarray = { &quot;Hello&quot;, &quot;From&quot;, &quot;Tutorials&quot;, &quot;Point&quot; };\r\n            string message = String.Join(&quot; &quot;, sarray);\r\n            Console.WriteLine(&quot;Message: {0}&quot;, message);\r\n\r\n            //用于转化值的格式化方法\r\n            DateTime waiting = new DateTime(2012, 10, 10, 17, 58, 1);\r\n            string chat = String.Format(&quot;Message sent at {0:t} on {0:D}&quot;, \r\n            waiting);\r\n            Console.WriteLine(&quot;Message: {0}&quot;, chat);\r\n            Console.ReadKey() ;\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nFull Name: RowanAtkinson\r\nGreetings: Hello\r\nMessage: Hello From Tutorials Point\r\nMessage: Message sent at 17:58 on Wednesday, 10 October 2012\r\n</pre> \n<h2 class=\"tutheader\">String 类的属性</h2> \n<p>String 类有以下两个属性：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:5%;\">序号</th>\n   <th>属性名称 &amp; 描述</th>\n  </tr> \n  <tr>\n   <td>1</td>\n   <td><b>Chars</b><br />在当前 <i>String</i> 对象中获取 <i>Char</i> 对象的指定位置。</td>\n  </tr> \n  <tr>\n   <td>2</td>\n   <td><b>Length</b><br />在当前的 <i>String</i> 对象中获取字符数。</td>\n  </tr> \n </tbody>\n</table> \n<h2 class=\"tutheader\">String 类的方法</h2> \n<p>String 类有许多方法用于 string 对象的操作。下面的表格提供了一些最常用的方法：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:5%;\">序号</th>\n   <th>方法名称 &amp; 描述</th>\n  </tr> \n  <tr>\n   <td>1</td>\n   <td><b>public static int Compare( string strA, string strB ) </b><br />比较两个指定的 string 对象，并返回一个表示它们在排列顺序中相对位置的整数。该方法区分大小写。</td>\n  </tr> \n  <tr>\n   <td>2</td>\n   <td><b>public static int Compare( string strA, string strB, bool ignoreCase ) </b><br />比较两个指定的 string 对象，并返回一个表示它们在排列顺序中相对位置的整数。但是，如果布尔参数为真时，该方法不区分大小写。</td>\n  </tr> \n  <tr>\n   <td>3</td>\n   <td><b>public static string Concat( string str0, string str1 ) </b><br />连接两个 string 对象。</td>\n  </tr> \n  <tr>\n   <td>4</td>\n   <td><b>public static string Concat( string str0, string str1, string str2 ) </b><br />连接三个 string 对象。</td>\n  </tr> \n  <tr>\n   <td>5</td>\n   <td><b>public static string Concat( string str0, string str1, string str2, string str3 ) </b><br />连接四个 string 对象。</td>\n  </tr> \n  <tr>\n   <td>6</td>\n   <td><b>public bool Contains( string value ) </b><br />返回一个表示指定 string 对象是否出现在字符串中的值。</td>\n  </tr> \n  <tr>\n   <td>7</td>\n   <td><b>public static string Copy( string str ) </b><br />创建一个与指定字符串具有相同值的新的 String 对象。</td>\n  </tr> \n  <tr>\n   <td>8</td>\n   <td><b>public void CopyTo( int sourceIndex, char[] destination, int destinationIndex, int count ) </b><br />从 string 对象的指定位置开始复制指定数量的字符到 Unicode 字符数组中的指定位置。</td>\n  </tr> \n  <tr>\n   <td>9</td>\n   <td><b>public bool EndsWith( string value ) </b><br />判断 string 对象的结尾是否匹配指定的字符串。</td>\n  </tr> \n  <tr>\n   <td>10</td>\n   <td><b>public bool Equals( string value ) </b><br />判断当前的 string 对象是否与指定的 string 对象具有相同的值。</td>\n  </tr> \n  <tr>\n   <td>11</td>\n   <td><b>public static bool Equals( string a, string b ) </b><br />判断两个指定的 string 对象是否具有相同的值。</td>\n  </tr> \n  <tr>\n   <td>12</td>\n   <td><b>public static string Format( string format, Object arg0 ) </b><br />把指定字符串中一个或多个格式项替换为指定对象的字符串表示形式。</td>\n  </tr> \n  <tr>\n   <td>13</td>\n   <td><b>public int IndexOf( char value ) </b><br />返回指定 Unicode 字符在当前字符串中第一次出现的索引，索引从 0 开始。</td>\n  </tr> \n  <tr>\n   <td>14</td>\n   <td><b>public int IndexOf( string value ) </b><br />返回指定字符串在该实例中第一次出现的索引，索引从 0 开始。</td>\n  </tr> \n  <tr>\n   <td>15</td>\n   <td><b>public int IndexOf( char value, int startIndex ) </b><br />返回指定 Unicode 字符从该字符串中指定字符位置开始搜索第一次出现的索引，索引从 0 开始。</td>\n  </tr> \n  <tr>\n   <td>16</td>\n   <td><b>public int IndexOf( string value, int startIndex ) </b><br />返回指定字符串从该实例中指定字符位置开始搜索第一次出现的索引，索引从 0 开始。</td>\n  </tr> \n  <tr>\n   <td>17</td>\n   <td><b>public int IndexOfAny( char[] anyOf ) </b><br />返回某一个指定的 Unicode 字符数组中任意字符在该实例中第一次出现的索引，索引从 0 开始。</td>\n  </tr> \n  <tr>\n   <td>18</td>\n   <td><b>public int IndexOfAny( char[] anyOf, int startIndex ) </b><br />返回某一个指定的 Unicode 字符数组中任意字符从该实例中指定字符位置开始搜索第一次出现的索引，索引从 0 开始。</td>\n  </tr> \n  <tr>\n   <td>19</td>\n   <td><b>public string Insert( int startIndex, string value ) </b><br />返回一个新的字符串，其中，指定的字符串被插入在当前 string 对象的指定索引位置。</td>\n  </tr> \n  <tr>\n   <td>20</td>\n   <td><b>public static bool IsNullOrEmpty( string value ) </b><br />指示指定的字符串是否为 null 或者是否为一个空的字符串。</td>\n  </tr> \n  <tr>\n   <td>21</td>\n   <td><b>public static string Join( string separator, params string[] value ) </b><br />连接一个字符串数组中的所有元素，使用指定的分隔符分隔每个元素。</td>\n  </tr> \n  <tr>\n   <td>22</td>\n   <td><b>public static string Join( string separator, string[] value, int startIndex, int count ) </b><br />链接一个字符串数组中的指定元素，使用指定的分隔符分隔每个元素。</td>\n  </tr> \n  <tr>\n   <td>23</td>\n   <td><b>public int LastIndexOf( char value ) </b><br />返回指定 Unicode 字符在当前 string 对象中最后一次出现的索引位置，索引从 0 开始。</td>\n  </tr> \n  <tr>\n   <td>24</td>\n   <td><b>public int LastIndexOf( string value ) </b><br />返回指定字符串在当前 string 对象中最后一次出现的索引位置，索引从 0 开始。</td>\n  </tr> \n  <tr>\n   <td>25</td>\n   <td><b>public string Remove( int startIndex ) </b><br />移除当前实例中的所有字符，从指定位置开始，一直到最后一个位置为止，并返回字符串。</td>\n  </tr> \n  <tr>\n   <td>26</td>\n   <td><b>public string Remove( int startIndex, int count ) </b><br />从当前字符串的指定位置开始移除指定数量的字符，并返回字符串。</td>\n  </tr> \n  <tr>\n   <td>27</td>\n   <td><b>public string Replace( char oldChar, char newChar ) </b><br />把当前 string 对象中，所有指定的 Unicode 字符替换为另一个指定的 Unicode 字符，并返回新的字符串。</td>\n  </tr> \n  <tr>\n   <td>28</td>\n   <td><b>public string Replace( string oldValue, string newValue ) </b><br />把当前 string 对象中，所有指定的字符串替换为另一个指定的字符串，并返回新的字符串。</td>\n  </tr> \n  <tr>\n   <td>29</td>\n   <td><b>public string[] Split( params char[] separator ) </b><br />返回一个字符串数组，包含当前的 string 对象中的子字符串，子字符串是使用指定的 Unicode 字符数组中的元素进行分隔的。</td>\n  </tr> \n  <tr>\n   <td>30</td>\n   <td><b>public string[] Split( char[] separator, int count ) </b><br />返回一个字符串数组，包含当前的 string 对象中的子字符串，子字符串是使用指定的 Unicode 字符数组中的元素进行分隔的。int 参数指定要返回的子字符串的最大数目。 </td>\n  </tr> \n  <tr>\n   <td>31</td>\n   <td><b>public bool StartsWith( string value ) </b><br />判断字符串实例的开头是否匹配指定的字符串。</td>\n  </tr> \n  <tr>\n   <td>32</td>\n   <td><b>public char[] ToCharArray()</b><br />返回一个带有当前 string 对象中所有字符的 Unicode 字符数组。</td>\n  </tr> \n  <tr>\n   <td>33</td>\n   <td><b>public char[] ToCharArray( int startIndex, int length ) </b><br />返回一个带有当前 string 对象中所有字符的 Unicode 字符数组，从指定的索引开始，直到指定的长度为止。</td>\n  </tr> \n  <tr>\n   <td>34</td>\n   <td><b>public string ToLower()</b><br />把字符串转换为小写并返回。</td>\n  </tr> \n  <tr>\n   <td>35</td>\n   <td><b>public string ToUpper()</b><br />把字符串转换为大写并返回。</td>\n  </tr> \n  <tr>\n   <td>36</td>\n   <td><b>public string Trim()</b><br />移除当前 String 对象中的所有前导空白字符和后置空白字符。</td>\n  </tr> \n </tbody>\n</table> \n<p>上面的方法列表并不详尽，请访问 MSDN 库，查看完整的方法列表和 String 类构造函数。</p> \n<h2 class=\"tutheader\">实例</h2> \n<p>下面的实例演示了上面提到的一些方法：</p> \n<p><b>比较字符串</b></p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace StringApplication\r\n{\r\n   class StringProg\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         string str1 = &quot;This is test&quot;;\r\n         string str2 = &quot;This is text&quot;;\r\n\r\n         if (String.Compare(str1, str2) == 0)\r\n         {\r\n            Console.WriteLine(str1 + &quot; and &quot; + str2 +  &quot; are equal.&quot;);\r\n         }\r\n         else\r\n         {\r\n            Console.WriteLine(str1 + &quot; and &quot; + str2 + &quot; are not equal.&quot;);\r\n         }\r\n         Console.ReadKey() ;\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nThis is test and This is text are not equal.\r\n</pre> \n<p><b>字符串包含字符串：</b></p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace StringApplication\r\n{\r\n   class StringProg\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         string str = &quot;This is test&quot;;\r\n         if (str.Contains(&quot;test&quot;))\r\n         {\r\n            Console.WriteLine(&quot;The sequence \'test\' was found.&quot;);\r\n         }\r\n         Console.ReadKey() ;\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nThe sequence \'test\' was found.\r\n</pre> \n<p><b>获取子字符串：</b></p> \n<pre>\r\nusing System; \r\nnamespace StringApplication \r\n{\r\n	class StringProg \r\n	{ \r\n		static void Main(string[] args) \r\n		{ \r\n			string str = &quot;Last night I dreamt of San Pedro&quot;; \r\n			Console.WriteLine(str); \r\n			string substr = str.Substring(23); \r\n			Console.WriteLine(substr); \r\n			Console.ReadKey() ; \r\n		} \r\n	} \r\n}\r\n</pre>\n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/runcode.php?filename=string_substr1&amp;type=cs\" class=\"showbtn\">运行实例 &raquo;</a></p> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nLast night I dreamt of San Pedro\r\nSan Pedro\r\n</pre> \n<p><b>连接字符串：</b></p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace StringApplication\r\n{\r\n   class StringProg\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         string[] starray = new string[]{&quot;Down the way nights are dark&quot;,\r\n         &quot;And the sun shines daily on the mountain top&quot;,\r\n         &quot;I took a trip on a sailing ship&quot;,\r\n         &quot;And when I reached Jamaica&quot;,\r\n         &quot;I made a stop&quot;};\r\n\r\n         string str = String.Join(&quot;\\n&quot;, starray);\r\n         Console.WriteLine(str);\r\n         Console.ReadKey() ;\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nDown the way nights are dark\r\nAnd the sun shines daily on the mountain top\r\nI took a trip on a sailing ship\r\nAnd when I reached Jamaica\r\nI made a stop\r\n</pre>', null, 'C# 字符串（String）|创建 String 对象|String 类的属性|String 类的方法|实例|');
INSERT INTO `schoolcontent` VALUES ('341', '344', '<h1>C# <span class=\"color_h1\">结构（Struct）</span></h1> \n<div class=\"tutintro\"> \n <p>在 C# 中，结构是值类型数据结构。它使得一个单一变量可以存储各种数据类型的相关数据。<b>struct</b> 关键字用于创建结构。</p> \n <p>结构是用来代表一个记录。假设您想跟踪图书馆中书的动态。您可能想跟踪每本书的以下属性：</p> \n <ul class=\"list\"> \n  <li>Title</li> \n  <li>Author</li> \n  <li>Subject</li> \n  <li>Book ID</li> \n </ul> \n</div> \n<h2 class=\"tutheader\">定义结构</h2> \n<p>为了定义一个结构，您必须使用 struct 语句。struct 语句为程序定义了一个带有多个成员的新的数据类型。</p> \n<p>例如，您可以按照如下的方式声明 Book 结构：</p> \n<pre class=\"prettyprint\">\r\nstruct Books\r\n{\r\n   public string title;\r\n   public string author;\r\n   public string subject;\r\n   public int book_id;\r\n};  \r\n</pre> \n<p>下面的程序演示了结构的用法：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n     \r\nstruct Books\r\n{\r\n   public string title;\r\n   public string author;\r\n   public string subject;\r\n   public int book_id;\r\n};  \r\n\r\npublic class testStructure\r\n{\r\n   public static void Main(string[] args)\r\n   {\r\n\r\n      Books Book1;        /* 声明 Book1，类型为 Book */\r\n      Books Book2;        /* 声明 Book2，类型为 Book */\r\n\r\n      /* book 1 详述 */\r\n      Book1.title = &quot;C Programming&quot;;\r\n      Book1.author = &quot;Nuha Ali&quot;; \r\n      Book1.subject = &quot;C Programming Tutorial&quot;;\r\n      Book1.book_id = 6495407;\r\n\r\n      /* book 2 详述 */\r\n      Book2.title = &quot;Telecom Billing&quot;;\r\n      Book2.author = &quot;Zara Ali&quot;;\r\n      Book2.subject =  &quot;Telecom Billing Tutorial&quot;;\r\n      Book2.book_id = 6495700;\r\n\r\n      /* 打印 Book1 信息 */\r\n      Console.WriteLine( &quot;Book 1 title : {0}&quot;, Book1.title);\r\n      Console.WriteLine(&quot;Book 1 author : {0}&quot;, Book1.author);\r\n      Console.WriteLine(&quot;Book 1 subject : {0}&quot;, Book1.subject);\r\n      Console.WriteLine(&quot;Book 1 book_id :{0}&quot;, Book1.book_id);\r\n\r\n      /* 打印 Book2 信息 */\r\n      Console.WriteLine(&quot;Book 2 title : {0}&quot;, Book2.title);\r\n      Console.WriteLine(&quot;Book 2 author : {0}&quot;, Book2.author);\r\n      Console.WriteLine(&quot;Book 2 subject : {0}&quot;, Book2.subject);\r\n      Console.WriteLine(&quot;Book 2 book_id : {0}&quot;, Book2.book_id);       \r\n\r\n      Console.ReadKey();\r\n\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nBook 1 title : C Programming\r\nBook 1 author : Nuha Ali\r\nBook 1 subject : C Programming Tutorial\r\nBook 1 book_id : 6495407\r\nBook 2 title : Telecom Billing\r\nBook 2 author : Zara Ali\r\nBook 2 subject : Telecom Billing Tutorial\r\nBook 2 book_id : 6495700\r\n</pre> \n<h2 class=\"tutheader\">C# 结构的特点</h2> \n<p>您已经用了一个简单的名为 Books 的结构。在 C# 中的结构与传统的 C 或 C++ 中的结构不同。C# 中的结构有一下特点：</p> \n<ul class=\"list\"> \n <li>结构可带有方法、字段、索引、属性、运算符方法和事件。</li> \n <li>结构可定义构造函数，但不能定义析构函数。但是，您不能为结构定义默认的构造函数。默认的构造函数是自动定义的，且不能被改变。</li> \n <li>与类不同，结构不能继承其他的结构或类。</li> \n <li>结构不能作为其他结构或类的基础结构。</li> \n <li>结构可实现一个或多个接口。</li> \n <li>结构成员不能指定为 abstract、virtual 或 protected。</li> \n <li>当您使用 <b>New</b> 操作符创建一个结构对象时，会调用适当的构造函数来创建结构。与类不同，结构可以不使用 New 操作符即可被实例化。</li> \n <li>如果不使用 New 操作符，只有在所有的字段都被初始化之后，字段才被赋值，对象才被使用。</li> \n</ul> \n<h2 class=\"tutheader\">类 vs 结构</h2> \n<p>类和结构有以下几个基本的不同点：</p> \n<ul class=\"list\"> \n <li>类是引用类型，结构是值类型。</li> \n <li>结构不支持继承。</li> \n <li>结构不能声明默认的构造函数。</li> \n</ul> \n<p>针对上述讨论，让我们重写前面的实例：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n     \r\nstruct Books\r\n{\r\n   private string title;\r\n   private string author;\r\n   private string subject;\r\n   private int book_id;\r\n   public void getValues(string t, string a, string s, int id)\r\n   {\r\n      title = t;\r\n      author = a;\r\n      subject = s;\r\n      book_id = id;\r\n   }\r\n   public void display()\r\n   {\r\n      Console.WriteLine(&quot;Title : {0}&quot;, title);\r\n      Console.WriteLine(&quot;Author : {0}&quot;, author);\r\n      Console.WriteLine(&quot;Subject : {0}&quot;, subject);\r\n      Console.WriteLine(&quot;Book_id :{0}&quot;, book_id);\r\n   }\r\n\r\n};  \r\n\r\npublic class testStructure\r\n{\r\n   public static void Main(string[] args)\r\n   {\r\n\r\n      Books Book1 = new Books(); /* 声明 Book1，类型为 Book */\r\n      Books Book2 = new Books(); /* 声明 Book2，类型为 Book */\r\n\r\n      /* book 1 详述 */\r\n      Book1.getValues(&quot;C Programming&quot;,\r\n      &quot;Nuha Ali&quot;, &quot;C Programming Tutorial&quot;,6495407);\r\n\r\n      /* book 2 详述 */\r\n      Book2.getValues(&quot;Telecom Billing&quot;,\r\n      &quot;Zara Ali&quot;, &quot;Telecom Billing Tutorial&quot;, 6495700);\r\n\r\n      /* 打印 Book1 信息 */\r\n      Book1.display();\r\n\r\n      /* 打印 Book2 信息 */\r\n      Book2.display(); \r\n\r\n      Console.ReadKey();\r\n\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nTitle : C Programming\r\nAuthor : Nuha Ali\r\nSubject : C Programming Tutorial\r\nBook_id : 6495407\r\nTitle : Telecom Billing\r\nAuthor : Zara Ali\r\nSubject : Telecom Billing Tutorial\r\nBook_id : 6495700\r\n</pre>', null, 'C# 结构（Struct）|定义结构|C# 结构的特点|类 vs 结构|');
INSERT INTO `schoolcontent` VALUES ('342', '345', '<h1>C# <span class=\"color_h1\">枚举（Enum）</span></h1> \n<div class=\"tutintro\"> \n <p>枚举是一组命名整型常量。枚举类型是使用 <b>enum</b> 关键字声明的。</p> \n <p>C# 枚举是值数据类型。换句话说，枚举包含自己的值，且不能继承或传递继承。</p> \n</div> \n<h2 class=\"tutheader\">声明 <i>enum</i> 变量</h2> \n<p>声明枚举的一般语法：</p> \n<pre class=\"prettyprint\">\r\nenum &lt;enum_name&gt;\r\n{ \r\n    enumeration list \r\n};\r\n</pre> \n<p>其中，</p> \n<ul class=\"list\"> \n <li><i>enum_name</i> 指定枚举的类型名称。</li> \n <li><i>enumeration list</i> 是一个用逗号分隔的标识符列表。</li> \n</ul> \n<p>枚举列表中的每个符号代表一个整数值，一个比它前面的符号大的整数值。默认情况下，第一个枚举符号的值是 0.例如：</p> \n<pre class=\"prettyprint\">\r\nenum Days { Sun, Mon, tue, Wed, thu, Fri, Sat };\r\n</pre> \n<h2 class=\"tutheader\">实例</h2> \n<p>下面的实例演示了枚举变量的用法：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace EnumApplication\r\n{\r\n   class EnumProgram\r\n   {\r\n      enum Days { Sun, Mon, tue, Wed, thu, Fri, Sat };\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         int WeekdayStart = (int)Days.Mon;\r\n         int WeekdayEnd = (int)Days.Fri;\r\n         Console.WriteLine(&quot;Monday: {0}&quot;, WeekdayStart);\r\n         Console.WriteLine(&quot;Friday: {0}&quot;, WeekdayEnd);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nMonday: 1\r\nFriday: 5\r\n</pre>', null, 'C# 枚举（Enum）|声明 enum 变量|实例|');
INSERT INTO `schoolcontent` VALUES ('343', '346', '<h1>C# <span class=\"color_h1\">类（Class）</span></h1> \n<div class=\"tutintro\"> \n <p>当您定义一个类时，您定义了一个数据类型的蓝图。这实际上并没有定义任何的数据，但它定义了类的名称意味着什么，也就是说，类的对象由什么组成及在这个对象上可执行什么操作。对象是类的实例。构成类的方法和变量成为类的成员。</p> \n</div> \n<h2 class=\"tutheader\">类的定义</h2> \n<p>类的定义是以关键字 <b>class</b> 开始，后跟类的名称。类的主体，包含在一对花括号内。下面是类定义的一般形式：</p> \n<pre class=\"prettyprint\">\r\n&lt;access specifier&gt; class  class_name \r\n{\r\n    // member variables\r\n    &lt;access specifier&gt; &lt;data type&gt; variable1;\r\n    &lt;access specifier&gt; &lt;data type&gt; variable2;\r\n    ...\r\n    &lt;access specifier&gt; &lt;data type&gt; variableN;\r\n    // member methods\r\n    &lt;access specifier&gt; &lt;return type&gt; method1(parameter_list) \r\n    {\r\n        // method body \r\n    }\r\n    &lt;access specifier&gt; &lt;return type&gt; method2(parameter_list) \r\n    {\r\n        // method body \r\n    }\r\n    ...\r\n    &lt;access specifier&gt; &lt;return type&gt; methodN(parameter_list) \r\n    {\r\n        // method body \r\n    }\r\n}\r\n</pre> \n<p>请注意：</p> \n<ul class=\"list\"> \n <li>访问标识符 &lt;access specifier&gt; 指定了对类及其成员的访问规则。如果没有指定，则使用默认的访问标识符。类的默认访问标识符是 <b>internal</b>，成员的默认访问标识符是 <b>private</b>。</li> \n <li>数据类型 &lt;data type&gt; 指定了变量的类型，返回类型 &lt;return type&gt; 指定了返回的方法返回的数据类型。</li> \n <li>如果要访问类的成员，您要使用点（.）运算符。</li> \n <li>点运算符链接了对象的名称和成员的名称。</li> \n</ul> \n<p>下面的实例说明了目前为止所讨论的概念：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace BoxApplication\r\n{\r\n    class Box\r\n    {\r\n       public double length;   // 长度\r\n       public double breadth;  // 宽度\r\n       public double height;   // 高度\r\n    }\r\n    class Boxtester\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Box Box1 = new Box();        // 声明 Box1，类型为 Box\r\n            Box Box2 = new Box();        // 声明 Box2，类型为 Box\r\n            double volume = 0.0;         // 体积\r\n\r\n            // Box1 详述\r\n            Box1.height = 5.0;\r\n            Box1.length = 6.0;\r\n            Box1.breadth = 7.0;\r\n\r\n            // Box2 详述\r\n            Box2.height = 10.0;\r\n            Box2.length = 12.0;\r\n            Box2.breadth = 13.0;\r\n           \r\n            // Box1 的体积\r\n            volume = Box1.height * Box1.length * Box1.breadth;\r\n            Console.WriteLine(&quot;Box1 的体积： {0}&quot;,  volume);\r\n\r\n            // Box2 的体积\r\n            volume = Box2.height * Box2.length * Box2.breadth;\r\n            Console.WriteLine(&quot;Box2 的体积： {0}&quot;, volume);\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nBox1 的体积： 210\r\nBox2 的体积： 1560\r\n</pre> \n<h2 class=\"tutheader\">成员函数和封装</h2> \n<p>类的成员函数是一个在类定义中有它的定义或原型的函数，就像其他变量一样。作为类的一个成员，它能在类的任何对象上操作，且能访问该对象的类的所有成员。</p> \n<p>成员变量是对象的属性（从设计角度），且它们保持私有来实现封装。这些变量只能使用公共成员函数来访问。</p> \n<p>让我们使用上面的概念来设置和获取一个类中不同的类成员的值：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace BoxApplication\r\n{\r\n    class Box\r\n    {\r\n       private double length;   // 长度\r\n       private double breadth;  // 宽度\r\n       private double height;   // 高度\r\n       public void setLength( double len )\r\n       {\r\n            length = len;\r\n       }\r\n\r\n       public void setBreadth( double bre )\r\n       {\r\n            breadth = bre;\r\n       }\r\n\r\n       public void setHeight( double hei )\r\n       {\r\n            height = hei;\r\n       }\r\n       public double getVolume()\r\n       {\r\n           return length * breadth * height;\r\n       }\r\n    }\r\n    class Boxtester\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Box Box1 = new Box();        // 声明 Box1，类型为 Box\r\n            Box Box2 = new Box();		 // 声明 Box2，类型为 Box\r\n            double volume;				 // 体积\r\n\r\n\r\n            // Box1 详述\r\n            Box1.setLength(6.0);\r\n            Box1.setBreadth(7.0);\r\n            Box1.setHeight(5.0);\r\n\r\n            // Box2 详述\r\n            Box2.setLength(12.0);\r\n            Box2.setBreadth(13.0);\r\n            Box2.setHeight(10.0);\r\n       \r\n            // Box1 的体积\r\n            volume = Box1.getVolume();\r\n            Console.WriteLine(&quot;Box1 的体积： {0}&quot; ,volume);\r\n\r\n            // Box2 的体积\r\n            volume = Box2.getVolume();\r\n            Console.WriteLine(&quot;Box2 的体积： {0}&quot;, volume);\r\n           \r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nBox1 的体积： 210\r\nBox2 的体积： 1560\r\n</pre> \n<h2 class=\"tutheader\">C# 中的构造函数</h2> \n<p>类的 <b>构造函数</b> 是类的一个特殊的成员函数，当创建类的新对象时执行。</p> \n<p>构造函数的名称与类的名称完全相同，它没有任何返回类型。</p> \n<p>下面的实例说明了构造函数的概念：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace LineApplication\r\n{\r\n   class Line\r\n   {\r\n      private double length;   // 线条的长度\r\n      public Line()\r\n      {\r\n         Console.WriteLine(&quot;对象已创建&quot;);\r\n      }\r\n\r\n      public void setLength( double len )\r\n      {\r\n         length = len;\r\n      }\r\n      public double getLength()\r\n      {\r\n         return length;\r\n      }\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         Line line = new Line();    \r\n         // 设置线条长度\r\n         line.setLength(6.0);\r\n         Console.WriteLine(&quot;线条的长度： {0}&quot;, line.getLength());\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n对象已创建\r\n线条的长度： 6\r\n</pre> \n<p><b>默认的构造函数</b>没有任何参数。但是如果您需要一个带有参数的构造函数可以有参数，这种构造函数叫做<b>参数化构造函数</b>。这种技术可以帮助您在创建对象的同时给对象赋初始值，具体请看下面实例：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace LineApplication\r\n{\r\n   class Line\r\n   {\r\n      private double length;   // 线条的长度\r\n      public Line(double len)  // 参数化构造函数\r\n      {\r\n         Console.WriteLine(&quot;对象已创建，length = {0}&quot;, len);\r\n         length = len;\r\n      }\r\n\r\n      public void setLength( double len )\r\n      {\r\n         length = len;\r\n      }\r\n      public double getLength()\r\n      {\r\n         return length;\r\n      }\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         Line line = new Line(10.0);\r\n         Console.WriteLine(&quot;线条的长度： {0}&quot;, line.getLength()); \r\n         // 设置线条长度\r\n         line.setLength(6.0);\r\n         Console.WriteLine(&quot;线条的长度： {0}&quot;, line.getLength()); \r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n对象已创建，length = 10\r\n线条的长度： 10\r\n线条的长度： 6\r\n</pre> \n<h2 class=\"tutheader\">C# 中的析构函数</h2> \n<p>类的 <b>析构函数</b> 是类的一个特殊的成员函数，当类的对象超出范围时执行。</p> \n<p>析构函数的名称是在类的名称前加上一个波浪形（~）作为前缀，它不返回值，也不带任何参数。</p> \n<p>析构函数用于在结束程序（比如关闭文件、释放内存等）之前释放资源。析构函数不能继承或重载。</p> \n<p>下面的实例说明了析构函数的概念：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace LineApplication\r\n{\r\n   class Line\r\n   {\r\n      private double length;   // 线条的长度\r\n      public Line()  // 构造函数\r\n      {\r\n         Console.WriteLine(&quot;对象已创建&quot;);\r\n      }\r\n      ~Line() //析构函数\r\n      {\r\n         Console.WriteLine(&quot;对象已删除&quot;);\r\n      }\r\n\r\n      public void setLength( double len )\r\n      {\r\n         length = len;\r\n      }\r\n      public double getLength()\r\n      {\r\n         return length;\r\n      }\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         Line line = new Line();\r\n         // 设置线条长度\r\n         line.setLength(6.0);\r\n         Console.WriteLine(&quot;线条的长度： {0}&quot;, line.getLength());           \r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n对象已创建\r\n线条的长度： 6\r\n对象已删除\r\n</pre> \n<h2 class=\"tutheader\">C# 类的静态成员</h2> \n<p>我们可以使用 <b>static</b> 关键字把类成员定义为静态的。当我们声明一个类成员为静态时，意味着无论有多少个类的对象被创建，只会有一个该静态成员的副本。</p> \n<p>关键字 <b>static</b> 意味着类中只有一个该成员的实例。静态变量用于定义常量，因为它们的值可以通过直接调用类而不需要创建类的实例来获取。静态变量可在成员函数或类的定义外部进行初始化。您也可以在类的定义内部初始化静态变量。</p> \n<p>下面的实例演示了<b>静态变量</b>的用法：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace StaticVarApplication\r\n{\r\n    class StaticVar\r\n    {\r\n       public static int num;\r\n        public void count()\r\n        {\r\n            num++;\r\n        }\r\n        public int getNum()\r\n        {\r\n            return num;\r\n        }\r\n    }\r\n    class StaticTester\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            StaticVar s1 = new StaticVar();\r\n            StaticVar s2 = new StaticVar();\r\n            s1.count();\r\n            s1.count();\r\n            s1.count();\r\n            s2.count();\r\n            s2.count();\r\n            s2.count();         \r\n            Console.WriteLine(&quot;s1 的变量 num： {0}&quot;, s1.getNum());\r\n            Console.WriteLine(&quot;s2 的变量 num： {0}&quot;, s2.getNum());\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\ns1 的变量 num： 6\r\ns2 的变量 num： 6\r\n</pre> \n<p>您也可以把一个<b>成员函数</b>声明为 <b>static</b>。这样的函数只能访问静态变量。静态函数在对象被创建之前就已经存在。下面的实例演示了<b>静态函数</b>的用法：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace StaticVarApplication\r\n{\r\n    class StaticVar\r\n    {\r\n       public static int num;\r\n        public void count()\r\n        {\r\n            num++;\r\n        }\r\n        public static int getNum()\r\n        {\r\n            return num;\r\n        }\r\n    }\r\n    class StaticTester\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            StaticVar s = new StaticVar();\r\n            s.count();\r\n            s.count();\r\n            s.count();                   \r\n            Console.WriteLine(&quot;变量 num： {0}&quot;, StaticVar.getNum());\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n变量 num： 3\r\n</pre>', null, 'C# 类（Class）|类的定义|成员函数和封装|C# 中的构造函数|C# 中的析构函数|C# 类的静态成员|');
INSERT INTO `schoolcontent` VALUES ('344', '347', '<h1>C# <span class=\"color_h1\">继承</span></h1> \n<div class=\"tutintro\"> \n <p>继承是面向对象程序设计中最重要的概念之一。继承允许我们根据一个类来定义另一个类来定义一个类，这使得创建和维护应用程序变得更容易。同时也有利于重用代码和节省开发时间。</p> \n <p>当创建一个类时，程序员不需要完全重新编写新的数据成员和成员函数，只需要设计一个新的类，继承了已有的类的成员即可。这个已有的类被称为的<b>基类</b>，这个新的类被称为<b>派生类</b>。</p> \n <p>继承的思想实现了 <b>属于（IS-A）</b> 关系。例如，哺乳动物 <b>属于（IS-A）</b> 动物，狗 <b>属于（IS-A）</b> 哺乳动物，因此狗 <b>属于（IS-A）</b> 动物。</p> \n</div> \n<h2 class=\"tutheader\">基类和派生类</h2> \n<p>一个类可以派生自多个类或接口，这意味着它可以从多个基类或接口继承数据和函数。</p> \n<p>C# 中创建派生类的语法如下：</p> \n<pre class=\"prettyprint\">\r\n&lt;acess-specifier&gt; class &lt;base_class&gt;\r\n{\r\n ...\r\n}\r\nclass &lt;derived_class&gt; : &lt;base_class&gt;\r\n{\r\n ...\r\n}\r\n</pre> \n<p>假设，有一个基类 Shape，它的派生类是 Rectangle：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace InheritanceApplication\r\n{\r\n   class Shape \r\n   {\r\n      public void setWidth(int w)\r\n      {\r\n         width = w;\r\n      }\r\n      public void setHeight(int h)\r\n      {\r\n         height = h;\r\n      }\r\n      protected int width;\r\n      protected int height;\r\n   }\r\n\r\n   // 派生类\r\n   class Rectangle: Shape\r\n   {\r\n      public int getArea()\r\n      { \r\n         return (width * height); \r\n      }\r\n   }\r\n   \r\n   class RectangleTester\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Rectangle Rect = new Rectangle();\r\n\r\n         Rect.setWidth(5);\r\n         Rect.setHeight(7);\r\n\r\n         // 打印对象的面积\r\n         Console.WriteLine(&quot;总面积： {0}&quot;,  Rect.getArea());\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n总面积： 35\r\n</pre> \n<h2 class=\"tutheader\">基类的初始化</h2> \n<p>派生类继承了基类的成员变量和成员方法。因此父类对象应在子类对象创建之前被创建。您可以在成员初始化列表中进行父类的初始化。</p> \n<p>下面的程序演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace RectangleApplication\r\n{\r\n   class Rectangle\r\n   {\r\n      // 成员变量\r\n      protected double length;\r\n      protected double width;\r\n      public Rectangle(double l, double w)\r\n      {\r\n         length = l;\r\n         width = w;\r\n      }\r\n      public double GetArea()\r\n      {\r\n         return length * width;\r\n      }\r\n      public void Display()\r\n      {\r\n         Console.WriteLine(&quot;长度： {0}&quot;, length);\r\n         Console.WriteLine(&quot;宽度： {0}&quot;, width);\r\n         Console.WriteLine(&quot;面积： {0}&quot;, GetArea());\r\n      }\r\n   }//end class Rectangle  \r\n   class Tabletop : Rectangle\r\n   {\r\n      private double cost;\r\n      public Tabletop(double l, double w) : base(l, w)\r\n      { }\r\n      public double GetCost()\r\n      {\r\n         double cost;\r\n         cost = GetArea() * 70;\r\n         return cost;\r\n      }\r\n      public void Display()\r\n      {\r\n         base.Display();\r\n         Console.WriteLine(&quot;成本： {0}&quot;, GetCost());\r\n      }\r\n   }\r\n   class ExecuteRectangle\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Tabletop t = new Tabletop(4.5, 7.5);\r\n         t.Display();\r\n         Console.ReadLine();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n长度： 4.5\r\n宽度： 7.5\r\n面积： 33.75\r\n成本： 2362.5\r\n</pre> \n<h2 class=\"tutheader\">C# 多重继承</h2> \n<p><b>C# 不支持多重继承</b>。但是，您可以使用接口来实现多重继承。下面的程序演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace InheritanceApplication\r\n{\r\n   class Shape \r\n   {\r\n      public void setWidth(int w)\r\n      {\r\n         width = w;\r\n      }\r\n      public void setHeight(int h)\r\n      {\r\n         height = h;\r\n      }\r\n      protected int width;\r\n      protected int height;\r\n   }\r\n\r\n   // 基类 PaintCost\r\n   public interface PaintCost \r\n   {\r\n      int getCost(int area);\r\n\r\n   }\r\n   // 派生类\r\n   class Rectangle : Shape, PaintCost\r\n   {\r\n      public int getArea()\r\n      {\r\n         return (width * height);\r\n      }\r\n      public int getCost(int area)\r\n      {\r\n         return area * 70;\r\n      }\r\n   }\r\n   class RectangleTester\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Rectangle Rect = new Rectangle();\r\n         int area;\r\n         Rect.setWidth(5);\r\n         Rect.setHeight(7);\r\n         area = Rect.getArea();\r\n         // 打印对象的面积\r\n         Console.WriteLine(&quot;总面积： {0}&quot;,  Rect.getArea());\r\n         Console.WriteLine(&quot;油漆总成本： ${0}&quot; , Rect.getCost(area));\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n总面积： 35\r\n油漆总成本： $2450\r\n</pre>', null, 'C# 继承|基类和派生类|基类的初始化|C# 多重继承|');
INSERT INTO `schoolcontent` VALUES ('345', '348', '<h1>C# <span class=\"color_h1\">多态性</span></h1> \n<div class=\"tutintro\"> \n <p><b>多态性</b>意味着有多重形式。在面向对象编程范式中，多态性往往表现为&quot;一个接口，多个功能&quot;。</p> \n <p>多态性可以是静态的或动态的。在<b>静态多态性</b>中，函数的响应是在编译时发生的。在<b>动态多态性</b>中，函数的响应是在运行时发生的。</p> \n</div> \n<h2 class=\"tutheader\">静态多态性</h2> \n<p>在编译时，函数和对象的连接机制被称为早期绑定，也被称为静态绑定。C# 提供了两种技术来实现静态多态性。分别为：</p> \n<ul class=\"list\"> \n <li>函数重载</li> \n <li>运算符重载</li> \n</ul> \n<p>运算符重载将在下一章节讨论，接下来我们将讨论函数重载。</p> \n<h2 class=\"tutheader\">函数重载</h2> \n<p>您可以在同一个范围内对相同的函数名有多个定义。函数的定义必须彼此不同，可以是参数列表中的参数类型不同，也可以是参数个数不同。不能重载只有返回类型不同的函数声明。</p> \n<p>下面的实例演示了几个相同的函数 <b>print()</b>，用于打印不同的数据类型：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace PolymorphismApplication\r\n{\r\n   class Printdata\r\n   {\r\n      void print(int i)\r\n      {\r\n         Console.WriteLine(&quot;Printing int: {0}&quot;, i );\r\n      }\r\n\r\n      void print(double f)\r\n      {\r\n         Console.WriteLine(&quot;Printing float: {0}&quot; , f);\r\n      }\r\n\r\n      void print(string s)\r\n      {\r\n         Console.WriteLine(&quot;Printing string: {0}&quot;, s);\r\n      }\r\n      static void Main(string[] args)\r\n      {\r\n         Printdata p = new Printdata();\r\n         // 调用 print 来打印整数\r\n         p.print(5);\r\n         // 调用 print 来打印浮点数\r\n         p.print(500.263);\r\n         // 调用 print 来打印字符串\r\n         p.print(&quot;Hello C++&quot;);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nPrinting int: 5\r\nPrinting float: 500.263\r\nPrinting string: Hello C++\r\n</pre> \n<h2 class=\"tutheader\">动态多态性</h2> \n<p>C# 允许您使用关键字 <b>abstract</b> 创建抽象类，用于提供接口的部分类的实现。当一个派生类继承自该抽象类时，实现即完成。<b>抽象类</b>包含抽象方法，抽象方法可被派生类实现。派生类具有更专业的功能。</p> \n<p>请注意，下面是有关抽象类的一些规则：</p> \n<ul class=\"list\"> \n <li>您不能创建一个抽象类的实例。</li> \n <li>您不能在一个抽象类外部声明一个抽象方法。</li> \n <li>通过在类定义前面放置关键字 <b>sealed</b>，可以将类声明为<b>密封类</b>。当一个类被声明为 <b>sealed</b> 时，它不能被继承。抽象类不能被声明为 sealed。</li> \n</ul> \n<p>下面的程序演示了一个抽象类：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace PolymorphismApplication\r\n{\r\n   abstract class Shape\r\n   {\r\n      public abstract int area();\r\n   }\r\n   class Rectangle:  Shape\r\n   {\r\n      private int length;\r\n      private int width;\r\n      public Rectangle( int a=0, int b=0)\r\n      {\r\n         length = a;\r\n         width = b;\r\n      }\r\n      public override int area ()\r\n      { \r\n         Console.WriteLine(&quot;Rectangle 类的面积：&quot;);\r\n         return (width * length); \r\n      }\r\n   }\r\n\r\n   class RectangleTester\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Rectangle r = new Rectangle(10, 7);\r\n         double a = r.area();\r\n         Console.WriteLine(&quot;面积： {0}&quot;,a);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nRectangle 类的面积：\r\n面积： 70\r\n</pre> \n<p>当有一个定义在类中的函数需要在继承类中实现时，可以使用<b>虚方法</b>。虚方法是使用关键字 <b>virtual</b> 声明的。虚方法可以在不同的继承类中有不同的实现。对虚方法的调用是在运行时发生的。</p> \n<p>动态多态性是通过 <b>抽象类</b> 和 <b>虚方法</b> 实现的。</p> \n<p>下面的程序演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace PolymorphismApplication\r\n{\r\n   class Shape \r\n   {\r\n      protected int width, height;\r\n      public Shape( int a=0, int b=0)\r\n      {\r\n         width = a;\r\n         height = b;\r\n      }\r\n      public virtual int area()\r\n      {\r\n         Console.WriteLine(&quot;父类的面积：&quot;);\r\n         return 0;\r\n      }\r\n   }\r\n   class Rectangle: Shape\r\n   {\r\n      public Rectangle( int a=0, int b=0): base(a, b)\r\n      {\r\n\r\n      }\r\n      public override int area ()\r\n      {\r\n         Console.WriteLine(&quot;Rectangle 类的面积：&quot;);\r\n         return (width * height); \r\n      }\r\n   }\r\n   class Triangle: Shape\r\n   {\r\n      public Triangle(int a = 0, int b = 0): base(a, b)\r\n      {\r\n      \r\n      }\r\n      public override int area()\r\n      {\r\n         Console.WriteLine(&quot;Triangle 类的面积：&quot;);\r\n         return (width * height / 2); \r\n      }\r\n   }\r\n   class Caller\r\n   {\r\n      public void CallArea(Shape sh)\r\n      {\r\n         int a;\r\n         a = sh.area();\r\n         Console.WriteLine(&quot;面积： {0}&quot;, a);\r\n      }\r\n   }  \r\n   class Tester\r\n   {\r\n      \r\n      static void Main(string[] args)\r\n      {\r\n         Caller c = new Caller();\r\n         Rectangle r = new Rectangle(10, 7);\r\n         Triangle t = new Triangle(10, 5);\r\n         c.CallArea(r);\r\n         c.CallArea(t);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nRectangle 类的面积：\r\n面积：70\r\nTriangle 类的面积：\r\n面积：25\r\n</pre>', null, 'C# 多态性|静态多态性|函数重载|动态多态性|');
INSERT INTO `schoolcontent` VALUES ('346', '349', '<h1>C# <span class=\"color_h1\">运算符重载</span></h1> \n<div class=\"tutintro\"> \n <p>您可以重定义或重载 C# 中内置的运算符。因此，程序员也可以使用用户自定义类型的运算符。重载运算符是具有特殊名称的函数，是通过关键字 <b>operator</b> 后跟运算符的符号来定义的。与其他函数一样，重载运算符有返回类型和参数列表。</p> \n <p>例如，请看下面的函数：</p> \n <pre class=\"prettyprint\">\r\npublic static Box operator+ (Box b, Box c)\r\n{\r\n   Box box = new Box();\r\n   box.length = b.length + c.length;\r\n   box.breadth = b.breadth + c.breadth;\r\n   box.height = b.height + c.height;\r\n   return box;\r\n}\r\n</pre> \n <p>上面的函数为用户自定义的类 Box 实现了加法运算符（+）。它把两个 Box 对象的属性相加，并返回相加后的 Box 对象。</p> \n</div> \n<h2 class=\"tutheader\">运算符重载的实现</h2> \n<p>下面的程序演示了完整的实现：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace OperatorOvlApplication\r\n{\r\n   class Box\r\n   {\r\n      private double length;      // 长度\r\n      private double breadth;     // 宽度\r\n      private double height;      // 高度\r\n\r\n      public double getVolume()\r\n      {\r\n         return length * breadth * height;\r\n      }\r\n      public void setLength( double len )\r\n      {\r\n         length = len;\r\n      }\r\n\r\n      public void setBreadth( double bre )\r\n      {\r\n         breadth = bre;\r\n      }\r\n\r\n      public void setHeight( double hei )\r\n      {\r\n         height = hei;\r\n      }\r\n      // 重载 + 运算符来把两个 Box 对象相加\r\n      public static Box operator+ (Box b, Box c)\r\n      {\r\n         Box box = new Box();\r\n         box.length = b.length + c.length;\r\n         box.breadth = b.breadth + c.breadth;\r\n         box.height = b.height + c.height;\r\n         return box;\r\n      }\r\n\r\n   }\r\n\r\n   class Tester\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Box Box1 = new Box();         // 声明 Box1，类型为 Box\r\n         Box Box2 = new Box();         // 声明 Box2，类型为 Box\r\n         Box Box3 = new Box();         // 声明 Box3，类型为 Box\r\n         double volume = 0.0;          // 体积\r\n\r\n         // Box1 详述\r\n         Box1.setLength(6.0);\r\n         Box1.setBreadth(7.0);\r\n         Box1.setHeight(5.0);\r\n\r\n         // Box2 详述\r\n         Box2.setLength(12.0);\r\n         Box2.setBreadth(13.0);\r\n         Box2.setHeight(10.0);\r\n\r\n         // Box1 的体积\r\n         volume = Box1.getVolume();\r\n         Console.WriteLine(&quot;Box1 的体积： {0}&quot;, volume);\r\n\r\n         // Box2 的体积\r\n         volume = Box2.getVolume();\r\n         Console.WriteLine(&quot;Box2 的体积： {0}&quot;, volume);\r\n\r\n         // 把两个对象相加\r\n         Box3 = Box1 + Box2;\r\n\r\n         // Box3 的体积\r\n         volume = Box3.getVolume();\r\n         Console.WriteLine(&quot;Box3 的体积： {0}&quot;, volume);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nBox1 的体积： 210\r\nBox2 的体积： 1560\r\nBox3 的体积： 5400\r\n</pre> \n<h2 class=\"tutheader\">可重载和不可重载运算符</h2> \n<p>下表描述了 C# 中运算符重载的能力：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:35%;\">运算符</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>+, -, !, ~, ++, --</td>\n   <td>这些一元运算符只有一个操作数，且可以被重载。</td>\n  </tr> \n  <tr>\n   <td>+, -, *, /, %</td>\n   <td>这些二元运算符带有两个操作数，且可以被重载。</td>\n  </tr> \n  <tr>\n   <td>==, !=, &lt;, &gt;, &lt;=, &gt;=</td>\n   <td>这些比较运算符可以被重载。</td>\n  </tr> \n  <tr>\n   <td>&amp;&amp;, ||</td>\n   <td>这些条件逻辑运算符不能被直接重载。</td>\n  </tr> \n  <tr>\n   <td>+=, -=, *=, /=, %=</td>\n   <td>这些赋值运算符不能被重载。</td>\n  </tr> \n  <tr>\n   <td>=, ., ?:, -&gt;, new, is, sizeof, typeof</td>\n   <td>这些运算符不能被重载。</td>\n  </tr> \n </tbody>\n</table> \n<h2 class=\"tutheader\">实例</h2> \n<p>针对上述讨论，让我们扩展上面的实例，重载更多的运算符：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\nnamespace OperatorOvlApplication\r\n{\r\n    class Box\r\n    {\r\n       private double length;      // 长度\r\n       private double breadth;     // 宽度\r\n       private double height;      // 高度\r\n      \r\n       public double getVolume()\r\n       {\r\n         return length * breadth * height;\r\n       }\r\n      public void setLength( double len )\r\n      {\r\n          length = len;\r\n      }\r\n\r\n      public void setBreadth( double bre )\r\n      {\r\n          breadth = bre;\r\n      }\r\n\r\n      public void setHeight( double hei )\r\n      {\r\n          height = hei;\r\n      }\r\n      // 重载 + 运算符来把两个 Box 对象相加\r\n      public static Box operator+ (Box b, Box c)\r\n      {\r\n          Box box = new Box();\r\n          box.length = b.length + c.length;\r\n          box.breadth = b.breadth + c.breadth;\r\n          box.height = b.height + c.height;\r\n          return box;\r\n      }\r\n      \r\n      public static bool operator == (Box lhs, Box rhs)\r\n      {\r\n          bool status = false;\r\n          if (lhs.length == rhs.length &amp;&amp; lhs.height == rhs.height \r\n             &amp;&amp; lhs.breadth == rhs.breadth)\r\n          {\r\n              status = true;\r\n          }\r\n          return status;\r\n      }\r\n      public static bool operator !=(Box lhs, Box rhs)\r\n      {\r\n          bool status = false;\r\n          if (lhs.length != rhs.length || lhs.height != rhs.height \r\n              || lhs.breadth != rhs.breadth)\r\n          {\r\n              status = true;\r\n          }\r\n          return status;\r\n      }\r\n      public static bool operator &lt;(Box lhs, Box rhs)\r\n      {\r\n          bool status = false;\r\n          if (lhs.length &lt; rhs.length &amp;&amp; lhs.height \r\n              &lt; rhs.height &amp;&amp; lhs.breadth &lt; rhs.breadth)\r\n          {\r\n              status = true;\r\n          }\r\n          return status;\r\n      }\r\n\r\n      public static bool operator &gt;(Box lhs, Box rhs)\r\n      {\r\n          bool status = false;\r\n          if (lhs.length &gt; rhs.length &amp;&amp; lhs.height \r\n              &gt; rhs.height &amp;&amp; lhs.breadth &gt; rhs.breadth)\r\n          {\r\n              status = true;\r\n          }\r\n          return status;\r\n      }\r\n\r\n      public static bool operator &lt;=(Box lhs, Box rhs)\r\n      {\r\n          bool status = false;\r\n          if (lhs.length &lt;= rhs.length &amp;&amp; lhs.height \r\n              &lt;= rhs.height &amp;&amp; lhs.breadth &lt;= rhs.breadth)\r\n          {\r\n              status = true;\r\n          }\r\n          return status;\r\n      }\r\n\r\n      public static bool operator &gt;=(Box lhs, Box rhs)\r\n      {\r\n          bool status = false;\r\n          if (lhs.length &gt;= rhs.length &amp;&amp; lhs.height \r\n             &gt;= rhs.height &amp;&amp; lhs.breadth &gt;= rhs.breadth)\r\n          {\r\n              status = true;\r\n          }\r\n          return status;\r\n      }\r\n      public override string ToString()\r\n      {\r\n          return String.Format(&quot;({0}, {1}, {2})&quot;, length, breadth, height);\r\n      }\r\n   \r\n   }\r\n    \r\n   class Tester\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n        Box Box1 = new Box();          // 声明 Box1，类型为 Box\r\n        Box Box2 = new Box();          // 声明 Box2，类型为 Box\r\n        Box Box3 = new Box();          // 声明 Box3，类型为 Box\r\n        Box Box4 = new Box();\r\n        double volume = 0.0;   // 体积\r\n\r\n        // Box1 详述\r\n        Box1.setLength(6.0);\r\n        Box1.setBreadth(7.0);\r\n        Box1.setHeight(5.0);\r\n\r\n        // Box2 详述\r\n        Box2.setLength(12.0);\r\n        Box2.setBreadth(13.0);\r\n        Box2.setHeight(10.0);\r\n\r\n       // 使用重载的 ToString() 显示两个盒子\r\n        Console.WriteLine(&quot;Box1： {0}&quot;, Box1.ToString());\r\n        Console.WriteLine(&quot;Box2： {0}&quot;, Box2.ToString());\r\n        \r\n        // Box1 的体积\r\n        volume = Box1.getVolume();\r\n        Console.WriteLine(&quot;Box1 的体积： {0}&quot;, volume);\r\n\r\n        // Box2 的体积\r\n        volume = Box2.getVolume();\r\n        Console.WriteLine(&quot;Box2 的体积： {0}&quot;, volume);\r\n\r\n        // 把两个对象相加\r\n        Box3 = Box1 + Box2;\r\n        Console.WriteLine(&quot;Box3： {0}&quot;, Box3.ToString());\r\n        // Box3 的体积\r\n        volume = Box3.getVolume();\r\n        Console.WriteLine(&quot;Box3 的体积： {0}&quot;, volume);\r\n\r\n        //comparing the boxes\r\n        if (Box1 &gt; Box2)\r\n          Console.WriteLine(&quot;Box1 大于 Box2&quot;);\r\n        else\r\n          Console.WriteLine(&quot;Box1 不大于 Box2&quot;);\r\n        if (Box1 &lt; Box2)\r\n          Console.WriteLine(&quot;Box1 小于 Box2&quot;);\r\n        else\r\n          Console.WriteLine(&quot;Box1 不小于 Box2&quot;);\r\n        if (Box1 &gt;= Box2)\r\n          Console.WriteLine(&quot;Box1 大于等于 Box2&quot;);\r\n        else\r\n          Console.WriteLine(&quot;Box1 不大于等于 Box2&quot;);\r\n        if (Box1 &lt;= Box2)\r\n          Console.WriteLine(&quot;Box1 小于等于 Box2&quot;);\r\n        else\r\n          Console.WriteLine(&quot;Box1 不小于等于 Box2&quot;);\r\n        if (Box1 != Box2)\r\n          Console.WriteLine(&quot;Box1 不等于 Box2&quot;);\r\n        else\r\n          Console.WriteLine(&quot;Box1 等于 Box2&quot;);\r\n        Box4 = Box3;\r\n        if (Box3 == Box4)\r\n          Console.WriteLine(&quot;Box3 等于 Box4&quot;);\r\n        else\r\n          Console.WriteLine(&quot;Box3 不等于 Box4&quot;);\r\n\r\n        Console.ReadKey();\r\n      }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nBox1： (6, 7, 5)\r\nBox2： (12, 13, 10)\r\nBox1 的体积： 210\r\nBox2 的体积： 1560\r\nBox3： (18, 20, 15)\r\nBox3 的体积： 5400\r\nBox1 不大于 Box2\r\nBox1 小于 Box2\r\nBox1 不大于等于 Box2\r\nBox1 小于等于 Box2\r\nBox1 不等于 Box2\r\nBox3 等于 Box4\r\n</pre>', null, 'C# 运算符重载|运算符重载的实现|可重载和不可重载运算符|实例|');
INSERT INTO `schoolcontent` VALUES ('347', '350', '<h1>C# <span class=\"color_h1\">接口（Interface）</span></h1> \n<div class=\"tutintro\"> \n <p>接口定义了所有类继承接口时应遵循的语法合同。接口定义了语法合同 <b>&quot;是什么&quot;</b> 部分，派生类定义了语法合同 <b>&quot;怎么做&quot;</b> 部分。</p> \n <p>接口定义了属性、方法和事件，这些都是接口的成员。接口只包含了成员的声明。成员的定义是派生类的责任。接口提供了派生类应遵循的标准结构。</p> \n <p>抽象类在某种程度上与接口类似，但是，它们大多只是用在当只有少数方法由基类声明由派生类实现时。</p> \n</div> \n<h2 class=\"tutheader\">声明接口</h2> \n<p>接口使用 <b>interface</b> 关键字声明，它与类的声明类似。接口声明默认是 public 的。下面是一个接口声明的实例：</p> \n<pre class=\"prettyprint\">\r\npublic interface ITransactions\r\n{\r\n   // 接口成员\r\n   void showTransaction();\r\n   double getAmount();\r\n}\r\n</pre> \n<h2 class=\"tutheader\">实例</h2> \n<p>下面的实例演示了上面接口的实现：</p> \n<pre class=\"prettyprint\">\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\n\r\nnamespace InterfaceApplication\r\n{\r\n\r\n   public interface ITransactions\r\n   {\r\n      // 接口成员\r\n      void showTransaction();\r\n      double getAmount();\r\n   }\r\n   public class Transaction : ITransactions\r\n   {\r\n      private string tCode;\r\n      private string date;\r\n      private double amount;\r\n      public Transaction()\r\n      {\r\n         tCode = &quot; &quot;;\r\n         date = &quot; &quot;;\r\n         amount = 0.0;\r\n      }\r\n      public Transaction(string c, string d, double a)\r\n      {\r\n         tCode = c;\r\n         date = d;\r\n         amount = a;\r\n      }\r\n      public double getAmount()\r\n      {\r\n         return amount;\r\n      }\r\n      public void showTransaction()\r\n      {\r\n         Console.WriteLine(&quot;Transaction: {0}&quot;, tCode);\r\n         Console.WriteLine(&quot;Date: {0}&quot;, date);\r\n         Console.WriteLine(&quot;Amount: {0}&quot;, getAmount());\r\n\r\n      }\r\n\r\n   }\r\n   class Tester\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Transaction t1 = new Transaction(&quot;001&quot;, &quot;8/10/2012&quot;, 78900.00);\r\n         Transaction t2 = new Transaction(&quot;002&quot;, &quot;9/10/2012&quot;, 451900.00);\r\n         t1.showTransaction();\r\n         t2.showTransaction();\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nTransaction: 001\r\nDate: 8/10/2012\r\nAmount: 78900\r\nTransaction: 002\r\nDate: 9/10/2012\r\nAmount: 451900\r\n</pre>', null, 'C# 接口（Interface）|声明接口|实例|');
INSERT INTO `schoolcontent` VALUES ('348', '351', '<h1>C# <span class=\"color_h1\">命名空间（Namespace）</span></h1> \n<div class=\"tutintro\"> \n <p><b>命名空间</b>的设计目的是为了提供一种让一组名称与其他名称分隔开的方式。在一个命名空间中声明的类的名称与另一个命名空间中声明的相同的类的名称不冲突。</p> \n</div> \n<h2 class=\"tutheader\">定义命名空间</h2> \n<p>命名空间的定义是以关键字 <b>namespace</b> 开始，后跟命名空间的名称，如下所示：</p> \n<pre class=\"prettyprint\">\r\nnamespace namespace_name\r\n{\r\n   // 代码声明\r\n}\r\n</pre> \n<p>为了调用支持命名空间版本的函数或变量，会把命名空间的名称置于前面，如下所示：</p> \n<pre class=\"prettyprint\">\r\nnamespace_name.item_name;\r\n</pre> \n<p>下面的程序演示了命名空间的用法：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace first_space\r\n{\r\n   class namespace_cl\r\n   {\r\n      public void func()\r\n      {\r\n         Console.WriteLine(&quot;Inside first_space&quot;);\r\n      }\r\n   }\r\n}\r\nnamespace second_space\r\n{\r\n   class namespace_cl\r\n   {\r\n      public void func()\r\n      {\r\n         Console.WriteLine(&quot;Inside second_space&quot;);\r\n      }\r\n   }\r\n}   \r\nclass TestClass\r\n{\r\n   static void Main(string[] args)\r\n   {\r\n      first_space.namespace_cl fc = new first_space.namespace_cl();\r\n      second_space.namespace_cl sc = new second_space.namespace_cl();\r\n      fc.func();\r\n      sc.func();\r\n      Console.ReadKey();\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nInside first_space\r\nInside second_space\r\n</pre> \n<h2 class=\"tutheader\"><i>using</i> 关键字</h2> \n<p><b>using</b> 关键字表明程序使用的是给定命名空间中的名称。例如，我们在程序中使用 <b>System</b> 命名空间，其中定义了类 Console。我们可以只写：</p> \n<pre class=\"prettyprint\">\r\nConsole.WriteLine (&quot;Hello there&quot;);\r\n</pre> \n<p>我们可以写完全限定名称，如下：</p> \n<pre class=\"prettyprint\">\r\nSystem.Console.WriteLine(&quot;Hello there&quot;);\r\n</pre> \n<p>您也可以使用 <b>using</b> 命名空间指令，这样在使用的时候就不用在前面加上命名空间名称。该指令告诉编译器随后的代码使用了指定命名空间中的名称。下面的代码延时了命名空间的应用。</p> \n<p>让我们使用 using 指定重写上面的实例：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing first_space;\r\nusing second_space;\r\n\r\nnamespace first_space\r\n{\r\n   class abc\r\n   {\r\n      public void func()\r\n      {\r\n         Console.WriteLine(&quot;Inside first_space&quot;);\r\n      }\r\n   }\r\n}\r\nnamespace second_space\r\n{\r\n   class efg\r\n   {\r\n      public void func()\r\n      {\r\n         Console.WriteLine(&quot;Inside second_space&quot;);\r\n      }\r\n   }\r\n}   \r\nclass TestClass\r\n{\r\n   static void Main(string[] args)\r\n   {\r\n      abc fc = new abc();\r\n      efg sc = new efg();\r\n      fc.func();\r\n      sc.func();\r\n      Console.ReadKey();\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nInside first_space\r\nInside second_space\r\n</pre> \n<h2 class=\"tutheader\">嵌套命名空间</h2> \n<p>命名空间可以被嵌套，即您可以在一个命名空间内定义另一个命名空间，如下所示：</p> \n<pre class=\"prettyprint\">\r\nnamespace namespace_name1 \r\n{\r\n   // 代码声明\r\n   namespace namespace_name2 \r\n   {\r\n     // 代码声明\r\n   }\r\n}\r\n</pre> \n<p>您可以使用点（.）运算符访问嵌套的命名空间的成员，如下所示：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing first_space;\r\nusing first_space.second_space;\r\n\r\nnamespace first_space\r\n{\r\n   class abc\r\n   {\r\n      public void func()\r\n      {\r\n         Console.WriteLine(&quot;Inside first_space&quot;);\r\n      }\r\n   }\r\n   namespace second_space\r\n   {\r\n      class efg\r\n      {\r\n         public void func()\r\n         {\r\n            Console.WriteLine(&quot;Inside second_space&quot;);\r\n         }\r\n      }\r\n   }   \r\n}\r\n \r\nclass TestClass\r\n{\r\n   static void Main(string[] args)\r\n   {\r\n      abc fc = new abc();\r\n      efg sc = new efg();\r\n      fc.func();\r\n      sc.func();\r\n      Console.ReadKey();\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nInside first_space\r\nInside second_space\r\n</pre>', null, 'C# 命名空间（Namespace）|定义命名空间|using 关键字|嵌套命名空间|');
INSERT INTO `schoolcontent` VALUES ('349', '352', '<h1>C# <span class=\"color_h1\">预处理器指令</span></h1> \n<div class=\"tutintro\"> \n <p>预处理器指令指导编译器在实际编译开始之前对信息进行预处理。</p> \n <p>所有的预处理器指令都是以 # 开始。且在一行上，只有空白字符可以出现在预处理器指令之前。预处理器指令不是语句，所以它们不以分号（;）结束。</p> \n <p>C# 编译器没有一个单独的预处理器，但是，指令被处理时就像是有一个单独的预处理器一样。在 C# 中，预处理器指令用于在条件编译中起作用。与 C 和 C++ 不同指令不用，它们不是用来创建宏。一个预处理器指令必须是该行上的唯一指令。</p> \n</div> \n<h2 class=\"tutheader\">C# 预处理器指令列表</h2> \n<p>下表列出了 C# 中可用的预处理器指令：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:20%;\">预处理器指令</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>#define</td>\n   <td>它用于定义一系列成为符号的字符。</td>\n  </tr> \n  <tr>\n   <td>#undef</td>\n   <td>它用于取消定义符号。</td>\n  </tr> \n  <tr>\n   <td>#if</td>\n   <td>它用于测试符号是否为真。</td>\n  </tr> \n  <tr>\n   <td>#else</td>\n   <td>它用于创建复合条件指令，与 #if 一起使用。</td>\n  </tr> \n  <tr>\n   <td>#elif</td>\n   <td>它用于创建复合条件指令。</td>\n  </tr> \n  <tr>\n   <td>#endif</td>\n   <td>指定一个条件指令的结束。</td>\n  </tr> \n  <tr>\n   <td>#line</td>\n   <td>它可以让您修改编译器的行数以及（可选地）输出错误和警告的文件名。</td>\n  </tr> \n  <tr>\n   <td>#error</td>\n   <td>它允许从代码的指定位置生成一个错误。</td>\n  </tr> \n  <tr>\n   <td>#warning</td>\n   <td>它允许从代码的指定位置生成一级警告。</td>\n  </tr> \n  <tr>\n   <td>#region</td>\n   <td>它可以让您在使用 Visual Studio Code Editor 的大纲特性时，指定一个可展开或折叠的代码块。</td>\n  </tr> \n  <tr>\n   <td>#endregion</td>\n   <td>它标识着 #region 块的结束。</td>\n  </tr> \n </tbody>\n</table> \n<h2 class=\"tutheader\">#define 预处理器</h2> \n<p>#define 预处理器指令创建符号常量。</p> \n<p>#define 允许您定义一个符号，这样，通过使用符号作为传递给 #if 指令的表达式，表达式将返回 true。它的语法如下：</p> \n<pre class=\"prettyprint\">\r\n#define symbol\r\n</pre> \n<p>下面的程序说明了这点：</p> \n<pre class=\"prettyprint\">\r\n#define PI \r\nusing System;\r\nnamespace PreprocessorDAppl\r\n{\r\n   class Program\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         #if (PI)\r\n            Console.WriteLine(&quot;PI is defined&quot;);\r\n         #else\r\n            Console.WriteLine(&quot;PI is not defined&quot;);\r\n         #endif\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nPI is defined\r\n</pre> \n<h2 class=\"tutheader\">条件指令</h2> \n<p>您可以使用 #if 指令来创建一个条件指令。条件指令用于测试符号是否为真。如果为真，编译器会执行 #if 和下一个指令之间的代码。</p> \n<p>条件指令的语法：</p> \n<pre class=\"prettyprint\">\r\n#if symbol [operator symbol]...\r\n</pre> \n<p>其中，<i>symbol</i> 是要测试的符号名称。您也可以使用 true 和 false，或在符号前放置否定运算符。</p> \n<p><i>运算符符号</i>是用于评价符号的运算符。可以运算符可以是下列运算符之一：</p> \n<ul class=\"list\"> \n <li>== (equality)</li> \n <li>!= (inequality)</li> \n <li>&amp;&amp; (and)</li> \n <li>|| (or)</li> \n</ul> \n<p>您也可以用括号把符号和运算符进行分组。条件指令用于在调试版本或编译指定配置时编译代码。一个以 <b>#if</b> 指令开始的条件指令，必须显示地以一个 <b>#endif</b> 指令终止。</p> \n<p>下面的程序演示了条件指令的用法：</p> \n<pre class=\"prettyprint\">\r\n#define DEBUG\r\n#define VC_V10\r\nusing System;\r\npublic class TestClass\r\n{\r\n   public static void Main()\r\n   {\r\n\r\n      #if (DEBUG &amp;&amp; !VC_V10)\r\n         Console.WriteLine(&quot;DEBUG is defined&quot;);\r\n      #elif (!DEBUG &amp;&amp; VC_V10)\r\n         Console.WriteLine(&quot;VC_V10 is defined&quot;);\r\n      #elif (DEBUG &amp;&amp; VC_V10)\r\n         Console.WriteLine(&quot;DEBUG and VC_V10 are defined&quot;);\r\n      #else\r\n         Console.WriteLine(&quot;DEBUG and VC_V10 are not defined&quot;);\r\n      #endif\r\n      Console.ReadKey();\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nDEBUG and VC_V10 are defined\r\n</pre>', null, 'C# 预处理器指令|C# 预处理器指令列表|#define 预处理器|条件指令|');
INSERT INTO `schoolcontent` VALUES ('350', '353', '<h1>C# <span class=\"color_h1\">正则表达式</span></h1> \n<p><b>正则表达式</b> 是一种匹配输入文本的模式。.Net 框架提供了允许这种匹配的正则表达式引擎。模式由一个或多个字符、运算符和结构组成。</p> \n<h2 class=\"tutheader\">定义正则表达式</h2> \n<p>下面列出了用于定义正则表达式的各种类别的字符、运算符和结构。</p> \n<ul class=\"list\"> \n <li>字符转义</li> \n <li>字符类</li> \n <li>定位点</li> \n <li>分组构造</li> \n <li>限定符</li> \n <li>反向引用构造</li> \n <li>备用构造</li> \n <li>替换</li> \n <li>杂项构造</li> \n</ul> \n<h3>字符转义</h3> \n<p>正则表达式中的反斜杠字符（\\）指示其后跟的字符是特殊字符，或应按原义解释该字符。 </p> \n<p>下表列出了转义字符：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%;\">转义字符</th>\n   <th style=\"width:40%;\">描述</th>\n   <th style=\"width:20%;\">模式</th>\n   <th style=\"width:30%;\">匹配</th>\n  </tr> \n  <tr>\n   <td><b>\\a</b></td>\n   <td>与报警 (bell) 符 \\u0007 匹配。</td>\n   <td>\\a</td>\n   <td>&quot;Warning!&quot; + \'\\u0007\' 中的 &quot;\\u0007&quot; </td>\n  </tr> \n  <tr>\n   <td><b>\\b</b></td>\n   <td>在字符类中，与退格键 \\u0008 匹配。</td>\n   <td>[\\b]{3,}</td>\n   <td>&quot;\\b\\b\\b\\b&quot; 中的 &quot;\\b\\b\\b\\b&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\t</b></td>\n   <td>与制表符 \\u0009 匹配。</td>\n   <td>(\\w+)\\t</td>\n   <td>&quot;Name\\tAddr\\t&quot; 中的 &quot;Name\\t&quot; 和 &quot;Addr\\t&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\r</b></td>\n   <td>与回车符 \\u000D 匹配。（\\r 与换行符 \\n 不是等效的。）</td>\n   <td>\\r\\n(\\w+)</td>\n   <td>&quot;\\r\\Hello\\nWorld.&quot; 中的 &quot;\\r\\nHello&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\v</b></td>\n   <td>与垂直制表符 \\u000B 匹配。</td>\n   <td>[\\v]{2,}</td>\n   <td>&quot;\\v\\v\\v&quot; 中的 &quot;\\v\\v\\v&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\f</b></td>\n   <td>与换页符 \\u000C 匹配。</td>\n   <td>[\\f]{2,}</td>\n   <td>&quot;\\f\\f\\f&quot; 中的 &quot;\\f\\f\\f&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\n</b></td>\n   <td>与换行符 \\u000A 匹配。</td>\n   <td>\\r\\n(\\w+)</td>\n   <td>&quot;\\r\\Hello\\nWorld.&quot; 中的 &quot;\\r\\nHello&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\e</b></td>\n   <td>与转义符 \\u001B 匹配。</td>\n   <td>\\e</td>\n   <td>&quot;\\x001B&quot; 中的 &quot;\\x001B&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\ nnn</b></td>\n   <td>使用八进制表示形式指定一个字符（nnn 由二到三位数字组成）。</td>\n   <td>\\w\\040\\w</td>\n   <td>&quot;a bc d&quot; 中的 &quot;a b&quot; 和 &quot;c d&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\x nn</b></td>\n   <td>使用十六进制表示形式指定字符（nn 恰好由两位数字组成）。</td>\n   <td>\\w\\x20\\w</td>\n   <td>&quot;a bc d&quot; 中的 &quot;a b&quot; 和 &quot;c d&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\c X \\c x </b></td>\n   <td>匹配 X 或 x 指定的 ASCII 控件字符，其中 X 或 x 是控件字符的字母。</td>\n   <td>\\cC</td>\n   <td>&quot;\\x0003&quot; 中的 &quot;\\x0003&quot; (Ctrl-C)</td>\n  </tr> \n  <tr>\n   <td><b>\\u nnnn</b></td>\n   <td>使用十六进制表示形式匹配一个 Unicode 字符（由 nnnn 表示的四位数）。</td>\n   <td>\\w\\u0020\\w</td>\n   <td>&quot;a bc d&quot; 中的 &quot;a b&quot; 和 &quot;c d&quot; </td>\n  </tr> \n  <tr>\n   <td><b>\\</b></td>\n   <td>在后面带有不识别的转义字符时，与该字符匹配。</td>\n   <td>\\d+[\\+-x\\*]\\d+\\d+[\\+-x\\*\\d+</td>\n   <td>&quot;(2+2) * 3*9&quot; 中的 &quot;2+2&quot; 和 &quot;3*9&quot;</td>\n  </tr> \n </tbody>\n</table> \n<h3>字符类</h3> \n<p>字符类与一组字符中的任何一个字符匹配。</p> \n<p>下表列出了字符类：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%;\">字符类</th>\n   <th style=\"width:40%;\">描述</th>\n   <th style=\"width:20%;\">模式</th>\n   <th style=\"width:30%;\">匹配</th>\n  </tr> \n  <tr>\n   <td><b>[character_group]</b></td>\n   <td>匹配 character_group 中的任何单个字符。 默认情况下，匹配区分大小写。</td>\n   <td>[mn]</td>\n   <td>&quot;mat&quot; 中的 &quot;m&quot;，&quot;moon&quot; 中的 &quot;m&quot; 和 &quot;n&quot; </td>\n  </tr> \n  <tr>\n   <td><b>[^character_group]</b></td>\n   <td>非：与不在 character_group 中的任何单个字符匹配。 默认情况下，character_group 中的字符区分大小写。</td>\n   <td>[^aei]</td>\n   <td>&quot;avail&quot; 中的 &quot;v&quot; 和 &quot;l&quot;</td>\n  </tr> \n  <tr>\n   <td><b>[ first - last ]</b></td>\n   <td>字符范围：与从 first 到 last 的范围中的任何单个字符匹配。</td>\n   <td>(\\w+)\\t</td>\n   <td>&quot;Name\\tAddr\\t&quot; 中的 &quot;Name\\t&quot; 和 &quot;Addr\\t&quot;</td>\n  </tr> \n  <tr>\n   <td><b>.</b></td>\n   <td>通配符：与除 \\n 之外的任何单个字符匹配。 <br />若要匹配原意句点字符（. 或 \\u002E），您必须在该字符前面加上转义符 (\\.)。</td>\n   <td>a.e</td>\n   <td>&quot;have&quot; 中的 &quot;ave&quot;， &quot;mate&quot; 中的 &quot;ate&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\p{ name }</b></td>\n   <td>与 <i>name</i> 指定的 Unicode 通用类别或命名块中的任何单个字符匹配。</td>\n   <td>\\p{Lu} </td>\n   <td>&quot;City Lights&quot; 中的 &quot;C&quot; 和 &quot;L&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\P{ name }</b></td>\n   <td>与不在 <i>name</i> 指定的 Unicode 通用类别或命名块中的任何单个字符匹配。</td>\n   <td>\\P{Lu}</td>\n   <td>&quot;City&quot; 中的 &quot;i&quot;、 &quot;t&quot; 和 &quot;y&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\w</b></td>\n   <td>与任何单词字符匹配。</td>\n   <td>\\w</td>\n   <td>&quot;Room#1&quot; 中的 &quot;R&quot;、 &quot;o&quot;、 &quot;m&quot; 和 &quot;1&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\W</b></td>\n   <td>与任何非单词字符匹配。</td>\n   <td>\\W</td>\n   <td>&quot;Room#1&quot; 中的 &quot;#&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\s</b></td>\n   <td>与任何空白字符匹配。</td>\n   <td>\\w\\s</td>\n   <td>&quot;ID A1.3&quot; 中的 &quot;D &quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\S</b></td>\n   <td>与任何非空白字符匹配。</td>\n   <td>\\s\\S</td>\n   <td>&quot;int __ctr&quot; 中的 &quot; _&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\d</b></td>\n   <td>与任何十进制数字匹配。</td>\n   <td>\\d</td>\n   <td>&quot;4 = IV&quot; 中的 &quot;4&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\D</b></td>\n   <td>匹配不是十进制数的任意字符。</td>\n   <td>\\D</td>\n   <td>&quot;4 = IV&quot; 中的 &quot; &quot;、 &quot;=&quot;、 &quot; &quot;、 &quot;I&quot; 和 &quot;V&quot;</td>\n  </tr> \n </tbody>\n</table> \n<h3>定位点</h3> \n<p>定位点或原子零宽度断言会使匹配成功或失败，具体取决于字符串中的当前位置，但它们不会使引擎在字符串中前进或使用字符。</p> \n<p>下表列出了定位点：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%;\">断言</th>\n   <th style=\"width:40%;\">描述</th>\n   <th style=\"width:20%;\">模式</th>\n   <th style=\"width:30%;\">匹配</th>\n  </tr> \n  <tr>\n   <td><b>^</b></td>\n   <td>匹配必须从字符串或一行的开头开始。</td>\n   <td>^\\d{3}</td>\n   <td>&quot;567-777-&quot; 中的 &quot;567&quot;</td>\n  </tr> \n  <tr>\n   <td><b>$</b></td>\n   <td>匹配必须出现在字符串的末尾或出现在行或字符串末尾的 <b>\\n</b> 之前。</td>\n   <td>-\\d{4}$</td>\n   <td>&quot;8-12-2012&quot; 中的 &quot;-2012&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\A</b></td>\n   <td>匹配必须出现在字符串的开头。</td>\n   <td>\\A\\w{4}</td>\n   <td>&quot;Code-007-&quot; 中的 &quot;Code&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\Z</b></td>\n   <td>匹配必须出现在字符串的末尾或出现在字符串末尾的 <b>\\n</b> 之前。</td>\n   <td>-\\d{3}\\Z</td>\n   <td>&quot;Bond-901-007&quot; 中的 &quot;-007&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\z</b></td>\n   <td>匹配必须出现在字符串的末尾。</td>\n   <td>-\\d{3}\\z</td>\n   <td>&quot;-901-333&quot; 中的 &quot;-333&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\G</b></td>\n   <td>匹配必须出现在上一个匹配结束的地方。</td>\n   <td>\\\\G\\(\\d\\)</td>\n   <td>&quot;(1)(3)(5)[7](9)&quot; 中的 &quot;(1)&quot;、 &quot;(3)&quot; 和 &quot;(5)&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\b</b></td>\n   <td>匹配必须出现在 <b>\\w</b>（字母数字）和 <b>\\W</b>（非字母数字）字符之间的边界上。</td>\n   <td>\\w</td>\n   <td>&quot;Room#1&quot; 中的 &quot;R&quot;、 &quot;o&quot;、 &quot;m&quot; 和 &quot;1&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\B</b></td>\n   <td>匹配不得出现在 <b>\\b</b> 边界上。</td>\n   <td>\\Bend\\w*\\b</td>\n   <td>&quot;end sends endure lender&quot; 中的 &quot;ends&quot; 和 &quot;ender&quot;</td>\n  </tr> \n </tbody>\n</table> \n<h3>分组构造</h3> \n<p>分组构造描述了正则表达式的子表达式，通常用于捕获输入字符串的子字符串。</p> \n<p>下表列出了分组构造：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th>分组构造</th>\n   <th>描述</th>\n   <th>模式</th>\n   <th>匹配</th>\n  </tr> \n  <tr>\n   <td><b>( subexpression )</b></td>\n   <td>捕获匹配的子表达式并将其分配到一个从零开始的序号中。</td>\n   <td>(\\w)\\1</td>\n   <td>&quot;deep&quot; 中的 &quot;ee&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?&lt; name &gt;subexpression)</b></td>\n   <td>将匹配的子表达式捕获到一个命名组中。</td>\n   <td>(?&lt; double&gt;\\w)\\k&lt; double&gt;</td>\n   <td>&quot;deep&quot; 中的 &quot;ee&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?&lt; name1 -name2 &gt;subexpression)</b></td>\n   <td>定义平衡组定义。</td>\n   <td>(((?\'Open\'\\()[^\\(\\)]*)+((?\'Close-Open\'\\))[^\\(\\)]*)+)*(?(Open)(?!))$</td>\n   <td>&quot;3+2^((1-3)*(3-1))&quot; 中的 &quot;((1-3)*(3-1))&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?: subexpression)</b></td>\n   <td>定义非捕获组。</td>\n   <td>Write(?:Line)?</td>\n   <td>&quot;Console.WriteLine()&quot; 中的 &quot;WriteLine&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?imnsx-imnsx:subexpression)</b></td>\n   <td>应用或禁用 <i>subexpression</i> 中指定的选项。 </td>\n   <td>A\\d{2}(?i:\\w+)\\b</td>\n   <td>&quot;A12xl A12XL a12xl&quot; 中的 &quot;A12xl&quot; 和 &quot;A12XL&quot; </td>\n  </tr> \n  <tr>\n   <td><b>(?= subexpression)</b></td>\n   <td>零宽度正预测先行断言。</td>\n   <td>\\w+(?=\\.)</td>\n   <td>&quot;He is. The dog ran. The sun is out.&quot; 中的 &quot;is&quot;、 &quot;ran&quot; 和 &quot;out&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?! subexpression)</b></td>\n   <td>零宽度负预测先行断言。</td>\n   <td>\\b(?!un)\\w+\\b</td>\n   <td>&quot;unsure sure unity used&quot; 中的 &quot;sure&quot; 和 &quot;used&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?&lt; =subexpression)</b></td>\n   <td>零宽度正回顾后发断言。</td>\n   <td>(?&lt;=19)\\d{2}\\b</td>\n   <td>&quot;1851 1999 1950 1905 2003&quot; 中的 &quot;99&quot;、&quot;50&quot;和 &quot;05&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?&lt; ! subexpression)</b></td>\n   <td>零宽度负回顾后发断言。</td>\n   <td>(?&lt; !19)\\d{2}\\b</td>\n   <td>&quot;end sends endure lender&quot; 中的 &quot;ends&quot; 和 &quot;ender&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?&gt; subexpression)</b></td>\n   <td>非回溯（也称为&quot;贪婪&quot;）子表达式。</td>\n   <td>[13579](?&gt;A+B+)</td>\n   <td>&quot;1ABB 3ABBC 5AB 5AC&quot; 中的 &quot;1ABB&quot;、 &quot;3ABB&quot; 和 &quot;5AB&quot;</td>\n  </tr> \n </tbody>\n</table> \n<h3>实例</h3> \n<pre>\r\nusing System;\r\nusing System.Text.RegularExpressions;\r\n\r\npublic class Example\r\n{\r\n   public static void Main()\r\n   {\r\n      string input = &quot;1851 1999 1950 1905 2003&quot;;\r\n      string pattern = @&quot;(?&lt;=19)\\d{2}\\b&quot;;\r\n\r\n      foreach (Match match in Regex.Matches(input, pattern))\r\n         Console.WriteLine(match.Value);\r\n   }\r\n}\r\n</pre>\n<p> <a target=\"_blank\" href=\"http://www.runoob.com/try/runcode.php?filename=regular_demo&amp;type=cs\" class=\"showbtn\">运行实例 &raquo;</a> </p> \n<h3>限定符</h3> \n<p>限定符指定在输入字符串中必须存在上一个元素（可以是字符、组或字符类）的多少个实例才能出现匹配项。 限定符包括下表中列出的语言元素。</p> \n<p>下表列出了限定符：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%;\">限定符</th>\n   <th style=\"width:40%;\">描述</th>\n   <th style=\"width:20%;\">模式</th>\n   <th style=\"width:30%;\">匹配</th>\n  </tr> \n  <tr>\n   <td><b>*</b></td>\n   <td>匹配上一个元素零次或多次。</td>\n   <td>\\d*\\.\\d</td>\n   <td>&quot;.0&quot;、 &quot;19.9&quot;、 &quot;219.9&quot;</td>\n  </tr> \n  <tr>\n   <td><b>+</b></td>\n   <td>匹配上一个元素一次或多次。</td>\n   <td>&quot;be+&quot;</td>\n   <td>&quot;been&quot; 中的 &quot;bee&quot;， &quot;bent&quot; 中的 &quot;be&quot;</td>\n  </tr> \n  <tr>\n   <td><b>?</b></td>\n   <td>匹配上一个元素零次或一次。</td>\n   <td>&quot;rai?n&quot;</td>\n   <td>&quot;ran&quot;、 &quot;rain&quot;</td>\n  </tr> \n  <tr>\n   <td><b>{ n }</b></td>\n   <td>匹配上一个元素恰好 n 次。</td>\n   <td>&quot;,\\d{3}&quot;</td>\n   <td>&quot;1,043.6&quot; 中的 &quot;,043&quot;， &quot;9,876,543,210&quot; 中的 &quot;,876&quot;、 &quot;,543&quot; 和 &quot;,210&quot;</td>\n  </tr> \n  <tr>\n   <td><b>{ n ,}</b></td>\n   <td>匹配上一个元素至少 n 次。</td>\n   <td>&quot;\\d{2,}&quot;</td>\n   <td>&quot;166&quot;、 &quot;29&quot;、 &quot;1930&quot;</td>\n  </tr> \n  <tr>\n   <td><b>{ n , m }</b></td>\n   <td>匹配上一个元素至少 n 次，但不多于 m 次。</td>\n   <td>&quot;\\d{3,5}&quot;</td>\n   <td>&quot;166&quot;， &quot;17668&quot;， &quot;193024&quot; 中的 &quot;19302&quot; </td>\n  </tr> \n  <tr>\n   <td><b>*?</b></td>\n   <td>匹配上一个元素零次或多次，但次数尽可能少。</td>\n   <td>\\d*?\\.\\d</td>\n   <td>&quot;.0&quot;、 &quot;19.9&quot;、 &quot;219.9&quot;</td>\n  </tr> \n  <tr>\n   <td><b>+?</b></td>\n   <td>匹配上一个元素一次或多次，但次数尽可能少。</td>\n   <td>&quot;be+?&quot;</td>\n   <td>&quot;been&quot; 中的 &quot;be&quot;， &quot;bent&quot; 中的 &quot;be&quot;</td>\n  </tr> \n  <tr>\n   <td><b>??</b></td>\n   <td>匹配上一个元素零次或一次，但次数尽可能少。</td>\n   <td>&quot;rai??n&quot;</td>\n   <td>&quot;ran&quot;、 &quot;rain&quot; </td>\n  </tr> \n  <tr>\n   <td><b>{ n }?</b></td>\n   <td>匹配前导元素恰好 n 次。</td>\n   <td>&quot;,\\d{3}?&quot;</td>\n   <td>&quot;1,043.6&quot; 中的 &quot;,043&quot;， &quot;9,876,543,210&quot; 中的 &quot;,876&quot;、 &quot;,543&quot; 和 &quot;,210&quot;</td>\n  </tr> \n  <tr>\n   <td><b>{ n ,}?</b></td>\n   <td>匹配上一个元素至少 n 次，但次数尽可能少。</td>\n   <td>&quot;\\d{2,}?&quot;</td>\n   <td>&quot;166&quot;、 &quot;29&quot; 和 &quot;1930&quot;</td>\n  </tr> \n  <tr>\n   <td><b>{ n , m }?</b></td>\n   <td>匹配上一个元素的次数介于 n 和 m 之间，但次数尽可能少。</td>\n   <td>&quot;\\d{3,5}?&quot;</td>\n   <td>&quot;166&quot;， &quot;17668&quot;， &quot;193024&quot; 中的 &quot;193&quot; 和 &quot;024&quot; </td>\n  </tr> \n </tbody>\n</table> \n<h3>反向引用构造</h3> \n<p>反向引用允许在同一正则表达式中随后标识以前匹配的子表达式。</p> \n<p>下表列出了反向引用构造：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:15%;\">反向引用构造</th>\n   <th style=\"width:40%;\">描述</th>\n   <th style=\"width:25%;\">模式</th>\n   <th style=\"width:20%;\">匹配</th>\n  </tr> \n  <tr>\n   <td><b>\\ number</b></td>\n   <td>反向引用。 匹配编号子表达式的值。</td>\n   <td>(\\w)\\1</td>\n   <td>&quot;seek&quot; 中的 &quot;ee&quot;</td>\n  </tr> \n  <tr>\n   <td><b>\\k&lt; name &gt;</b></td>\n   <td>命名反向引用。 匹配命名表达式的值。</td>\n   <td>(?&lt; char&gt;\\w)\\k&lt; char&gt;</td>\n   <td>&quot;seek&quot; 中的 &quot;ee&quot;</td>\n  </tr> \n </tbody>\n</table> \n<h3>备用构造</h3> \n<p>备用构造用于修改正则表达式以启用 either/or 匹配。</p> \n<p>下表列出了备用构造：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:25%;\">备用构造</th>\n   <th style=\"width:30%;\">描述</th>\n   <th style=\"width:25%;\">模式</th>\n   <th style=\"width:20%;\">匹配</th>\n  </tr> \n  <tr>\n   <td><b>|</b></td>\n   <td>匹配以竖线 (|) 字符分隔的任何一个元素。</td>\n   <td>th(e|is|at)</td>\n   <td>&quot;this is the day. &quot; 中的 &quot;the&quot; 和 &quot;this&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?( expression )yes | no )</b></td>\n   <td>如果正则表达式模式由 expression 匹配指定，则匹配 <i>yes</i>；否则匹配可选的 <i>no</i> 部分。 expression 被解释为零宽度断言。</td>\n   <td>(?(A)A\\d{2}\\b|\\b\\d{3}\\b)</td>\n   <td>&quot;A10 C103 910&quot; 中的 &quot;A10&quot; 和 &quot;910&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?( name )yes | no )</b></td>\n   <td>如果 name 或已命名或已编号的捕获组具有匹配，则匹配 <i>yes</i>；否则匹配可选的 <i>no</i>。</td>\n   <td>(?&lt; quoted&gt;&quot;)?(?(quoted).+?&quot;|\\S+\\s)</td>\n   <td>&quot;Dogs.jpg &quot;Yiska playing.jpg&quot;&quot; 中的 Dogs.jpg 和 &quot;Yiska playing.jpg&quot;</td>\n  </tr> \n </tbody>\n</table> \n<h3>替换</h3> \n<p>替换是替换模式中使用的正则表达式。</p> \n<p>下表列出了用于替换的字符：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:10%;\">字符</th>\n   <th style=\"width:30%;\">描述</th>\n   <th style=\"width:30%;\">模式</th>\n   <th style=\"width:10%;\">替换模式</th>\n   <th style=\"width:15%;\">输入字符串</th>\n   <th style=\"width:15%;\">结果字符串</th>\n  </tr> \n  <tr>\n   <td><b>$</b>number</td>\n   <td>替换按组 <i>number</i> 匹配的子字符串。</td>\n   <td>\\b(\\w+)(\\s)(\\w+)\\b</td>\n   <td>$3$2$1</td>\n   <td>&quot;one two&quot;</td>\n   <td>&quot;two one&quot;</td>\n  </tr> \n  <tr>\n   <td><b>${</b>name<b>}</b></td>\n   <td>替换按命名组 <i>name</i> 匹配的子字符串。</td>\n   <td>\\b(?&lt; word1&gt;\\w+)(\\s)(?&lt; word2&gt;\\w+)\\b</td>\n   <td>${word2} ${word1}</td>\n   <td>&quot;one two&quot;</td>\n   <td>&quot;two one&quot;</td>\n  </tr> \n  <tr>\n   <td><b>$$</b></td>\n   <td>替换字符&quot;$&quot;。</td>\n   <td>\\b(\\d+)\\s?USD</td>\n   <td>$$$1</td>\n   <td>&quot;103 USD&quot;</td>\n   <td>&quot;$103&quot;</td>\n  </tr> \n  <tr>\n   <td><b>$&amp;</b></td>\n   <td>替换整个匹配项的一个副本。</td>\n   <td>(\\$*(\\d*(\\.+\\d+)?){1})</td>\n   <td>**$&amp;</td>\n   <td>&quot;$1.30&quot;</td>\n   <td>&quot;**$1.30**&quot;</td>\n  </tr> \n  <tr>\n   <td><b>$`</b></td>\n   <td>替换匹配前的输入字符串的所有文本。</td>\n   <td>B+</td>\n   <td>$`</td>\n   <td>&quot;AABBCC&quot;</td>\n   <td>&quot;AAAACC&quot;</td>\n  </tr> \n  <tr>\n   <td><b>$\'</b></td>\n   <td>替换匹配后的输入字符串的所有文本。</td>\n   <td>B+</td>\n   <td>$\'</td>\n   <td>&quot;AABBCC&quot;</td>\n   <td>&quot;AACCCC&quot;</td>\n  </tr> \n  <tr>\n   <td><b>$+</b></td>\n   <td>替换最后捕获的组。</td>\n   <td>B+(C+)</td>\n   <td>$+</td>\n   <td>&quot;AABBCCDD&quot;</td>\n   <td>AACCDD</td>\n  </tr> \n  <tr>\n   <td><b>$_</b></td>\n   <td>替换整个输入字符串。</td>\n   <td>B+</td>\n   <td>$_</td>\n   <td>&quot;AABBCC&quot;</td>\n   <td>&quot;AAAABBCCCC&quot;</td>\n  </tr> \n </tbody>\n</table> \n<h3>杂项构造</h3> \n<p>下表列出了各种杂项构造：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:20%;\">构造</th>\n   <th style=\"width:50%;\">描述</th>\n   <th style=\"width:30%;\">实例</th>\n  </tr> \n  <tr>\n   <td><b>(?imnsx-imnsx)</b></td>\n   <td>在模式中间对诸如不区分大小写这样的选项进行设置或禁用。</td>\n   <td>\\bA(?i)b\\w+\\b 匹配 &quot;ABA Able Act&quot; 中的 &quot;ABA&quot; 和 &quot;Able&quot;</td>\n  </tr> \n  <tr>\n   <td><b>(?#注释)</b></td>\n   <td>内联注释。该注释在第一个右括号处终止。</td>\n   <td>\\bA(?#匹配以A开头的单词)\\w+\\b</td>\n  </tr> \n  <tr>\n   <td><b># </b>[行尾]</td>\n   <td>该注释以非转义的 # 开头，并继续到行的结尾。</td>\n   <td>(?x)\\bA\\w+\\b#匹配以 A 开头的单词</td>\n  </tr> \n </tbody>\n</table> \n<br /> \n<h2 class=\"tutheader\">Regex 类</h2> \n<p>Regex 类用于表示一个正则表达式。</p> \n<p>下表列出了 Regex 类中一些常用的方法：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:5%;\">序号</th>\n   <th>方法 &amp; 描述</th>\n  </tr> \n  <tr>\n   <td>1</td>\n   <td><b>public bool IsMatch( string input ) </b><br />指示 Regex 构造函数中指定的正则表达式是否在指定的输入字符串中找到匹配项。</td>\n  </tr> \n  <tr>\n   <td>2</td>\n   <td><b>public bool IsMatch( string input, int startat ) </b><br />指示 Regex 构造函数中指定的正则表达式是否在指定的输入字符串中找到匹配项，从字符串中指定的开始位置开始。</td>\n  </tr> \n  <tr>\n   <td>3</td>\n   <td><b>public static bool IsMatch( string input, string pattern ) </b><br />指示指定的正则表达式是否在指定的输入字符串中找到匹配项。</td>\n  </tr> \n  <tr>\n   <td>4</td>\n   <td><b>public MatchCollection Matches( string input ) </b><br />在指定的输入字符串中搜索正则表达式的所有匹配项。</td>\n  </tr> \n  <tr>\n   <td>5</td>\n   <td><b>public string Replace( string input, string replacement ) </b><br />在指定的输入字符串中，把所有匹配正则表达式模式的所有匹配的字符串替换为指定的替换字符串。</td>\n  </tr> \n  <tr>\n   <td>6</td>\n   <td><b>public string[] Split( string input ) </b><br />把输入字符串分割为子字符串数组，根据在 Regex 构造函数中指定的正则表达式模式定义的位置进行分割。</td>\n  </tr> \n </tbody>\n</table> \n<p>如需了解 Regex 类的完整的属性列表，请参阅微软的 C# 文档。</p> \n<h2 class=\"tutheader\">实例 1</h2> \n<p>下面的实例匹配了以 \'S\' 开头的单词：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace RegExApplication\r\n{\r\n   class Program\r\n   {\r\n      private static void showMatch(string text, string expr)\r\n      {\r\n         Console.WriteLine(&quot;The Expression: &quot; + expr);\r\n         MatchCollection mc = Regex.Matches(text, expr);\r\n         foreach (Match m in mc)\r\n         {\r\n            Console.WriteLine(m);\r\n         }\r\n      }\r\n      static void Main(string[] args)\r\n      {\r\n         string str = &quot;A Thousand Splendid Suns&quot;;\r\n\r\n         Console.WriteLine(&quot;Matching words that start with \'S\': &quot;);\r\n         showMatch(str, @&quot;\\bS\\S*&quot;);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nMatching words that start with \'S\':\r\nThe Expression: \\bS\\S*\r\nSplendid\r\nSuns\r\n</pre> \n<h2 class=\"tutheader\">实例 2</h2> \n<p>下面的实例匹配了以 \'m\' 开头以 \'e\' 结尾的单词：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace RegExApplication\r\n{\r\n   class Program\r\n   {\r\n      private static void showMatch(string text, string expr)\r\n      {\r\n         Console.WriteLine(&quot;The Expression: &quot; + expr);\r\n         MatchCollection mc = Regex.Matches(text, expr);\r\n         foreach (Match m in mc)\r\n         {\r\n            Console.WriteLine(m);\r\n         }\r\n      }\r\n      static void Main(string[] args)\r\n      {\r\n         string str = &quot;make maze and manage to measure it&quot;;\r\n\r\n         Console.WriteLine(&quot;Matching words start with \'m\' and ends with \'e\':&quot;);\r\n         showMatch(str, @&quot;\\bm\\S*e\\b&quot;);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nMatching words start with \'m\' and ends with \'e\':\r\nThe Expression: \\bm\\S*e\\b\r\nmake\r\nmaze\r\nmanage\r\nmeasure\r\n</pre> \n<h2 class=\"tutheader\">实例 3</h2> \n<p>下面的实例替换掉多余的空格：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Text.RegularExpressions;\r\n\r\nnamespace RegExApplication\r\n{\r\n   class Program\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         string input = &quot;Hello   World   &quot;;\r\n         string pattern = &quot;\\\\s+&quot;;\r\n         string replacement = &quot; &quot;;\r\n         Regex rgx = new Regex(pattern);\r\n         string result = rgx.Replace(input, replacement);\r\n\r\n         Console.WriteLine(&quot;Original String: {0}&quot;, input);\r\n         Console.WriteLine(&quot;Replacement String: {0}&quot;, result);    \r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nOriginal String: Hello   World   \r\nReplacement String: Hello World   \r\n</pre>', null, 'C# 正则表达式|定义正则表达式|Regex 类|实例 1|实例 2|实例 3|');
INSERT INTO `schoolcontent` VALUES ('351', '354', '<h1>C# <span class=\"color_h1\">异常处理</span></h1> \n<div class=\"tutintro\"> \n <p>异常是在程序执行期间出现的问题。C# 中的异常是对程序运行时出现的特殊情况的一种响应，比如尝试除以零。</p> \n <p>异常提供了一种把程序控制权从某个部分转移到另一个部分的方式。C# 异常处理时建立在四个关键词之上的：<b>try</b>、<b>catch</b>、<b>finally</b> 和 <b>throw</b>。</p> \n <ul class=\"list\"> \n  <li><b>try</b>：一个 try 块标识了一个将被激活的特定的异常的代码块。后跟一个或多个 catch 块。</li> \n  <li><b>catch</b>：程序通过异常处理程序捕获异常。catch 关键字表示异常的捕获。</li> \n  <li><b>finally</b>：finally 块用于执行给定的语句，不管异常是否被抛出都会执行。例如，如果您打开一个文件，不管是否出现异常文件都要被关闭。</li> \n  <li><b>throw</b>：当问题出现时，程序抛出一个异常。使用 throw 关键字来完成。</li> \n </ul> \n</div> \n<h2 class=\"tutheader\">语法</h2> \n<p>假设一个块将出现异常，一个方法使用 try 和 catch 关键字捕获异常。try/catch 块内的代码为受保护的代码，使用 try/catch 语法如下所示：</p> \n<pre class=\"prettyprint\">\r\ntry\r\n{\r\n   // 引起异常的语句\r\n}\r\ncatch( ExceptionName e1 )\r\n{\r\n   // 错误处理代码\r\n}\r\ncatch( ExceptionName e2 )\r\n{\r\n   // 错误处理代码\r\n}\r\ncatch( ExceptionName eN )\r\n{\r\n   // 错误处理代码\r\n}\r\nfinally\r\n{\r\n   // 要执行的语句\r\n}\r\n</pre> \n<p>您可以列出多个 catch 语句捕获不同类型的异常，以防 try 块在不同的情况下生成多个异常。</p> \n<h2 class=\"tutheader\">C# 中的异常类</h2> \n<p>C# 异常是使用类来表示的。C# 中的异常类主要是直接或间接地派生于 <b>System.Exception</b> 类。<b>System.ApplicationException</b> 和 <b>System.SystemException</b> 类是派生于 System.Exception 类的异常类。</p> \n<p><b>System.ApplicationException</b> 类支持由应用程序生成的异常。所以程序员定义的异常都应派生自该类。</p> \n<p><b>System.SystemException</b> 类是所有预定义的系统异常的基类。</p> \n<p>下表列出了一些派生自 Sytem.SystemException 类的预定义的异常类：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:40%;\">异常类</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>System.IO.IOException</td>\n   <td>处理 I/O 错误。</td>\n  </tr> \n  <tr>\n   <td>System.IndexOutOfRangeException</td>\n   <td>处理当方法指向超出范围的数组索引时生成的错误。</td>\n  </tr> \n  <tr>\n   <td>System.ArrayTypeMismatchException</td>\n   <td>处理当数组类型不匹配时生成的错误。</td>\n  </tr> \n  <tr>\n   <td>System.NullReferenceException</td>\n   <td>处理当依从一个空对象时生成的错误。</td>\n  </tr> \n  <tr>\n   <td>System.DivideByZeroException</td>\n   <td>处理当除以零时生成的错误。</td>\n  </tr> \n  <tr>\n   <td>System.InvalidCastException</td>\n   <td>处理在类型转换期间生成的错误。</td>\n  </tr> \n  <tr>\n   <td>System.OutOfMemoryException</td>\n   <td>处理空闲内存不足生成的错误。</td>\n  </tr> \n  <tr>\n   <td>System.StackOverflowException</td>\n   <td>处理栈溢出生成的错误。</td>\n  </tr> \n </tbody>\n</table> \n<h2 class=\"tutheader\">异常处理</h2> \n<p>C# 以 try 和 catch 块的形式提供了一种结构化的异常处理方案。使用这些块，把核心程序语句与错误处理语句分离开。</p> \n<p>这些错误处理块是使用 <b>try</b>、<b>catch</b> 和 <b>finally</b> 关键字实现的。下面是一个当除以零时抛出异常的实例：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace ErrorHandlingApplication\r\n{\r\n    class DivNumbers\r\n    {\r\n        int result;\r\n        DivNumbers()\r\n        {\r\n            result = 0;\r\n        }\r\n        public void division(int num1, int num2)\r\n        {\r\n            try\r\n            {\r\n                result = num1 / num2;\r\n            }\r\n            catch (DivideByZeroException e)\r\n            {\r\n                Console.WriteLine(&quot;Exception caught: {0}&quot;, e);\r\n            }\r\n            finally\r\n            {\r\n                Console.WriteLine(&quot;Result: {0}&quot;, result);\r\n            }\r\n\r\n        }\r\n        static void Main(string[] args)\r\n        {\r\n            DivNumbers d = new DivNumbers();\r\n            d.division(25, 0);\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nException caught: System.DivideByZeroException: Attempted to divide by zero. \r\nat ...\r\nResult: 0\r\n</pre> \n<h2 class=\"tutheader\">创建用户自定义异常</h2> \n<p>您也可以定义自己的异常。用户自定义的异常类是派生自 <b>ApplicationException</b> 类。下面的实例演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace UserDefinedException\r\n{\r\n   class TestTemperature\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Temperature temp = new Temperature();\r\n         try\r\n         {\r\n            temp.showTemp();\r\n         }\r\n         catch(TempIsZeroException e)\r\n         {\r\n            Console.WriteLine(&quot;TempIsZeroException: {0}&quot;, e.Message);\r\n         }\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\npublic class TempIsZeroException: ApplicationException\r\n{\r\n   public TempIsZeroException(string message): base(message)\r\n   {\r\n   }\r\n}\r\npublic class Temperature\r\n{\r\n   int temperature = 0;\r\n   public void showTemp()\r\n   {\r\n      if(temperature == 0)\r\n      {\r\n         throw (new TempIsZeroException(&quot;Zero Temperature found&quot;));\r\n      }\r\n      else\r\n      {\r\n         Console.WriteLine(&quot;Temperature: {0}&quot;, temperature);\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nTempIsZeroException: Zero Temperature found\r\n</pre> \n<h2 class=\"tutheader\">抛出对象</h2> \n<p>如果异常是直接或间接派生自 <b>System.Exception</b> 类，您可以抛出一个对象。您可以在 catch 块中使用 throw 语句来抛出当前的对象，如下所示：</p> \n<pre class=\"prettyprint\">\r\nCatch(Exception e)\r\n{\r\n   ...\r\n   Throw e\r\n}\r\n</pre>', null, 'C# 异常处理|语法|C# 中的异常类|异常处理|创建用户自定义异常|抛出对象|');
INSERT INTO `schoolcontent` VALUES ('352', '355', '<h1>C# <span class=\"color_h1\">文件的输入与输出</span></h1> \n<div class=\"tutintro\"> \n <p>一个 <b>文件</b> 是一个存储在磁盘中带有指定名称和目录路径的数据集合。当打开文件进行读写时，它变成一个 <b>流</b>。</p> \n <p>从根本上说，流是通过通信路径传递的字节序列。有两个主要的流：<b>输入流</b> 和 <b>输出流</b>。<b>输入流</b>用于从文件读取数据（读操作），<b>输出流</b>用于向文件写入数据（写操作）。</p> \n</div> \n<h2 class=\"tutheader\">C# I/O 类</h2> \n<p>System.IO 命名空间有各种不同的类，用于执行各种文件操作，如创建和删除文件、读取或写入文件，关闭文件等。</p> \n<p>下表列出了一些 System.IO 命名空间中常用的非抽象类：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:25%;\">I/O 类</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>BinaryReader</td>\n   <td>从二进制流读取原始数据。</td>\n  </tr> \n  <tr>\n   <td>BinaryWriter</td>\n   <td>以二进制格式写入原始数据。</td>\n  </tr> \n  <tr>\n   <td>BufferedStream</td>\n   <td>字节流的临时存储。</td>\n  </tr> \n  <tr>\n   <td>Directory</td>\n   <td>有助于操作目录结构。</td>\n  </tr> \n  <tr>\n   <td>DirectoryInfo</td>\n   <td>用于对目录执行操作。</td>\n  </tr> \n  <tr>\n   <td>DriveInfo</td>\n   <td>提供驱动器的信息。</td>\n  </tr> \n  <tr>\n   <td>File</td>\n   <td>有助于处理文件。</td>\n  </tr> \n  <tr>\n   <td>FileInfo</td>\n   <td>用于对文件执行操作。</td>\n  </tr> \n  <tr>\n   <td>FileStream</td>\n   <td>用于文件中任何位置的读写。</td>\n  </tr> \n  <tr>\n   <td>MemoryStream</td>\n   <td>用于随机访问存储在内存中的数据流。</td>\n  </tr> \n  <tr>\n   <td>Path</td>\n   <td>对路径信息执行操作。</td>\n  </tr> \n  <tr>\n   <td>StreamReader</td>\n   <td>用于从字节流中读取字符。</td>\n  </tr> \n  <tr>\n   <td>StreamWriter</td>\n   <td>用于向一个流中写入字符。</td>\n  </tr> \n  <tr>\n   <td>StringReader</td>\n   <td>用于读取字符串缓冲区。</td>\n  </tr> \n  <tr>\n   <td>StringWriter</td>\n   <td>用于写入字符串缓冲区。</td>\n  </tr> \n </tbody>\n</table> \n<h2 class=\"tutheader\">FileStream 类</h2> \n<p>System.IO 命名空间中的 <b>FileStream</b> 类有助于文件的读写与关闭。该类派生自抽象类 Stream。</p> \n<p>您需要创建一个 <b>FileStream</b> 对象来创建一个新的文件，或打开一个已有的文件。创建 <b>FileStream</b> 对象的语法如下：</p> \n<pre class=\"prettyprint\">\r\nFileStream &lt;object_name&gt; = new FileStream( &lt;file_name&gt;,\r\n&lt;FileMode Enumerator&gt;, &lt;FileAccess Enumerator&gt;, &lt;FileShare Enumerator&gt;);\r\n</pre> \n<p>例如，创建一个 FileStream 对象 <b>F</b> 来读取名为 <b>sample.txt</b> 的文件：</p> \n<pre class=\"prettyprint\">\r\nFileStream F = new FileStream(&quot;sample.txt&quot;, FileMode.Open, FileAccess.Read, FileShare.Read);\r\n</pre> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:20%;\">参数</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>FileMode</td>\n   <td><p><b>FileMode</b> 枚举定义了各种打开文件的方法。FileMode 枚举的成员有：</p> \n    <ul class=\"list\"> \n     <li><b>Append</b>：打开一个已有的文件，并将光标放置在文件的末尾。如果文件不存在，则创建文件。</li> \n     <li><b>Create</b>：创建一个新的文件。如果文件已存在，则删除旧文件，然后创建新文件。</li> \n     <li><b>CreateNew</b>：指定操作系统应创建一个新的文件。如果文件已存在，则抛出异常。</li> \n     <li><b>Open</b>：打开一个已有的文件。如果文件不存在，则抛出异常。</li> \n     <li><b>OpenOrCreate</b>：指定操作系统应打开一个已有的文件。如果文件不存在，则用指定的名称创建一个新的文件打开。</li> \n     <li><b>Truncate</b>：打开一个已有的文件，文件一旦打开，就将被截断为零字节大小。然后我们可以向文件写入全新的数据，但是保留文件的初始创建日期。如果文件不存在，则抛出异常。</li> \n    </ul> </td>\n  </tr> \n  <tr>\n   <td>FileAccess</td>\n   <td><p><b>FileAccess</b> 枚举的成员有：<b>Read</b>、<b>ReadWrite</b> 和 <b>Write</b>。</p> </td>\n  </tr> \n  <tr>\n   <td>FileShare</td>\n   <td><p><b>FileShare</b> 枚举的成员有：</p> \n    <ul class=\"list\"> \n     <li><b>Inheritable</b>：允许文件句柄可由子进程继承。Win32 不直接支持此功能。</li> \n     <li><b>None</b>：谢绝共享当前文件。文件关闭前，打开该文件的任何请求（由此进程或另一进程发出的请求）都将失败。 </li> \n     <li><b>Read</b>：允许随后打开文件读取。如果未指定此标志，则文件关闭前，任何打开该文件以进行读取的请求（由此进程或另一进程发出的请求）都将失败。但是，即使指定了此标志，仍可能需要附加权限才能够访问该文件。</li> \n     <li><b>ReadWrite</b>：允许随后打开文件读取或写入。如果未指定此标志，则文件关闭前，任何打开该文件以进行读取或写入的请求（由此进程或另一进程发出）都将失败。但是，即使指定了此标志，仍可能需要附加权限才能够访问该文件。 </li> \n     <li><b>Write</b>：允许随后打开文件写入。如果未指定此标志，则文件关闭前，任何打开该文件以进行写入的请求（由此进程或另一进过程发出的请求）都将失败。但是，即使指定了此标志，仍可能需要附加权限才能够访问该文件。 </li> \n     <li><b>Delete</b>：允许随后删除文件。</li> \n    </ul> </td>\n  </tr> \n </tbody>\n</table> \n<h2 class=\"tutheader\">实例</h2> \n<p>下面的程序演示了 <b>FileStream</b> 类的用法：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.IO;\r\n\r\nnamespace FileIOApplication\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            FileStream F = new FileStream(&quot;test.dat&quot;, \r\n            FileMode.OpenOrCreate, FileAccess.ReadWrite);\r\n\r\n            for (int i = 1; i &lt;= 20; i++)\r\n            {\r\n                F.WriteByte((byte)i);\r\n            }\r\n\r\n            F.Position = 0;\r\n\r\n            for (int i = 0; i &lt;= 20; i++)\r\n            {\r\n                Console.Write(F.ReadByte() + &quot; &quot;);\r\n            }\r\n            F.Close();\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 -1\r\n</pre> \n<h2 class=\"tutheader\">C# 高级文件操作</h2> \n<p>上面的实例演示了 C# 中简单的文件操作。但是，要充分利用 C# System.IO 类的强大功能，您需要知道这些类常用的属性和方法。</p> \n<p>在下面的章节中，我们将讨论这些类和它们执行的操作。请单击链接详细了解各个部分的知识：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:30%;\">主题</th>\n   <th style=\"width:70%;\">描述</th>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-text-files.html\" title=\"C# 文本文件\">文本文件的读写</a></td>\n   <td>它涉及到文本文件的读写。<b>StreamReader</b> 和 <b>StreamWriter</b> 类有助于完成文本文件的读写。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-binary-files.html\" title=\"C# 二进制文件\">二进制文件的读写</a></td>\n   <td>它涉及到二进制文件的读写。<b>BinaryReader</b> 和 <b>BinaryWriter</b> 类有助于完成二进制文件的读写。</td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-windows-file-system.html\" title=\"C# Windows 文件系统\">Windows 文件系统的操作</a></td>\n   <td>它让 C# 程序员能够浏览并定位 Windows 文件和目录。</td>\n  </tr> \n </tbody>\n</table>', null, 'C# 文件的输入与输出|C# I/O 类|FileStream 类|实例|C# 高级文件操作|');
INSERT INTO `schoolcontent` VALUES ('353', '356', '<h1>C# <span class=\"color_h1\">特性（Attribute）</span></h1> \n<div class=\"tutintro\"> \n <p><b>特性（Attribute）</b>是用于在运行时传递程序中各种元素（比如类、方法、结构、枚举、组件等）的行为信息的声明性标签。您可以通过使用特性向程序添加声明性信息。一个声明性标签是通过放置在它所应用的元素前面的方括号（[ ]）来描述的。</p> \n <p>特性（Attribute）用于添加元数据，如编译器指令和注释、描述、方法、类等其他信息。.Net 框架提供了两种类型的特性：<i>预定义</i>特性和<i>自定义</i>特性。</p> \n</div> \n<h2 class=\"tutheader\">规定特性（Attribute）</h2> \n<p>规定特性（Attribute）的语法如下：</p> \n<pre class=\"prettyprint\">\r\n[attribute(positional_parameters, name_parameter = value, ...)]\r\nelement\r\n</pre> \n<p>特性（Attribute）的名称和值是在方括号内规定的，放置在它所应用的元素之前。positional_parameters 规定必需的信息，name_parameter 规定可选的信息。</p> \n<h2 class=\"tutheader\">预定义特性（Attribute）</h2> \n<p>.Net 框架提供了三种预定义特性：</p> \n<ul class=\"list\"> \n <li>AttributeUsage</li> \n <li>Conditional</li> \n <li>Obsolete</li> \n</ul> \n<h3>AttributeUsage</h3> \n<p>预定义特性 <b>AttributeUsage</b> 描述了如何使用一个自定义特性类。它规定了特性可应用到的项目的类型。</p> \n<p>规定该特性的语法如下：</p> \n<pre class=\"prettyprint\">\r\n[AttributeUsage(\r\n   validon,\r\n   AllowMultiple=allowmultiple,\r\n   Inherited=inherited\r\n)]\r\n</pre> \n<p>其中：</p> \n<ul class=\"list\"> \n <li>参数 validon 规定特性可被放置的语言元素。它是枚举器 <i>AttributeTargets</i> 的值的组合。默认值是 <i> AttributeTargets.All</i>。</li> \n <li>参数 <i>allowmultiple</i>（可选的）为该特性的 <i>AllowMultiple</i> 属性（property）提供一个布尔值。如果为 true，则该特性是多用的。默认值是 false（单用的）。</li> \n <li>参数 <i>inherited</i>（可选的）为该特性的 <i>Inherited</i> 属性（property）提供一个布尔值。如果为 true，则该特性可被派生类继承。默认值是 false（不被继承）。</li> \n</ul> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\n[AttributeUsage(AttributeTargets.Class |\r\nAttributeTargets.Constructor |\r\nAttributeTargets.Field |\r\nAttributeTargets.Method |\r\nAttributeTargets.Property, \r\nAllowMultiple = true)]\r\n</pre> \n<h3>Conditional</h3> \n<p>这个预定义特性标记了一个条件方法，其执行依赖于它顶的预处理标识符。</p> \n<p>它会引起方法调用的条件编译，取决于指定的值，比如 <b>Debug</b> 或 <b> Trace</b>。例如，当调试代码时显示变量的值。</p> \n<p>规定该特性的语法如下：</p> \n<pre class=\"prettyprint\">\r\n[Conditional(\r\n   conditionalSymbol\r\n)]\r\n</pre> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\n[Conditional(&quot;DEBUG&quot;)]\r\n</pre> \n<p>下面的实例演示了该特性：</p> \n<pre class=\"prettyprint\">\r\n#define DEBUG\r\nusing System;\r\nusing System.Diagnostics;\r\npublic class Myclass\r\n{\r\n    [Conditional(&quot;DEBUG&quot;)]\r\n    public static void Message(string msg)\r\n    {\r\n        Console.WriteLine(msg);\r\n    }\r\n}\r\nclass Test\r\n{\r\n    static void function1()\r\n    {\r\n        Myclass.Message(&quot;In Function 1.&quot;);\r\n        function2();\r\n    }\r\n    static void function2()\r\n    {\r\n        Myclass.Message(&quot;In Function 2.&quot;);\r\n    }\r\n    public static void Main()\r\n    {\r\n        Myclass.Message(&quot;In Main function.&quot;);\r\n        function1();\r\n        Console.ReadKey();\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nIn Main function\r\nIn Function 1\r\nIn Function 2\r\n</pre> \n<h3>Obsolete</h3> \n<p>这个预定义特性标记了不应被使用的程序实体。它可以让您通知编译器丢弃某个特定的目标元素。例如，当一个新方法被用在一个类中，但是您仍然想要保持类中的旧方法，您可以通过显示一个应该使用新方法，而不是旧方法的消息，来把它标记为 obsolete（过时的）。</p> \n<p>规定该特性的语法如下：</p> \n<pre class=\"prettyprint\">\r\n[Obsolete(\r\n   message\r\n)]\r\n[Obsolete(\r\n   message,\r\n   iserror\r\n)]\r\n</pre> \n<p>其中：</p> \n<ul class=\"list\"> \n <li>参数 <i>message</i>，是一个字符串，描述项目为什么过时的原因以及该替代使用什么。</li> \n <li>参数 <i>iserror</i>，是一个布尔值。如果该值为 true，编译器应把该项目的使用当作一个错误。默认值是 false（编译器生成一个警告）。</li> \n</ul> \n<p>下面的实例演示了该特性：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\npublic class MyClass\r\n{\r\n   [Obsolete(&quot;Don\'t use OldMethod, use NewMethod instead&quot;, true)]\r\n   static void OldMethod()\r\n   { \r\n      Console.WriteLine(&quot;It is the old method&quot;);\r\n   }\r\n   static void NewMethod()\r\n   { \r\n      Console.WriteLine(&quot;It is the new method&quot;); \r\n   }\r\n   public static void Main()\r\n   {\r\n      OldMethod();\r\n   }\r\n}\r\n</pre> \n<p>当您尝试编译该程序时，编译器会给出一个错误消息说明：</p> \n<pre class=\"result\">\r\n Don\'t use OldMethod, use NewMethod instead\r\n</pre> \n<h2 class=\"tutheader\">创建自定义特性（Attribute）</h2> \n<p>.Net 框架允许创建自定义特性，用于存储声明性的信息，且可在运行时被检索。该信息根据设计标准和应用程序需要，可与任何目标元素相关。</p> \n<p>创建并使用自定义特性包含四个步骤：</p> \n<ul class=\"list\"> \n <li>声明自定义特性</li> \n <li>构建自定义特性</li> \n <li>在目标程序元素上应用自定义特性</li> \n <li>通过反射访问特性</li> \n</ul> \n<p>最后一个步骤包含编写一个简单的程序来读取元数据以便查找各种符号。元数据是用于描述其他数据的数据和信息。该程序应使用反射来在运行时访问特性。我们将在下一章详细讨论这点。</p> \n<h3>声明自定义特性</h3> \n<p>一个新的自定义特性应派生自 <b>System.Attribute</b> 类。例如：</p> \n<pre class=\"prettyprint\">\r\n// 一个自定义特性 BugFix 被赋给类及其成员\r\n[AttributeUsage(AttributeTargets.Class |\r\nAttributeTargets.Constructor |\r\nAttributeTargets.Field |\r\nAttributeTargets.Method |\r\nAttributeTargets.Property,\r\nAllowMultiple = true)]\r\n\r\npublic class DeBugInfo : System.Attribute\r\n</pre> \n<p>在上面的代码中，我们已经声明了一个名为 <i>DeBugInfo</i> 的自定义特性。</p> \n<h3>构建自定义特性</h3> \n<p>让我们构建一个名为 <i>DeBugInfo</i> 的自定义特性，该特性将存储调试程序获得的信息。它存储下面的信息：</p> \n<ul class=\"list\"> \n <li>bug 的代码编号</li> \n <li>辨认该 bug 的开发人员名字</li> \n <li>最后一次审查该代码的日期</li> \n <li>一个存储了开发人员标记的字符串消息</li> \n</ul> \n<p>我们的 <i>DeBugInfo</i> 类将带有三个用于存储前三个信息的私有属性（property）和一个用于存储消息的公有属性（property）。所以 bug 编号、开发人员名字和审查日期将是 DeBugInfo 类的必需的定位（ positional）参数，消息将是一个可选的命名（named）参数。</p> \n<p>每个特性必须至少有一个构造函数。必需的定位（ positional）参数应通过构造函数传递。下面的代码演示了 <i>DeBugInfo</i> 类：</p> \n<pre class=\"prettyprint\">\r\n// 一个自定义特性 BugFix 被赋给类及其成员\r\n[AttributeUsage(AttributeTargets.Class |\r\nAttributeTargets.Constructor |\r\nAttributeTargets.Field |\r\nAttributeTargets.Method |\r\nAttributeTargets.Property,\r\nAllowMultiple = true)]\r\n\r\npublic class DeBugInfo : System.Attribute\r\n{\r\n  private int bugNo;\r\n  private string developer;\r\n  private string lastReview;\r\n  public string message;\r\n\r\n  public DeBugInfo(int bg, string dev, string d)\r\n  {\r\n      this.bugNo = bg;\r\n      this.developer = dev;\r\n      this.lastReview = d;\r\n  }\r\n\r\n  public int BugNo\r\n  {\r\n      get\r\n      {\r\n          return bugNo;\r\n      }\r\n  }\r\n  public string Developer\r\n  {\r\n      get\r\n      {\r\n          return developer;\r\n      }\r\n  }\r\n  public string LastReview\r\n  {\r\n      get\r\n      {\r\n          return lastReview;\r\n      }\r\n  }\r\n  public string Message\r\n  {\r\n      get\r\n      {\r\n          return message;\r\n      }\r\n      set\r\n      {\r\n          message = value;\r\n      }\r\n  }\r\n}\r\n</pre> \n<h3>应用自定义特性</h3> \n<p>通过把特性放置在紧接着它的目标之前，来应用该特性：</p> \n<pre class=\"prettyprint\">\r\n[DeBugInfo(45, &quot;Zara Ali&quot;, &quot;12/8/2012&quot;, Message = &quot;Return type mismatch&quot;)]\r\n[DeBugInfo(49, &quot;Nuha Ali&quot;, &quot;10/10/2012&quot;, Message = &quot;Unused variable&quot;)]\r\nclass Rectangle\r\n{\r\n  // 成员变量\r\n  protected double length;\r\n  protected double width;\r\n  public Rectangle(double l, double w)\r\n  {\r\n      length = l;\r\n      width = w;\r\n  }\r\n  [DeBugInfo(55, &quot;Zara Ali&quot;, &quot;19/10/2012&quot;,\r\n  Message = &quot;Return type mismatch&quot;)]\r\n  public double GetArea()\r\n  {\r\n      return length * width;\r\n  }\r\n  [DeBugInfo(56, &quot;Zara Ali&quot;, &quot;19/10/2012&quot;)]\r\n  public void Display()\r\n  {\r\n      Console.WriteLine(&quot;Length: {0}&quot;, length);\r\n      Console.WriteLine(&quot;Width: {0}&quot;, width);\r\n      Console.WriteLine(&quot;Area: {0}&quot;, GetArea());\r\n  }\r\n}\r\n</pre> \n<p>在下一章中，我们将使用 Reflection 类对象来检索这些信息。</p>', null, 'C# 特性（Attribute）|规定特性（Attribute）|预定义特性（Attribute）|创建自定义特性（Attribute）|');
INSERT INTO `schoolcontent` VALUES ('354', '357', '<h1>C# <span class=\"color_h1\">反射（Reflection）</span></h1> \n<p>反射指程序可以访问、检测和修改它本身状态或行为的一种能力。</p> \n<p>程序集包含模块，而模块包含类型，类型又包含成员。反射则提供了封装程序集、模块和类型的对象。</p> \n<p>您可以使用反射动态地创建类型的实例，将类型绑定到现有对象，或从现有对象中获取类型。然后，可以调用类型的方法或访问其字段和属性。 </p> \n<h3>优缺点</h3> \n<p>优点：</p> \n<ul>\n <li>1、反射提高了程序的灵活性和扩展性。 </li>\n <li>2、降低耦合性，提高自适应能力。 </li>\n <li>3、它允许程序创建和控制任何类的对象，无需提前硬编码目标类。</li>\n</ul> \n<p>缺点：</p> \n<ul>\n <li> 1、性能问题：使用发射基本上是一种解释操作，用于字段和方法接入时要远慢于直接代码。因此发射机制主要应用在对灵活性和拓展性要求很高的系统框架上，普通程序不建议使用。 </li>\n <li>2、使用反射会模糊程序内部逻辑；程序员希望在源代码中看到程序的逻辑，反射却绕过了源代码的技术，因而会带来维护的问题，反射代码比相应的直接代码更复杂。</li>\n</ul> \n<h2 class=\"tutheader\">反射（Reflection）的用途</h2> \n<p>反射（Reflection）有下列用途：</p> \n<ul class=\"list\"> \n <li>它允许在运行时查看属性（attribute）信息。</li> \n <li>它允许审查集合中的各种类型，以及实例化这些类型。</li> \n <li>它允许延迟绑定的方法和属性（property）。</li> \n <li>它允许在运行时创建新类型，然后使用这些类型执行一些任务。</li> \n</ul> \n<h2 class=\"tutheader\">查看元数据</h2> \n<p>我们已经在上面的章节中提到过，使用反射（Reflection）可以查看属性（attribute）信息。</p> \n<p><b>System.Reflection</b> 类的 <b>MemberInfo</b> 对象需要被初始化，用于发现与类相关的属性（attribute）。为了做到这点，您可以定义目标类的一个对象，如下：</p> \n<pre class=\"prettyprint\">\r\nSystem.Reflection.MemberInfo info = typeof(MyClass);\r\n</pre> \n<p>下面的程序演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\n[AttributeUsage(AttributeTargets.All)]\r\npublic class HelpAttribute : System.Attribute\r\n{\r\n   public readonly string Url;\r\n\r\n   public string Topic  // Topic 是一个命名（named）参数\r\n   {\r\n      get\r\n      {\r\n         return topic;\r\n      }\r\n      set\r\n      {\r\n\r\n         topic = value;\r\n      }\r\n   }\r\n\r\n   public HelpAttribute(string url)  // url 是一个定位（positional）参数\r\n   {\r\n      this.Url = url;\r\n   }\r\n\r\n   private string topic;\r\n}\r\n[HelpAttribute(&quot;Information on the class MyClass&quot;)]\r\nclass MyClass\r\n{\r\n}\r\n\r\nnamespace AttributeAppl\r\n{\r\n   class Program\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         System.Reflection.MemberInfo info = typeof(MyClass);\r\n         object[] attributes = info.GetCustomAttributes(true);\r\n         for (int i = 0; i &lt; attributes.Length; i++)\r\n         {\r\n            System.Console.WriteLine(attributes[i]);\r\n         }\r\n         Console.ReadKey();\r\n\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会显示附加到类 <i>MyClass</i> 上的自定义属性：</p> \n<pre class=\"result\">\r\nHelpAttribute\r\n</pre> \n<h2 class=\"tutheader\">实例</h2> \n<p>在本实例中，我们将使用在上一章中创建的 <i>DeBugInfo</i> 属性，并使用反射（Reflection）来读取 <i>Rectangle</i> 类中的元数据。</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Reflection;\r\nnamespace BugFixApplication\r\n{\r\n   // 一个自定义属性 BugFix 被赋给类及其成员\r\n   [AttributeUsage(AttributeTargets.Class |\r\n   AttributeTargets.Constructor |\r\n   AttributeTargets.Field |\r\n   AttributeTargets.Method |\r\n   AttributeTargets.Property,\r\n   AllowMultiple = true)]\r\n\r\n   public class DeBugInfo : System.Attribute\r\n   {\r\n      private int bugNo;\r\n      private string developer;\r\n      private string lastReview;\r\n      public string message;\r\n\r\n      public DeBugInfo(int bg, string dev, string d)\r\n      {\r\n         this.bugNo = bg;\r\n         this.developer = dev;\r\n         this.lastReview = d;\r\n      }\r\n\r\n      public int BugNo\r\n      {\r\n         get\r\n         {\r\n            return bugNo;\r\n         }\r\n      }\r\n      public string Developer\r\n      {\r\n         get\r\n         {\r\n            return developer;\r\n         }\r\n      }\r\n      public string LastReview\r\n      {\r\n         get\r\n         {\r\n            return lastReview;\r\n         }\r\n      }\r\n      public string Message\r\n      {\r\n         get\r\n         {\r\n            return message;\r\n         }\r\n         set\r\n         {\r\n            message = value;\r\n         }\r\n      }\r\n   }\r\n   [DeBugInfo(45, &quot;Zara Ali&quot;, &quot;12/8/2012&quot;,\r\n	Message = &quot;Return type mismatch&quot;)]\r\n   [DeBugInfo(49, &quot;Nuha Ali&quot;, &quot;10/10/2012&quot;,\r\n	Message = &quot;Unused variable&quot;)]\r\n   class Rectangle\r\n   {\r\n      // 成员变量\r\n      protected double length;\r\n      protected double width;\r\n      public Rectangle(double l, double w)\r\n      {\r\n         length = l;\r\n         width = w;\r\n      }\r\n      [DeBugInfo(55, &quot;Zara Ali&quot;, &quot;19/10/2012&quot;,\r\n	   Message = &quot;Return type mismatch&quot;)]\r\n      public double GetArea()\r\n      {\r\n         return length * width;\r\n      }\r\n      [DeBugInfo(56, &quot;Zara Ali&quot;, &quot;19/10/2012&quot;)]\r\n      public void Display()\r\n      {\r\n         Console.WriteLine(&quot;Length: {0}&quot;, length);\r\n         Console.WriteLine(&quot;Width: {0}&quot;, width);\r\n         Console.WriteLine(&quot;Area: {0}&quot;, GetArea());\r\n      }\r\n   }//end class Rectangle  \r\n   \r\n   class ExecuteRectangle\r\n   {\r\n      static void Main(string[] args)\r\n      {\r\n         Rectangle r = new Rectangle(4.5, 7.5);\r\n         r.Display();\r\n         Type type = typeof(Rectangle);\r\n         // 遍历 Rectangle 类的属性\r\n         foreach (Object attributes in type.GetCustomAttributes(false))\r\n         {\r\n            DeBugInfo dbi = (DeBugInfo)attributes;\r\n            if (null != dbi)\r\n            {\r\n               Console.WriteLine(&quot;Bug no: {0}&quot;, dbi.BugNo);\r\n               Console.WriteLine(&quot;Developer: {0}&quot;, dbi.Developer);\r\n               Console.WriteLine(&quot;Last Reviewed: {0}&quot;,\r\n					dbi.LastReview);\r\n               Console.WriteLine(&quot;Remarks: {0}&quot;, dbi.Message);\r\n            }\r\n         }\r\n         \r\n         // 遍历方法属性\r\n         foreach (MethodInfo m in type.GetMethods())\r\n         {\r\n            foreach (Attribute a in m.GetCustomAttributes(true))\r\n            {\r\n               DeBugInfo dbi = (DeBugInfo)a;\r\n               if (null != dbi)\r\n               {\r\n                  Console.WriteLine(&quot;Bug no: {0}, for Method: {1}&quot;,\r\n						dbi.BugNo, m.Name);\r\n                  Console.WriteLine(&quot;Developer: {0}&quot;, dbi.Developer);\r\n                  Console.WriteLine(&quot;Last Reviewed: {0}&quot;,\r\n						dbi.LastReview);\r\n                  Console.WriteLine(&quot;Remarks: {0}&quot;, dbi.Message);\r\n               }\r\n            }\r\n         }\r\n         Console.ReadLine();\r\n      }\r\n   }\r\n}\r\n\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nLength: 4.5\r\nWidth: 7.5\r\nArea: 33.75\r\nBug No: 49\r\nDeveloper: Nuha Ali\r\nLast Reviewed: 10/10/2012\r\nRemarks: Unused variable\r\nBug No: 45\r\nDeveloper: Zara Ali\r\nLast Reviewed: 12/8/2012\r\nRemarks: Return type mismatch\r\nBug No: 55, for Method: GetArea\r\nDeveloper: Zara Ali\r\nLast Reviewed: 19/10/2012\r\nRemarks: Return type mismatch\r\nBug No: 56, for Method: Display\r\nDeveloper: Zara Ali\r\nLast Reviewed: 19/10/2012\r\nRemarks: \r\n</pre>', null, 'C# 反射（Reflection）|反射（Reflection）的用途|查看元数据|实例|');
INSERT INTO `schoolcontent` VALUES ('355', '358', '<h1>C# <span class=\"color_h1\">属性（Property）</span></h1> \n<div class=\"tutintro\"> \n <p><b>属性（Property）</b> 是类（class）、结构（structure）和接口（interface）的命名（named）成员。类或结构中的成员变量或方法称为 <b>域（Field）</b>。属性（Property）是域（Field）的扩展，且可使用相同的语法来访问。它们使用 <b>访问器（accessors）</b> 让私有域的值可被读写或操作。</p> \n <p>属性（Property）不会确定存储位置。相反，它们具有可读写或计算它们值的 <b>访问器（accessors）</b>。</p> \n <p>例如，有一个名为 Student 的类，带有 age、name 和 code 的私有域。我们不能在类的范围以外直接访问这些域，但是我们可以拥有访问这些私有域的属性。</p> \n</div> \n<h2 class=\"tutheader\">访问器（Accessors）</h2> \n<p>属性（Property）的<b>访问器（accessor）</b>包含有助于获取（读取或计算）或设置（写入）属性的可执行语句。访问器（accessor）声明可包含一个 get 访问器、一个 set 访问器，或者同时包含二者。例如：</p> \n<pre class=\"prettyprint\">\r\n// 声明类型为 string 的 Code 属性\r\npublic string Code\r\n{\r\n   get\r\n   {\r\n      return code;\r\n   }\r\n   set\r\n   {\r\n      code = value;\r\n   }\r\n}\r\n\r\n// 声明类型为 string 的 Name 属性\r\npublic string Name\r\n{\r\n   get\r\n   {\r\n     return name;\r\n   }\r\n   set\r\n   {\r\n     name = value;\r\n   }\r\n}\r\n\r\n// 声明类型为 int 的 Age 属性\r\npublic int Age\r\n{ \r\n   get\r\n   {\r\n      return age;\r\n   }\r\n   set\r\n   {\r\n      age = value;\r\n   }\r\n}\r\n</pre> \n<h2 class=\"tutheader\">实例</h2> \n<p>下面的实例演示了属性（Property）的用法：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace tutorialspoint\r\n{\r\n   class Student\r\n   {\r\n\r\n      private string code = &quot;N.A&quot;;\r\n      private string name = &quot;not known&quot;;\r\n      private int age = 0;\r\n\r\n      // 声明类型为 string 的 Code 属性\r\n      public string Code\r\n      {\r\n         get\r\n         {\r\n            return code;\r\n         }\r\n         set\r\n         {\r\n            code = value;\r\n         }\r\n      }\r\n   \r\n      // 声明类型为 string 的 Name 属性\r\n      public string Name\r\n      {\r\n         get\r\n         {\r\n            return name;\r\n         }\r\n         set\r\n         {\r\n            name = value;\r\n         }\r\n      }\r\n\r\n      // 声明类型为 int 的 Age 属性\r\n      public int Age\r\n      {\r\n         get\r\n         {\r\n            return age;\r\n         }\r\n         set\r\n         {\r\n            age = value;\r\n         }\r\n      }\r\n      public override string ToString()\r\n      {\r\n         return &quot;Code = &quot; + Code +&quot;, Name = &quot; + Name + &quot;, Age = &quot; + Age;\r\n      }\r\n    }\r\n    class ExampleDemo\r\n    {\r\n      public static void Main()\r\n      {\r\n         // 创建一个新的 Student 对象\r\n         Student s = new Student();\r\n            \r\n         // 设置 student 的 code、name 和 age\r\n         s.Code = &quot;001&quot;;\r\n         s.Name = &quot;Zara&quot;;\r\n         s.Age = 9;\r\n         Console.WriteLine(&quot;Student Info: {0}&quot;, s);\r\n         // 增加年龄\r\n         s.Age += 1;\r\n         Console.WriteLine(&quot;Student Info: {0}&quot;, s);\r\n         Console.ReadKey();\r\n       }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nStudent Info: Code = 001, Name = Zara, Age = 9\r\nStudent Info: Code = 001, Name = Zara, Age = 10\r\n</pre> \n<h2 class=\"tutheader\">抽象属性（Abstract Properties）</h2> \n<p>抽象类可拥有抽象属性，这些属性应在派生类中被实现。下面的程序说明了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace tutorialspoint\r\n{\r\n   public abstract class Person\r\n   {\r\n      public abstract string Name\r\n      {\r\n         get;\r\n         set;\r\n      }\r\n      public abstract int Age\r\n      {\r\n         get;\r\n         set;\r\n      }\r\n   }\r\n   class Student : Person\r\n   {\r\n\r\n      private string code = &quot;N.A&quot;;\r\n      private string name = &quot;N.A&quot;;\r\n      private int age = 0;\r\n\r\n      // 声明类型为 string 的 Code 属性\r\n      public string Code\r\n      {\r\n         get\r\n         {\r\n            return code;\r\n         }\r\n         set\r\n         {\r\n            code = value;\r\n         }\r\n      }\r\n   \r\n      // 声明类型为 string 的 Name 属性\r\n      public override string Name\r\n      {\r\n         get\r\n         {\r\n            return name;\r\n         }\r\n         set\r\n         {\r\n            name = value;\r\n         }\r\n      }\r\n\r\n      // 声明类型为 int 的 Age 属性\r\n      public override int Age\r\n      {\r\n         get\r\n         {\r\n            return age;\r\n         }\r\n         set\r\n         {\r\n            age = value;\r\n         }\r\n      }\r\n      public override string ToString()\r\n      {\r\n         return &quot;Code = &quot; + Code +&quot;, Name = &quot; + Name + &quot;, Age = &quot; + Age;\r\n      }\r\n   }\r\n   class ExampleDemo\r\n   {\r\n      public static void Main()\r\n      {\r\n         // 创建一个新的 Student 对象\r\n         Student s = new Student();\r\n            \r\n         // 设置 student 的 code、name 和 age\r\n         s.Code = &quot;001&quot;;\r\n         s.Name = &quot;Zara&quot;;\r\n         s.Age = 9;\r\n         Console.WriteLine(&quot;Student Info:- {0}&quot;, s);\r\n         // 增加年龄\r\n         s.Age += 1;\r\n         Console.WriteLine(&quot;Student Info:- {0}&quot;, s);\r\n         Console.ReadKey();\r\n       }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nStudent Info: Code = 001, Name = Zara, Age = 9\r\nStudent Info: Code = 001, Name = Zara, Age = 10\r\n</pre>', null, 'C# 属性（Property）|访问器（Accessors）|实例|抽象属性（Abstract Properties）|');
INSERT INTO `schoolcontent` VALUES ('356', '359', '<h1>C# <span class=\"color_h1\">索引器（Indexer）</span></h1> \n<div class=\"tutintro\"> \n <p><b>索引器（Indexer）</b> 允许一个对象可以像数组一样被索引。当您为类定义一个索引器时，该类的行为就会像一个 <b>虚拟数组（virtual array）</b> 一样。您可以使用数组访问运算符（[ ]）来访问该类的实例。</p> \n</div> \n<h2 class=\"tutheader\">语法</h2> \n<p>一维索引器的语法如下：</p> \n<pre class=\"prettyprint\">\r\nelement-type this[int index] \r\n{\r\n   // get 访问器\r\n   get \r\n   {\r\n      // 返回 index 指定的值\r\n   }\r\n\r\n   // set 访问器\r\n   set \r\n   {\r\n      // 设置 index 指定的值 \r\n   }\r\n}\r\n</pre> \n<h2 class=\"tutheader\">索引器（Indexer）的用途</h2> \n<p>索引器的行为的声明在某种程度上类似于属性（property）。就像属性（property），您可使用 <b>get</b> 和 <b>set</b> 访问器来定义索引器。但是，属性返回或设置一个特定的数据成员，而索引器返回或设置对象实例的一个特定值。换句话说，它把实例数据分为更小的部分，并索引每个部分，获取或设置每个部分。</p> \n<p>定义一个属性（property）包括提供属性名称。索引器定义的时候不带有名称，但带有 <b>this</b> 关键字，它指向对象实例。下面的实例演示了这个概念：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace IndexerApplication\r\n{\r\n   class IndexedNames\r\n   {\r\n      private string[] namelist = new string[size];\r\n      static public int size = 10;\r\n      public IndexedNames()\r\n      {\r\n         for (int i = 0; i &lt; size; i++)\r\n         namelist[i] = &quot;N. A.&quot;;\r\n      }\r\n      public string this[int index]\r\n      {\r\n         get\r\n         {\r\n            string tmp;\r\n\r\n            if( index &gt;= 0 &amp;&amp; index &lt;= size-1 )\r\n            {\r\n               tmp = namelist[index];\r\n            }\r\n            else\r\n            {\r\n               tmp = &quot;&quot;;\r\n            }\r\n\r\n            return ( tmp );\r\n         }\r\n         set\r\n         {\r\n            if( index &gt;= 0 &amp;&amp; index &lt;= size-1 )\r\n            {\r\n               namelist[index] = value;\r\n            }\r\n         }\r\n      }\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         IndexedNames names = new IndexedNames();\r\n         names[0] = &quot;Zara&quot;;\r\n         names[1] = &quot;Riz&quot;;\r\n         names[2] = &quot;Nuha&quot;;\r\n         names[3] = &quot;Asif&quot;;\r\n         names[4] = &quot;Davinder&quot;;\r\n         names[5] = &quot;Sunil&quot;;\r\n         names[6] = &quot;Rubic&quot;;\r\n         for ( int i = 0; i &lt; IndexedNames.size; i++ )\r\n         {\r\n            Console.WriteLine(names[i]);\r\n         }\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nZara\r\nRiz\r\nNuha\r\nAsif\r\nDavinder\r\nSunil\r\nRubic\r\nN. A.\r\nN. A.\r\nN. A.\r\n</pre> \n<h2 class=\"tutheader\">重载索引器（Indexer）</h2> \n<p>索引器（Indexer）可被重载。索引器声明的时候也可带有多个参数，且每个参数可以是不同的类型。没有必要让索引器必须是整型的。C# 允许索引器可以是其他类型，例如，字符串类型。</p> \n<p>下面的实例演示了重载索引器：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace IndexerApplication\r\n{\r\n   class IndexedNames\r\n   {\r\n      private string[] namelist = new string[size];\r\n      static public int size = 10;\r\n      public IndexedNames()\r\n      {\r\n         for (int i = 0; i &lt; size; i++)\r\n         {\r\n          namelist[i] = &quot;N. A.&quot;;\r\n         }\r\n      }\r\n      public string this[int index]\r\n      {\r\n         get\r\n         {\r\n            string tmp;\r\n\r\n            if( index &gt;= 0 &amp;&amp; index &lt;= size-1 )\r\n            {\r\n               tmp = namelist[index];\r\n            }\r\n            else\r\n            {\r\n               tmp = &quot;&quot;;\r\n            }\r\n\r\n            return ( tmp );\r\n         }\r\n         set\r\n         {\r\n            if( index &gt;= 0 &amp;&amp; index &lt;= size-1 )\r\n            {\r\n               namelist[index] = value;\r\n            }\r\n         }\r\n      }\r\n      public int this[string name]\r\n      {\r\n         get\r\n         {\r\n            int index = 0;\r\n            while(index &lt; size)\r\n            {\r\n               if (namelist[index] == name)\r\n               {\r\n                return index;\r\n               }\r\n               index++;\r\n            }\r\n            return index;\r\n         }\r\n\r\n      }\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         IndexedNames names = new IndexedNames();\r\n         names[0] = &quot;Zara&quot;;\r\n         names[1] = &quot;Riz&quot;;\r\n         names[2] = &quot;Nuha&quot;;\r\n         names[3] = &quot;Asif&quot;;\r\n         names[4] = &quot;Davinder&quot;;\r\n         names[5] = &quot;Sunil&quot;;\r\n         names[6] = &quot;Rubic&quot;;\r\n         // 使用带有 int 参数的第一个索引器\r\n         for (int i = 0; i &lt; IndexedNames.size; i++)\r\n         {\r\n            Console.WriteLine(names[i]);\r\n         }\r\n         // 使用带有 string 参数的第二个索引器\r\n         Console.WriteLine(names[&quot;Nuha&quot;]);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nZara\r\nRiz\r\nNuha\r\nAsif\r\nDavinder\r\nSunil\r\nRubic\r\nN. A.\r\nN. A.\r\nN. A.\r\n2\r\n</pre>', null, 'C# 索引器（Indexer）|语法|索引器（Indexer）的用途|重载索引器（Indexer）|');
INSERT INTO `schoolcontent` VALUES ('357', '360', '<h1>C# <span class=\"color_h1\">委托（Delegate）</span></h1> \n<div class=\"tutintro\"> \n <p>C# 中的委托（Delegate）类似于 C 或 C++ 中函数的指针。<b>委托（Delegate）</b> 是存有对某个方法的引用的一种引用类型变量。引用可在运行时被改变。</p> \n <p>委托（Delegate）特别用于实现事件和回调方法。所有的委托（Delegate）都派生自 <b>System.Delegate</b> 类。</p> \n</div> \n<h2 class=\"tutheader\">声明委托（Delegate）</h2> \n<p>委托声明决定了可由该委托引用的方法。委托可指向一个与其具有相同标签的方法。</p> \n<p>例如，假设有一个委托：</p> \n<pre class=\"prettyprint\">\r\npublic delegate int MyDelegate (string s);\r\n</pre> \n<p>上面的委托可被用于引用任何一个带有一个单一的 <i>string</i> 参数的方法，并返回一个 <i>int</i> 类型变量。</p> \n<p>声明委托的语法如下：</p> \n<pre class=\"prettyprint\">\r\ndelegate &lt;return type&gt; &lt;delegate-name&gt; &lt;parameter list&gt;\r\n</pre> \n<h2 class=\"tutheader\">实例化委托（Delegate）</h2> \n<p>一旦声明了委托类型，委托对象必须使用 <b>new</b> 关键字来创建，且与一个特定的方法有关。当创建委托时，传递到 <b>new</b> 语句的参数就像方法调用一样书写，但是不带有参数。例如：</p> \n<pre class=\"prettyprint\">\r\npublic delegate void printString(string s);\r\n...\r\nprintString ps1 = new printString(WriteToScreen);\r\nprintString ps2 = new printString(WriteToFile);\r\n</pre> \n<p>下面的实例演示了委托的声明、实例化和使用，该委托可用于引用带有一个整型参数的方法，并返回一个整型值。</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\ndelegate int NumberChanger(int n);\r\nnamespace DelegateAppl\r\n{\r\n   class TestDelegate\r\n   {\r\n      static int num = 10;\r\n      public static int AddNum(int p)\r\n      {\r\n         num += p;\r\n         return num;\r\n      }\r\n\r\n      public static int MultNum(int q)\r\n      {\r\n         num *= q;\r\n         return num;\r\n      }\r\n      public static int getNum()\r\n      {\r\n         return num;\r\n      }\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         // 创建委托实例\r\n         NumberChanger nc1 = new NumberChanger(AddNum);\r\n         NumberChanger nc2 = new NumberChanger(MultNum);\r\n         // 使用委托对象调用方法\r\n         nc1(25);\r\n         Console.WriteLine(&quot;Value of Num: {0}&quot;, getNum());\r\n         nc2(5);\r\n         Console.WriteLine(&quot;Value of Num: {0}&quot;, getNum());\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nValue of Num: 35\r\nValue of Num: 175\r\n</pre> \n<h2 class=\"tutheader\">委托的多播（Multicasting of a Delegate）</h2> \n<p>委托对象可使用 &quot;+&quot; 运算符进行合并。一个合并委托调用它所合并的两个委托。只有相同类型的委托可被合并。&quot;-&quot; 运算符可用于从合并的委托中移除组件委托。 </p> \n<p>使用委托的这个有用的特点，您可以创建一个委托被调用时要调用的方法的调用列表。这被称为委托的 <b>多播（multicasting）</b>，也叫组播。下面的程序演示了委托的多播：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\ndelegate int NumberChanger(int n);\r\nnamespace DelegateAppl\r\n{\r\n   class TestDelegate\r\n   {\r\n      static int num = 10;\r\n      public static int AddNum(int p)\r\n      {\r\n         num += p;\r\n         return num;\r\n      }\r\n\r\n      public static int MultNum(int q)\r\n      {\r\n         num *= q;\r\n         return num;\r\n      }\r\n      public static int getNum()\r\n      {\r\n         return num;\r\n      }\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         // 创建委托实例\r\n         NumberChanger nc;\r\n         NumberChanger nc1 = new NumberChanger(AddNum);\r\n         NumberChanger nc2 = new NumberChanger(MultNum);\r\n         nc = nc1;\r\n         nc += nc2;\r\n         // 调用多播\r\n         nc(5);\r\n         Console.WriteLine(&quot;Value of Num: {0}&quot;, getNum());\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nValue of Num: 75\r\n</pre> \n<h2>委托（Delegate）的用途</h2> \n<p>下面的实例演示了委托的用法。委托 <i>printString</i> 可用于引用带有一个字符串作为输入的方法，并不返回任何东西。</p> \n<p>我们使用这个委托来调用两个方法，第一个把字符串打印到控制台，第二个把字符串打印到文件：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.IO;\r\n\r\nnamespace DelegateAppl\r\n{\r\n   class PrintString\r\n   {\r\n      static FileStream fs;\r\n      static StreamWriter sw;\r\n      // 委托声明\r\n      public delegate void printString(string s);\r\n\r\n      // 该方法打印到控制台\r\n      public static void WriteToScreen(string str)\r\n      {\r\n         Console.WriteLine(&quot;The String is: {0}&quot;, str);\r\n      }\r\n      // 该方法打印到文件\r\n      public static void WriteToFile(string s)\r\n      {\r\n         fs = new FileStream(&quot;c:\\\\message.txt&quot;,\r\n         FileMode.Append, FileAccess.Write);\r\n         sw = new StreamWriter(fs);\r\n         sw.WriteLine(s);\r\n         sw.Flush();\r\n         sw.Close();\r\n         fs.Close();\r\n      }\r\n      // 该方法把委托作为参数，并使用它调用方法\r\n      public static void sendString(printString ps)\r\n      {\r\n         ps(&quot;Hello World&quot;);\r\n      }\r\n      static void Main(string[] args)\r\n      {\r\n         printString ps1 = new printString(WriteToScreen);\r\n         printString ps2 = new printString(WriteToFile);\r\n         sendString(ps1);\r\n         sendString(ps2);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nThe String is: Hello World\r\n</pre>', null, 'C# 委托（Delegate）|声明委托（Delegate）|实例化委托（Delegate）|委托的多播（Multicasting of a Delegate）|委托（Delegate）的用途|');
INSERT INTO `schoolcontent` VALUES ('358', '361', '<h1>C# <span class=\"color_h1\">事件（Event）</span></h1> \n<div class=\"tutintro\"> \n <p><b>事件（Event）</b> 基本上说是一个用户操作，如按键、点击、鼠标移动等等，或者是一些出现，如系统生成的通知。应用程序需要在事件发生时响应事件。例如，中断。事件是用于进程间通信。</p> \n</div> \n<h2 class=\"tutheader\">通过事件使用委托</h2> \n<p>事件在类中声明且生成，且通过使用同一个类或其他类中的委托与事件处理程序关联。包含事件的类用于发布事件。这被称为 <b>发布器（publisher）</b> 类。其他接受该事件的类被称为 <b>订阅器（subscriber）</b> 类。事件使用 <b>发布-订阅（publisher-subscriber）</b> 模型。</p> \n<p><b>发布器（publisher）</b> 是一个包含事件和委托定义的对象。事件和委托之间的联系也定义在这个对象中。发布器（publisher）类的对象调用这个事件，并通知其他的对象。</p> \n<p><b>订阅器（subscriber）</b> 是一个接受事件并提供事件处理程序的对象。在发布器（publisher）类中的委托调用订阅器（subscriber）类中的方法（事件处理程序）。</p> \n<h2 class=\"tutheader\">声明事件（Event）</h2> \n<p>在类的内部声明事件，首先必须声明该事件的委托类型。例如：</p> \n<pre class=\"prettyprint\">\r\npublic delegate void BoilerLogHandler(string status);\r\n</pre> \n<p>然后，声明事件本身，使用 <b>event</b> 关键字：</p> \n<pre class=\"prettyprint\">\r\n// 基于上面的委托定义事件\r\npublic event BoilerLogHandler BoilerEventLog;\r\n</pre> \n<p>上面的代码定义了一个名为 <i>BoilerLogHandler</i> 的委托和一个名为 <i>BoilerEventLog</i> 的事件，该事件在生成的时候会调用委托。</p> \n<h2 class=\"tutheader\">实例 1</h2> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace SimpleEvent\r\n{\r\n   using System;\r\n\r\n   public class EventTest\r\n   {\r\n      private int value;\r\n\r\n      public delegate void NumManipulationHandler();\r\n\r\n      public event NumManipulationHandler ChangeNum;\r\n\r\n      protected virtual void OnNumChanged()\r\n      {\r\n         if (ChangeNum != null)\r\n         {\r\n            ChangeNum();\r\n         }\r\n         else\r\n         {\r\n            Console.WriteLine(&quot;Event fired!&quot;);\r\n         }\r\n\r\n      }\r\n      public EventTest(int n )\r\n      {\r\n         SetValue(n);\r\n      }\r\n      public void SetValue(int n)\r\n      {\r\n         if (value != n)\r\n         {\r\n            value = n;\r\n            OnNumChanged();\r\n         }\r\n      }\r\n   }\r\n   public class MainClass\r\n   {\r\n      public static void Main()\r\n      {\r\n         EventTest e = new EventTest(5);\r\n         e.SetValue(7);\r\n         e.SetValue(11);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nEvent Fired!\r\nEvent Fired!\r\nEvent Fired!\r\n</pre> \n<h2 class=\"tutheader\">实例 2</h2> \n<p>本实例提供一个简单的用于热水锅炉系统故障排除的应用程序。当维修工程师检查锅炉时，锅炉的温度和压力会随着维修工程师的备注自动记录到日志文件中。</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.IO;\r\n\r\nnamespace BoilerEventAppl\r\n{\r\n\r\n   // boiler 类\r\n   class Boiler\r\n   {\r\n      private int temp;\r\n      private int pressure;\r\n      public Boiler(int t, int p)\r\n      {\r\n         temp = t;\r\n         pressure = p;\r\n      }\r\n\r\n      public int getTemp()\r\n      {\r\n         return temp;\r\n      }\r\n      public int getPressure()\r\n      {\r\n         return pressure;\r\n      }\r\n   }\r\n   // 事件发布器\r\n   class DelegateBoilerEvent\r\n   {\r\n      public delegate void BoilerLogHandler(string status);\r\n\r\n      // 基于上面的委托定义事件\r\n      public event BoilerLogHandler BoilerEventLog;\r\n\r\n      public void LogProcess()\r\n      {\r\n         string remarks = &quot;O. K&quot;;\r\n         Boiler b = new Boiler(100, 12);\r\n         int t = b.getTemp();\r\n         int p = b.getPressure();\r\n         if(t &gt; 150 || t &lt; 80 || p &lt; 12 || p &gt; 15)\r\n         {\r\n            remarks = &quot;Need Maintenance&quot;;\r\n         }\r\n         OnBoilerEventLog(&quot;Logging Info:\\n&quot;);\r\n         OnBoilerEventLog(&quot;Temparature &quot; + t + &quot;\\nPressure: &quot; + p);\r\n         OnBoilerEventLog(&quot;\\nMessage: &quot; + remarks);\r\n      }\r\n\r\n      protected void OnBoilerEventLog(string message)\r\n      {\r\n         if (BoilerEventLog != null)\r\n         {\r\n            BoilerEventLog(message);\r\n         }\r\n      }\r\n   }\r\n   // 该类保留写入日志文件的条款\r\n   class BoilerInfoLogger\r\n   {\r\n      FileStream fs;\r\n      StreamWriter sw;\r\n      public BoilerInfoLogger(string filename)\r\n      {\r\n         fs = new FileStream(filename, FileMode.Append, FileAccess.Write);\r\n         sw = new StreamWriter(fs);\r\n      }\r\n      public void Logger(string info)\r\n      {\r\n         sw.WriteLine(info);\r\n      }\r\n      public void Close()\r\n      {\r\n         sw.Close();\r\n         fs.Close();\r\n      }\r\n   }\r\n   // 事件订阅器\r\n   public class RecordBoilerInfo\r\n   {\r\n      static void Logger(string info)\r\n      {\r\n         Console.WriteLine(info);\r\n      }//end of Logger\r\n\r\n      static void Main(string[] args)\r\n      {\r\n         BoilerInfoLogger filelog = new BoilerInfoLogger(&quot;e:\\\\boiler.txt&quot;);\r\n         DelegateBoilerEvent boilerEvent = new DelegateBoilerEvent();\r\n         boilerEvent.BoilerEventLog += new \r\n         DelegateBoilerEvent.BoilerLogHandler(Logger);\r\n         boilerEvent.BoilerEventLog += new \r\n         DelegateBoilerEvent.BoilerLogHandler(filelog.Logger);\r\n         boilerEvent.LogProcess();\r\n         Console.ReadLine();\r\n         filelog.Close();\r\n      }//end of main\r\n\r\n   }//end of RecordBoilerInfo\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nLogging info:\r\n\r\nTemperature 100\r\nPressure 12\r\n\r\nMessage: O. K\r\n</pre>', null, 'C# 事件（Event）|通过事件使用委托|声明事件（Event）|实例 1|实例 2|');
INSERT INTO `schoolcontent` VALUES ('359', '362', '<h1>C# <span class=\"color_h1\">集合（Collection）</span></h1> \n<div class=\"tutintro\"> \n <p>集合（Collection）类是专门用于数据存储和检索的类。这些类提供了对栈（stack）、队列（queue）、列表（list）和哈希表（hash table）的支持。大多数集合类实现了相同的接口。</p> \n <p>集合（Collection）类服务于不同的目的，如为元素动态分配内存，基于索引访问列表项等等。这些类创建 Object 类的对象的集合。在 C# 中，Object 类是所有数据类型的基类。</p> \n</div> \n<h2 class=\"tutheader\">各种集合类和它们的用法</h2> \n<p>下面是各种常用的 <b>System.Collection</b> 命名空间的类。点击下面的链接查看细节。</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:20%;\">类</th>\n   <th>描述和用法</th>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-arraylist.html\" title=\"C# ArrayList\">动态数组（ArrayList）</a></td>\n   <td>它代表了可被单独<b>索引</b>的对象的有序集合。<p>它基本上可以替代一个数组。但是，与数组不同的是，您可以使用<b>索引</b>在指定的位置添加和移除项目，动态数组会自动重新调整它的大小。它也允许在列表中进行动态内存分配、增加、搜索、排序各项。</p> </td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-hashtable.html\" title=\"C# Hashtable\">哈希表（Hashtable）</a></td>\n   <td>它使用<b>键</b>来访问集合中的元素。<p>当您使用键访问元素时，则使用哈希表，而且您可以识别一个有用的键值。哈希表中的每一项都有一个<b>键/值</b>对。键用于访问集合中的项目。</p></td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-sortedlist.html\" title=\"C# SortedList\">排序列表（SortedList）</a></td>\n   <td>它可以使用<b>键</b>和<b>索引</b>来访问列表中的项。 <p>排序列表是数组和哈希表的组合。它包含一个可使用键或索引访问各项的列表。如果您使用索引访问各项，则它是一个动态数组（ArrayList），如果您使用键访问各项，则它是一个哈希表（Hashtable）。集合中的各项总是按键值排序。</p> </td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-stack.html\" title=\"C# Stack\">堆栈（Stack）</a></td>\n   <td>它代表了一个<b>后进先出</b>的对象集合。<p>当您需要对各项进行后进先出的访问时，则使用堆栈。当您在列表中添加一项，称为<b>推入</b>元素，当您从列表中移除一项时，称为<b>弹出</b>元素。</p></td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-queue.html\" title=\"C# Queue\">队列（Queue）</a></td>\n   <td>它代表了一个<b>先进先出</b>的对象集合。<p>当您需要对各项进行先进先出的访问时，则使用队列。当您在列表中添加一项，称为<b>入队</b>，当您从列表中移除一项时，称为<b>出队</b>。</p></td>\n  </tr> \n  <tr>\n   <td><a href=\"http://www.runoob.com/csharp/csharp-bitarray.html\" title=\"C# BitArray\">点阵列（BitArray）</a></td>\n   <td>它代表了一个使用值 1 和 0 来表示的<b>二进制</b>数组。<p>当您需要存储位，但是事先不知道位数时，则使用点阵列。您可以使用<b>整型索引</b>从点阵列集合中访问各项，索引从零开始。</p></td>\n  </tr> \n </tbody>\n</table>', null, 'C# 集合（Collection）|各种集合类和它们的用法|');
INSERT INTO `schoolcontent` VALUES ('360', '363', '<h1>C# <span class=\"color_h1\">泛型（Generic）</span></h1> \n<div class=\"tutintro\"> \n <p><b>泛型（Generic）</b> 允许您延迟编写类或方法中的编程元素的数据类型的规范，直到实际在程序中使用它的时候。换句话说，泛型允许您编写一个可以与任何数据类型一起工作的类或方法。</p> \n <p>您可以通过数据类型的替代参数编写类或方法的规范。当编译器遇到类的构造函数或方法的函数调用时，它会生成代码来处理指定的数据类型。下面这个简单的实例将有助于您理解这个概念：</p> \n <pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Collections.Generic;\r\n\r\nnamespace GenericApplication\r\n{\r\n    public class MyGenericArray&lt;T&gt;\r\n    {\r\n        private T[] array;\r\n        public MyGenericArray(int size)\r\n        {\r\n            array = new T[size + 1];\r\n        }\r\n        public T getItem(int index)\r\n        {\r\n            return array[index];\r\n        }\r\n        public void setItem(int index, T value)\r\n        {\r\n            array[index] = value;\r\n        }\r\n    }\r\n           \r\n    class Tester\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            // 声明一个整型数组\r\n            MyGenericArray&lt;int&gt; intArray = new MyGenericArray&lt;int&gt;(5);\r\n            // 设置值\r\n            for (int c = 0; c &lt; 5; c++)\r\n            {\r\n                intArray.setItem(c, c*5);\r\n            }\r\n            // 获取值\r\n            for (int c = 0; c &lt; 5; c++)\r\n            {\r\n                Console.Write(intArray.getItem(c) + &quot; &quot;);\r\n            }\r\n            Console.WriteLine();\r\n            // 声明一个字符数组\r\n            MyGenericArray&lt;char&gt; charArray = new MyGenericArray&lt;char&gt;(5);\r\n            // 设置值\r\n            for (int c = 0; c &lt; 5; c++)\r\n            {\r\n                charArray.setItem(c, (char)(c+97));\r\n            }\r\n            // 获取值\r\n            for (int c = 0; c &lt; 5; c++)\r\n            {\r\n                Console.Write(charArray.getItem(c) + &quot; &quot;);\r\n            }\r\n            Console.WriteLine();\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n <p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n <pre class=\"result\">\r\n0 5 10 15 20\r\na b c d e\r\n</pre> \n</div> \n<h2 class=\"tutheader\">泛型（Generic）的特性</h2> \n<p>使用泛型是一种增强程序功能的技术，具体表现在以下几个方面：</p> \n<ul class=\"list\"> \n <li>它有助于您最大限度地重用代码、保护类型的安全以及提高性能。</li> \n <li>您可以创建泛型集合类。.NET 框架类库在 <i>System.Collections.Generic</i> 命名空间中包含了一些新的泛型集合类。您可以使用这些泛型集合类来替代 <i>System.Collections</i> 中的集合类。</li> \n <li>您可以创建自己的泛型接口、泛型类、泛型方法、泛型事件和泛型委托。 </li> \n <li>您可以对泛型类进行约束以访问特定数据类型的方法。</li> \n <li>关于泛型数据类型中使用的类型的信息可在运行时通过使用反射获取。</li> \n</ul> \n<h2 class=\"tutheader\">泛型（Generic）方法</h2> \n<p>在上面的实例中，我们已经使用了泛型类，我们可以通过类型参数声明泛型方法。下面的程序说明了这个概念：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Collections.Generic;\r\n\r\nnamespace GenericMethodAppl\r\n{\r\n    class Program\r\n    {\r\n        static void Swap&lt;T&gt;(ref T lhs, ref T rhs)\r\n        {\r\n            T temp;\r\n            temp = lhs;\r\n            lhs = rhs;\r\n            rhs = temp;\r\n        }\r\n        static void Main(string[] args)\r\n        {\r\n            int a, b;\r\n            char c, d;\r\n            a = 10;\r\n            b = 20;\r\n            c = \'I\';\r\n            d = \'V\';\r\n\r\n            // 在交换之前显示值\r\n            Console.WriteLine(&quot;Int values before calling swap:&quot;);\r\n            Console.WriteLine(&quot;a = {0}, b = {1}&quot;, a, b);\r\n            Console.WriteLine(&quot;Char values before calling swap:&quot;);\r\n            Console.WriteLine(&quot;c = {0}, d = {1}&quot;, c, d);\r\n\r\n            // 调用 swap\r\n            Swap&lt;int&gt;(ref a, ref b);\r\n            Swap&lt;char&gt;(ref c, ref d);\r\n\r\n            // 在交换之后显示值\r\n            Console.WriteLine(&quot;Int values after calling swap:&quot;);\r\n            Console.WriteLine(&quot;a = {0}, b = {1}&quot;, a, b);\r\n            Console.WriteLine(&quot;Char values after calling swap:&quot;);\r\n            Console.WriteLine(&quot;c = {0}, d = {1}&quot;, c, d);\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nInt values before calling swap:\r\na = 10, b = 20\r\nChar values before calling swap:\r\nc = I, d = V\r\nInt values after calling swap:\r\na = 20, b = 10\r\nChar values after calling swap:\r\nc = V, d = I\r\n</pre> \n<h2 class=\"tutheader\">泛型（Generic）委托</h2> \n<p>您可以通过类型参数定义泛型委托。例如：</p> \n<pre class=\"prettyprint\">\r\ndelegate T NumberChanger&lt;T&gt;(T n);\r\n</pre> \n<p>下面的实例演示了委托的使用：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Collections.Generic;\r\n\r\ndelegate T NumberChanger&lt;T&gt;(T n);\r\nnamespace GenericDelegateAppl\r\n{\r\n    class TestDelegate\r\n    {\r\n        static int num = 10;\r\n        public static int AddNum(int p)\r\n        {\r\n            num += p;\r\n            return num;\r\n        }\r\n\r\n        public static int MultNum(int q)\r\n        {\r\n            num *= q;\r\n            return num;\r\n        }\r\n        public static int getNum()\r\n        {\r\n            return num;\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            // 创建委托实例\r\n            NumberChanger&lt;int&gt; nc1 = new NumberChanger&lt;int&gt;(AddNum);\r\n            NumberChanger&lt;int&gt; nc2 = new NumberChanger&lt;int&gt;(MultNum);\r\n            // 使用委托对象调用方法\r\n            nc1(25);\r\n            Console.WriteLine(&quot;Value of Num: {0}&quot;, getNum());\r\n            nc2(5);\r\n            Console.WriteLine(&quot;Value of Num: {0}&quot;, getNum());\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nValue of Num: 35\r\nValue of Num: 175\r\n</pre>', null, 'C# 泛型（Generic）|泛型（Generic）的特性|泛型（Generic）方法|泛型（Generic）委托|');
INSERT INTO `schoolcontent` VALUES ('361', '364', '<h1>C# <span class=\"color_h1\">匿名方法</span></h1> \n<div class=\"tutintro\"> \n <p>我们已经提到过，委托是用于引用与其具有相同标签的方法。换句话说，您可以使用委托对象调用可由委托引用的方法。</p> \n <p><b>匿名方法（Anonymous methods）</b> 提供了一种传递代码块作为委托参数的技术。匿名方法是没有名称只有主体的方法。</p> \n <p>在匿名方法中您不需要指定返回类型，它是从方法主体内的 return 语句推断的。</p> \n</div> \n<h2 class=\"tutheader\">编写匿名方法的语法</h2> \n<p>匿名方法是通过使用 <b>delegate</b> 关键字创建委托实例来声明的。例如：</p> \n<pre class=\"prettyprint\">\r\ndelegate void NumberChanger(int n);\r\n...\r\nNumberChanger nc = delegate(int x)\r\n{\r\n    Console.WriteLine(&quot;Anonymous Method: {0}&quot;, x);\r\n};\r\n\r\n</pre> \n<p>代码块 <i>Console.WriteLine(&quot;Anonymous Method: {0}&quot;, x);</i> 是匿名方法的主体。</p> \n<p>委托可以通过匿名方法调用，也可以通过命名方法调用，即，通过向委托对象传递方法参数。</p> \n<p>例如：</p> \n<pre class=\"prettyprint\">\r\nnc(10);\r\n</pre> \n<h2 class=\"tutheader\">实例</h2> \n<p>下面的实例演示了匿名方法的概念：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\n\r\ndelegate void NumberChanger(int n);\r\nnamespace DelegateAppl\r\n{\r\n    class TestDelegate\r\n    {\r\n        static int num = 10;\r\n        public static void AddNum(int p)\r\n        {\r\n            num += p;\r\n            Console.WriteLine(&quot;Named Method: {0}&quot;, num);\r\n        }\r\n\r\n        public static void MultNum(int q)\r\n        {\r\n            num *= q;\r\n            Console.WriteLine(&quot;Named Method: {0}&quot;, num);\r\n        }\r\n        public static int getNum()\r\n        {\r\n            return num;\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            // 使用匿名方法创建委托实例\r\n            NumberChanger nc = delegate(int x)\r\n            {\r\n               Console.WriteLine(&quot;Anonymous Method: {0}&quot;, x);\r\n            };\r\n            \r\n            // 使用匿名方法调用委托\r\n            nc(10);\r\n\r\n            // 使用命名方法实例化委托\r\n            nc =  new NumberChanger(AddNum);\r\n            \r\n            // 使用命名方法调用委托\r\n            nc(5);\r\n\r\n            // 使用另一个命名方法实例化委托\r\n            nc =  new NumberChanger(MultNum);\r\n            \r\n            // 使用命名方法调用委托\r\n            nc(2);\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nAnonymous Method: 10\r\nNamed Method: 15\r\nNamed Method: 30\r\n</pre>', null, 'C# 匿名方法|编写匿名方法的语法|实例|');
INSERT INTO `schoolcontent` VALUES ('362', '365', '<h1>C# <span class=\"color_h1\">不安全代码</span></h1> \n<div class=\"tutintro\"> \n <p>当一个代码块使用 <b>unsafe</b> 修饰符标记时，C# 允许在函数中使用指针变量。<b>不安全代码</b>或非托管代码是指使用了<b>指针</b>变量的代码块。</p> \n</div> \n<h2 class=\"tutheader\">指针变量</h2> \n<p><b>指针</b> 是值为另一个变量的地址的变量，即，内存位置的直接地址。就像其他变量或常量，您必须在使用指针存储其他变量地址之前声明指针。</p> \n<p>指针变量声明的一般形式为：</p> \n<pre class=\"prettyprint\">\r\ntype *var-name;\r\n</pre> \n<p>以下是有效的指针声明：</p> \n<pre class=\"prettyprint\">\r\nint    *ip;    /* 指向一个整数 */\r\ndouble *dp;    /* 指向一个双精度数 */\r\nfloat  *fp;    /* 指向一个浮点数 */\r\nchar   *ch     /* 指向一个字符 */\r\n</pre> \n<p>下面的实例说明了 C# 中使用了 <b>unsafe</b> 修饰符时指针的使用：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace UnsafeCodeApplication\r\n{\r\n    class Program\r\n    {\r\n        static unsafe void Main(string[] args)\r\n        {\r\n            int var = 20;\r\n            int* p = &amp;var;\r\n            Console.WriteLine(&quot;Data is: {0} &quot;,  var);\r\n            Console.WriteLine(&quot;Address is: {0}&quot;,  (int)p);\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nData is: 20\r\nAddress is: 99215364\r\n</pre> \n<p>您也可以不用声明整个方法作为不安全代码，只需要声明方法的一部分作为不安全代码。下面的实例说明了这点。</p> \n<h2 class=\"tutheader\">使用指针检索数据值</h2> \n<p>您可以使用 <b>ToString()</b> 方法检索存储在指针变量所引用位置的数据。下面的实例演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace UnsafeCodeApplication\r\n{\r\n   class Program\r\n   {\r\n      public static void Main()\r\n      {\r\n         unsafe\r\n         {\r\n            int var = 20;\r\n            int* p = &amp;var;\r\n            Console.WriteLine(&quot;Data is: {0} &quot; , var);\r\n            Console.WriteLine(&quot;Data is: {0} &quot; , p-&gt;ToString());\r\n            Console.WriteLine(&quot;Address is: {0} &quot; , (int)p);\r\n         }\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nData is: 20\r\nData is: 20\r\nAddress is: 77128984\r\n</pre> \n<h2 class=\"tutheader\">传递指针作为方法的参数</h2> \n<p>您可以向方法传递指针变量作为方法的参数。下面的实例说明了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace UnsafeCodeApplication\r\n{\r\n   class TestPointer\r\n   {\r\n      public unsafe void swap(int* p, int *q)\r\n      {\r\n         int temp = *p;\r\n         *p = *q;\r\n         *q = temp;\r\n      }\r\n\r\n      public unsafe static void Main()\r\n      {\r\n         TestPointer p = new TestPointer();\r\n         int var1 = 10;\r\n         int var2 = 20;\r\n         int* x = &amp;var1;\r\n         int* y = &amp;var2;\r\n         \r\n         Console.WriteLine(&quot;Before Swap: var1:{0}, var2: {1}&quot;, var1, var2);\r\n         p.swap(x, y);\r\n\r\n         Console.WriteLine(&quot;After Swap: var1:{0}, var2: {1}&quot;, var1, var2);\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nBefore Swap: var1: 10, var2: 20\r\nAfter Swap: var1: 20, var2: 10\r\n</pre> \n<h2 class=\"tutheader\">使用指针访问数组元素</h2> \n<p>在 C# 中，数组名称和一个指向与数组数据具有相同数据类型的指针是不同的变量类型。例如，int *p 和 int[] p 是不同的类型。您可以增加指针变量 p，因为它在内存中不是固定的，但是数组地址在内存中是固定的，所以您不能增加数组 p。</p> \n<p>因此，如果您需要使用指针变量访问数组数据，可以像我们通常在 C 或 C++ 中所做的那样，使用 <b>fixed</b> 关键字来固定指针。</p> \n<p>下面的实例演示了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nnamespace UnsafeCodeApplication\r\n{\r\n   class TestPointer\r\n   {\r\n      public unsafe static void Main()\r\n      {\r\n         int[]  list = {10, 100, 200};\r\n         fixed(int *ptr = list)\r\n\r\n         /* 显示指针中数组地址 */\r\n         for ( int i = 0; i &lt; 3; i++)\r\n         {\r\n            Console.WriteLine(&quot;Address of list[{0}]={1}&quot;,i,(int)(ptr + i));\r\n            Console.WriteLine(&quot;Value of list[{0}]={1}&quot;, i, *(ptr + i));\r\n         }\r\n         Console.ReadKey();\r\n      }\r\n   }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nAddress of list[0] = 31627168\r\nValue of list[0] = 10\r\nAddress of list[1] = 31627172\r\nValue of list[1] = 100\r\nAddress of list[2] = 31627176\r\nValue of list[2] = 200\r\n</pre> \n<h2 class=\"tutheader\">编译不安全代码</h2> \n<p>为了编译不安全代码，您必须切换到命令行编译器指定 <b>/unsafe</b> 命令行。</p> \n<p>例如，为了编译包含不安全代码的名为 prog1.cs 的程序，需在命令行中输入命令：</p> \n<pre class=\"prettyprint\">\r\ncsc /unsafe prog1.cs\r\n</pre> \n<p>如果您使用的是 Visual Studio IDE，那么您需要在项目属性中启用不安全代码。</p> \n<p>步骤如下：</p> \n<ul class=\"list\"> \n <li>通过双击资源管理器（Solution Explorer）中的属性（properties）节点，打开<b>项目属性（project properties）</b>。</li> \n <li>点击 <b>Build</b> 标签页。</li> \n <li>选择选项&quot;<b>Allow unsafe code</b>&quot;。</li> \n</ul>', null, 'C# 不安全代码|指针变量|使用指针检索数据值|传递指针作为方法的参数|使用指针访问数组元素|编译不安全代码|');
INSERT INTO `schoolcontent` VALUES ('363', '366', '<h1>C# <span class=\"color_h1\">多线程</span></h1> \n<div class=\"tutintro\"> \n <p><b>线程</b> 被定义为程序的执行路径。每个线程都定义了一个独特的控制流。如果您的应用程序涉及到复杂的和耗时的操作，那么设置不同的线程执行路径往往是有益的，每个线程执行特定的工作。</p> \n <p>线程是<b>轻量级进程</b>。一个使用线程的常见实例是现代操作系统中并行编程的实现。使用线程节省了 CPU 周期的浪费，同时提高了应用程序的效率。</p> \n <p>到目前为止我们编写的程序是一个单线程作为应用程序的运行实例的单一的过程运行的。但是，这样子应用程序同时只能执行一个任务。为了同时执行多个任务，它可以被划分为更小的线程。</p> \n</div> \n<h2 class=\"tutheader\">线程生命周期</h2> \n<p>线程生命周期开始于 System.Threading.Thread 类的对象被创建时，结束于线程被终止或完成执行时。</p> \n<p>下面列出了线程生命周期中的各种状态：</p> \n<ul class=\"list\"> \n <li><b>未启动状态</b>：当线程实例被创建但 Start 方法未被调用时的状况。</li> \n <li><b>就绪状态</b>：当线程准备好运行并等待 CPU 周期时的状况。</li> \n <li><b>不可运行状态</b>：下面的几种情况下线程是不可运行的：<p></p> \n  <ul class=\"list\"> \n   <li>已经调用 Sleep 方法</li> \n   <li>已经调用 Wait 方法</li> \n   <li>通过 I/O 操作阻塞</li> \n  </ul> </li> \n <li><b>死亡状态</b>：当线程已完成执行或已中止时的状况。</li> \n</ul> \n<h2 class=\"tutheader\">主线程</h2> \n<p>在 C# 中，<b>System.Threading.Thread</b> 类用于线程的工作。它允许创建并访问多线程应用程序中的单个线程。进程中第一个被执行的线程称为<b>主线程</b>。</p> \n<p>当 C# 程序开始执行时，主线程自动创建。使用 <b>Thread</b> 类创建的线程被主线程的子线程调用。您可以使用 Thread 类的 <b>CurrentThread</b> 属性访问线程。</p> \n<p>下面的程序演示了主线程的执行：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Threading;\r\n\r\nnamespace MultithreadingApplication\r\n{\r\n    class MainThreadProgram\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Thread th = Thread.CurrentThread;\r\n            th.Name = &quot;MainThread&quot;;\r\n            Console.WriteLine(&quot;This is {0}&quot;, th.Name);\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nThis is MainThread\r\n</pre> \n<h2 class=\"tutheader\">Thread 类常用的属性和方法</h2> \n<p>下表列出了 <b>Thread</b> 类的一些常用的 <b>属性</b>：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:25%;\">属性</th>\n   <th>描述</th>\n  </tr> \n  <tr>\n   <td>CurrentContext</td>\n   <td>获取线程正在其中执行的当前上下文。</td>\n  </tr> \n  <tr>\n   <td>CurrentCulture</td>\n   <td>获取或设置当前线程的区域性。</td>\n  </tr> \n  <tr>\n   <td>CurrentPrinciple</td>\n   <td>获取或设置线程的当前负责人（对基于角色的安全性而言）。</td>\n  </tr> \n  <tr>\n   <td>CurrentThread</td>\n   <td>获取当前正在运行的线程。</td>\n  </tr> \n  <tr>\n   <td>CurrentUICulture</td>\n   <td>获取或设置资源管理器使用的当前区域性以便在运行时查找区域性特定的资源。</td>\n  </tr> \n  <tr>\n   <td>ExecutionContext</td>\n   <td>获取一个 ExecutionContext 对象，该对象包含有关当前线程的各种上下文的信息。</td>\n  </tr> \n  <tr>\n   <td>IsAlive</td>\n   <td>获取一个值，该值指示当前线程的执行状态。</td>\n  </tr> \n  <tr>\n   <td>IsBackground</td>\n   <td>获取或设置一个值，该值指示某个线程是否为后台线程。</td>\n  </tr> \n  <tr>\n   <td>IsThreadPoolThread</td>\n   <td>获取一个值，该值指示线程是否属于托管线程池。</td>\n  </tr> \n  <tr>\n   <td>ManagedThreadId</td>\n   <td>获取当前托管线程的唯一标识符。</td>\n  </tr> \n  <tr>\n   <td>Name</td>\n   <td>获取或设置线程的名称。</td>\n  </tr> \n  <tr>\n   <td>Priority</td>\n   <td>获取或设置一个值，该值指示线程的调度优先级。</td>\n  </tr> \n  <tr>\n   <td>ThreadState</td>\n   <td>获取一个值，该值包含当前线程的状态。</td>\n  </tr> \n </tbody>\n</table> \n<p>下表列出了 <b>Thread</b> 类的一些常用的 <b>方法</b>：</p> \n<table class=\"reference notranslate\"> \n <tbody>\n  <tr>\n   <th style=\"width:5%;\">序号</th>\n   <th>方法名 &amp; 描述</th>\n  </tr> \n  <tr>\n   <td>1</td>\n   <td><b>public void Abort()</b><br />在调用此方法的线程上引发 ThreadAbortException，以开始终止此线程的过程。调用此方法通常会终止线程。</td>\n  </tr> \n  <tr>\n   <td>2</td>\n   <td><b>public static LocalDataStoreSlot AllocateDataSlot()</b><br />在所有的线程上分配未命名的数据槽。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td>\n  </tr> \n  <tr>\n   <td>3</td>\n   <td><b>public static LocalDataStoreSlot AllocateNamedDataSlot( string name) </b><br />在所有线程上分配已命名的数据槽。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td>\n  </tr> \n  <tr>\n   <td>4</td>\n   <td><b>public static void BeginCriticalRegion()</b><br />通知主机执行将要进入一个代码区域，在该代码区域内线程中止或未经处理的异常的影响可能会危害应用程序域中的其他任务。</td>\n  </tr> \n  <tr>\n   <td>5</td>\n   <td><b>public static void BeginThreadAffinity()</b><br />通知主机托管代码将要执行依赖于当前物理操作系统线程的标识的指令。</td>\n  </tr> \n  <tr>\n   <td>6</td>\n   <td><b>public static void EndCriticalRegion()</b><br />通知主机执行将要进入一个代码区域，在该代码区域内线程中止或未经处理的异常仅影响当前任务。</td>\n  </tr> \n  <tr>\n   <td>7</td>\n   <td><b>public static void EndThreadAffinity()</b><br />通知主机托管代码已执行完依赖于当前物理操作系统线程的标识的指令。</td>\n  </tr> \n  <tr>\n   <td>8</td>\n   <td><b>public static void FreeNamedDataSlot(string name)</b><br />为进程中的所有线程消除名称与槽之间的关联。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td>\n  </tr> \n  <tr>\n   <td>9</td>\n   <td><b>public static Object GetData( LocalDataStoreSlot slot ) </b><br />在当前线程的当前域中从当前线程上指定的槽中检索值。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td>\n  </tr> \n  <tr>\n   <td>10</td>\n   <td><b>public static AppDomain GetDomain()</b><br />返回当前线程正在其中运行的当前域。</td>\n  </tr> \n  <tr>\n   <td>11</td>\n   <td><b>public static AppDomain GetDomainID()</b><br />返回唯一的应用程序域标识符。</td>\n  </tr> \n  <tr>\n   <td>12</td>\n   <td><b>public static LocalDataStoreSlot GetNamedDataSlot( string name ) </b><br />查找已命名的数据槽。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td>\n  </tr> \n  <tr>\n   <td>13</td>\n   <td><b>public void Interrupt()</b><br />中断处于 WaitSleepJoin 线程状态的线程。</td>\n  </tr> \n  <tr>\n   <td>14</td>\n   <td><b>public void Join()</b><br />在继续执行标准的 COM 和 SendMessage 消息泵处理期间，阻塞调用线程，直到某个线程终止为止。此方法有不同的重载形式。</td>\n  </tr> \n  <tr>\n   <td>15</td>\n   <td><b>public static void MemoryBarrier()</b><br />按如下方式同步内存存取：执行当前线程的处理器在对指令重新排序时，不能采用先执行 MemoryBarrier 调用之后的内存存取，再执行 MemoryBarrier 调用之前的内存存取的方式。</td>\n  </tr> \n  <tr>\n   <td>16</td>\n   <td><b>public static void ResetAbort()</b><br />取消为当前线程请求的 Abort。</td>\n  </tr> \n  <tr>\n   <td>17</td>\n   <td><b>public static void SetData( LocalDataStoreSlot slot, Object data ) </b><br />在当前正在运行的线程上为此线程的当前域在指定槽中设置数据。为了获得更好的性能，请改用以 ThreadStaticAttribute 属性标记的字段。</td>\n  </tr> \n  <tr>\n   <td>18</td>\n   <td><b>public void Start()</b><br />开始一个线程。</td>\n  </tr> \n  <tr>\n   <td>19</td>\n   <td><b>public static void Sleep( int millisecondsTimeout ) </b><br />让线程暂停一段时间。</td>\n  </tr> \n  <tr>\n   <td>20</td>\n   <td><b>public static void SpinWait( int iterations ) </b><br />导致线程等待由 iterations 参数定义的时间量。</td>\n  </tr> \n  <tr>\n   <td>21</td>\n   <td><b>public static byte VolatileRead( ref byte address )<br /> public static double VolatileRead( ref double address )<br /> public static int VolatileRead( ref int address )<br /> public static Object VolatileRead( ref Object address ) </b><br />读取字段值。无论处理器的数目或处理器缓存的状态如何，该值都是由计算机的任何处理器写入的最新值。此方法有不同的重载形式。这里只给出了一些形式。</td>\n  </tr> \n  <tr>\n   <td>22</td>\n   <td><b>public static void VolatileWrite( ref byte address, byte value )<br /> public static void VolatileWrite( ref double address, double value )<br /> public static void VolatileWrite( ref int address, int value )<br /> public static void VolatileWrite( ref Object address, Object value ) </b><br />立即向字段写入一个值，以使该值对计算机中的所有处理器都可见。此方法有不同的重载形式。这里只给出了一些形式。</td>\n  </tr> \n  <tr>\n   <td>23</td>\n   <td><b>public static bool Yield()</b><br />导致调用线程执行准备好在当前处理器上运行的另一个线程。由操作系统选择要执行的线程。</td>\n  </tr> \n </tbody>\n</table> \n<br /> \n<h2 class=\"tutheader\">创建线程</h2> \n<p>线程是通过扩展 Thread 类创建的。扩展的 Thread 类调用 <b>Start()</b> 方法来开始子线程的执行。</p> \n<p>下面的程序演示了这个概念：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Threading;\r\n\r\nnamespace MultithreadingApplication\r\n{\r\n    class ThreadCreationProgram\r\n    {\r\n        public static void CallToChildThread()\r\n        {\r\n            Console.WriteLine(&quot;Child thread starts&quot;);\r\n        }\r\n        \r\n        static void Main(string[] args)\r\n        {\r\n            ThreadStart childref = new ThreadStart(CallToChildThread);\r\n            Console.WriteLine(&quot;In Main: Creating the Child thread&quot;);\r\n            Thread childThread = new Thread(childref);\r\n            childThread.Start();\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nIn Main: Creating the Child thread\r\nChild thread starts\r\n</pre> \n<h2 class=\"tutheader\">管理线程</h2> \n<p>Thread 类提供了各种管理线程的方法。</p> \n<p>下面的实例演示了 <b>sleep()</b> 方法的使用，用于在一个特定的时间暂停线程。</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Threading;\r\n\r\nnamespace MultithreadingApplication\r\n{\r\n    class ThreadCreationProgram\r\n    {\r\n        public static void CallToChildThread()\r\n        {\r\n            Console.WriteLine(&quot;Child thread starts&quot;);\r\n            // 线程暂停 5000 毫秒\r\n            int sleepfor = 5000; \r\n            Console.WriteLine(&quot;Child Thread Paused for {0} seconds&quot;, \r\n                              sleepfor / 1000);\r\n            Thread.Sleep(sleepfor);\r\n            Console.WriteLine(&quot;Child thread resumes&quot;);\r\n        }\r\n        \r\n        static void Main(string[] args)\r\n        {\r\n            ThreadStart childref = new ThreadStart(CallToChildThread);\r\n            Console.WriteLine(&quot;In Main: Creating the Child thread&quot;);\r\n            Thread childThread = new Thread(childref);\r\n            childThread.Start();\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nIn Main: Creating the Child thread\r\nChild thread starts\r\nChild Thread Paused for 5 seconds\r\nChild thread resumes\r\n</pre> \n<h2 class=\"tutheader\">销毁线程</h2> \n<p><b>Abort()</b> 方法用于销毁线程。</p> \n<p>通过抛出 <b>threadabortexception</b> 在运行时中止线程。这个异常不能被捕获，如果有 <i>finally</i> 块，控制会被送至 <i>finally</i> 块。</p> \n<p>下面的程序说明了这点：</p> \n<pre class=\"prettyprint\">\r\nusing System;\r\nusing System.Threading;\r\n\r\nnamespace MultithreadingApplication\r\n{\r\n    class ThreadCreationProgram\r\n    {\r\n        public static void CallToChildThread()\r\n        {\r\n            try\r\n            {\r\n\r\n                Console.WriteLine(&quot;Child thread starts&quot;);\r\n                // 计数到 10\r\n                for (int counter = 0; counter &lt;= 10; counter++)\r\n                {\r\n                    Thread.Sleep(500);\r\n                    Console.WriteLine(counter);\r\n                }\r\n                Console.WriteLine(&quot;Child Thread Completed&quot;);\r\n\r\n            }\r\n            catch (ThreadAbortException e)\r\n            {\r\n                Console.WriteLine(&quot;Thread Abort Exception&quot;);\r\n            }\r\n            finally\r\n            {\r\n                Console.WriteLine(&quot;Couldn\'t catch the Thread Exception&quot;);\r\n            }\r\n\r\n        }\r\n        \r\n        static void Main(string[] args)\r\n        {\r\n            ThreadStart childref = new ThreadStart(CallToChildThread);\r\n            Console.WriteLine(&quot;In Main: Creating the Child thread&quot;);\r\n            Thread childThread = new Thread(childref);\r\n            childThread.Start();\r\n            // 停止主线程一段时间\r\n            Thread.Sleep(2000);\r\n            // 现在中止子线程\r\n            Console.WriteLine(&quot;In Main: Aborting the Child thread&quot;);\r\n            childThread.Abort();\r\n            Console.ReadKey();\r\n        }\r\n    }\r\n}\r\n</pre> \n<p>当上面的代码被编译和执行时，它会产生下列结果：</p> \n<pre class=\"result\">\r\nIn Main: Creating the Child thread\r\nChild thread starts\r\n0\r\n1\r\n2\r\nIn Main: Aborting the Child thread\r\nThread Abort Exception\r\nCouldn\'t catch the Thread Exception \r\n</pre>', null, 'C# 多线程|线程生命周期|主线程|Thread 类常用的属性和方法|创建线程|管理线程|销毁线程|');
INSERT INTO `schoolcontent` VALUES ('364', '367', '', '<h1>HTML 基础</h1><hr/><p class=\"intro\">本章主要通过实例简单介绍下HTML中常用到的标签，这些标签在后续的章节中也将详细讲到。</p><hr/><h2>HTML 标题</h2><p>W3C指出h1-h6标签可定义标题。h1定义最大的标题。h6定义最小的标题。</p><p>h1，h2，h3，h4，h5，h6，作为标题标签，并且依据重要性递减。我认为遵循这样的原则是很有必要的，它能让页面的层级关系更清楚，让搜索引擎更好地抓取和分析出页面的主题内容等等。</p><p>h1、h2、h3、h4、h5及h6元素的作用是显示标题（这里的h是“标题（heading）”的意思）。其中h1是一级标题，字体最大；h2是二级标题，字体比一级标题略小；而h6是六级标题，它是最后一级标题，字体也最小。</p><p>为了更好的理解，请看下面的代码：</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;h1&gt;这是一个一级标题&lt;/h1&gt;&nbsp;&nbsp;\n&lt;h2&gt;这是一个子标题&lt;/h2&gt;&nbsp;&nbsp;\n&lt;h3&gt;这是一个三级标题&lt;/h3&gt;</pre><p><br/>\n <a href=\"/Home/DIY/2.html\" target=\"_blank\" title=\"在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 段落</h2><p>简单地对文字分段常用&lt;p&gt;&lt;/p&gt;标签，即段落的开始用&lt;p&gt;，段落的结束用&lt;/p&gt;标签。某些网页分段时省略了&lt;/p&gt;，即作为单标签使用，因为下一段开始的&lt;p&gt;标签就意味上一段的结束。&nbsp;</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;p&gt;这是一个段落。&lt;/p&gt;&nbsp;&nbsp;\n&lt;p&gt;这是另外一个段落。&lt;/p&gt;</pre><p><br/>\n <a href=\"/Home/DIY/3.html\" target=\"_blank\" title=\"在线测试\">在线测试</a> </p><p><br/> </p><hr/><h2>HTML 链接</h2><p>超级链接的标签是&lt;a&gt;&lt;/a&gt;，给文字添加超级链接类似于其他修饰标签。添加了链接后的文字有其特殊的样式，以和其他文字区分，默认链接样式为蓝色文字，有下划线。超级链接是跳转到另一个页面的，&lt;a&gt;&lt;/a&gt;标签有一个href属性负责指定新页面的地址。href指定的地址一般使用相对地址。</p><h2 class=\"example\">实例</h2><pre class=\"brush:html;toolbar:false\">&lt;a&nbsp;href=&quot;http://www.piliyuan.com&quot;&gt;这是一个链接&lt;/a&gt;</pre><p><br/>\n <a href=\"/Home/DIY/4.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a></p><p>(您将在本教程稍后的章节中学习更多有关属性的知识).</p><hr/><h2>HTML 图像</h2><p>HTML 图像是通过标签 &lt;img&gt; 来定义的.img 是 Image（图像）的缩写。src 属性用来指定图像的路径。</p><h2 class=\"example\">实例</h2><p>&lt;img src=&quot;w3cschool.png&quot; width=&quot;104&quot; height=&quot;142&quot;&gt;</p><p><br/>\n <a href=\"/Home/DIY/5.html\" target=\"_blank\" title=\"霹雳猿在线测试\">在线测试</a> </p><p><strong>注意：</strong> 图像的名称和尺寸是以属性的形式提供的。</p><p><br/></p>', '');

-- ----------------------------
-- Table structure for schoolmulu
-- ----------------------------
DROP TABLE IF EXISTS `schoolmulu`;
CREATE TABLE `schoolmulu` (
  `Id` bigint(20) NOT NULL auto_increment,
  `Name` varchar(50) default NULL,
  `Sort` double(11,0) default NULL,
  `OutUrl` varchar(200) default NULL,
  `Type1` varchar(50) default NULL,
  `Type2` varchar(50) default NULL,
  `SpiderFlag` int(11) default '0',
  `IfPassed` int(11) default '0',
  PRIMARY KEY  (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=368 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of schoolmulu
-- ----------------------------
INSERT INTO `schoolmulu` VALUES ('1', 'HTML 教程', '0', '/html/html-tutorial.html', 'HTML 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('2', 'HTML 简介', '0', '/html/html-intro.html', 'HTML 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('3', 'HTML 编辑器', '0', '/html/html-editors.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('4', 'HTML 基础', '0', '/html/html-basic.html', 'HTML 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('5', 'HTML 元素', '0', '/html/html-elements.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('6', 'HTML 属性', '0', '/html/html-attributes.html', 'HTML 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('7', 'HTML 标题', '0', '/html/html-headings.html', 'HTML 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('8', 'HTML 段落', '0', '/html/html-paragraphs.html', 'HTML 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('9', 'HTML 文本格式化', '0', '/html/html-formatting.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('10', 'HTML 链接', '0', '/html/html-links.html', 'HTML 教程', '', '1', '2');
INSERT INTO `schoolmulu` VALUES ('11', 'HTML 头部', '0', '/html/html-head.html', 'HTML 教程', '', '1', '2');
INSERT INTO `schoolmulu` VALUES ('12', 'HTML CSS', '0', '/html/html-css.html', 'HTML 教程', '', '1', '2');
INSERT INTO `schoolmulu` VALUES ('13', 'HTML 图像', '0', '/html/html-images.html', 'HTML 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('14', 'HTML 表格', '0', '/html/html-tables.html', 'HTML 教程', '', '1', '2');
INSERT INTO `schoolmulu` VALUES ('15', 'HTML 列表', '0', '/html/html-lists.html', 'HTML 教程', '', '1', '2');
INSERT INTO `schoolmulu` VALUES ('16', 'HTML 区块', '0', '/html/html-blocks.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('17', 'HTML 布局', '0', '/html/html-layouts.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('18', 'HTML 表单', '0', '/html/html-forms.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('19', 'HTML 框架', '0', '/html/html-iframes.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('20', 'HTML 颜色', '0', '/html/html-colors.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('21', 'HTML 颜色名', '0', '/html/html-colornames.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('22', 'HTML 颜色值', '0', '/html/html-colorvalues.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('23', 'HTML 脚本', '0', '/html/html-scripts.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('24', 'HTML 字符实体', '0', '/html/html-entities.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('25', 'HTML URL', '0', '/html/html-url.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('26', 'HTML 速查列表', '0', '/html/html-quicklist.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('27', 'HTML 总结', '0', '/html/html-summary.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('28', 'XHTML 简介', '0', '/html/html-xhtml.html', 'HTML 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('29', 'HTML5 教程', '0', '/html/html5-intro.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('30', 'HTML5 浏览器支持', '0', 'html5-browsers.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('31', 'HTML5 新元素', '0', '/html/html5-new-element.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('32', 'HTML5 Canvas', '0', '/html/html5-canvas.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('33', 'HTML5 内联 SVG', '0', '/html/html5-svg.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('34', 'HTML5 MathML', '0', 'html5-mathml.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('35', 'HTML5 拖放', '0', '/html/html5-draganddrop.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('36', 'HTML5 地理定位', '0', '/html/html5-geolocation.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('37', 'HTML5 Video(视频)', '0', '/html/html5-video.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('38', 'HTML5 Audio(音频)', '0', '/html/html5-audio.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('39', 'HTML5 Input 类型', '0', '/html/html5-form-input-types.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('40', 'HTML5 表单元素', '0', '/html/html5-form-elements.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('41', 'HTML5 表单属性', '0', '/html/html5-form-attributes.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('42', 'HTML5 语义元素', '0', '/html/html5-semantic-elements.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('43', 'HTML5 Web 存储', '0', '/html/html5-webstorage.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('44', 'HTML5 Web SQL', '0', 'html5-web-sql.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('45', 'HTML5 应用程序缓存', '0', '/html/html5-app-cache.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('46', 'HTML5 Web Workers', '0', '/html/html5-webworkers.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('47', 'HTML5 SSE', '0', '/html/html5-serversentevents.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('48', 'HTML5 WebSocket', '0', '/html/html5-websocket.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('49', 'HTML5 测验', '0', '/quiz/html5-quiz.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('50', 'HTML(5) 代码规范', '0', '/html/html5-syntax.html', 'HTML 教程', 'HTML5', '1', '0');
INSERT INTO `schoolmulu` VALUES ('51', 'HTML 媒体(Media)', '0', '/html/html-media.html', 'HTML 教程', 'HTML 媒体', '1', '0');
INSERT INTO `schoolmulu` VALUES ('52', 'HTML 插件', '0', '/html/html-object.html', 'HTML 教程', 'HTML 媒体', '1', '0');
INSERT INTO `schoolmulu` VALUES ('53', 'HTML 音频(Audio)', '0', '/html/html-sounds.html', 'HTML 教程', 'HTML 媒体', '1', '0');
INSERT INTO `schoolmulu` VALUES ('54', 'HTML视频（Videos）播放', '0', '/html/html-videos.html', 'HTML 教程', 'HTML 媒体', '1', '0');
INSERT INTO `schoolmulu` VALUES ('55', 'HTML 实例', '0', '/html/html-examples.html', 'HTML 教程', 'HTML 媒体', '1', '0');
INSERT INTO `schoolmulu` VALUES ('56', 'HTML 标签列表(字母排序)', '0', 'http://www.runoob.com/tags/html-reference.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('57', 'HTML 标签列表（功能排序）', '0', 'http://www.runoob.com/tags/ref-byfunc.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('58', 'HTML 属性', '0', 'http://www.runoob.com/tags/ref-standardattributes.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('59', 'HTML 事件', '0', 'http://www.runoob.com/tags/ref-eventattributes.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('60', 'HTML 画布', '0', 'http://www.runoob.com/tags/ref-canvasreference.html', 'HTML 教程', 'HTML 参考手册', '2', '0');
INSERT INTO `schoolmulu` VALUES ('61', 'HTML 音频/视频', '0', 'http://www.runoob.com/tags/html-audiovideo.html', 'HTML 教程', 'HTML 参考手册', '2', '0');
INSERT INTO `schoolmulu` VALUES ('62', 'HTML 有效DOCTYPES', '0', 'http://www.runoob.com/tags/html-elementsdoctypes.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('63', 'HTML 颜色名', '0', 'http://www.runoob.com/tags/html-colorname.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('64', 'HTML 拾色器', '0', 'http://www.runoob.com/tags/html-colorpicker.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('65', 'HTML 字符集', '0', '/charsets/html-charsets.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('66', 'HTML ASCII', '0', 'http://www.runoob.com/tags/html-ascii.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('67', 'HTML ISO-8859-1', '0', 'http://www.runoob.com/tags/ref-entities.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('68', 'HTML 符号', '0', 'http://www.runoob.com/tags/html-symbols.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('69', 'HTML URL 编码', '0', 'http://www.runoob.com/tags/html-urlencode.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('70', 'HTML 语言代码', '0', 'http://www.runoob.com/tags/html-language-codes.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('71', 'HTTP 消息', '0', 'http://www.runoob.com/tags/html-httpmessages.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('72', 'HTTP 方法', '0', 'http://www.runoob.com/tags/html-httpmethods.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('73', '键盘快捷键', '0', 'http://www.runoob.com/tags/html-keyboardshortcuts.html', 'HTML 教程', 'HTML 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('74', 'CSS 教程', '0', '/css/css-tutorial.html', 'CSS 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('75', 'CSS 简介', '0', '/css/css-intro.html', 'CSS 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('76', 'CSS 语法', '0', '/css/css-syntax.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('77', 'CSS Id 和 Class选择器', '0', '/css/css-id-class.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('78', 'CSS 创建', '0', '/css/css-howto.html', 'CSS 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('79', 'CSS Backgrounds(背景)', '0', '/css/css-background.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('80', 'CSS Text(文本)', '0', '/css/css-text.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('81', 'CSS Fonts(字体)', '0', '/css/css-font.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('82', 'CSS 链接(link)', '0', '/css/css-link.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('83', 'CSS 列表样式(ul)', '0', '/css/css-list.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('84', 'CSS Table(表格)', '0', '/css/css-table.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('85', 'CSS 盒子模型', '0', '/css/css-boxmodel.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('86', 'CSS Border(边框)', '0', '/css/css-border.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('87', 'CSS 轮廓（outline）属性', '0', '/css/css-outline.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('88', 'CSS Margin(外边距)', '0', '/css/css-margin.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('89', 'CSS Padding（填充）', '0', '/css/css-padding.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('90', 'CSS 分组和嵌套', '0', '/css/css-grouping-nesting.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('91', 'CSS 尺寸 (Dimension)', '0', '/css/css-dimension.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('92', 'CSS Display(显示)', '0', '/css/css-display-visibility.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('93', 'CSS Positioning(定位)', '0', '/css/css-positioning.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('94', 'CSS Float（浮动）', '0', '/css/css-float.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('95', 'CSS Align( 对齐)', '0', '/css/css-align.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('96', 'CSS 组合选择符', '0', 'css-combinators.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('97', 'CSS 伪类', '0', '/css/css-pseudo-classes.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('98', 'CSS 伪元素', '0', '/css/css-pseudo-elements.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('99', 'CSS 导航栏', '0', '/css/css-navbar.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('100', 'CSS 下拉菜单', '0', 'css-dropdowns.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('101', 'CSS 图片廊', '0', '/css/css-image-gallery.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('102', 'CSS 图像透明/不透明', '0', '/css/css-image-transparency.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('103', 'CSS 图像拼合技术', '0', '/css/css-image-sprites.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('104', 'CSS 媒体类型', '0', '/css/css-mediatypes.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('105', 'CSS 属性选择器', '0', '/css/css-attribute-selectors.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('106', 'CSS 总结', '0', '/css/css-summary.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('107', 'CSS 实例', '0', '/css/css-examples.html', 'CSS 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('108', 'CSS3 教程', '0', '/css3/css3-tutorial.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('109', 'CSS3 简介', '0', '/css3/css3-intro.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('110', 'CSS3 边框（Borders）', '0', '/css3/css3-borders.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('111', 'CSS3 背景', '0', '/css3/css3-backgrounds.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('112', 'CSS3 渐变', '0', '/css3/css3-gradients.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('113', 'CSS3 文本效果', '0', '/css3/css3-text-effects.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('114', 'CSS3 字体', '0', '/css3/css3-fonts.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('115', 'CSS3 2D 转换', '0', '/css3/css3-2dtransforms.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('116', 'CSS3 3D 转换', '0', '/css3/css3-3dtransforms.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('117', 'CSS3 过渡', '0', '/css3/css3-transitions.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('118', 'CSS3 动画', '0', '/css3/css3-animations.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('119', 'CSS3 多列', '0', '/css3/css3-multiple-columns.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('120', 'CSS3 用户界面', '0', '/css3/css3-user-interface.html', 'CSS 教程', 'CSS3 教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('121', 'Viewport', '0', '/css/css-rwd-viewport.html', 'CSS 教程', 'CSS 响应式设计', '1', '0');
INSERT INTO `schoolmulu` VALUES ('122', '网格视图', '0', '/css/css-rwd-grid.html', 'CSS 教程', 'CSS 响应式设计', '1', '0');
INSERT INTO `schoolmulu` VALUES ('123', '媒体查询', '0', '/css/css-rwd-mediaqueries.html', 'CSS 教程', 'CSS 响应式设计', '1', '0');
INSERT INTO `schoolmulu` VALUES ('124', '图片', '0', '/css/css-rwd-images.html', 'CSS 教程', 'CSS 响应式设计', '1', '0');
INSERT INTO `schoolmulu` VALUES ('125', '视频(Video)', '0', '/css/css-rwd-videos.html', 'CSS 教程', 'CSS 响应式设计', '1', '0');
INSERT INTO `schoolmulu` VALUES ('126', '框架', '0', '/css/css-rwd-frameworks.html', 'CSS 教程', 'CSS 响应式设计', '1', '0');
INSERT INTO `schoolmulu` VALUES ('127', 'CSS 参考手册', '0', '/cssref/css-reference.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('128', 'CSS 选择器', '0', '/cssref/css-selectors.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('129', 'CSS 语音参考', '0', '/cssref/css-ref-aural.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('130', 'CSS Web安全字体', '0', '/cssref/css-websafe-fonts.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('131', 'CSS 动画', '0', '/cssref/css-animatable.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('132', 'CSS 单位', '0', '/cssref/css-units.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('133', 'CSS 颜色', '0', '/cssref/css-colors.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('134', 'CSS 颜色值', '0', '/cssref/css-colors-legal.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('135', 'CSS 颜色名', '0', '/cssref/css-colornames.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('136', 'CSS 十六进制颜色', '0', '/cssref/css-colorsfull.html', 'CSS 教程', 'CSS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('137', 'JavaScript 教程', '0', '/js/js-tutorial.html', 'Javascript 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('138', 'JavaScript 简介', '0', '/js/js-intro.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('139', 'JavaScript 用法', '0', '/js/js-howto.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('140', 'JavaScript 输出', '0', '/js/js-output.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('141', 'JavaScript 语法', '0', 'js-syntax.html', 'Javascript 教程', '', '1', '1');
INSERT INTO `schoolmulu` VALUES ('142', 'JavaScript 语句', '0', '/js/js-statements.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('143', 'JavaScript 注释', '0', '/js/js-comments.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('144', 'JavaScript 变量', '0', '/js/js-variables.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('145', 'JavaScript 数据类型', '0', '/js/js-datatypes.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('146', 'JavaScript 对象', '0', '/js/js-obj-intro.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('147', 'JavaScript 函数', '0', '/js/js-functions.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('148', 'JavaScript 作用域', '0', '/js/js-scope.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('149', 'JavaScript 事件', '0', '/js/js-events.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('150', 'JavaScript 字符串', '0', '/js/js-strings.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('151', 'JavaScript 运算符', '0', '/js/js-operators.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('152', 'JavaScript 比较', '0', '/js/js-comparisons.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('153', 'JavaScript 条件语句', '0', '/js/js-if-else.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('154', 'JavaScript switch 语句', '0', '/js/js-switch.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('155', 'JavaScript for 循环', '0', '/js/js-loop-for.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('156', 'JavaScript while 循环', '0', '/js/js-loop-while.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('157', 'JavaScript Break 和 Continue 语句', '0', '/js/js-break.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('158', 'JavaScript typeof', '0', 'js-typeof.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('159', 'JavaScript 类型转换', '0', 'js-type-conversion.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('160', 'JavaScript 正则表达式', '0', 'js-regexp.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('161', 'JavaScript 错误', '0', '/js/js-errors.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('162', 'JavaScript 调试', '0', 'js-debugging.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('163', 'JavaScript 变量提升', '0', 'js-hoisting.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('164', 'JavaScript 严格模式', '0', 'js-strict.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('165', 'JavaScript 使用误区', '0', 'js-mistakes.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('166', 'JavaScript 表单验证', '0', '/js/js-form-validation.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('167', 'JavaScript 保留关键字', '0', '/js/js-reserved.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('168', 'JavaScript JSON', '0', '/js/js-json.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('169', 'JavaScript void', '0', '/js/js-void.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('170', 'JavaScript 代码规范', '0', '/js/js-conventions.html', 'Javascript 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('171', 'JavaScript 函数定义', '0', 'js-function-definition.html', 'Javascript 教程', 'JS 函数', '1', '0');
INSERT INTO `schoolmulu` VALUES ('172', 'JavaScript 函数参数', '0', 'js-function-parameters.html', 'Javascript 教程', 'JS 函数', '1', '0');
INSERT INTO `schoolmulu` VALUES ('173', 'JavaScript 函数调用', '0', 'js-function-invocation.html', 'Javascript 教程', 'JS 函数', '1', '0');
INSERT INTO `schoolmulu` VALUES ('174', 'JavaScript 闭包', '0', 'js-function-closures.html', 'Javascript 教程', 'JS 函数', '1', '0');
INSERT INTO `schoolmulu` VALUES ('175', 'DOM 简介', '0', '/js/js-htmldom.html', 'Javascript 教程', 'JS HTML DOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('176', 'DOM HTML', '0', '/js/js-htmldom-html.html', 'Javascript 教程', 'JS HTML DOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('177', 'DOM CSS', '0', '/js/js-htmldom-css.html', 'Javascript 教程', 'JS HTML DOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('178', 'DOM 事件', '0', '/js/js-htmldom-events.html', 'Javascript 教程', 'JS HTML DOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('179', 'DOM EventListener', '0', 'js-htmldom-eventlistener.html', 'Javascript 教程', 'JS HTML DOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('180', 'DOM 元素', '0', '/js/js-htmldom-elements.html', 'Javascript 教程', 'JS HTML DOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('181', 'JavaScript 对象', '0', '/js/js-objects.html', 'Javascript 教程', 'JS 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('182', 'JavaScript Number 对象', '0', '/js/js-obj-number.html', 'Javascript 教程', 'JS 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('183', 'JavaScript String', '0', '/js/js-obj-string.html', 'Javascript 教程', 'JS 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('184', 'JavaScript Date（日期）', '0', '/js/js-obj-date.html', 'Javascript 教程', 'JS 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('185', 'JavaScript Array（数组）', '0', '/js/js-obj-array.html', 'Javascript 教程', 'JS 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('186', 'JavaScript Boolean（布尔）', '0', '/js/js-obj-boolean.html', 'Javascript 教程', 'JS 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('187', 'JavaScript Math（算数）', '0', '/js/js-obj-math.html', 'Javascript 教程', 'JS 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('188', 'JavaScript RegExp 对象', '0', '/js/js-obj-regexp.html', 'Javascript 教程', 'JS 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('189', 'JavaScript Window', '0', '/js/js-window.html', 'Javascript 教程', 'JS 浏览器BOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('190', 'JavaScript Window Screen', '0', '/js/js-window-screen.html', 'Javascript 教程', 'JS 浏览器BOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('191', 'JavaScript Window Location', '0', '/js/js-window-location.html', 'Javascript 教程', 'JS 浏览器BOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('192', 'JavaScript Window History', '0', '/js/js-window-history.html', 'Javascript 教程', 'JS 浏览器BOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('193', 'JavaScript Navigator', '0', '/js/js-window-navigator.html', 'Javascript 教程', 'JS 浏览器BOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('194', 'JavaScript 弹窗', '0', '/js/js-popup.html', 'Javascript 教程', 'JS 浏览器BOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('195', 'JavaScript 计时事件', '0', '/js/js-timing.html', 'Javascript 教程', 'JS 浏览器BOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('196', 'JavaScript Cookies', '0', '/js/js-cookies.html', 'Javascript 教程', 'JS 浏览器BOM', '1', '0');
INSERT INTO `schoolmulu` VALUES ('197', 'JavaScript 库', '0', '/js/js-libraries.html', 'Javascript 教程', 'JS 库', '1', '0');
INSERT INTO `schoolmulu` VALUES ('198', 'JavaScript 测试 jQuery', '0', '/js/js-lib-jquery.html', 'Javascript 教程', 'JS 库', '1', '0');
INSERT INTO `schoolmulu` VALUES ('199', 'JavaScript 测试 Prototype', '0', '/js/js-lib-prototype.html', 'Javascript 教程', 'JS 库', '1', '0');
INSERT INTO `schoolmulu` VALUES ('200', 'JavaScript 实例', '0', '/js/js-examples.html', 'Javascript 教程', 'JS 实例', '1', '0');
INSERT INTO `schoolmulu` VALUES ('201', 'JavaScript 对象实例', '0', '/js/js-ex-objects.html', 'Javascript 教程', 'JS 实例', '1', '0');
INSERT INTO `schoolmulu` VALUES ('202', 'JavaScript 浏览器对象实例', '0', '/js/js-ex-browser.html', 'Javascript 教程', 'JS 实例', '1', '0');
INSERT INTO `schoolmulu` VALUES ('203', 'JavaScript HTML DOM 实例', '0', '/js/js-ex-dom.html', 'Javascript 教程', 'JS 实例', '1', '0');
INSERT INTO `schoolmulu` VALUES ('204', 'JavaScript 总结', '0', '/js/js-summary.html', 'Javascript 教程', 'JS 实例', '1', '0');
INSERT INTO `schoolmulu` VALUES ('205', 'JavaScript 对象', '0', '/jsref/jsref-tutorial.html', 'Javascript 教程', 'JS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('206', 'HTML DOM 对象', '0', '/jsref/dom-obj-document.html', 'Javascript 教程', 'JS 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('207', 'jQuery 教程', '0', '/jquery/jquery-tutorial.html', 'jQuery 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('208', 'jQuery 简介', '0', '/jquery/jquery-intro.html', 'jQuery 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('209', 'jQuery 安装', '0', '/jquery/jquery-install.html', 'jQuery 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('210', 'jQuery 语法', '0', '/jquery/jquery-syntax.html', 'jQuery 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('211', 'jQuery 选择器', '0', '/jquery/jquery-selectors.html', 'jQuery 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('212', 'jQuery 事件', '0', '/jquery/jquery-events.html', 'jQuery 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('213', 'jQuery 隐藏/显示', '0', '/jquery/jquery-hide-show.html', 'jQuery 教程', 'jQuery 效果', '1', '0');
INSERT INTO `schoolmulu` VALUES ('214', 'jQuery 淡入淡出', '0', '/jquery/jquery-fade.html', 'jQuery 教程', 'jQuery 效果', '1', '0');
INSERT INTO `schoolmulu` VALUES ('215', 'jQuery 滑动', '0', '/jquery/jquery-slide.html', 'jQuery 教程', 'jQuery 效果', '1', '0');
INSERT INTO `schoolmulu` VALUES ('216', 'jQuery 动画', '0', '/jquery/jquery-animate.html', 'jQuery 教程', 'jQuery 效果', '1', '0');
INSERT INTO `schoolmulu` VALUES ('217', 'jQuery 停止动画', '0', '/jquery/jquery-stop.html', 'jQuery 教程', 'jQuery 效果', '1', '0');
INSERT INTO `schoolmulu` VALUES ('218', 'jQuery Callback', '0', '/jquery/jquery-callback.html', 'jQuery 教程', 'jQuery 效果', '1', '0');
INSERT INTO `schoolmulu` VALUES ('219', 'jQuery Chaining', '0', '/jquery/jquery-chaining.html', 'jQuery 教程', 'jQuery 效果', '1', '0');
INSERT INTO `schoolmulu` VALUES ('220', 'jQuery 捕获', '0', '/jquery/jquery-dom-get.html', 'jQuery 教程', 'jQuery HTML', '1', '0');
INSERT INTO `schoolmulu` VALUES ('221', 'jQuery 设置', '0', '/jquery/jquery-dom-set.html', 'jQuery 教程', 'jQuery HTML', '1', '0');
INSERT INTO `schoolmulu` VALUES ('222', 'jQuery 添加元素', '0', '/jquery/jquery-dom-add.html', 'jQuery 教程', 'jQuery HTML', '1', '0');
INSERT INTO `schoolmulu` VALUES ('223', 'jQuery 删除元素', '0', '/jquery/jquery-dom-remove.html', 'jQuery 教程', 'jQuery HTML', '1', '0');
INSERT INTO `schoolmulu` VALUES ('224', 'jQuery CSS 类', '0', '/jquery/jquery-css-classes.html', 'jQuery 教程', 'jQuery HTML', '1', '0');
INSERT INTO `schoolmulu` VALUES ('225', 'jQuery css() 方法', '0', '/jquery/jquery-css.html', 'jQuery 教程', 'jQuery HTML', '1', '0');
INSERT INTO `schoolmulu` VALUES ('226', 'jQuery 尺寸', '0', '/jquery/jquery-dimensions.html', 'jQuery 教程', 'jQuery HTML', '1', '0');
INSERT INTO `schoolmulu` VALUES ('227', 'jQuery 遍历', '0', '/jquery/jquery-traversing.html', 'jQuery 教程', 'jQuery 遍历', '1', '0');
INSERT INTO `schoolmulu` VALUES ('228', 'jQuery 祖先', '0', '/jquery/jquery-traversing-ancestors.html', 'jQuery 教程', 'jQuery 遍历', '1', '0');
INSERT INTO `schoolmulu` VALUES ('229', 'jQuery 后代', '0', '/jquery/jquery-traversing-descendants.html', 'jQuery 教程', 'jQuery 遍历', '1', '0');
INSERT INTO `schoolmulu` VALUES ('230', 'jQuery 同胞', '0', '/jquery/jquery-traversing-siblings.html', 'jQuery 教程', 'jQuery 遍历', '1', '0');
INSERT INTO `schoolmulu` VALUES ('231', 'jQuery 过滤', '0', '/jquery/jquery-traversing-filtering.html', 'jQuery 教程', 'jQuery 遍历', '1', '0');
INSERT INTO `schoolmulu` VALUES ('232', 'jQuery AJAX 简介', '0', '/jquery/jquery-ajax-intro.html', 'jQuery 教程', 'jQuery Ajax', '1', '0');
INSERT INTO `schoolmulu` VALUES ('233', 'jQuery load() 方法', '0', '/jquery/jquery-ajax-load.html', 'jQuery 教程', 'jQuery Ajax', '1', '0');
INSERT INTO `schoolmulu` VALUES ('234', 'jQuery get()/post() 方法', '0', '/jquery/jquery-ajax-get-post.html', 'jQuery 教程', 'jQuery Ajax', '1', '0');
INSERT INTO `schoolmulu` VALUES ('235', 'jQuery noConflict() 方法', '0', '/jquery/jquery-noconflict.html', 'jQuery 教程', 'jQuery 其他', '1', '0');
INSERT INTO `schoolmulu` VALUES ('236', 'jQuery JSONP', '0', '/json/json-jsonp.html', 'jQuery 教程', 'jQuery 其他', '1', '0');
INSERT INTO `schoolmulu` VALUES ('237', 'jQuery 实例', '0', '/jquery/jquery-examples.html', 'jQuery 教程', 'jQuery 实例', '1', '0');
INSERT INTO `schoolmulu` VALUES ('238', 'jQuery 选择器', '0', '/jquery/jquery-ref-selectors.html', 'jQuery 教程', 'jQuery 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('239', 'jQuery 事件方法', '0', '/jquery/jquery-ref-events.html', 'jQuery 教程', 'jQuery 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('240', 'jQuery 效果方法', '0', '/jquery/jquery-ref-effects.html', 'jQuery 教程', 'jQuery 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('241', 'jQuery HTML / CSS 方法', '0', '/jquery/jquery-ref-html.html', 'jQuery 教程', 'jQuery 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('242', 'jQuery 遍历方法', '0', '/jquery/jquery-ref-traversing.html', 'jQuery 教程', 'jQuery 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('243', 'jQuery AJAX 方法', '0', '/jquery/jquery-ref-ajax.html', 'jQuery 教程', 'jQuery 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('244', 'jQuery 杂项方法', '0', '/jquery/jquery-ref-misc.html', 'jQuery 教程', 'jQuery 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('245', 'jQuery 属性', '0', '/jquery/jquery-ref-prop.html', 'jQuery 教程', 'jQuery 参考手册', '1', '0');
INSERT INTO `schoolmulu` VALUES ('246', 'jQuery Validate', '0', 'http://www.w3cschool.cc/jquery/jquery-plugin-validate.html', 'jQuery 教程', 'jQuery 插件', '1', '0');
INSERT INTO `schoolmulu` VALUES ('247', 'jQuery Accordion', '0', 'http://www.w3cschool.cc/jquery/jquery-plugin-accordion.html', 'jQuery 教程', 'jQuery 插件', '1', '0');
INSERT INTO `schoolmulu` VALUES ('248', 'jQuery Autocomplete', '0', 'http://www.w3cschool.cc/jquery/jquery-plugin-autocomplete.html', 'jQuery 教程', 'jQuery 插件', '1', '0');
INSERT INTO `schoolmulu` VALUES ('249', 'jQuery Message', '0', 'http://www.w3cschool.cc/jquery/jquery-plugin-message.html', 'jQuery 教程', 'jQuery 插件', '2', '0');
INSERT INTO `schoolmulu` VALUES ('250', 'jQuery 密码验证', '0', 'http://www.w3cschool.cc/jquery/jquery-plugin-password-validation.html', 'jQuery 教程', 'jQuery 插件', '1', '0');
INSERT INTO `schoolmulu` VALUES ('251', 'jQuery Prettydate', '0', 'http://www.w3cschool.cc/jquery/jquery-plugin-prettydate.html', 'jQuery 教程', 'jQuery 插件', '1', '0');
INSERT INTO `schoolmulu` VALUES ('252', 'jQuery Tooltip', '0', 'http://www.w3cschool.cc/jquery/jquery-plugin-tooltip.html', 'jQuery 教程', 'jQuery 插件', '1', '0');
INSERT INTO `schoolmulu` VALUES ('253', 'jQuery Treeview', '0', 'http://www.w3cschool.cc/jquery/jquery-plugin-treeview.html', 'jQuery 教程', 'jQuery 插件', '1', '0');
INSERT INTO `schoolmulu` VALUES ('254', 'MySQL 教程', '0', '/mysql/mysql-tutorial.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('255', 'MySQL 安装', '0', '/mysql/mysql-install.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('256', 'MySQL 管理', '0', '/mysql/mysql-administration.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('257', 'MySQL PHP 语法', '0', '/mysql/mysql-php-syntax.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('258', 'MySQL 连接', '0', '/mysql/mysql-connection.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('259', 'MySQL 创建数据库', '0', '/mysql/mysql-create-database.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('260', 'MySQL 删除数据库', '0', '/mysql/mysql-drop-database.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('261', 'MySQL 选择数据库', '0', '/mysql/mysql-select-database.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('262', 'MySQL 数据类型', '0', '/mysql/mysql-data-types.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('263', 'MySQL 创建数据表', '0', '/mysql/mysql-create-tables.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('264', 'MySQL 删除数据表', '0', '/mysql/mysql-drop-tables.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('265', 'MySQL 插入数据', '0', '/mysql/mysql-insert-query.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('266', 'MySQL 查询数据', '0', '/mysql/mysql-select-query.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('267', 'MySQL where 子句', '0', '/mysql/mysql-where-clause.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('268', 'MySQL UPDATE 查询', '0', '/mysql/mysql-update-query.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('269', 'MySQL DELETE 语句', '0', '/mysql/mysql-delete-query.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('270', 'MySQL LIKE 子句', '0', '/mysql/mysql-like-clause.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('271', 'MySQL 排序', '0', '/mysql/mysql-order-by.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('272', 'MySQL 分组', '0', 'mysql-group-by-statement.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('273', 'Mysql 连接的使用', '0', '/mysql/mysql-join.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('274', 'MySQL NULL 值处理', '0', '/mysql/mysql-null.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('275', 'MySQL 正则表达式', '0', '/mysql/mysql-regexp.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('276', 'MySQL 事务', '0', '/mysql/mysql-transaction.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('277', 'MySQL ALTER命令', '0', '/mysql/mysql-alter.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('278', 'MySQL 索引', '0', '/mysql/mysql-index.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('279', 'MySQL 临时表', '0', '/mysql/mysql-temporary-tables.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('280', 'MySQL 复制表', '0', '/mysql/mysql-clone-tables.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('281', 'MySQL 元数据', '0', '/mysql/mysql-database-info.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('282', 'MySQL 序列使用', '0', '/mysql/mysql-using-sequences.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('283', 'MySQL 处理重复数据', '0', '/mysql/mysql-handling-duplicates.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('284', 'MySQL 及 SQL 注入', '0', '/mysql/mysql-sql-injection.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('285', 'MySQL 导出数据', '0', '/mysql/mysql-database-export.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('286', 'MySQL 导入数据', '0', '/mysql/mysql-database-import.html', 'MySQL 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('287', 'Java 教程', '0', '/java/java-tutorial.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('288', 'Java 简介', '0', '/java/java-intro.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('289', 'Java 开发环境配置', '0', '/java/java-environment-setup.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('290', 'Java 基础语法', '0', '/java/java-basic-syntax.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('291', 'Java 对象和类', '0', '/java/java-object-classes.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('292', 'Java 基本数据类型', '0', '/java/java-basic-datatypes.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('293', 'Java 变量类型', '0', '/java/java-variable-types.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('294', 'Java 修饰符', '0', '/java/java-modifier-types.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('295', 'Java 运算符', '0', '/java/java-operators.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('296', 'Java 循环结构', '0', '/java/java-loop.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('297', 'Java 分支结构', '0', '/java/java-if-else-switch.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('298', 'Java Number类', '0', '/java/java-number.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('299', 'Java Character类', '0', '/java/java-character.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('300', 'Java String类', '0', '/java/java-string.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('301', 'Java StringBuffer', '0', '/java/java-stringbuffer.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('302', 'Java 数组', '0', '/java/java-array.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('303', 'Java 日期时间', '0', '/java/java-date-time.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('304', 'Java 正则表达式', '0', '/java/java-regular-expressions.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('305', 'Java 方法', '0', '/java/java-methods.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('306', 'Java Stream、File、IO', '0', '/java/java-files-io.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('307', 'Java Scanner 类', '0', 'java-scanner-class..html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('308', 'Java 异常处理', '0', '/java/java-exceptions.html', 'Java 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('309', 'Java 继承', '0', '/java/java-inheritance.html', 'Java 教程', 'Java 面向对象', '1', '0');
INSERT INTO `schoolmulu` VALUES ('310', 'Java Override/Overload', '0', '/java/java-override-overload.html', 'Java 教程', 'Java 面向对象', '1', '0');
INSERT INTO `schoolmulu` VALUES ('311', 'Java 多态', '0', '/java/java-polymorphism.html', 'Java 教程', 'Java 面向对象', '1', '0');
INSERT INTO `schoolmulu` VALUES ('312', 'Java 抽象类', '0', '/java/java-abstraction.html', 'Java 教程', 'Java 面向对象', '1', '0');
INSERT INTO `schoolmulu` VALUES ('313', 'Java 封装', '0', '/java/java-encapsulation.html', 'Java 教程', 'Java 面向对象', '1', '0');
INSERT INTO `schoolmulu` VALUES ('314', 'Java 接口', '0', '/java/java-interfaces.html', 'Java 教程', 'Java 面向对象', '1', '0');
INSERT INTO `schoolmulu` VALUES ('315', 'Java 包(package)', '0', '/java/java-package.html', 'Java 教程', 'Java 面向对象', '1', '0');
INSERT INTO `schoolmulu` VALUES ('316', 'Java 数据结构', '0', '/java/java-data-structures.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('317', 'Java 集合框架', '0', '/java/java-collections.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('318', 'Java 泛型', '0', '/java/java-generics.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('319', 'Java 序列化', '0', '/java/java-serialization.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('320', 'Java 网络编程', '0', '/java/java-networking.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('321', 'Java 发送邮件', '0', '/java/java-sending-email.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('322', 'Java 多线程编程', '0', '/java/java-multithreading.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('323', 'Java Applet基础', '0', '/java/java-applet-basics.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('324', 'Java 文档注释', '0', '/java/java-documentation.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('325', 'Java 实例', '0', '/java/java-examples.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('326', 'Java 8 新特性', '0', '/java/java8-new-features.html', 'Java 教程', 'Java 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('327', 'C# 教程', '0', '/csharp/csharp-tutorial.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('328', 'C# 简介', '0', '/csharp/csharp-intro.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('329', 'C# 环境', '0', '/csharp/csharp-environment-setup.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('330', 'C# 程序结构', '0', '/csharp/csharp-program-structure.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('331', 'C# 基本语法', '0', '/csharp/csharp-basic-syntax.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('332', 'C# 数据类型', '0', '/csharp/csharp-data-types.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('333', 'C# 类型转换', '0', '/csharp/csharp-type-conversion.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('334', 'C# 变量', '0', '/csharp/csharp-variables.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('335', 'C# 常量', '0', '/csharp/csharp-constants.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('336', 'C# 运算符', '0', '/csharp/csharp-operators.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('337', 'C# 判断', '0', '/csharp/csharp-decision.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('338', 'C# 循环', '0', '/csharp/csharp-loops.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('339', 'C# 封装', '0', '/csharp/csharp-encapsulation.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('340', 'C# 方法', '0', '/csharp/csharp-methods.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('341', 'C# 可空类型', '0', '/csharp/csharp-nullable.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('342', 'C# 数组（Array）', '0', '/csharp/csharp-array.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('343', 'C# 字符串（String）', '0', '/csharp/csharp-string.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('344', 'C# 结构（Struct）', '0', '/csharp/csharp-struct.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('345', 'C# 枚举（Enum）', '0', '/csharp/csharp-enum.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('346', 'C# 类（Class）', '0', '/csharp/csharp-class.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('347', 'C# 继承', '0', '/csharp/csharp-inheritance.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('348', 'C# 多态性', '0', '/csharp/csharp-polymorphism.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('349', 'C# 运算符重载', '0', '/csharp/csharp-operator-overloading.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('350', 'C# 接口（Interface）', '0', '/csharp/csharp-interface.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('351', 'C# 命名空间（Namespace）', '0', '/csharp/csharp-namespace.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('352', 'C# 预处理器指令', '0', '/csharp/csharp-preprocessor-directives.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('353', 'C# 正则表达式', '0', '/csharp/csharp-regular-expressions.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('354', 'C# 异常处理', '0', '/csharp/csharp-exception-handling.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('355', 'C# 文件的输入与输出', '0', '/csharp/csharp-file-io.html', 'C# 教程', '', '1', '0');
INSERT INTO `schoolmulu` VALUES ('356', 'C# 特性（Attribute）', '0', '/csharp/csharp-attribute.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('357', 'C# 反射（Reflection）', '0', '/csharp/csharp-reflection.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('358', 'C# 属性（Property）', '0', '/csharp/csharp-property.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('359', 'C# 索引器（Indexer）', '0', '/csharp/csharp-indexer.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('360', 'C# 委托（Delegate）', '0', '/csharp/csharp-delegate.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('361', 'C# 事件（Event）', '0', '/csharp/csharp-event.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('362', 'C# 集合（Collection）', '0', '/csharp/csharp-collection.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('363', 'C# 泛型（Generic）', '0', '/csharp/csharp-generic.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('364', 'C# 匿名方法', '0', '/csharp/csharp-anonymous-methods.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('365', 'C# 不安全代码', '0', '/csharp/csharp-unsafe-codes.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('366', 'C# 多线程', '0', '/csharp/csharp-multithreading.html', 'C# 教程', 'C# 高级教程', '1', '0');
INSERT INTO `schoolmulu` VALUES ('367', '数据结构简介', '0', '', '数据结构与算法', '', '1', '0');

-- ----------------------------
-- Table structure for tiycontent
-- ----------------------------
DROP TABLE IF EXISTS `tiycontent`;
CREATE TABLE `tiycontent` (
  `Id` bigint(20) NOT NULL auto_increment,
  `Title` varchar(50) default NULL,
  `Content` text,
  `CourseTitle` varchar(50) default NULL,
  `Type` varchar(20) default NULL,
  PRIMARY KEY  (`Id`)
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of tiycontent
-- ----------------------------
INSERT INTO `tiycontent` VALUES ('1', 'HTML 第一个示例', '<!DOCTYPE html>  \n<html>  \n<head>  \n<meta charset=\"utf-8\">  \n<title>霹雳猿(www.piliyuan.com)</title>  \n</head>  \n<body>  \n    <h1>这里是标题的内容</h1>  \n    <p>这里是段落的内容</p>  \n    <a href=\"http://www.piliyuan.com\">这是一个链接,点击试试！</a>\n</body>  \n</html>', 'HTML教程', 'HTML');
INSERT INTO `tiycontent` VALUES ('2', 'HTML标题', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <h1>这是一个一级标题</h1>  \n    <h2>这是一个子标题</h2>  \n    <h3>这是一个三级标题</h3>\n</body>\n</html>\n', 'HTML 基础', 'HTML');
INSERT INTO `tiycontent` VALUES ('3', 'HTML段落', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <p>这是一个段落。</p>  \n    <p>这是另外一个段落。</p>\n</body>\n</html>\n', 'HTML基础', 'HTML');
INSERT INTO `tiycontent` VALUES ('4', 'HTML链接', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <a href=\"http://www.piliyuan.com\" target=\"_blank\">这是一个链接</a>\n</body>\n</html>\n', 'HTML基础', 'HTML');
INSERT INTO `tiycontent` VALUES ('5', 'HTML图片', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <img src=\"http://s6.sinaimg.cn/middle/001nZ8shzy73cgam9Zr75&690\" width=\"204\" height=\"142\">\n</body>\n</html>\n', 'HTML基础', 'HTML');
INSERT INTO `tiycontent` VALUES ('6', 'HTML属性', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body bgcolor=\"red\">~</body>\n</html>\n', 'HTML属性', 'HTML');
INSERT INTO `tiycontent` VALUES ('7', 'HTML水平线', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <p>这是一个段落。</p>  \n    <hr>  \n    <p>这是一个段落。</p>  \n    <hr>  \n    <p>这是一个段落。</p>\n</body>\n</html>\n', 'HTML 标题|水平线|注释', 'HTML');
INSERT INTO `tiycontent` VALUES ('8', 'HTML注释', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <!-- 这是一个注释 -->\n</body>\n</html>\n', 'HTML 标题|水平线|注释', 'HTML');
INSERT INTO `tiycontent` VALUES ('9', 'HTML段落没有结尾标签', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <p>这个段落没有结尾标签\n    <p>这个段落也没有结尾标签\n</body>\n</html>\n', 'HTML基础', 'HTML');
INSERT INTO `tiycontent` VALUES ('10', 'HTML换行', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <p>This is<br>a para<br>graph with line breaks</p>\n</body>\n</html>\n', 'HTML 段落', 'HTML');
INSERT INTO `tiycontent` VALUES ('11', 'HTML段落对其', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <p>段落默认对齐方式：左对齐方式。</p>\n    <p align=\"left\">段落左对齐方式。使用左对齐方式时都使用默认对齐方式。</p>\n    <p align=\"center\">段落居中对齐方式。</p>\n    <p align=\"right\">段落右对齐方式。</p>\n</body>\n</html>\n', 'HTML 段落', 'HTML');
INSERT INTO `tiycontent` VALUES ('12', 'HTML链接', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <a href=\"http://www.piliyuan.com\" target=\"_blank\">霹雳猿</a>\n</body>\n</html>\n', 'HTML链接', 'HTML');
INSERT INTO `tiycontent` VALUES ('13', 'HTML链接本页打开', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n    <a href=\"http://www.runoob.com/\">访问菜鸟教程!</a>\n</body>\n</html>\n', 'HTML链接', 'HTML');
INSERT INTO `tiycontent` VALUES ('14', 'HTML样式展示', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body style=\"background-color:yellow;\">  \n<h2 style=\"background-color:red;\">This is a heading</h2>  \n<p style=\"background-color:green;\">This is a paragraph.</p>  \n</body> \n</html>\n', 'HTML 样式', 'HTML');
INSERT INTO `tiycontent` VALUES ('15', 'HTML表格_无边框', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n<table>\n<tr><th>姓名</th><th colspan=\"2\">电话</th></tr>\n<tr><td>Bill Gates</td><td>555 77 854</td><td>555 77 855</td></tr>\n</table>\n</body>\n</html>\n', 'HTML表格', 'HTML');
INSERT INTO `tiycontent` VALUES ('16', 'HTML表格_有边框', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n<table border=\"1\">\n<tr><th>姓名</th><th colspan=\"2\">电话</th></tr>\n<tr><td>Bill Gates</td><td>555 77 854</td><td>555 77 855</td></tr>\n</table>\n</body>\n</html>\n', 'HTML表格', 'HTML');
INSERT INTO `tiycontent` VALUES ('17', 'HTML表格_跨行', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n<table border=\"1\">\n<tr><th>姓名</th><td>Bill Gates</td></tr>\n<tr><th rowspan=\"2\">电话</th><td>555 77 854</td></tr>\n<tr><td>555 77 855</td></tr>\n</table>\n</body>\n</html>\n', 'HTML表格', 'HTML');
INSERT INTO `tiycontent` VALUES ('18', 'HTML列表_无序列表', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n<ul>  \n <li>Coffee</li>  \n <li>Milk</li>  \n</ul>\n</body>\n</html>\n', 'HTML列表', 'HTML');
INSERT INTO `tiycontent` VALUES ('19', 'HTML列表_有序列表', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n<ol>  \n<li>Coffee</li>  \n<li>Milk</li>  \n</ol>\n</body>\n</html>\n', 'HTML列表', 'HTML');
INSERT INTO `tiycontent` VALUES ('20', 'HTML列表_自定义列表', '<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<title>霹雳猿(www.piliyuan.com)</title>\n</head>\n<body>\n<dl>  \n <dt>Coffee</dt>  \n <dd>- black hot drink</dd>  \n <dt>Milk</dt>  \n <dd>- white cold drink</dd>  \n</dl>\n</body>\n</html>\n', 'HTML列表', 'HTML');
